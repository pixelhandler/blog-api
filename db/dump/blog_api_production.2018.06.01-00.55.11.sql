--
-- PostgreSQL database dump
--

-- Dumped from database version 9.3.6
-- Dumped by pg_dump version 10.3 (Ubuntu 10.3-1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: posts_generate_tsv(); Type: FUNCTION; Schema: public; Owner: blog-api
--

CREATE FUNCTION public.posts_generate_tsv() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
      begin
        new.tsv :=
          setweight(to_tsvector('pg_catalog.english', coalesce(new.title, '')), 'A') ||
          setweight(to_tsvector('pg_catalog.english', coalesce(new.excerpt, '')), 'B') ||
          setweight(to_tsvector('pg_catalog.english', coalesce(new.body, '')), 'C');
        return new;
      end
      $$;


ALTER FUNCTION public.posts_generate_tsv() OWNER TO "blog-api";

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: ar_internal_metadata; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.ar_internal_metadata (
    key character varying NOT NULL,
    value character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.ar_internal_metadata OWNER TO "blog-api";

--
-- Name: authors; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.authors (
    id integer NOT NULL,
    email character varying,
    name character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    tenant character varying DEFAULT 'pixelhandler'::character varying
);


ALTER TABLE public.authors OWNER TO "blog-api";

--
-- Name: authors_id_seq; Type: SEQUENCE; Schema: public; Owner: blog-api
--

CREATE SEQUENCE public.authors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.authors_id_seq OWNER TO "blog-api";

--
-- Name: authors_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: blog-api
--

ALTER SEQUENCE public.authors_id_seq OWNED BY public.authors.id;


--
-- Name: commenters; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.commenters (
    id integer NOT NULL,
    name character varying,
    email character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    email_hash character varying,
    tenant character varying DEFAULT 'pixelhandler'::character varying
);


ALTER TABLE public.commenters OWNER TO "blog-api";

--
-- Name: commenters_id_seq; Type: SEQUENCE; Schema: public; Owner: blog-api
--

CREATE SEQUENCE public.commenters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.commenters_id_seq OWNER TO "blog-api";

--
-- Name: commenters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: blog-api
--

ALTER SEQUENCE public.commenters_id_seq OWNED BY public.commenters.id;


--
-- Name: comments; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.comments (
    id integer NOT NULL,
    body character varying,
    approved boolean DEFAULT false,
    commenter_id integer,
    post_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    tenant character varying DEFAULT 'pixelhandler'::character varying
);


ALTER TABLE public.comments OWNER TO "blog-api";

--
-- Name: comments_id_seq; Type: SEQUENCE; Schema: public; Owner: blog-api
--

CREATE SEQUENCE public.comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comments_id_seq OWNER TO "blog-api";

--
-- Name: comments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: blog-api
--

ALTER SEQUENCE public.comments_id_seq OWNED BY public.comments.id;


--
-- Name: posts; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.posts (
    id integer NOT NULL,
    body character varying,
    excerpt character varying,
    slug character varying,
    title character varying,
    date date,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    author_id integer,
    tsv tsvector,
    status character varying DEFAULT 'pending'::character varying,
    tenant character varying DEFAULT 'pixelhandler'::character varying
);


ALTER TABLE public.posts OWNER TO "blog-api";

--
-- Name: posts_id_seq; Type: SEQUENCE; Schema: public; Owner: blog-api
--

CREATE SEQUENCE public.posts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.posts_id_seq OWNER TO "blog-api";

--
-- Name: posts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: blog-api
--

ALTER SEQUENCE public.posts_id_seq OWNED BY public.posts.id;


--
-- Name: posts_tags; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.posts_tags (
    post_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.posts_tags OWNER TO "blog-api";

--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.schema_migrations (
    version character varying NOT NULL
);


ALTER TABLE public.schema_migrations OWNER TO "blog-api";

--
-- Name: tags; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.tags (
    id integer NOT NULL,
    name character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    slug character varying,
    tenant character varying DEFAULT 'pixelhandler'::character varying
);


ALTER TABLE public.tags OWNER TO "blog-api";

--
-- Name: tags_id_seq; Type: SEQUENCE; Schema: public; Owner: blog-api
--

CREATE SEQUENCE public.tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tags_id_seq OWNER TO "blog-api";

--
-- Name: tags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: blog-api
--

ALTER SEQUENCE public.tags_id_seq OWNED BY public.tags.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: blog-api
--

CREATE TABLE public.users (
    id integer NOT NULL,
    username character varying,
    password_digest character varying,
    author_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    tenant character varying DEFAULT 'pixelhandler'::character varying
);


ALTER TABLE public.users OWNER TO "blog-api";

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: blog-api
--

CREATE SEQUENCE public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO "blog-api";

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: blog-api
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: authors id; Type: DEFAULT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.authors ALTER COLUMN id SET DEFAULT nextval('public.authors_id_seq'::regclass);


--
-- Name: commenters id; Type: DEFAULT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.commenters ALTER COLUMN id SET DEFAULT nextval('public.commenters_id_seq'::regclass);


--
-- Name: comments id; Type: DEFAULT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.comments ALTER COLUMN id SET DEFAULT nextval('public.comments_id_seq'::regclass);


--
-- Name: posts id; Type: DEFAULT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.posts ALTER COLUMN id SET DEFAULT nextval('public.posts_id_seq'::regclass);


--
-- Name: tags id; Type: DEFAULT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.tags ALTER COLUMN id SET DEFAULT nextval('public.tags_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Data for Name: ar_internal_metadata; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.ar_internal_metadata (key, value, created_at, updated_at) FROM stdin;
environment	production	2017-06-04 05:45:22.72648	2017-06-04 05:45:22.72648
\.


--
-- Data for Name: authors; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.authors (id, email, name, created_at, updated_at, tenant) FROM stdin;
1	pixelhandler@gmail.com	pixelhandler	2015-05-07 17:03:21.04159	2015-05-07 17:03:21.04159	pixelhandler
2	me@me.com	ember-sc	2015-05-20 02:29:22.020953	2015-05-20 02:29:22.020953	pixelhandler
3	life@billandlorraine.com	Bill	2017-06-09 04:33:29.510448	2017-06-09 04:33:29.510448	billandlorraine
4	lorraine.heaton@icloud.com	Lorraine	2017-06-09 04:35:04.333603	2017-06-09 04:35:04.333603	billandlorraine
\.


--
-- Data for Name: commenters; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.commenters (id, name, email, created_at, updated_at, email_hash, tenant) FROM stdin;
1	Bill Heaton	pixelhandler@gmail.com	2015-05-31 20:20:26.186494	2015-05-31 20:20:26.186494	201e47df9aaf250e6aa21fd2fbe6b287	pixelhandler
2	Al Sal	appsfc@gmail.com	2015-06-04 00:59:39.874151	2015-06-04 00:59:39.874151	a714f475beead3035e7687dd560650f3	pixelhandler
3	Ajay Dutta	rajuhome04@gmail.com	2015-06-07 07:33:03.752093	2015-06-07 07:33:03.752093	1704b3d26d9d3f118e5f55abed5e2d46	pixelhandler
4	Keith Ratner	keith.ratner@gmail.com	2015-06-08 04:17:59.370721	2015-06-08 04:17:59.370721	97b53743b4a8ceffde9d58798ed23deb	pixelhandler
5	Bill Heaton	pixelhandle@gmail.com	2015-06-17 06:30:37.522773	2015-06-17 06:30:37.522773	1d3709392b3175a841bc84a5f5e3d5ff	pixelhandler
6	TallyNerdy	tallynerdy@gmail.com	2015-06-17 07:45:23.717167	2015-06-17 07:45:23.717167	0a4a0750590e407d9f2bff97da017d51	pixelhandler
7	Brayn Shultz	braynshultz@gmail.com	2015-06-17 07:45:23.729662	2015-06-17 07:45:23.729662	d8107f93e7e711cc8f48dc147874e322	pixelhandler
8	Paul Knittel	xypaul@gmail.com	2015-06-17 07:45:23.736906	2015-06-17 07:45:23.736906	31c89a4a9ce7e444039f77ed00c82be3	pixelhandler
9	Gastón Iván	gastnivn@gmail.com	2015-06-17 07:45:23.742953	2015-06-17 07:45:23.742953	c030ed4effa027900285c2259e9e0199	pixelhandler
10	Ahmed	disqus_pxKbrEbNEd@gmail.com	2015-06-17 07:45:23.762745	2015-06-17 07:45:23.762745	398f916260974b6a4f5f31d95cb1a560	pixelhandler
11	Keith Gautreaux	kgautreaux@gmail.com	2015-06-17 07:45:23.775942	2015-06-17 07:45:23.775942	bbd5b7db5b06c903e325ac09339a1ab9	pixelhandler
12	Erick Aguila	erick_aguila@gmail.com	2015-06-17 07:45:23.781118	2015-06-17 07:45:23.781118	c35063bf5c3ef5d1007558dd73fd7cd9	pixelhandler
13	Mike Houston	disqus_5rz3fUNNqj@gmail.com	2015-06-17 07:45:23.785873	2015-06-17 07:45:23.785873	534722c9604307e48f9aaa11acbdf199	pixelhandler
14	darshan khot	darshankhot@gmail.com	2015-06-17 07:45:23.790725	2015-06-17 07:45:23.790725	77906966277d09a2d10190066c028a5a	pixelhandler
15	Erik Sundell	eriksundell@gmail.com	2015-06-17 07:45:23.79555	2015-06-17 07:45:23.79555	5d88cbd73d65e32863d3f0ae4092280a	pixelhandler
16	gourdboy	disqus_bDmSCFJtqY@gmail.com	2015-06-17 07:45:23.800522	2015-06-17 07:45:23.800522	6867c558638c70510115adcc67bc4304	pixelhandler
17	TrollPatrol	vespiras@gmail.com	2015-06-17 07:45:23.805189	2015-06-17 07:45:23.805189	2edad9e1c4986d95b5c63af8c0749725	pixelhandler
18	Excelanto	disqus_Rz65foLbkw@gmail.com	2015-06-17 07:45:23.810051	2015-06-17 07:45:23.810051	b5be889ff1e69d9b3022f3db26a876a1	pixelhandler
19	Brandon Stewart	Branndons@gmail.com	2015-06-17 07:45:23.816268	2015-06-17 07:45:23.816268	2e0f36446194c6e7a5c659460ec49ec0	pixelhandler
20	seangore	seangore@gmail.com	2015-06-17 07:45:23.823967	2015-06-17 07:45:23.823967	7a86e94185c1bb354af42231f90fab7c	pixelhandler
21	Boris HUISGEN	borishuisgen@gmail.com	2015-06-17 07:45:23.829314	2015-06-17 07:45:23.829314	5574ab9544001d83458b65ae5a7459f4	pixelhandler
22	doug316	doug316@gmail.com	2015-06-17 07:45:23.834317	2015-06-17 07:45:23.834317	16937c1701f5a9e8e41bcce508913672	pixelhandler
23	Pooyan Khosravi	pekhee@gmail.com	2015-06-17 07:45:23.839246	2015-06-17 07:45:23.839246	51f163870821b443d585648035a69464	pixelhandler
24	ramchiranjeevi	ramchiranjeevi@gmail.com	2015-06-17 07:45:23.844144	2015-06-17 07:45:23.844144	dba8f79d19f47c45da0b040512881330	pixelhandler
25	John Kurkowski	johnkurkowski@gmail.com	2015-06-17 07:45:23.849217	2015-06-17 07:45:23.849217	6fd893107f7c2532969b8ee1e4bfb7ba	pixelhandler
26	Adriaan	disqus_d0cuE4ELnP@gmail.com	2015-06-17 07:45:23.854019	2015-06-17 07:45:23.854019	59c7ec1ccbb419afde41f5c0ac40c4de	pixelhandler
27	Dan Gebhardt	dgebhardt@gmail.com	2015-06-17 07:45:23.858741	2015-06-17 07:45:23.858741	0d90231c1039d212d7594bb96a9e95b3	pixelhandler
28	Weston Platter	westonplatter@gmail.com	2015-06-17 07:45:23.863709	2015-06-17 07:45:23.863709	9efc1191226b6eafb0d6893c07d70767	pixelhandler
29	Alejandro Gomez	disqus_fCp1nqBiXZ@gmail.com	2015-06-17 07:45:23.868983	2015-06-17 07:45:23.868983	9dfae5f3e37231cf8573a4bea17d8d7b	pixelhandler
30	Nathaniel Bibler	nbibler@gmail.com	2015-06-17 07:45:23.874208	2015-06-17 07:45:23.874208	d3a061b0323fe22ecf5e1c860053e648	pixelhandler
31	Neverfox	neverfox@gmail.com	2015-06-17 07:45:23.879295	2015-06-17 07:45:23.879295	87bffa0afd3b8d77b04154ca87ef9cc5	pixelhandler
32	Joshua Mervine	jmervine@gmail.com	2015-06-17 07:45:23.884365	2015-06-17 07:45:23.884365	5c54a9b715c3001c98104aa95a9514a6	pixelhandler
33	Justin Soliz	JustinSoliz@gmail.com	2015-06-17 07:45:23.892144	2015-06-17 07:45:23.892144	7c796b01fd09c6ac2cb66485b373b944	pixelhandler
34	aevo	aevo@gmail.com	2015-06-17 07:45:23.898648	2015-06-17 07:45:23.898648	934bf8b284eca0c7a153f49e0acec162	pixelhandler
35	Jaime	disqus_tI80tbU1eN@gmail.com	2015-06-17 07:45:23.903687	2015-06-17 07:45:23.903687	acbce1a40abf378a681864b2eebc3f8b	pixelhandler
36	Abhaya Thapa	abhayathapa@gmail.com	2015-06-17 07:45:23.908852	2015-06-17 07:45:23.908852	9fd1abce0ce93ce270e5c466309c6cc6	pixelhandler
37	Matt Vleming	mattvleming@gmail.com	2015-06-17 07:45:23.913878	2015-06-17 07:45:23.913878	4fac751c8553a13462093f0ff7d3edf1	pixelhandler
38	Gowiem	Gowiem@gmail.com	2015-06-17 07:45:23.920426	2015-06-17 07:45:23.920426	84dc1f9364d36502445b81cd5f01b490	pixelhandler
39	JeffreyBiles	JeffreyBiles@gmail.com	2015-06-17 07:45:23.926876	2015-06-17 07:45:23.926876	fa78135c523c1675b71f87254bfa5ca2	pixelhandler
40	Eric Berry	cavneb@gmail.com	2015-06-17 07:45:23.934186	2015-06-17 07:45:23.934186	469f88e0c2d6e73916b567f389987301	pixelhandler
41	Toran Billups	toranbillups@gmail.com	2015-06-17 07:45:23.939009	2015-06-17 07:45:23.939009	0fc235198efa4b533ab5aa78cbd34766	pixelhandler
42	Ado Trakic	adotrakic@gmail.com	2015-06-17 07:45:23.946223	2015-06-17 07:45:23.946223	d250a307c70758e43e49d4b06dca29c6	pixelhandler
43	Hugo Dias	HugoDias@gmail.com	2015-06-17 07:45:23.950885	2015-06-17 07:45:23.950885	7bc7f357ebeff0c282c29f10ad874847	pixelhandler
44	magento development company	georgelhayes@gmail.com	2015-06-17 07:45:23.957088	2015-06-17 07:45:23.957088	f80a0aae9060bdf9aacaf9a6952d9749	pixelhandler
45	Ben Duncan	benduncan@gmail.com	2015-06-17 07:45:23.963251	2015-06-17 07:45:23.963251	23505dacb31dd6d861bd150e555312ef	pixelhandler
46	Andy Frahm	google-acdfb531c5d89ae07022036919fbcdca@gmail.com	2015-06-17 07:45:23.968028	2015-06-17 07:45:23.968028	21a211d621802d005ced772c2cc822ee	pixelhandler
47	Andrew	disqus_WAARW9lsmG@gmail.com	2015-06-17 07:45:23.972743	2015-06-17 07:45:23.972743	c43026b35e17855dc8df02e528a55b02	pixelhandler
48	Vitaliy Golovko	alfared@gmail.com	2015-06-17 07:45:23.978779	2015-06-17 07:45:23.978779	9e3ca753749896d83205022b64103263	pixelhandler
49	Patrick J. Jankun	patrickjjankun@gmail.com	2015-06-17 07:45:23.983431	2015-06-17 07:45:23.983431	5b375a221ad2a9b45a2e2b0b0b41f647	pixelhandler
50	Rob Levin	roblevintennis@gmail.com	2015-06-17 07:45:23.988183	2015-06-17 07:45:23.988183	500466438a19184c54107076786686a6	pixelhandler
51	Adam Gibbons	twitter-135500311@gmail.com	2015-06-17 07:45:23.992904	2015-06-17 07:45:23.992904	3189d1d77d40d312c9960e7ebe4b49a2	pixelhandler
52	ShloopyD	ShloopyD@gmail.com	2015-06-17 07:45:23.997553	2015-06-17 07:45:23.997553	b7e2c6d5a0bd169d3a09a71d3dbd2983	pixelhandler
53	Ben Clayton	google-5e8df01241172a7bb59b27edfd7a88cb@gmail.com	2015-06-17 07:45:24.004396	2015-06-17 07:45:24.004396	ed926702ebcdb4f737d00e5f6c60fbed	pixelhandler
54	ggalmazor	ggalmazor@gmail.com	2015-06-17 07:45:24.008987	2015-06-17 07:45:24.008987	fabc0f79f73fc947b4afc42024ae2625	pixelhandler
55	zgollum	zgollum@gmail.com	2015-06-17 07:45:24.013609	2015-06-17 07:45:24.013609	44ebab53a5590dfb6f83503aa5df4b5a	pixelhandler
56	Oliver Fischer	google-345ae0ddd9e1c39923eb4c01ef9fc787@gmail.com	2015-06-17 07:45:24.020714	2015-06-17 07:45:24.020714	83fffdbbb62be555ef409805445a3c97	pixelhandler
57	Ivan Morgillo	imorgillo@gmail.com	2015-06-17 07:45:24.025636	2015-06-17 07:45:24.025636	740d97d4d38c6ed85d2ea51528427623	pixelhandler
58	Joel Kang	facebook-539371652@gmail.com	2015-06-17 07:45:24.030632	2015-06-17 07:45:24.030632	6829a18f48fba4d290569d404f37977c	pixelhandler
59	Suvi Vignarajah	google-9529f9d2f2716a8bcf126951005247e0@gmail.com	2015-06-17 07:45:24.035262	2015-06-17 07:45:24.035262	8855e44d764e372373c5b55da7799706	pixelhandler
60	marcoslhc	marcoslhc@gmail.com	2015-06-17 07:45:24.041552	2015-06-17 07:45:24.041552	71824b2c00ad71062b23cc4f3fdccc3d	pixelhandler
61	pixelBender67	pixelBender67@gmail.com	2015-06-17 07:45:24.053227	2015-06-17 07:45:24.053227	1b9fe2e8357cbe572dfc6e91c11493e5	pixelhandler
62	Denis O'Sullivan	facebook-641341267@gmail.com	2015-06-17 07:45:24.059435	2015-06-17 07:45:24.059435	709e16137f2655c153281abf3add981c	pixelhandler
63	Utuxia Consulting	twitter-175279519@gmail.com	2015-06-17 07:45:24.065997	2015-06-17 07:45:24.065997	5041ea50889d0be29b7fa51538cf8d5d	pixelhandler
64	nzru	nzru@gmail.com	2015-06-17 07:45:24.070939	2015-06-17 07:45:24.070939	7849e3b4346a30751f7fd96de885286c	pixelhandler
65	Sergey Romanov	Serhioromano@gmail.com	2015-06-17 07:45:24.079111	2015-06-17 07:45:24.079111	ee0f7f51de9a39c7a46a0eea64231161	pixelhandler
66	Brad Proctor	twitter-353026850@gmail.com	2015-06-17 07:45:24.087065	2015-06-17 07:45:24.087065	01dbfe03af463046a75f5bfd61aaef8d	pixelhandler
67	jsmarkus	jsmarkus@gmail.com	2015-06-17 07:45:24.102289	2015-06-17 07:45:24.102289	d0f14b760bc3930c0171811e61350a0d	pixelhandler
68	Donald Pipowitch	google-d3ba747177213af5a7394e5633360ed7@gmail.com	2015-06-17 07:45:24.108129	2015-06-17 07:45:24.108129	a0ad37c2f8c27e0b37d680d56146ca49	pixelhandler
69	Edmond Lau	edmond_lau@gmail.com	2015-06-17 07:45:24.115759	2015-06-17 07:45:24.115759	5486f81717f2d01c4eae951cea6f0c48	pixelhandler
70	John Fawcett	facebook-23932457@gmail.com	2015-06-17 07:45:24.126069	2015-06-17 07:45:24.126069	a80c5231625e92097bef272d63c137ae	pixelhandler
71	Vance Lucas	vancelucas@gmail.com	2015-06-17 07:45:24.132952	2015-06-17 07:45:24.132952	8703b468b433e96cf579f819eded8078	pixelhandler
72	imjp	imjp@gmail.com	2015-06-17 07:45:24.138352	2015-06-17 07:45:24.138352	faf5944e11eff13af418b21980a34898	pixelhandler
73	myousufq	myousufq@gmail.com	2015-06-17 07:45:24.145251	2015-06-17 07:45:24.145251	caf6447b01c95a9a11feffea6e14f8d6	pixelhandler
74	genefer s	google-3977f10ebba012d54062c43c2f928fa6@gmail.com	2015-06-17 07:45:24.151833	2015-06-17 07:45:24.151833	20cbbdee5b4328a4422b2485d65197b1	pixelhandler
75	davorin	disqus_3ZLv0pDYOJ@gmail.com	2015-06-17 07:45:24.160364	2015-06-17 07:45:24.160364	47851873ae6f4fe4be463b7ac71a218b	pixelhandler
76	stJhimy	stjhimy@gmail.com	2015-06-17 07:45:24.170661	2015-06-17 07:45:24.170661	fc929d292323e019d5c4a353f92d5587	pixelhandler
77	Bill Heaton	twitter-9118832@gmail.com	2015-06-17 07:45:24.183073	2015-06-17 07:45:24.183073	521cd0aef0862d40237659f81bef6e06	pixelhandler
78	QualityPoint Technologies Test	google-b9b3dd952d60546cb170334f6aa91386@gmail.com	2015-06-17 07:45:24.193341	2015-06-17 07:45:24.193341	88e407f1a3bf35b6ad5e97eb9137b05f	pixelhandler
79	Scott Ribe	scott_ribe@elevated-dev.com	2015-06-22 20:27:12.090981	2015-06-22 20:27:12.090981	15eb13d662803f57bc4aea59704988b4	pixelhandler
80	fgsd	vitalak18@o.po	2015-12-04 14:01:44.786331	2015-12-04 14:01:44.786331	e917f31e026fe61772575f72041671f2	pixelhandler
81	Anaya Upadhyay	anaya.upadhyay@hotmail.com	2016-01-17 11:27:57.188555	2016-01-17 11:27:57.188555	f8e2a3abbb97e64e8dfac43448df6267	pixelhandler
82	Lachlan	lachlan@advocate.ly	2016-08-03 07:25:06.596658	2016-08-03 07:25:06.596658	cd578e24e94f6c47bb20cc62d68c9888	pixelhandler
83	William	williambautista@gmail.com	2016-09-01 07:31:25.565628	2016-09-01 07:31:25.565628	89473e0f44dd450cab352ee2dd230c54	pixelhandler
84	Harper	harperholden.dev@gmail.com	2016-10-13 06:47:32.188625	2016-10-13 06:47:32.188625	7aca79236163cbcfeeaaac7d4afc1628	pixelhandler
\.


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.comments (id, body, approved, commenter_id, post_id, created_at, updated_at, tenant) FROM stdin;
2	what a explain!!!! just awesome	t	3	19	2015-06-07 07:33:26.110098	2015-06-07 17:21:23.970048	pixelhandler
1	We recorded a walkthrough of deploying an Ember app with ember-cli-deploy that follows this post here: https://www.youtube.com/watch?v=H-UDcJzlXis	t	1	1	2015-05-31 20:22:14.820276	2015-05-31 20:23:14.381471	pixelhandler
3	"measurments?"	t	4	2	2015-06-08 04:18:35.633061	2015-06-08 07:04:50.536652	pixelhandler
4	@Keith: Ah yes the typo, I forgot all about that, haha. Yeah I never bothered to fix that on the api endpoint. I've taken that endpoint offline so perhaps I should just correct the spelling on the post.\n	t	1	2	2015-06-08 07:16:31.335454	2015-06-09 06:53:39.775763	pixelhandler
5	Bowling Game Kata Using Mocha (BDD) Test Framework and Yeoman is one of the best idea we use it here http://www.locksmithlosangeles.mobi	t	7	17	2015-03-20 00:00:00	2015-06-17 07:45:24.296128	pixelhandler
6	Thanks for taking the time to write such a great Ember example. This is exactly what I needed to get me started on something I need to work on.	t	13	14	2015-01-23 00:00:00	2015-06-17 07:45:24.326339	pixelhandler
7	Hey thanks for an awesome post =)\n\nI wonder about this line of code though, it should be path: '/*' rather than path: '/*path'.\n\nMaybe you can comment this further?\n\nthis.route('not-found', { path: '/*path' });	t	15	9	2015-01-08 00:00:00	2015-06-17 07:45:24.351625	pixelhandler
8	awesome work :)	t	19	9	2014-12-07 00:00:00	2015-06-17 07:45:24.366772	pixelhandler
9	My only problem with this approach (acceptance testing) is that now your tests are inevitably *tied* to the markup.  I'm looking into the alternative: controller testing, and it's proving to be far more difficult than imagined, as the Ember Testing framework does not provide helpers for accessing pages (routes) outside of an acceptance test.  If this is currently the only way to test CRUD operations against a REST API, I'm quite disappointed.	t	20	11	2014-10-25 00:00:00	2015-06-17 07:45:24.37488	pixelhandler
10	A context must be given to transitionTo() / intermediateTransitionTo() when wildcard routes are used. To work I do this :\n\nthis.transitionTo('/not-found', 'not-found');\n\n\nThanks for your post :)	t	21	8	2014-10-12 00:00:00	2015-06-17 07:45:24.381309	pixelhandler
11	I use `intermediateTransitionTo` so the invalid URL remains in the address bar.	t	22	8	2014-09-13 00:00:00	2015-06-17 07:45:24.388146	pixelhandler
12	You can check that via Modernizr, or use conditional HTML comments.\n\n\nAlso you can link to CDN version of jQuery 1.x.	t	23	8	2014-09-13 00:00:00	2015-06-17 07:45:24.394995	pixelhandler
13	@pixelhandler:disqus Thanks for your reply. Can I check within my ember code or during my Ember initialisation. I am in a situation not to bundle any third party files in my product.	t	24	8	2014-09-03 00:00:00	2015-06-17 07:45:24.401583	pixelhandler
14	Try https://browser-update.org	t	1	8	2014-09-03 00:00:00	2015-06-17 07:45:24.408435	pixelhandler
15	Hi Pixelhandler, thanks for your blog on showing 404 page in Ember Application. \n\n\nIn my application I use jQuery2.0 version. When the application is loaded in IE < 9 versions I need to show a page like "You are viewing in an unsupported browser.", \n\n\nI can use browser check and include jQuery 1.0 version in case of IE < 9, but I dont want to maintain two version of jQuery. We support latest version of IE 9+.\n\n\nCan you suggest how can I handle the above scenario.	t	24	8	2014-09-03 00:00:00	2015-06-17 07:45:24.415235	pixelhandler
16	Thank you for starting the post/article with a description of the journey. Very helpful for someone browsing JS/Ember testing options.	t	28	15	2014-07-27 00:00:00	2015-06-17 07:45:24.440291	pixelhandler
17	Oh I see, sorry and thanks for the sharing Bill.	t	29	19	2014-06-05 00:00:00	2015-06-17 07:45:24.448052	pixelhandler
18	Alejandro, this tutorial is about 2-3 years old and the focus is REST not MVC. Also, I did mention... don't use this code for an app. A lot has changed in that time. For building an actual app I'd recommend using an MVC framework like Sails.js or something.	t	1	19	2014-06-05 00:00:00	2015-06-17 07:45:24.458233	pixelhandler
19	thanks pal, as a suggestion for one step further, go beyond the mess of having all together in one file and go for one file for each controller, you know, like mvc.	t	29	19	2014-06-05 00:00:00	2015-06-17 07:45:24.46587	pixelhandler
20	OMG but it is made in cofeescript... man !	t	29	19	2014-06-05 00:00:00	2015-06-17 07:45:24.48387	pixelhandler
21	I would suggest to anyone developing a RESTful API with Mongoose/Express to check out Baucis. https://github.com/wprl/baucis I have used it in production apps and consider it the de facto solution.	t	31	19	2014-04-26 00:00:00	2015-06-17 07:45:24.500929	pixelhandler
22	Awesome post! In conjunction with this, I might suggest also checking out Restify over Express for pure RESTful APIs. 	t	32	19	2014-04-24 00:00:00	2015-06-17 07:45:24.508485	pixelhandler
23	Thanks so much for the quick reply! I'll take a look	t	33	15	2014-04-06 00:00:00	2015-06-17 07:45:24.516388	pixelhandler
24	@JustinSoliz:disqus  well there is new repo https://github.com/rpflorence/ember-qunit that is worth looking at. Also, see this page, http://pixelhandler.com/posts/we-are-emberconf-2014 and look under the heading "Ember.js Testing is Not Hard, It's Unknown" for a bunch of example unit tests and links.	t	1	15	2014-04-06 00:00:00	2015-06-17 07:45:24.523535	pixelhandler
25	have you had any success unit testing individual ember modules? really disappointed in tdd with ember, also not a fan of a browser runners such as qunit but not finding many alternatives.	t	33	15	2014-04-06 00:00:00	2015-06-17 07:45:24.530736	pixelhandler
26	The response time and rendering speed are amazing. Good job.	t	34	12	2014-03-22 00:00:00	2015-06-17 07:45:24.552358	pixelhandler
27	Update: I plan to do a screencast w/ a code walk through of the repo for this site: https://github.com/pixelhandler/blog which will highlight the integration testing suite.\n\nSee: http://pixelhandler.com/posts/end-to-end-javascript-testing-integration-tests-using-emberjs-test-helpers	t	1	12	2014-03-06 00:00:00	2015-06-17 07:45:24.564624	pixelhandler
28	This looks great! Thanks	t	35	15	2014-02-20 00:00:00	2015-06-17 07:45:24.57367	pixelhandler
29	Jamie, I'm in the process of re-placing this article with a new updated pragmatic guide using a blog as the example instead of the peepcode app. Both the peepcode app and this article are already dated. There have been many improvements in Ember, Ember Data and the Ember Test helpers as well. Here is a preview of the example (end-to-end) integration testing on a blog application, see the 'blog' branch in this repo: https://github.com/pixelhandler/ember-app-builder/tree/blog/client/tests	t	1	15	2014-02-20 00:00:00	2015-06-17 07:45:24.581401	pixelhandler
30	I keep getting path() returns undefined. Does anyone know why?	t	35	15	2014-02-20 00:00:00	2015-06-17 07:45:24.588621	pixelhandler
31	Good Read. Is there any way we can replace select with ul li and fake it as select box ?? We all know there is huge restriction when it comes to changing CSS for select box.	t	36	14	2014-01-30 00:00:00	2015-06-17 07:45:24.59775	pixelhandler
32	thanks for this =)\n\n// consideRatio @ irc	t	15	16	2014-01-17 00:00:00	2015-06-17 07:45:24.604938	pixelhandler
33	I too would like to hear these two questions answered. Is there a guide someone can recommend for securing APIs built w/ Node.JS for production?	t	37	19	2013-12-28 00:00:00	2015-06-17 07:45:24.612324	pixelhandler
34	Checkout http://toranbillups.com/blog/archive/2013/07/21/Integration-testing-your-emberjs-app-with-QUnit-and-Karma/ and using http://karma-runner.github.io	t	1	15	2013-11-23 00:00:00	2015-06-17 07:45:24.619845	pixelhandler
35	Gotcha. I saw from this article that you tried pavlov. What was the pitfall there that caused you to use straight qunit? \n\n\nI'm finding it hard to make myself take the jump into Qunit since I already have Jasmine tests on my vanilla JS and Qunit doesn't seem to support running from the command line.  So I'm just trying to understand my options. Thanks for the help.	t	38	15	2013-11-23 00:00:00	2015-06-17 07:45:24.6273	pixelhandler
36	@Gowiem:disqus  that reference for a Jasmine adapter was only pseudo code. QUnit has better async support in my opinion than Jasmine or Mocha, it provides `stop` and `start` methods that are very hard to simulate in an adapter for other test frameworks aside from QUnit. Also since Ember proper uses QUnit there are many examples of testing Ember, so I gave up the fight for my favorite BDD test framework Jasmine and just use QUnit for Ember apps.	t	1	15	2013-11-22 00:00:00	2015-06-17 07:45:24.633885	pixelhandler
37	@pixelhandler:disqus  I know this post is a couple months old, but I was wondering what were the complications you ran into with testing with Jasmine? I saw you posted a Jasmine Adapter here: https://github.com/emberjs/ember.js/pull/2626#issuecomment-17563616 and I'm wondering how that worked out.	t	38	15	2013-11-22 00:00:00	2015-06-17 07:45:24.640732	pixelhandler
38	Thanks for putting this together!  Even though I've been doing ember for a while, this is a great checklist for when I start a new project or add a new model.	t	39	13	2013-10-12 00:00:00	2015-06-17 07:45:24.648067	pixelhandler
39	Here is a gist if you want to clone this article w/ code snippets : https://gist.github.com/pixelhandler/6695412	t	1	13	2013-09-28 00:00:00	2015-06-17 07:45:24.65691	pixelhandler
40	I tried out the demo code running here: http://ecomapi.herokuapp.com/#list and was able to choose an `_id` then delete just that id. It's likely that I need to update this tutorial it's been about a year and a half since I posted it.	t	1	19	2013-08-26 00:00:00	2015-06-17 07:45:24.664491	pixelhandler
41	Excellent post Bill! Thanks for putting the effort into this and also for the PR on the Ember website.	t	40	15	2013-08-16 00:00:00	2015-06-17 07:45:24.673075	pixelhandler
42	@pixelhandler:disqus thanks for the mention! I should point out that my screencast doesn't show ember-data (to keep the number of concepts to a minimum for the beginner). Also if you are mocking $.ajax and you need to mock out the "/" route, RC 6 and RC 7 are both broken right now (see the pull request for more details) https://github.com/emberjs/ember.js/pull/3026	t	41	15	2013-08-16 00:00:00	2015-06-17 07:45:24.682463	pixelhandler
43	Forgot to mention... here is a great video on writing tests for an Ember.js application: http://toranbillups.com/blog/archive/2013/07/21/Integration-testing-your-emberjs-app-with-QUnit-and-Karma/	t	1	15	2013-08-16 00:00:00	2015-06-17 07:45:24.712705	pixelhandler
44	Really nice tutorial - thanks for putting this together. Executed parts of it, hopefully will do the whole tutorial. How are you planning to handle developers access to your APIs, tracking usage, impose limits etc.? \n\nIs there another tool that can serve this purpose or we need to use API Management platforms like Mashery, Apigee, Apiphany etc.?\n\nThanks.\n~ Ado\nabout.me/adotrakic	t	42	19	2013-05-13 00:00:00	2015-06-17 07:45:24.722517	pixelhandler
45	Great post man. Im using some lines of your code to build my own Node + Mongo + AngularJS App. Thank you so much	t	43	19	2013-05-09 00:00:00	2015-06-17 07:45:24.730089	pixelhandler
46	This is still a great tutorial for building RESTful APIs for Node.  It's got some real good fundamentals in here and goes into realistic detail about stuff you need to worry about as far as Node specifics and basics, as well as those of Express.\n\nSpectacular job, thanks!	t	45	19	2013-02-27 00:00:00	2015-06-17 07:45:24.741467	pixelhandler
47	To edit and delete actions I added:\nif(product === undefined) return res.send(404);\n\nright after the findById call to deal with invalid product calls and \n\n\nfor get all and get one product calls I modified\n\nreturn console.log(err)' to\n\n\nconsole.log(err);\nreturn res.send(404);\n\n\nto deal with invalid product calls.	t	47	19	2013-02-06 00:00:00	2015-06-17 07:45:24.751116	pixelhandler
48	Can someone tell me why it would be bad to use this as production code and what needs to be added to make it acceptable?	t	47	19	2013-02-05 00:00:00	2015-06-17 07:45:24.758531	pixelhandler
49	Thanks for the very good article. It helped me to understand the principles and methods of REST.	t	48	19	2013-01-29 00:00:00	2015-06-17 07:45:24.766472	pixelhandler
50	ooh. I missed that it's a bulk action ;)	t	49	19	2013-01-23 00:00:00	2015-06-17 07:45:24.775677	pixelhandler
51	Hey there Bill, very nice article - thanks for sharing. I've done the infamous BG kata in php and Java but I guess I'll have to try it out in JS huh!\n\nSo I've looked at getting the whole require.js thing working with yeoman and found that I was able to do this without either the symbolic link or set timeouts: https://github.com/roblevintennis/yeoman_requirejs_template\n\nWarning *shameless self promotion* ... check out this youtube vid on how require.js, mocha/expect.js/chai, etc. all work together if you're a beginner to those: http://www.youtube.com/watch?v=pYK6ymwAV1s	t	50	17	2013-01-22 00:00:00	2015-06-17 07:45:24.785778	pixelhandler
52	Just replace:\nvar app = express.createServer();\n\n\nwith this:\nvar app = express();	t	51	19	2012-12-24 00:00:00	2015-06-17 07:45:24.792918	pixelhandler
53	Have you tried putting the routers into their own files?	t	52	19	2012-12-22 00:00:00	2015-06-17 07:45:24.799826	pixelhandler
54	Note that (at least with the current version of express) to route an HTTP delete call you use app.del("URL", function) NOT app.delete("URL", function) as the code examples above say. 'delete' is a reserved word in JavaScript.	t	53	19	2012-12-10 00:00:00	2015-06-17 07:45:24.807794	pixelhandler
55	Yeah, on the bowling-cov branch I'm only using mocha, and not the phantomjs headless browser, the Makefile shows the command... https://github.com/pixelhandler/vagrant-dev-env/blob/bowling-cov/www/Makefile the branch is here: https://github.com/pixelhandler/vagrant-dev-env/tree/bowling-cov/www	t	1	17	2012-11-28 00:00:00	2015-06-17 07:45:24.814199	pixelhandler
56	Just wanted to say big *THANKS* for this amazing post and the videos. It's just what I was looking for :)\n\nI'm wondering, though, if there is any way to run the tests right on the shell with a straightforward node "mocha" command, rather than using Yeoman's headless web runner. It seems to me that the workflow would be faster and more "flowy" if you didn't need to wait that second or so for Phantom.js and the mocha web runner...	t	54	17	2012-11-27 00:00:00	2015-06-17 07:45:24.820924	pixelhandler
57	Are you leaving your clients hanging and waiting for response instead of sending a proper 404 in case no document is found in your get handler?	t	55	19	2012-11-27 00:00:00	2015-06-17 07:45:24.827939	pixelhandler
58	Awesome stuff, really helpful for coding...	t	56	19	2012-11-10 00:00:00	2015-06-17 07:45:24.836835	pixelhandler
59	So many hours saved because of this tutorial. Thanks so much!	t	58	19	2012-11-01 00:00:00	2015-06-17 07:45:24.846315	pixelhandler
60	awesome blog entry with a thorough tutorial of how node, mongoose and mongodb all tie in together	t	59	19	2012-10-30 00:00:00	2015-06-17 07:45:24.85317	pixelhandler
61	I'm new in this node.js express thing. This is the most useful article in the subject I've found. Thanks	t	60	19	2012-10-29 00:00:00	2015-06-17 07:45:24.860091	pixelhandler
62	Wow, this is a great article, thanks so much!	t	61	19	2012-10-11 00:00:00	2015-06-17 07:45:24.867565	pixelhandler
63	very well written Bill, clearly you put a lot of effort into this, lots for me to learn, thank you	t	62	19	2012-10-08 00:00:00	2015-06-17 07:45:24.876139	pixelhandler
64	Great to see some new energy in the node community w/ respect to tutorials.	t	63	19	2012-09-22 00:00:00	2015-06-17 07:45:24.88474	pixelhandler
65	Great post!	t	64	19	2012-09-16 00:00:00	2015-06-17 07:45:24.892027	pixelhandler
66	This is excellent tutorial. I have got only one problem\n\n\nWarning: express.createServer() is deprecated, expressapplications no longer inherit from http.Server,please use:\n  var express = require("express");  var app = express();\n\n\nWhat do I do? Can you update your tutorial according to new changes? I need it very much.	t	65	19	2012-08-25 00:00:00	2015-06-17 07:45:24.901261	pixelhandler
67	Excellent tutorial.  This is exact what I've been looking for.	t	66	19	2012-08-07 00:00:00	2015-06-17 07:45:24.908671	pixelhandler
68	Did you look at the source found here: https://github.com/pixelhandler/ecomapi this is the repository for the working demo on heroku: http://ecomapi.herokuapp.com/	t	1	19	2012-07-07 00:00:00	2015-06-17 07:45:24.917445	pixelhandler
69	Nice post, thank you!\n\nSome months ago I developed a RESTful application like this. But later on - the more resources it served, the more boring it became to write code. So I decided to write RESTful framework that simplifies developing such things.\n\nMeet: https://github.com/jsmarkus/colibri\n\nIt is still under development, but new parts of my application are written with it. And I believe the Colibri project will grow, because it is not a just-for-fun thing.\n\nI encourage you guys to join me in open-source development of Colibri framework :)	t	67	19	2012-06-08 00:00:00	2015-06-17 07:45:24.927776	pixelhandler
70	Thank you very much. Your post was an enormous help for me.	t	68	19	2012-05-22 00:00:00	2015-06-17 07:45:24.935237	pixelhandler
71	This is very useful.  Thanks you!	t	69	19	2012-04-03 00:00:00	2015-06-17 07:45:24.944246	pixelhandler
72	John the online book "Backbone Fundamentals" has some tips on using jQuery Mobile with Backbone. `$.mobile.hashListeningEnabled = false;` allows you to use Backbone's router not jQuery Mobile routing. Also when dynamically inserting dom elements in Backbone view objects' render methods you can use `this.$el.html(markup).trigger("create")` the create event tells jQuery mobile to decorate the markup its framework, so your markup can can include html5 data- attribute that jQuery mobile uses to handle the display of the new dom element you introduce with Backbone views.	t	1	20	2012-03-10 00:00:00	2015-06-17 07:45:24.952118	pixelhandler
73	I just started a project using almost this exact stack though I subbed handlebars for moustache. I'm just getting started and there are some obvious complications.\n\nWhat method did you use to bypass jQuery's routing?\nDid you run into any issues with jQuery ui element rendering since you're inserting dom elements more dynamically?	t	70	20	2012-03-09 00:00:00	2015-06-17 07:45:24.958217	pixelhandler
74	Great tutorial. You might want to check out Frisby.js ( http://frisbyjs.com ) for your API tests though instead of using jQuery - it's a bit cleaner, and can be eventually integrated with CI tools when the code goes to production.	t	71	19	2012-03-08 00:00:00	2015-06-17 07:45:24.964614	pixelhandler
75	You have no idea how thankful I am for this post! I've been looking like crazy for a "decent" one and this one just simply blows all of the other posts out of the water :D awesome post!	t	72	19	2012-03-05 00:00:00	2015-06-17 07:45:24.971061	pixelhandler
76	Today I deployed this ecomapi to Heroku at : http://ecomapi.herokuapp.com/ the snippets for using the API are here https://gist.github.com/1791080 ; to see a list of products in the mongo db generated with Backbone.js code add #list - http://ecomapi.herokuapp.com/#list to work with the api use the javascript console and the code snippets in the gists.	t	1	19	2012-02-19 00:00:00	2015-06-17 07:45:24.98218	pixelhandler
77	Nice post. thanks	t	73	19	2012-02-16 00:00:00	2015-06-17 07:45:24.989934	pixelhandler
78	I updated this post adding the code to app.js for the bulk actions for UPDATE and DELETE. Also added to the gist code a fixtures.js file to use to create products following a bulk delete, and a bulk-updates.js script to for AJAX PUT request to update multiple products.\n\nAlso added to the gist is Backbone.js code to render a list of the products using this API, see: https://gist.github.com/1791080#file_frontend.html	t	1	19	2012-02-16 00:00:00	2015-06-17 07:45:24.996496	pixelhandler
79	Well done. And just in time too. I'm playing around with Spine and I think Express/MongoDb will complement it nicely.	t	75	19	2012-02-11 00:00:00	2015-06-17 07:45:25.008795	pixelhandler
80	Awesome stuff, will definitely  give this tutorial a try when i'm free. Thanks.	t	76	19	2012-02-10 00:00:00	2015-06-17 07:45:25.019651	pixelhandler
81	Thanks for this! I need to build my own persistence layer, for different goals than yours. What I lack is knowledge of how to integrate it with Ember--or I should say, did lack, until you provided it.	t	79	67	2015-06-22 20:28:44.280924	2015-06-23 01:37:11.019301	pixelhandler
82	Thanks for sharing. The post helped me so much. Although the app.configure(function(){}) did not work in my case so i used the old approach for app.use();	t	81	19	2016-01-17 11:29:23.312593	2016-01-19 09:06:15.00766	pixelhandler
85	Excellent and clear blog, just what I needed as I'm newbie in Ember	t	83	8	2016-09-01 07:32:00.117791	2016-09-09 18:27:53.245481	pixelhandler
84	I know it's two years old, but looks like your not-found page is broken.	t	82	8	2016-08-03 07:25:20.970278	2016-09-09 18:35:43.166112	pixelhandler
\.


--
-- Data for Name: posts; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.posts (id, body, excerpt, slug, title, date, created_at, updated_at, author_id, tsv, status, tenant) FROM stdin;
58	\n#### **'Bill's Internet Marketing Report' **- Winning the #1 Search Engine\nResult for Your Key Phrase\n\n**- **_Strategies and topics relating to the happenings I experience in the race of marketing, publishing and selling on the web._\n\nHaving the top result on Google for your main key phrase just feels great!\nSeriously, in this time of uncertainty, being number one even for a short time\nis pretty cool. It is also nice when a competitor enters the market and\npreviously held the #1 search result which you now hold.\n\nSearch engine optimization : the search query is : [**noninvasive\nneuromodulation**](http://www.vqorthocare.com)\n\n  * We're number one! Results 1 - 10 of about 92,500 for noninvasive neuromodulation. \n  * Mid month the decision is made to update the web site with new terminology\n  * Take a vacation and violá the search crawler does it's magic and the result is favorable\n  * the competitor who previously ranked #1 for the search query was bumped down but still on page one of Google\n\nRecent changes in Google's search engine results pages (SERPs) for google\naccount holders:\n\n  * While logged in to google the SERPs vary based on the same search query\n  * Fresh/new content ranks higher then seems to drop as newer posts assume the search query's freshness\n  * Holding the #1 ranking in the SERP will required continued link building, hence this post!\n\n_Sites referenced:_\n\n  * [google.com](http://www.google.com/search?hl=en&q=noninvasive+neuromodulation&btnG=Search)\n  * [vqorthocare.com](http://www.vqorthocare.com/Procedures_Diagnoses/Neuromodulation/index.php)\n\n#### **'Highlights in Social Media' **- Online Networks for Web Designers and\nDevelopers\n\n**- **_The Internet is bringing people together and making connections for personal and professional development. Being involved socially online is a way to build new relationships with like-minded individuals._\n\nLast month I created a Ning network, at\n[refreshoc.ning.com](http://refreshoc.ning.com), and as a results was invited\nto join [dezumo.com](http://www.dezumo.com) ; there I joined the conversations\non web design and posted a forum topic "[What are your favorite sites for\ninspiration on the topic of Web\ndesign?](http://www.dezumo.com/forum/topic/show?id=562455%3ATopic%3A15284)"\nDezumo has about 293 members and has been around for about a year while the\nRefreshOC started a month ago and only has about 18 members. Dezumo is has a\nlarger audience while RefreshOC is targeting a local metro area. Both were\nkicked off right here in Orange County. I enjoy the conversations on dezumo\nand am hoping the RefreshOC group will become more active as social networks\nbecome more of a source for making connections locally.\n\nOn the subject of inspiration for web design I did receive a few responses\nfrom the group, I visited the links and found some fresh sites to add to my\n[del.icio.us bookmarks on the topic of\ndesign](http://del.icio.us/pixelhandler/design) . While a couple people were\neager to share links for inspiration sake one designer posted a note to\ncreating new design without being tempted to follow the pack; along with this\nresponse were no links but a tip on seeking inspiration from the world around\nyou. I am very fond of this concept of being inspired from life itself, but\nalso find it very valuable to examine successful design concepts. Design\ntechniques that work well should be mimicked, especially for the sake of user\nexperience and usability.\n\n_Sites referenced: _\n\n  * [refreshoc.com](http://refreshoc.com)\n  * [dezumo.com](http://www.dezumo.com)\n  * [del.icio.us](http://del.icio.us/pixelhandler/design)\n\n* * *\n\n_Found on the PodSafeMusicNetwork: _\n\nListen the track titled, _The Pain Of Numbers_ by [Get Three Coffins\nReady](http://www.myspace.com/getthreecoffinsready) - at the end of the\nbroadcast!\n	Internet Marketing Report and Social Media Highlights Newsletter - July\n2008	winning-the-1-search-engine-result-for-your-key-phrase	Winning the #1 Search Engine Result for Your Key Phrase	2008-07-04	2015-05-07 17:03:21.531404	2015-05-07 17:03:21.531404	1	'/forum/topic/show?id=562455%3atopic%3a15284)':342C '/getthreecoffinsready)':576C '/pixelhandler/design)':459C,556C '/procedures_diagnoses/neuromodulation/index.php)':252C '/search?hl=en&q=noninvasive+neuromodulation&btng=search)':248C '1':3A,28C,101C,123C,168C,230C '10':124C '18':367C '2008':20B '293':346C '500':128C '92':127C 'account':195C 'activ':407C 'add':447C 'ago':362C 'along':488C 'also':89C,520C 'area':382C 'around':351C,504C 'assum':222C 'audienc':374C 'base':205C 'becom':405C,411C 'bill':21C 'bookmark':451C 'bring':267C 'broadcast':582C 'build':239C,286C 'bump':174C 'chang':184C 'coffin':572C 'competitor':93C,164C 'concept':512C,529C 'connect':272C,418C 'content':212C 'continu':237C 'convers':318C,395C 'cool':86C 'counti':391C 'coupl':462C 'crawler':153C 'creat':297C,478C 'decis':135C 'del.icio.us':450C,458C,553C,555C 'del.icio.us/pixelhandler/design)':457C,554C 'design':261C,321C,339C,427C,456C,473C,480C,528C,530C 'develop':263C,277C 'dezumo':343C,369C,397C 'dezumo.com':312C,551C 'drop':218C 'eager':465C 'end':579C 'engin':5A,30C,109C,189C 'enjoy':393C 'enter':94C 'especi':538C 'even':79C 'examin':526C 'experi':44C,544C 'favor':162C 'favorit':330C 'feel':68C 'find':521C 'follow':485C 'fond':509C 'forum':325C 'found':442C,557C 'fresh':227C,444C 'fresh/new':211C 'get':570C 'googl':61C,182C,186C,194C,201C 'google.com':245C 'great':69C 'group':403C,436C 'happen':42C 'held':99C 'henc':240C 'higher':214C 'highlight':17B,253C 'hold':107C,228C 'holder':196C 'hope':400C 'individuals._':293C 'inspir':333C,424C,470C,500C,515C 'internet':11B,23C,265C 'invit':309C 'involv':279C 'join':311C,316C 'juli':19B 'key':9A,34C,65C 'kick':385C 'larger':373C 'last':294C 'life':517C 'like':291C 'like-mind':290C 'link':238C,440C,468C,494C 'listen':561C 'local':380C,419C 'log':198C 'made':137C 'magic':157C 'main':64C 'make':271C,417C 'market':12B,24C,49C,96C 'media':16B,256C 'member':347C,368C 'metro':381C 'mid':132C 'mimick':537C 'mind':292C 'month':133C,295C,361C 'network':258C,300C,410C 'neuromodul':116C,131C 'new':144C,287C,479C 'newer':220C 'newslett':18B 'nice':90C 'ning':299C 'noninvas':115C,130C 'note':476C 'number':77C,120C,568C 'one':78C,121C,180C,472C 'onlin':257C,281C 'optim':110C 'orang':390C 'pack':487C 'page':179C,191C 'pain':566C 'peopl':268C,463C 'person':274C 'phrase':10A,35C,66C 'podsafemusicnetwork':560C 'post':221C,242C,323C,474C 'pretti':85C 'previous':98C,166C 'profession':276C 'publish':50C 'queri':113C,172C,210C,225C 'race':47C 'rank':167C,213C,231C 're':119C 'readi':573C 'receiv':430C 'recent':183C 'referenc':244C,548C 'refreshoc':358C,376C,402C 'refreshoc.com':549C,550C 'refreshoc.ning.com':302C,303C 'relat':39C 'relationship':288C 'report':13B,25C 'requir':236C 'respons':433C,491C 'result':6A,31C,59C,103C,122C,160C,190C,307C 'right':387C 'sake':471C,541C 'search':4A,29C,102C,108C,112C,152C,171C,188C,209C,224C 'seek':499C 'seem':216C 'sell':52C 'serious':70C 'serp':192C,203C,234C 'share':467C 'short':82C 'site':142C,243C,331C,445C,547C 'social':15B,255C,280C,409C 'sourc':415C 'start':359C 'still':177C 'strategi':36C 'subject':422C 'success':527C 'take':146C 'target':378C 'techniqu':531C 'tempt':483C 'terminolog':145C 'three':571C 'time':73C,83C 'tip':497C 'titl':564C 'togeth':269C 'top':58C 'topic':38C,326C,336C,454C 'track':563C 'uncertainti':75C 'updat':139C 'usabl':546C 'user':543C 'vacat':148C 'valuabl':524C 'vari':204C 'violá':150C 'visit':438C 'vqorthocare.com':249C 'way':284C 'web':141C,260C,320C,338C,426C 'web._':55C 'well':534C 'win':1A,26C 'without':481C 'work':533C 'world':503C 'www.dezumo.com':313C,341C,552C 'www.dezumo.com/forum/topic/show?id=562455%3atopic%3a15284)':340C 'www.google.com':247C 'www.google.com/search?hl=en&q=noninvasive+neuromodulation&btng=search)':246C 'www.myspace.com':575C 'www.myspace.com/getthreecoffinsready)':574C 'www.vqorthocare.com':117C,251C 'www.vqorthocare.com/procedures_diagnoses/neuromodulation/index.php)':250C 'year':355C	published	pixelhandler
72	This question got me thinking, what am I doing that counts? What am I doing that is significant? Could I do even better than I am today? The answers are simple. Spend more quality time with my family. Make the moments we share count. Reach out to friends who I’ve not been in contact with and catch up, and encourage them. Volunteer at my church. Behave in a professional manner at work and make an impact in the workplace. Become a better leader.\n\nAnother speaker, former Top Gun pilot and instructor, Rob Shallenberger spoke about writing down your personal vision for various aspects of your life. To lead with clear vision and a plan. The week after the event, I wrote in my journal my vision statements: personal, as a husband, a father, in business, and as a colleague. Writing these down helps me recall the best version of myself I choose to be.\n\nA few days later in my personal devotional reading a couple verses stood out to me, Proverbs 4:11-12. “I have directed you in the way of wisdom; I have led you in upright paths. When you walk, your steps will not be impeded; And if you run, you will not stumble.”. The Bible was quoted many times during the convention as well. As I read these words, I am reminded to lean on the wisdom found in Scripture; and to trust that my path ahead is prepared for me.\n\nAs Lorraine and I venture into this partnership in a direct sales business we find opportunity to better one another and focus on our health. As well as invite others to seek healthy and rewarding lifestyles.\n\nSo today we started our blog, billandlorraine.com. We’re looking forward to sharing our experience with others as we learn together in this venture.	On Memorial Day weekend, 2017, Lorraine and I attended the Vasayo Grand Opening at the Paris resort in Las Vegas. We met a bunch of new people from all over the U.S. This was the official launch of the Vasayo company and brand. Lorraine and I were invited to join the organization during the pre-launch as founding Brand Partners. Prior to the grand opening event we spent a couple months trying out the MicroLife Nutrition products, Renew, Sleep, Energy, Core Essentials, and Neuro. We like the products!\n\nTwo days of training about the Vasayo products and company, as well as inspirational talks, provided a great introduction to the heart of the leadership at Vasayo. Among many inspiring moments, one message really stood out during the closing keynote. Rex Crain asked, “What deserves you?”	thoughts-on-vasayo-grand-opening	Thoughts on the Vasayo Grand Opening	2017-06-09	2017-06-09 04:41:28.767484	2017-06-10 01:09:04.458656	3	'-12':315C '11':314C '2017':11B '4':313C 'ahead':382C 'among':123B 'anoth':225C,406C 'answer':169C 'ask':138B 'aspect':244C 'attend':15B 'becom':221C 'behav':207C 'best':288C 'better':163C,223C,404C 'bibl':350C 'billandlorraine.com':429C 'blog':428C 'brand':49B,66B 'bunch':30B 'busi':276C,399C 'catch':198C 'choos':293C 'church':206C 'clear':251C 'close':134B 'colleagu':280C 'compani':47B,105B 'contact':195C 'convent':357C 'core':88B 'could':159C 'count':151C,184C 'coupl':77B,306C 'crain':137B 'day':9B,97B,298C 'deserv':140B 'devot':303C 'direct':318C,397C 'encourag':201C 'energi':87B 'essenti':89B 'even':162C 'event':73B,260C 'experi':437C 'famili':178C 'father':274C 'find':401C 'focus':408C 'former':227C 'forward':433C 'found':65B,373C 'friend':188C 'got':143C 'grand':5A,18B,71B 'great':113B 'gun':229C 'health':411C 'healthi':419C 'heart':117B 'help':284C 'husband':272C 'impact':217C 'imped':340C 'inspir':109B,125B 'instructor':232C 'introduct':114B 'invit':54B,415C 'join':56B 'journal':265C 'keynot':135B 'las':25B 'later':299C 'launch':43B,63B 'lead':249C 'leader':224C 'leadership':120B 'lean':369C 'learn':442C 'led':327C 'life':247C 'lifestyl':422C 'like':93B 'look':432C 'lorrain':12B,50B,388C 'make':179C,215C 'mani':124B,353C 'manner':211C 'memori':8B 'messag':128B 'met':28B 'microlif':82B 'moment':126B,181C 'month':78B 'neuro':91B 'new':32B 'nutrit':83B 'offici':42B 'one':127B,405C 'open':6A,19B,72B 'opportun':402C 'organ':58B 'other':416C,439C 'pari':22B 'partner':67B 'partnership':394C 'path':331C,381C 'peopl':33B 'person':240C,269C,302C 'pilot':230C 'plan':255C 'pre':62B 'pre-launch':61B 'prepar':384C 'prior':68B 'product':84B,95B,103B 'profession':210C 'proverb':312C 'provid':111B 'qualiti':174C 'question':142C 'quot':352C 're':431C 'reach':185C 'read':304C,362C 'realli':129B 'recal':286C 'remind':367C 'renew':85B 'resort':23B 'reward':421C 'rex':136B 'rob':233C 'run':344C 'sale':398C 'scriptur':375C 'seek':418C 'shallenberg':234C 'share':183C,435C 'signific':158C 'simpl':171C 'sleep':86B 'speaker':226C 'spend':172C 'spent':75B 'spoke':235C 'start':426C 'statement':268C 'step':336C 'stood':130B,308C 'stumbl':348C 'talk':110B 'think':145C 'thought':1A 'time':175C,354C 'today':167C,424C 'togeth':443C 'top':228C 'train':99B 'tri':79B 'trust':378C 'two':96B 'u.s':38B 'upright':330C 'various':243C 'vasayo':4A,17B,46B,102B,122B 've':191C 'vega':26B 'ventur':391C,446C 'vers':307C 'version':289C 'vision':241C,252C,267C 'volunt':203C 'walk':334C 'way':322C 'week':257C 'weekend':10B 'well':107B,359C,413C 'wisdom':324C,372C 'word':364C 'work':213C 'workplac':220C 'write':237C,281C 'wrote':262C	published	billandlorraine
73	Let’s be honest 2016 was a tough year for everyone. Along with that craziness, I gave my job to a friend and began a journey of consulting and eventually back to full time employment. I valued my former position and looked forward to growing my leadership skills in a software developer manager role.  Well that all changed. While consulting, I looked forward to using my experience as a positive influence to benefit the clients which I had the privilege to serve. And eventually, I accepted a position for a company in Texas as a developer. Exercising leadership would look differently now. I’ve worked for companies in Los Angeles, San Francisco, San Diego, Minneapolis, North Carolina. And I’ve worked with people around the globe. The people in Texas have been kind to me. In response to Hurricane Harvey, I’ve witnessed the level of support Texans naturally give to their fellow Texans, a few co-workers on my team spent their Labor Day weekend helping hurricane victims. Cheers Texas, you know how to take care of others better than most. I think I landed well; that makes me happy. A software company in Texas does behave differently than other software companies I’ve worked for. And it’s good, I’d say “even better” (just learned about that phase this year).\n\nPreviously in 2016, I lived in a huge house, about 3,700  sq. ft., had a great home office, and had hopes to buy that house. Oops, that didn’t work out, we down sized and moved out of town. (It even took about a year to get back a $4K deposit.) I still work remotely, but now share my office space with another room. I moved to another community in Southern California, I’ve found many kind people, fresh air (yes in CA), and I can see the stars every night. (Not so much before.) Today, friends from our church helped us pull weeds and clean our back yard - on a holiday too, so kind. I miss my big house and the community around my old place, there were kind people there too.  I have a big yard and am so happy to see my family work so hard together to prepare for an upcoming back yard party we’re planning. We do not have as much room inside anymore. A friend offered to lend us a tent, which really will make the yard a nice atmosphere for our party. We’ve made some new friends and have kept some old ones too.\n\nI’ve been a Mac user for a very long time, I previously worked for the company that produced those Mac vs PC advertisements that were so funny. I also previously worked for the company that provided ecommerce solutions to the company whose operating system has achieved world domination, and was like the only developer with a mac officially provided by the company, back then PCs were standard issue to developers. I worked on the online store and try/buy solutions to buy Office for Mac. In school, I learned to type on an Apple II (my only personal computer was a Commodore 64). I’ve bought a ton of macs for myself and my family over the past 18 years. And during that time, I only purchased one PC. At one of my old jobs we only supported the Safari web browser; which of course comes on a Mac. So, at my new job I asked for a Mac. Everyone on the team had one, there was one caveat - we run services using Windows based technologies.  Also in late 2016, I was issued on of those new Macbook Pro computers with the touch bar (surprise, I really did not like that computer). Then another one, what else would I use? I got to thinking, we run Parallels for the Windows based web services we use. Why not just develop on a Windows machine, I remember I used to before, but it has been almost 10 years. Then I was often the developer who insisted on using a Mac, and now I’m the guy in a large crowd of developers and their Macbook Pros why askes for a PC. So now, I use a Dell laptop at work and a Lenovo laptop at home. Windows is different now, I’ve pleasantly surprised – I’ve been away for some time. And with the Creators Update the Windows Subsystem for Linux works pretty well. I keep telling myself I’ll just run Linux only one day, well for now I step into Ubuntu from Windows 10 using the `bash` command. Also, I even use a touch screen on my PC. What, the whole screen is a pointing device? Heh, I kind of like that.\n\nThe team I work with builds with ASP.Net Core technologies. So, Visual Studio or VS Code is the go to IDE/Editor. My favorite text editor, up to now, was Vim. I still like Vim, but VS Code is really good. I used to laugh at TypeScript; it seemed to me that TypeScript was a misfit within JavaScript; since dynamic types do work. Now I think… types are great, can I build with TypeScript? I recently worked on a feature and chose to use immutable data (in a JavaScript application). What could be wrong with state in a thick client (JavaScript) application? I like the immutable data flow much better now. Thanks to Elm for catching my interest in using types, functional programming, and immutable data. For almost 5 years I have built applications with the Ember.js framework which itself has been through many changes. And now I’m so excited about Web Components, the v1 specification and polyfills are coming along great. Maybe soon I’ll develop mostly with Web Components. I miss some aspects of Rails, Django but look forward to learning the concepts around Domain Driven Design (DDD). The team I’m on, favors many of the concepts and solutions which stem from the DDD methodologies. We value capturing the behaviors within a software system and the ubiquitous language among stake holders/clients than we value how a technology system typically functions. I’ve come to recognize that so many CRUD based solutions were short sighted. I’m interested in RxJS, Cycle.js, and I think I will tinker with these reactive and functional approaches to software development. What has not changed is that I still write a bunch of tests, and keep advocating the importance of writing automated tests, both for developers and users alike.\n\nFor the past few years, my wife was a conservator for her grandfather, he suffered from Alzheimer’s. He recently passed. It was a privilege to care for him and know him during his final years. He would say, “you all must be my kin, you are so kind to me”. We’d have a partly and he’d have a surprise more than once during the event. He would become lost and alone, then I’d walk him around the room and re-introduce him to his family, and he was suddenly so happy to be surrounded by people who love him. We will miss him; the responsibility was significant, now that also has changed.\n\nWe keep a mini zoo at home, but for the past 18 year we have not had one cat that become our pet, ever. This summer, we adopted a kitty. He is so cute, curious, and cuddly. A few months back we lost the best dog we ever owned, she was incredible.  There are five of us at home (in 2016 we launched 2) we came up with five names for the cat, I just call him “Kitty”. I know he will grow up, maybe I’ll call him “Gretsky” then; he likes to play with lids like they are hockey pucks.\n\nIn the last year what changed? The political landscape for one. The “twitterverse” seems very polarized and promotes echo chambers. I changed… jobs, roles, computers, operating systems, backend solutions (programming languages), text editor of choice, work for a Southern organization vs Costal, share office space vs personal office, frequency of travel, lost a pet, tried a kind new pet, lost a team, gained a team, downsized our home (in half), launched two children, training (Krav Maga), communities, cities, churches, schools, neighbors, friends, family, responsibilities, health, and eyesight. I am sure I forgot something that belongs on this list. That that is enough. I have not changed much, everything around me changed drastically - I still think different and am one of the crazy ones who thinks they can change the world. Two constants have been with me this past year: change and kindness. Even though I had a tough year in 2016, 2017 has been much better. Don’t get me wrong I get serious threats to my safety and security; and, I do notice the anger around the USA. But, I choose my comfort zone within the storms of life - kindness works well. In fact, kindness is battle tested with withstands change. No wonder when I look back at all the changes that I experienced this past year (and over my career)… I found kindness within the chaos.\n\nI typically blog about software development for the web. The title of this posts may appear off-topic. But I’d like to challenge your perception, would you challenge your own perception? I do, I find it a practice that helps me transition though change. Change happens. It’s your ability to navigate change and show your resilience though it - which makes a difference in your personal and professional life. (These days, these two cross-over anyway). So regardless of the environment you live/work in, regardless of the group think echoing from your social(media) circles - think about your course of action and resolve. Will you be the thermometer who simply reads the temperature; or will you be the thermostat that influences the temperature? My story from ’16 thru ’17 is not unique, change is a dominant force and is inescapable.\n\nIn my mind, this post addresses a key principle that is important to software craftsmanship: the ability to embrace change (to extend and receive kindness through it) will help us all build solutions that are not mediocre. Attitude reflects leadership, be the leader and make room for kindness as a constant, aside ongoing change. Building good software includes dealing with people as much as it is does computers, your resolve will result in work that is mediocre or resilient. Be the change that results in delivering even better software solutions.	In 2017 so many parts of my life went through a transition. Change is good, right? How much is too much, I can’t answer that for me change has always been enough. I value the ability to respond to change with a positive attitude and resolve. I think change is constant, change will keep happening, everything will be fine. It is perfectly OK to challenge your assumptions and embrace the new and even the old.\n\nI remember when the “Think Different” posters came out. Back then, I worked in Desktop Publishing on PC’s and Macs. At the time, my career was entirely in front of me and I resonated with the iconic photo of Albert Einstein with the caption, “Think Different”. As a mantra, that phrase still resonates with me, in many ways - regarding the topics of changes I faced in 2017. This post is my story of the changes I faced over the past year, but also addresses a key principle regarding software craftsmanship (wait for it…).	change-everything-will-be-fine	Change, everything will be fine	2017-09-04	2017-09-05 06:38:15.137011	2017-09-05 06:39:57.292593	1	'10':846C,945C '16':1846C '17':1848C '18':720C,1398C '2':1450C '2016':178C,400C,781C,1447C,1639C '2017':7B,149B,1640C '3':408C '4k':448C '5':1101C '64':704C '700':409C 'abil':42B,1768C,1876C 'accept':259C 'achiev':648C 'action':1820C 'address':166B,1865C 'adopt':1414C 'advertis':625C 'advoc':1257C 'air':478C 'albert':122B 'alik':1269C 'almost':845C,1100C 'alon':1343C 'along':185C,1134C 'also':165B,631C,778C,950C,1384C 'alway':36B 'alzheim':1286C 'among':1195C 'angel':283C 'anger':1664C 'anoth':461C,466C,805C 'answer':30B 'anymor':568C 'anyway':1795C 'appear':1732C 'appl':695C 'applic':1062C,1074C,1106C 'approach':1238C 'around':297C,522C,1159C,1349C,1597C,1665C 'asid':1911C 'ask':757C,877C 'asp.net':981C 'aspect':1148C 'assumpt':73B 'atmospher':585C 'attitud':50B,1897C 'autom':1262C 'away':907C 'back':91B,204C,446C,506C,554C,665C,1427C,1696C 'backend':1516C 'bar':795C 'base':776C,822C,1216C 'bash':948C 'battl':1686C 'becom':1340C,1407C 'began':197C 'behav':372C 'behavior':1186C 'belong':1583C 'benefit':246C 'best':1431C 'better':354C,390C,1082C,1644C,1947C 'big':517C,535C 'blog':1719C 'bought':707C 'browser':743C 'build':979C,1044C,1891C,1914C 'built':1105C 'bunch':1252C 'buy':421C,683C 'ca':481C 'california':470C 'call':1462C,1474C 'came':89B,1452C 'caption':126B 'captur':1184C 'care':351C,1296C 'career':107B,1710C 'carolina':290C 'cat':1405C,1459C 'catch':1088C 'caveat':770C 'challeng':71B,1741C,1746C 'chamber':1508C 'chang':1A,18B,34B,46B,55B,58B,145B,157B,231C,1117C,1245C,1386C,1494C,1510C,1594C,1599C,1616C,1628C,1690C,1700C,1762C,1763C,1771C,1852C,1879C,1913C,1941C 'chao':1716C 'cheer':344C 'children':1561C 'choic':1523C 'choos':1670C 'chose':1054C 'church':498C,1567C 'circl':1814C 'citi':1566C 'clean':504C 'client':248C,1072C 'co':331C 'co-work':330C 'code':989C,1010C 'come':747C,1133C,1209C 'comfort':1672C 'command':949C 'commodor':703C 'communiti':467C,521C,1565C 'compani':264C,280C,368C,377C,618C,636C,643C,664C 'compon':1126C,1144C 'comput':700C,791C,803C,1513C,1927C 'concept':1158C,1173C 'conserv':1279C 'constant':57B,1620C,1910C 'consult':201C,233C 'core':982C 'costal':1530C 'could':1064C 'cours':746C,1818C 'craftsmanship':172B,1874C 'crazi':188C,1610C 'creator':914C 'cross':1793C 'cross-ov':1792C 'crowd':869C 'crud':1215C 'cudd':1423C 'curious':1421C 'cute':1420C 'cycle.js':1226C 'd':387C,1322C,1328C,1346C,1738C 'data':1058C,1079C,1098C 'day':339C,935C,1789C 'ddd':1163C,1180C 'deal':1918C 'deliv':1945C 'dell':886C 'deposit':449C 'design':1162C 'desktop':96B 'develop':225C,269C,656C,672C,830C,853C,871C,1140C,1241C,1266C,1722C 'devic':967C 'didn':426C 'diego':287C 'differ':87B,128B,274C,373C,898C,1604C,1781C 'django':1151C 'dog':1432C 'domain':1160C 'domin':650C,1855C 'downsiz':1554C 'drastic':1600C 'driven':1161C 'dynam':1032C 'echo':1507C,1809C 'ecommerc':639C 'editor':998C,1521C 'einstein':123B 'elm':1086C 'els':808C 'ember.js':1109C 'embrac':75B,1878C 'employ':208C 'enough':38B,1590C 'entir':109B 'environ':1800C 'even':79B,389C,439C,952C,1631C,1946C 'event':1337C 'eventu':203C,257C 'ever':1410C,1434C 'everi':488C 'everyon':184C,761C 'everyth':2A,62B,1596C 'excit':1123C 'exercis':270C 'experi':240C 'experienc':1703C 'extend':1881C 'eyesight':1575C 'face':147B,159B 'fact':1683C 'famili':544C,716C,1359C,1571C 'favor':1169C 'favorit':996C 'featur':1052C 'fellow':326C 'final':1304C 'find':1753C 'fine':5A,65B 'five':1441C,1455C 'flow':1080C 'forc':1856C 'forgot':1580C 'former':212C 'forward':216C,236C,1154C 'found':473C,1712C 'framework':1110C 'francisco':285C 'frequenc':1537C 'fresh':477C 'friend':195C,495C,570C,594C,1570C 'front':111B 'ft':411C 'full':206C 'function':1094C,1206C,1237C 'funni':629C 'gain':1551C 'gave':190C 'get':445C,1647C,1651C 'give':323C 'globe':299C 'go':992C 'good':20B,385C,1013C,1915C 'got':813C 'grandfath':1282C 'great':414C,1041C,1135C 'gretski':1476C 'group':1807C 'grow':218C,1469C 'guy':865C 'half':1558C 'happen':61B,1764C 'happi':365C,540C,1365C 'hard':547C 'harvey':313C 'health':1573C 'heh':968C 'help':341C,499C,1758C,1888C 'hockey':1487C 'holders/clients':1197C 'holiday':510C 'home':415C,895C,1393C,1445C,1556C 'honest':177C 'hope':419C 'hous':406C,423C,518C 'huge':405C 'hurrican':312C,342C 'icon':119B 'ide/editor':994C 'ii':696C 'immut':1057C,1078C,1097C 'import':1259C,1871C 'includ':1917C 'incred':1438C 'inescap':1859C 'influenc':244C,1840C 'insid':567C 'insist':855C 'interest':1090C,1223C 'introduc':1355C 'issu':670C,784C 'javascript':1030C,1061C,1073C 'job':192C,736C,755C,1511C 'journey':199C 'keep':60B,925C,1256C,1388C 'kept':597C 'key':168B,1867C 'kin':1314C 'kind':306C,475C,513C,528C,970C,1318C,1545C,1630C,1679C,1684C,1713C,1884C,1907C 'kitti':1416C,1464C 'know':347C,1300C,1466C 'krav':1563C 'labor':338C 'land':360C 'landscap':1497C 'languag':1194C,1519C 'laptop':887C,893C 'larg':868C 'last':1491C 'late':780C 'laugh':1017C 'launch':1449C,1559C 'leader':1902C 'leadership':220C,271C,1899C 'learn':392C,690C,1156C 'lend':573C 'lenovo':892C 'let':174C 'level':318C 'lid':1483C 'life':13B,1678C,1787C 'like':653C,801C,972C,1006C,1076C,1479C,1484C,1739C 'linux':920C,932C 'list':1586C 'live':402C 'live/work':1802C 'll':929C,1139C,1473C 'long':611C 'look':215C,235C,273C,1153C,1695C 'los':282C 'lost':1341C,1429C,1540C,1548C 'love':1372C 'm':863C,1121C,1167C,1222C 'mac':102B,606C,622C,659C,686C,711C,750C,760C,859C 'macbook':789C,874C 'machin':834C 'made':591C 'maga':1564C 'make':363C,580C,1779C,1904C 'manag':226C 'mani':9B,139B,474C,1116C,1170C,1214C 'mantra':131B 'may':1731C 'mayb':1136C,1471C 'media':1813C 'mediocr':1896C,1936C 'methodolog':1181C 'mind':1862C 'mini':1390C 'minneapoli':288C 'misfit':1028C 'miss':515C,1146C,1376C 'month':1426C 'most':1141C 'move':434C,464C 'much':23B,26B,492C,565C,1081C,1595C,1643C,1922C 'must':1311C 'name':1456C 'natur':322C 'navig':1770C 'neighbor':1569C 'new':77B,593C,754C,788C,1546C 'nice':584C 'night':489C 'north':289C 'notic':1662C 'off-top':1733C 'offer':571C 'offic':416C,458C,684C,1532C,1536C 'offici':660C 'often':851C 'ok':69B 'old':81B,524C,599C,735C 'one':600C,729C,732C,766C,769C,806C,934C,1404C,1499C,1607C,1611C 'ongo':1912C 'onlin':677C 'oop':424C 'oper':645C,1514C 'organ':1528C 'other':353C 'own':1435C 'parallel':818C 'part':10B,1325C 'parti':556C,588C 'pass':1290C 'past':162B,719C,1272C,1397C,1626C,1705C 'pc':99B,624C,730C,880C,959C 'pcs':667C 'peopl':296C,301C,476C,529C,1370C,1920C 'percept':1743C,1749C 'perfect':68B 'person':699C,1535C,1784C 'pet':1409C,1542C,1547C 'phase':395C 'photo':120B 'phrase':133B 'place':525C 'plan':559C 'play':1481C 'pleasant':902C 'point':966C 'polar':1504C 'polit':1496C 'polyfil':1131C 'posit':49B,213C,243C,261C 'post':151B,1730C,1864C 'poster':88B 'practic':1756C 'prepar':550C 'pretti':922C 'previous':398C,614C,632C 'principl':169B,1868C 'privileg':253C,1294C 'pro':790C 'produc':620C 'profession':1786C 'program':1095C,1518C 'promot':1506C 'pros':875C 'provid':638C,661C 'publish':97B 'puck':1488C 'pull':501C 'purchas':728C 'rail':1150C 're':558C,1354C 're-introduc':1353C 'reactiv':1235C 'read':1830C 'realli':578C,798C,1012C 'receiv':1883C 'recent':1048C,1289C 'recogn':1211C 'reflect':1898C 'regard':141B,170B 'regardless':1797C,1804C 'rememb':83B,836C 'remot':453C 'resili':1775C,1938C 'resolv':52B,1822C,1929C 'reson':116B,135B 'respond':44B 'respons':310C,1379C,1572C 'result':1931C,1943C 'right':21B 'role':227C,1512C 'room':462C,566C,1351C,1905C 'run':772C,817C,931C 'rxjs':1225C 'safari':741C 'safeti':1656C 'san':284C,286C 'say':388C,1308C 'school':688C,1568C 'screen':956C,963C 'secur':1658C 'see':485C,542C 'seem':1021C,1502C 'serious':1652C 'serv':255C 'servic':773C,824C 'share':456C,1531C 'short':1219C 'show':1773C 'sight':1220C 'signific':1381C 'simpli':1829C 'sinc':1031C 'size':432C 'skill':221C 'social':1812C 'softwar':171B,224C,367C,376C,1189C,1240C,1721C,1873C,1916C,1948C 'solut':640C,681C,1175C,1217C,1517C,1892C,1949C 'someth':1581C 'soon':1137C 'southern':469C,1527C 'space':459C,1533C 'specif':1129C 'spent':336C 'sq':410C 'stake':1196C 'standard':669C 'star':487C 'state':1068C 'stem':1177C 'step':940C 'still':134B,451C,1005C,1249C,1602C 'store':678C 'stori':154B,1844C 'storm':1676C 'studio':986C 'subsystem':918C 'sudden':1363C 'suffer':1284C 'summer':1412C 'support':320C,739C 'sure':1578C 'surpris':796C,903C,1331C 'surround':1368C 'system':646C,1190C,1204C,1515C 'take':350C 'team':335C,764C,975C,1165C,1550C,1553C 'technolog':777C,983C,1203C 'tell':926C 'temperatur':1832C,1842C 'tent':576C 'test':1254C,1263C,1687C 'texa':266C,303C,345C,370C 'texan':321C,327C 'text':997C,1520C 'thank':1084C 'thermomet':1827C 'thermostat':1838C 'thick':1071C 'think':54B,86B,127B,358C,815C,1038C,1229C,1603C,1613C,1808C,1815C 'though':1632C,1761C,1776C 'threat':1653C 'thru':1847C 'time':105B,207C,612C,725C,910C 'tinker':1232C 'titl':1727C 'today':494C 'togeth':548C 'ton':709C 'took':440C 'topic':143B,1735C 'touch':794C,955C 'tough':181C,1636C 'town':437C 'train':1562C 'transit':17B,1760C 'travel':1539C 'tri':1543C 'try/buy':680C 'twittervers':1501C 'two':1560C,1619C,1791C 'type':692C,1033C,1039C,1093C 'typescript':1019C,1025C,1046C 'typic':1205C,1718C 'ubiquit':1193C 'ubuntu':942C 'uniqu':1851C 'upcom':553C 'updat':915C 'us':500C,574C,1443C,1889C 'usa':1667C 'use':238C,774C,811C,826C,838C,857C,884C,946C,953C,1015C,1056C,1092C 'user':607C,1268C 'v1':1128C 'valu':40B,210C,1183C,1200C 've':277C,293C,315C,379C,472C,590C,603C,706C,901C,905C,1208C 'victim':343C 'vim':1003C,1007C 'visual':985C 'vs':623C,988C,1009C,1529C,1534C 'wait':173B 'walk':1347C 'way':140B 'web':742C,823C,1125C,1143C,1725C 'weed':502C 'weekend':340C 'well':228C,361C,923C,936C,1681C 'went':14B 'whole':962C 'whose':644C 'wife':1276C 'window':775C,821C,833C,896C,917C,944C 'wit':316C 'within':1029C,1187C,1674C,1714C 'withstand':1689C 'wonder':1692C 'work':94B,278C,294C,380C,428C,452C,545C,615C,633C,674C,889C,921C,977C,1035C,1049C,1524C,1680C,1933C 'worker':332C 'world':649C,1618C 'would':272C,809C,1307C,1339C,1744C 'write':1250C,1261C 'wrong':1066C,1649C 'yard':507C,536C,555C,582C 'year':163B,182C,397C,443C,721C,847C,1102C,1274C,1305C,1399C,1492C,1627C,1637C,1706C 'yes':479C 'zone':1673C 'zoo':1391C	published	pixelhandler
25	Click below to view the PDF and/or download the templates files:\n\n  1. PDF of wireframe templates: [magento-wireframes](http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes.pdf)\n  2. ZIP of Adobe Illustrator files: [magento-wireframes](http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes.zip)\nThe following is a summary of the annotations that accompany the wireframe\ntemplates. These notes can be used to establish/inform your client of the user\nexperience(s) that can be expected from an online store build with magento\ncommerce.\n\nThe following is a summary of the annotations that accompany the wireframe templates. These notes can be used to establish/inform your client of the user experience(s) that can be expected from an online store build with magento commerce.\n<!--more-->\n<h2><em>Project : Online Storefront</em></h2>\n<h3>Page: Home</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-1-e1310555340154.png"><img class="alignnone size-full wp-image-827" title="magento-wireframes-1" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-1-e1310555340154.png" alt="Magento Wireframe of homepage" width="579" height="337" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Presented with multiple options to browse store (targeting various user types) slideshow, featured promotions/banners/products, by category, or by searching. As shopper searches for a product, suggestions result from user input (with search bar). Follows traditional navigation on top to view categories. Interacts with store widgets like mini-cart, recently viewed, search suggestions.\n\n<strong>Store Manager</strong> - Uses content management tools to update scenes based on marketing objectives, upcoming offerings, categories, etc. Adds graphics for banner promotions and informational badges.\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Branding image and top navigation</li>\n\t<li>Storefront navigation</li>\n\t<li>Search bar with interactive suggestions</li>\n\t<li>Interactive slides to promote targeted sections or products</li>\n\t<li>Sidebar area to hold blocks for banners, badges and dynamic blocks like, recently viewed and mini-cart</li>\n\t<li>Featured category image linked to category pages bundle of products)</li>\n\t<li>Featured products (configurable by options or as</li>\n\t<li>Footer area, navigation links, copyright, policy, newsletter sign-up etc.</li>\n\t<li>CMS structural block for adding promotional content.</li>\n</ul>\n<h3>Page: Category / Search Results</h3>\n<h4>User Experiences:</h4>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-2.png"><img class="alignnone size-full wp-image-828" title="magento-wireframes-2" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-2.png" alt="Magento wireframe of category or search results page" width="580" height="340" /></a>\n\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-3.png"><img title="magento-wireframes-3" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-3.png" alt="Magento commerce wireframe of category page with quick view layout" width="570" height="334" /></a>\n\n<strong>Shopper</strong> - Presented with listing of products within specific categories including filtered navigation allowing user to further limit display to desired category and/or product attributes. Shopper may sort the category list or search results by price and other sortable attributes. The list/search results are paginated. Shopper may add to cart or save to a wish list (creates login to save products). Mini-cart in sidebar is updated when user adds product to cart; also the mini cart is editable so user may remove products as well.\n\n<strong>Store Manager</strong> - Using back-office tools, organizes product categories and defines attributes based on merchandising objectives. Products may be associated with multiple categories to facilitate various shopping choices.\n\n<em>Interactive / Elements:</em>\n\nFiltered navigation on category and search results pages. Uses context specific product categories and attributes to help shopper find relevant products.\n\nMini-cart, interacts with user actions and displays quantity, total amount and mini views of products in cart; user can remove items from cart or click through to view fill shopping cart page.\n<ul>\n\t<li>Product navigation, with breadcrumbs, pagination, sorting options, subscribe to RSS feed.</li>\n\t<li>Products rendered in main area and paginated images and titles clickable to details pages.</li>\n\t<li>Actions to purchase, add to cart updates mini cart, if configurable with options user is taken to details page.</li>\n</ul>\n<h3>Page: Product Details</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-4.png"><img class="alignnone size-full wp-image-830" title="magento-wireframes-4" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-4.png" alt="Magento Commerce wireframe of product details page" width="570" height="334" /></a><a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-5.png"><img title="magento-wireframes-5" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-5.png" alt="Magento Commerce wireframe of bundled product layout" width="570" height="333" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Presented with product details, short description, purchase options, alternate views, price, availability, tabbed display of related products and long description/specifics. Interacts with options/quantity inputs to make a purchase decision. Supporting interactions: views alternate image, zooming to view details; sidebar reminds shopper of recently viewed products and prominent position of mini cart encourages checkout.\n\n<strong>Store Manager</strong> - Using back-office tools, updates product information including title, descriptions, pricing, multiple images, attributes (options may update pricing), manage inventory, setup related product offers (merchandising), and more.\n\nInteractive / Elements:\n<ul>\n\t<li>Recently viewed products listed in sidebar</li>\n\t<li>Product details, main image, name, availability, short description, link to email a friend</li>\n\t<li>Product options (required for configurable products) based on product attributes</li>\n\t<li>More views: alternate images of product, click changes main image, zooming feature to view detail.</li>\n\t<li>Add to cart / quantity input. Button click updates mini cart and user is notified at top of page; or (as set in back-office) user can be directed to the shopping cart page to begin checkout.</li>\n\t<li>Recommended (product specific merchandising)</li>\n\t<li>Long description and product specs</li>\n</ul>\n<h3>Page: Shopping Cart</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-6.png"><img class="alignnone size-full wp-image-832" title="magento-wireframes-6" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-6.png" alt="Magento commerce wireframe of shopping cart" width="570" height="335" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Reviews shopping choices in cart table and my edit quantity (update) and remove items, or continue to shop. In addition more (cross-sell) products are offered to shopper on the cart page. shopper may choose to use a discount if one is available or use the form to estimate shopping costs; with or without acting on the ‘discount’ and ‘estimate’ forms the shopper can ‘proceed to checkout’.\n\n<strong>Store Manager</strong> - Using back-office tools, sets up offers a cross-sells based on products visible in the shopping cart. May offer discount (coupon) code for special marketing campaigns. Other offers can be product / price based in addition to coupon based. Shipping form is based on shipping configuration in the back-office.\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Shopping cart table, editable quantity, displays any product options selected by shopper; line items include product icon name and unit price.</li>\n\t<li>Update shopping cart, when user changes quantity the pricing can be updated with this button</li>\n\t<li>Cross-sell offers on the cart page are based on products that the shopper has added to the cart</li>\n\t<li>Discount code form for redemption of coupon codes</li>\n\t<li>Shipping estimate form to help shopper to get a quote on total purchase cost</li>\n\t<li>Proceed to checkout begins the one-page checkout process, as a best practice the button is above and below the ‘fold’ (always visible when scrolling)</li>\n</ul>\n<h3>Page: One-page Checkout (step one)</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-7.png"><img class="alignnone size-full wp-image-833" title="magento-wireframes-7" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-7.png" alt="Magento Commerce wireframe of one step checkout (login / guest)" width="570" height="331" /></a>\n<h4><strong>User Experiences:</strong></h4>\n<strong>Shopper</strong> - First step in one-page checkout experience. Shopper may create a new account, login with previously created account or checkout anonymously without saving account details. Forgot password tools to recover existing account password if needed. Registered shoppers benefit from returning to check order status and history also secondary purchases are quicker as billing and shipping addresses are stored in the shopper account. Anonymous checkout is for shoppers who would rather not have a stored account.\n\n<strong>Store Manager</strong> - Manage customer accounts using the back-office tools, Customer service may reset account passwords return orders process cancellations and other order fulfillment tasks.\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Checkout Method is the fist step. Create an account, login or checkout as guest</li>\n\t<li>Steps in checkout flow are reported on screen to indicate progress and confirm shopper billing, shipping address and method as well payment method</li>\n\t<li>Options for first time customers to purchase as anonymous shopper (guest) or choose to save information in ‘My Account’ to register as a shopper</li>\n\t<li>Continue initiates the second step in the flow</li>\n\t<li>Login retrieves stored shopper details to facilitate completing of checkout forms and auto-populates the fields for ease of use.</li>\n</ul>\n<h3>Page: One-page Checkout (step two/three)</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-8.png"><img class="alignnone size-full wp-image-834" title="magento-wireframes-8" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-8.png" alt="Magento Commerce wireframe of one step checkout (billing / shipping)" width="570" height="331" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Second step in one-page checkout flow, AJAX interaction updates the page for shopper to enter or confirm billing information and choose the same address for shipping or select to enter a different shipping address. Returning customers have the fields pre-populated for easy checkout.\n\n<strong>Store Manager</strong> - Customer service may edit shopper shipping address if necessary to complete the transaction. This step is for the shopper to send their billing details. The back office collects customer data when shopper chooses to create account.\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Billing information is the second step in the AJAX experience.</li>\n\t<li>Steps in checkout flow are reported on screen to indicate progress and confirm shopper billing, shipping address and method as well payment method</li>\n\t<li>Shopper chooses whether or not to use the same address as billing to ship the purchase to or create a new address entry for shipment in the third step. When shopper elects to ship to the same address as billing the next (3rd) step is skipped as billing address is stored for the shipping address too</li>\n\t<li>Continue initiates the third or fourth step in the flow</li>\n</ul>\n<h3>Page: One-page Checkout (step four)</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-9.png"><img class="alignnone size-full wp-image-835" title="magento-wireframes-9" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-9.png" alt="Magento Commerce wireframe of one step checkout (shipping options)" width="570" height="333" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Fourth step in one-page checkout flow, (third step is address entry for shipping, very similar to billing address form). AJAX interaction updates the page for shopper to choose a shipping method. Also shopper has an option to ‘gift’ the purchase and notify the recipient by email with a ‘gift message’.\n\n<strong>Store Manager</strong> - Customer service process the order/shipment and notifies the shopper when the shipment is fulfilled using back-office tools.\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Shipping Method is the fourth (4th) step in the flow</li>\n\t<li>Steps in checkout flow are reported on screen to indicate progress and confirm shopper billing, shipping address and method as well payment method</li>\n\t<li>Option to ‘gift’ the purchase and notify the recipient by email suing the ‘gift message’</li>\n\t<li>Continue initiates the third or fifth step in the flow</li>\n</ul>\n<h3>Page: One-page Checkout (step five)</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-10.png"><img class="alignnone size-full wp-image-836" title="magento-wireframes-10" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-10.png" alt="Magento Commerce wireframe of one step checkout (payment options)" width="570" height="331" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Fifth (5th) step in one-page checkout flow. Shopper selects an available payment methods and screen is updated with entry form; shopper completes form and payment information is stored; When the shopper continues the next step is to review/confirm the order details.\n\n<strong>Store Manager</strong> - Customer service verifies payment processing depending on options set-up in the back-office for the payment gateway. Orders may be declined if fraud is suspected. The payment authorization process uses the information supplied by shopper here.\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Payment Method is the fifth (5th) step in the flow</li>\n\t<li>Steps in checkout flow are reported on screen to indicate progress and confirm shopper billing, shipping address and method as well payment method</li>\n\t<li>In this example the method chosen is Credit Card. Payment information is collected and processed with payment gateway selected in the back-office.</li>\n\t<li>Continue initiates the final ‘review’ step in the flow</li>\n</ul>\n<h3>Page: One-page Checkout (step six)</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-11.png"><img class="alignnone size-full wp-image-837" title="magento-wireframes-11" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-11.png" alt="Magento Commerce wireframe of one step checkout (review / confirm order info)" width="570" height="334" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Final (6th) step in one-page checkout flow. Shopper reviews the order details and total cost; also may follow link to edit the items the cart to add or correct quantities, etc. After reviewing the details presented shopper clicks ‘place order’ button to complete the order. Shopper will be notified with a success page in response to the order posting, or if there was any error on the transaction.\n\n<strong>Store Manager</strong> - Customer service will also be notified by email of the purchase and then manages the order with back-office tools. Various notifications are managed in the back-office for shipment notifications order cancellation, etc. Returns may also be posted in the back-office. Depending on payment gateway options store manager should process payments using gateway user interface (separate from back-office).\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Order Review is the final (6th) step in the flow</li>\n\t<li>Steps in checkout flow are reported on screen to indicate progress and confirm shopper billing, shipping address and method as well payment method</li>\n\t<li>Purchase summary of items and total cost for shopper confirmation</li>\n\t<li>Option to edit the items in the cart, add, etc.</li>\n\t<li>Place order action competes the purchase. The shopper will be notified with a success page in response to the order posting or if there was any error on the transaction</li>\n</ul>\n<h3>Page: Checkout Success</h3>\n<a href="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-12.png"><img class="alignnone size-full wp-image-838" title="magento-wireframes-12" src="http://pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes-12.png" alt="Magento Commerce wireframe of one step checkout (success / thank you page)" width="570" height="332" /></a>\n<h4>User Experiences:</h4>\n<strong>Shopper</strong> - Success page shows order number link to shopper to view and print order invoice and details. Continue shopping button provides an option to shopper to go back to the storefront and browser more products. My Orders block show customer recent purchase and give an option to add products to a now empty cart.\n\n<strong>Store Manager</strong> - Orders collected on storefront are stored in the back office tools for store management / customer service to interact with including notification of shipping, status updates (complete, pending, etc.); store manager view sales reports, status of orders, inventory, merchandising, storefront content, product details and many other tasks to successfully interact with online shoppers.\n\n<em>Interactive / Elements:</em>\n<ul>\n\t<li>Order Completed, Link to order details and button to continue shopping</li>\n\t<li>Mini-cart is now empty following competed order</li>\n\t<li>My Orders block shows recent purchases to allow quick re-order of products</li>\n</ul>	Building an ecommerce site and considering magento commerce as the code base?\nWell then, I have a treat for you. I've decided to share my **magento commerce\nwireframes**	wireframing-templates-for-magento-commerce-with-user-experience-notes	Wireframing Templates for Magento Commerce With User Experience Notes	2011-07-13	2015-05-07 17:03:21.375972	2015-05-07 17:03:21.375972	1	'/wp-content/uploads/2011/07/magento-wireframes.pdf)':60C '/wp-content/uploads/2011/07/magento-wireframes.zip)':72C '1':50C '2':61C '3rd':1326C '4th':1440C '5th':1504C,1594C '6th':1666C,1809C 'accompani':82C,121C 'account':973C,978C,984C,992C,1022C,1035C,1040C,1051C,1072C,1119C,1248C 'act':776C 'action':462C,515C,1859C 'ad':309C,898C 'add':229C,364C,387C,518C,669C,1693C,1855C,1939C 'addit':740C,828C 'address':1016C,1094C,1189C,1199C,1219C,1277C,1293C,1305C,1321C,1332C,1338C,1371C,1379C,1461C,1615C,1830C 'adob':64C 'ajax':1172C,1259C,1381C 'allow':330C,2029C 'also':391C,1007C,1393C,1682C,1740C,1775C 'altern':548C,572C,656C 'alway':946C 'amount':467C 'and/or':45C,339C 'annot':80C,119C 'anonym':981C,1023C,1109C 'area':260C,295C,505C 'associ':424C 'attribut':341C,356C,416C,449C,609C,653C 'author':1578C 'auto':1146C 'auto-popul':1145C 'avail':551C,636C,764C,1515C 'back':408C,597C,692C,793C,842C,1044C,1238C,1430C,1562C,1644C,1755C,1765C,1781C,1800C,1919C,1956C 'back-offic':407C,596C,691C,792C,841C,1043C,1429C,1561C,1643C,1754C,1764C,1780C,1799C 'badg':236C,266C 'banner':232C,265C 'bar':191C,247C 'base':21B,221C,417C,650C,803C,826C,831C,835C,891C 'begin':704C,927C 'benefit':998C 'best':936C 'bill':1013C,1092C,1183C,1235C,1251C,1275C,1295C,1323C,1331C,1378C,1459C,1613C,1828C 'block':263C,269C,307C,1929C,2024C 'brand':239C 'breadcrumb':493C 'brows':164C 'browser':1924C 'build':10B,108C,147C 'bundl':284C 'button':674C,881C,939C,1707C,1911C,2009C 'campaign':819C 'cancel':1056C,1771C 'card':1630C 'cart':207C,276C,366C,380C,390C,394C,458C,474C,480C,488C,520C,523C,590C,671C,678C,701C,717C,725C,752C,810C,847C,869C,888C,901C,1691C,1854C,1945C,2015C 'categori':174C,199C,227C,278C,282C,313C,326C,338C,346C,413C,427C,438C,447C 'chang':661C,872C 'check':1002C 'checkout':592C,705C,788C,926C,932C,954C,966C,980C,1024C,1064C,1075C,1080C,1142C,1158C,1170C,1210C,1263C,1354C,1366C,1447C,1497C,1510C,1601C,1659C,1672C,1816C,1888C 'choic':432C,723C 'choos':756C,1113C,1186C,1245C,1285C,1389C 'chosen':1627C 'click':39C,482C,660C,675C,1704C 'clickabl':511C 'client':94C,133C 'cms':305C 'code':20B,815C,903C,909C 'collect':1240C,1634C,1949C 'commerc':5A,17B,37B,111C,150C 'compet':1860C,2020C 'complet':1140C,1223C,1526C,1709C,1973C,2003C 'configur':289C,525C,648C,838C 'confirm':1090C,1182C,1273C,1457C,1611C,1826C,1846C 'consid':15B 'content':215C,311C,1987C 'context':444C 'continu':736C,1125C,1340C,1483C,1536C,1646C,1909C,2011C 'copyright':298C 'correct':1695C 'cost':772C,923C,1681C,1843C 'coupon':814C,830C,908C 'creat':373C,970C,977C,1070C,1247C,1302C 'credit':1629C 'cross':743C,801C,883C 'cross-sel':742C,800C,882C 'custom':1039C,1047C,1105C,1201C,1213C,1241C,1414C,1548C,1737C,1931C,1962C 'data':1242C 'decid':32B 'decis':568C 'declin':1571C 'defin':415C 'depend':1553C,1783C 'descript':545C,605C,638C,711C 'description/specifics':559C 'desir':337C 'detail':513C,532C,536C,543C,577C,632C,668C,985C,1137C,1236C,1545C,1678C,1701C,1908C,1989C,2007C 'differ':1197C 'direct':697C 'discount':760C,779C,813C,902C 'display':335C,464C,553C,851C 'download':46C 'dynam':268C 'eas':1151C 'easi':1209C 'ecommerc':12B 'edit':396C,729C,849C,1216C,1687C,1849C 'elect':1315C 'element':238C,434C,624C,845C,1063C,1250C,1434C,1588C,1803C,2001C 'email':641C,1407C,1478C,1744C 'empti':1944C,2018C 'encourag':591C 'enter':1180C,1195C 'entri':1306C,1372C,1523C 'error':1731C,1883C 'establish/inform':92C,131C 'estim':770C,781C,911C 'etc':228C,304C,1697C,1772C,1856C,1975C 'exampl':1624C 'exist':991C 'expect':103C,142C 'experi':8A,98C,137C,157C,317C,538C,719C,958C,967C,1162C,1260C,1358C,1501C,1663C,1891C 'facilit':429C,1139C 'featur':171C,277C,287C,665C 'feed':500C 'field':1149C,1204C 'fifth':1488C,1503C,1593C 'file':49C,66C 'fill':486C 'filter':328C,435C 'final':1649C,1665C,1808C 'find':453C 'first':960C,1103C 'fist':1068C 'five':1499C 'flow':1081C,1132C,1171C,1264C,1349C,1367C,1444C,1448C,1492C,1511C,1598C,1602C,1654C,1673C,1813C,1817C 'fold':945C 'follow':74C,113C,192C,1684C,2019C 'footer':294C 'forgot':986C 'form':768C,782C,833C,904C,912C,1143C,1380C,1524C,1527C 'four':1356C 'fourth':1345C,1360C,1439C 'fraud':1573C 'friend':643C 'fulfil':1060C,1427C 'gateway':1567C,1639C,1786C,1794C 'get':917C 'gift':1399C,1410C,1470C,1481C 'give':1935C 'go':1918C 'graphic':230C 'guest':1077C,1111C 'help':451C,914C 'histori':1006C 'hold':262C 'home':155C 'icon':862C 'illustr':65C 'imag':240C,279C,508C,573C,608C,634C,657C,663C 'includ':327C,603C,860C,1967C 'indic':1087C,1270C,1454C,1608C,1823C 'inform':235C,602C,1116C,1184C,1252C,1530C,1582C,1632C 'initi':1126C,1341C,1484C,1647C 'input':188C,563C,673C 'interact':200C,237C,249C,251C,433C,459C,560C,570C,623C,844C,1062C,1173C,1249C,1382C,1433C,1587C,1802C,1965C,1996C,2000C 'interfac':1796C 'inventori':615C,1984C 'invoic':1906C 'item':478C,734C,859C,1689C,1840C,1851C 'like':204C,270C 'limit':334C 'line':858C 'link':280C,297C,639C,1685C,1898C,2004C 'list':321C,347C,372C,628C 'list/search':358C 'login':374C,974C,1073C,1133C 'long':558C,710C 'magento':4A,16B,36B,56C,68C,110C,149C 'magento-wirefram':55C,67C 'main':504C,633C,662C 'make':565C 'manag':213C,216C,405C,594C,614C,790C,1037C,1038C,1212C,1413C,1547C,1736C,1750C,1761C,1789C,1947C,1961C,1977C 'mani':1991C 'market':223C,818C 'may':343C,363C,399C,422C,611C,755C,811C,969C,1049C,1215C,1569C,1683C,1774C 'merchandis':419C,620C,709C,1985C 'messag':1411C,1482C 'method':1065C,1096C,1100C,1279C,1283C,1392C,1436C,1463C,1467C,1517C,1590C,1617C,1621C,1626C,1832C,1836C 'mini':206C,275C,379C,393C,457C,469C,522C,589C,677C,2014C 'mini-cart':205C,274C,378C,456C,2013C 'multipl':161C,426C,607C 'name':635C,863C 'navig':194C,243C,245C,296C,329C,436C,491C 'necessari':1221C 'need':995C 'new':972C,1304C 'newslett':300C 'next':1325C,1538C 'note':9A,87C,126C 'notif':1759C,1769C,1968C 'notifi':682C,1403C,1420C,1474C,1715C,1742C,1867C 'number':1897C 'object':224C,420C 'offer':226C,619C,747C,798C,812C,821C,885C 'offic':409C,598C,693C,794C,843C,1045C,1239C,1431C,1563C,1645C,1756C,1766C,1782C,1801C,1957C 'one':762C,930C,952C,956C,964C,1156C,1168C,1352C,1364C,1495C,1508C,1657C,1670C 'one-pag':929C,951C,963C,1155C,1167C,1351C,1363C,1494C,1507C,1656C,1669C 'onlin':106C,145C,152C,1998C 'option':162C,291C,496C,527C,547C,610C,645C,854C,1101C,1397C,1468C,1555C,1787C,1847C,1914C,1937C 'options/quantity':562C 'order':1003C,1054C,1059C,1544C,1568C,1677C,1706C,1711C,1724C,1752C,1770C,1804C,1858C,1876C,1896C,1905C,1928C,1948C,1983C,2002C,2006C,2021C,2023C,2033C 'order/shipment':1418C 'organ':411C 'page':154C,283C,312C,442C,489C,514C,533C,534C,686C,702C,715C,753C,889C,931C,950C,953C,965C,1154C,1157C,1169C,1176C,1350C,1353C,1365C,1385C,1493C,1496C,1509C,1655C,1658C,1671C,1719C,1871C,1887C,1894C 'pagin':361C,494C,507C 'password':987C,993C,1052C 'payment':1099C,1282C,1466C,1516C,1529C,1551C,1566C,1577C,1589C,1620C,1631C,1638C,1785C,1792C,1835C 'pdf':44C,51C 'pend':1974C 'pixelhandler.com':59C,71C 'pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes.pdf)':58C 'pixelhandler.com/wp-content/uploads/2011/07/magento-wireframes.zip)':70C 'place':1705C,1857C 'polici':299C 'popul':1147C,1207C 'posit':587C 'post':1725C,1777C,1877C 'practic':937C 'pre':1206C 'pre-popul':1205C 'present':159C,319C,540C,1702C 'previous':976C 'price':352C,550C,606C,613C,825C,866C,875C 'print':1904C 'proceed':786C,924C 'process':933C,1055C,1416C,1552C,1579C,1636C,1791C 'product':183C,258C,286C,288C,323C,340C,377C,388C,401C,412C,421C,446C,455C,472C,490C,501C,535C,542C,556C,584C,601C,618C,627C,631C,644C,649C,652C,659C,707C,713C,745C,805C,824C,853C,861C,893C,1926C,1940C,1988C,2035C 'progress':1088C,1271C,1455C,1609C,1824C 'project':151C 'promin':586C 'promot':233C,254C,310C 'promotions/banners/products':172C 'provid':1912C 'purchas':517C,546C,567C,922C,1009C,1107C,1299C,1401C,1472C,1747C,1837C,1862C,1933C,2027C 'quantiti':465C,672C,730C,850C,873C,1696C 'quick':2030C 'quicker':1011C 'quot':919C 'rather':1030C 're':2032C 're-ord':2031C 'recent':208C,271C,582C,625C,1932C,2026C 'recipi':1405C,1476C 'recommend':706C 'recov':990C 'redempt':906C 'regist':996C,1121C 'relat':555C,617C 'relev':454C 'remind':579C 'remov':400C,477C,733C 'render':502C 'report':1083C,1266C,1450C,1604C,1819C,1980C 'requir':646C 'reset':1050C 'respons':1721C,1873C 'result':185C,315C,350C,359C,441C 'retriev':1134C 'return':1000C,1053C,1200C,1773C 'review':721C,1650C,1675C,1699C,1805C 'review/confirm':1542C 'rss':499C 'sale':1979C 'save':368C,376C,983C,1115C 'scene':220C 'screen':1085C,1268C,1452C,1519C,1606C,1821C 'scroll':949C 'search':177C,180C,190C,210C,246C,314C,349C,440C 'second':1128C,1164C,1255C 'secondari':1008C 'section':256C 'select':855C,1193C,1513C,1640C 'sell':744C,802C,884C 'send':1233C 'separ':1797C 'servic':1048C,1214C,1415C,1549C,1738C,1963C 'set':689C,796C,1557C 'set-up':1556C 'setup':616C 'share':34B 'ship':832C,837C,910C,1015C,1093C,1191C,1198C,1218C,1276C,1297C,1317C,1337C,1374C,1391C,1435C,1460C,1614C,1829C,1970C 'shipment':1308C,1425C,1768C 'shop':431C,487C,700C,716C,722C,738C,771C,809C,846C,868C,1910C,2012C 'shopper':158C,179C,318C,342C,362C,452C,539C,580C,720C,749C,754C,784C,857C,896C,915C,959C,968C,997C,1021C,1027C,1091C,1110C,1124C,1136C,1163C,1178C,1217C,1231C,1244C,1274C,1284C,1314C,1359C,1387C,1394C,1422C,1458C,1502C,1512C,1525C,1535C,1585C,1612C,1664C,1674C,1703C,1712C,1827C,1845C,1864C,1892C,1900C,1916C,1999C 'short':544C,637C 'show':1895C,1930C,2025C 'sidebar':259C,382C,578C,630C 'sign':302C 'sign-up':301C 'similar':1376C 'site':13B 'six':1661C 'skip':1329C 'slide':252C 'slideshow':170C 'sort':344C,495C 'sortabl':355C 'spec':714C 'special':817C 'specif':325C,445C,708C 'status':1004C,1971C,1981C 'step':955C,961C,1069C,1078C,1129C,1159C,1165C,1227C,1256C,1261C,1312C,1327C,1346C,1355C,1361C,1369C,1441C,1445C,1489C,1498C,1505C,1539C,1595C,1599C,1651C,1660C,1667C,1810C,1814C 'store':107C,146C,165C,202C,212C,404C,593C,789C,1018C,1034C,1036C,1135C,1211C,1334C,1412C,1532C,1546C,1735C,1788C,1946C,1953C,1960C,1976C 'storefront':153C,244C,1922C,1951C,1986C 'structur':306C 'su':1479C 'subscrib':497C 'success':1718C,1870C,1889C,1893C,1995C 'suggest':184C,211C,250C 'summari':77C,116C,1838C 'suppli':1583C 'support':569C 'suspect':1575C 'tab':552C 'tabl':726C,848C 'taken':530C 'target':166C,255C 'task':1061C,1993C 'templat':2A,48C,54C,85C,124C 'third':1311C,1343C,1368C,1486C 'time':1104C 'titl':510C,604C 'tool':217C,410C,599C,795C,988C,1046C,1432C,1757C,1958C 'top':196C,242C,684C 'total':466C,921C,1680C,1842C 'tradit':193C 'transact':1225C,1734C,1886C 'treat':27B 'two/three':1160C 'type':169C 'unit':865C 'upcom':225C 'updat':219C,384C,521C,600C,612C,676C,731C,867C,878C,1174C,1383C,1521C,1972C 'use':90C,129C,214C,406C,443C,595C,758C,766C,791C,1041C,1153C,1290C,1428C,1580C,1793C 'user':7A,97C,136C,156C,168C,187C,316C,331C,386C,398C,461C,475C,528C,537C,680C,694C,718C,871C,957C,1161C,1357C,1500C,1662C,1795C,1890C 'various':167C,430C,1758C 've':31B 'verifi':1550C 'view':42C,198C,209C,272C,470C,485C,549C,571C,576C,583C,626C,655C,667C,1902C,1978C 'visibl':806C,947C 'well':22B,403C,1098C,1281C,1465C,1619C,1834C 'whether':1286C 'widget':203C 'wirefram':1A,38B,53C,57C,69C,84C,123C 'wish':371C 'within':324C 'without':775C,982C 'would':1029C 'zip':62C 'zoom':574C,664C	published	pixelhandler
74	<iframe src="https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fjodi.hoogenhoff%2Fvideos%2F10155796907210789%2F&show_text=0&width=560" width="560" height="315" style="border:none;overflow:hidden" scrolling="no" frameborder="0" allowTransparency="true" allowFullScreen="true"></iframe>	Today we met with Peter and Jodi and discussed network marketing on a facebook live video	why-network-marketing	Why Network Marketing	2017-10-21	2017-10-21 19:11:53.464345	2017-10-21 19:37:56.106647	3	'discuss':12B 'facebook':17B 'jodi':10B 'live':18B 'market':3A,14B 'met':6B 'network':2A,13B 'peter':8B 'today':4B 'video':19B	published	billandlorraine
59	#### **'Bill's Internet Marketing Report' **- Another good reason for\nbusinesses to blog\n\n**- **_Strategies and topics relating to the happenings I experience in the race of marketing, publishing and selling on the web._\n\nI'm currently employed by a medical equipment manufacturer and distributor (I\nfreelance too) and last month some very interesting news was broadcast on news\nradio and the internet about the LA Laker's own Kobe Bryant and his back\ninjury.\n\n> [From latimes.com -- May 13, 2008](http://www.latimes.com/sports/la-sp-\nkobeback13-2008may13,0,3003048.story)\n\n\n"I tried to play and make drives to the basket where I could kind of withstand\nthe pain without the back completely spasming and then put the next game\nreally in jeopardy," Bryant said.\n\n> On Monday he addressed reporters while standing, as he did during Sunday's\npostgame news conference. Bryant said he would receive round-the-clock\ntreatment.\n\n> His regimen includes ice, heat, massage and stretching. Bryant also held his\nelectrical stimulation device by his side, saying he would basically sleep\nwith it the next couple days.\n\nThe reason why this news was inspiring for my employer is that the company's\nmain product offering does just what Kobe's medical device does and more. This\nnews became a great way for the company to share with clients about just how\ngood their technology really is; also sharing the story about Kobe saying "he\nwould basically sleep with it the next couple days." In following up on the\nreport, Kobe did not miss a game during this series and continued to score\nvery well, while the Lakers moved on to the next playoff series.\n\nThe reason why this news was so valuable to blog about is that it allowed the\n[company's news blog](http://www.vqorthocare.com/blog/vq-news/kobe-bryant-\nelectrical-stimulation-for-recovery-back-spasms/) to add valuable content\nsupporting the site's search engine optimizations (SEO) objectives. The\ngeneral public may use different variations of the words that a business uses\nto describe its offerings. The blog format allows for a very quick response to\noptimizing the companies Web site with the terms used by the general public\nand reporters. The best benefit is that the reported did report on Kobe\ntalking about a medical condition that my employee has a solution for, back\nspasms!\n\nOnce the blog was posted, the same day as multiple news agencies reported on\nthe injury I sent off an email to a targeted group of clients that would be\nvery impressed with the technology and hearing that a professional basketball\nplayer and NBA MVP says so. That perspective was a lot better than I could\nsay, even though I used the technology after a broken leg and shoulder and\nloved how well the medical device blocked my pain.\n\nThe return on investment for this blog and email blast was that conversation\nwere opened up with key clients who needed to learn more about the technology\nand how it fit in within the sports profession.\n\n_Sites referenced:_\n\n  * [http://www.latimes.com/sports/](http://www.latimes.com/sports/la-sp-kobeback13-2008may13,0,3003048.story)\n  * [http://www.vqorthocare.com/blog/](http://www.vqorthocare.com/blog/vq-news/kobe-bryant-electrical-stimulation-for-recovery-back-spasms/)  \n\n#### **'Highlights in Social Media' **- Starting up an online social network\nwith NING\n\n**- **_The Internet is bringing people together and making connections for personal and professional development. Being involved socially online is a way to build new relationships with like-minded individuals._\n\nRecently I became interested in social media and networking with other like\nminded Internet professionals. My favorite online social networks are\nlinkedin.com and twitter.com, I use facebook.com and a few others less often.\nWhen I read about ning.com in FastCompany magazine and also heard about\nning.com again during a local meetup in OC. This got my created juices flowing\nand since I enjoy networking with other professionals, and also have spent\nmuch of my career flying solo (as an in-house person or working from home), I\nwas inspired to kick off a new network, [refreshoc.com](http://refreshoc.com)\nin alignment with the '[Refreshing Cities](http://refreshingcities.com/)'\nconcept… Refresh is a community of designers and developers working to refresh\nthe creative, technical, and professional culture of New Media endeavors in\ntheir areas. Promoting design,technology, usability, and standards.\n\nI am interested to find out how many other Orange County Internet\nprofessionals would be interested in networking and building a local community\nfor sharing experiences on creating the Web that we surf on. At the end of\n2007 I attended a PodCamp in Ontario (SoCal); there I was very interested in\nhow people gather around a common interest or passion. I was able to learn\nfrom others who are doing what I wanted to learn, just by attending and\nparticipating in the unconference style of gathering.\n\nOne concept that I would like to discuss on Refresh OC is the possibility of\ngrowing a community of OC Internet professionals who would like to attend a\nfacilitated, participant-driven gathering centered around building the\nInternet; where professionals share, learn and grow in an open environment.\nPerhaps this will happen once discussions begin on the topic of planning\nevents and organizing discussions, demos and interaction from participants\nright Here in OC. Perhaps each event could have a 50/50 raffle or a more\ncreative way of raising funds to benefit a local cause.\n\n_Sites referenced: _\n\n  * [http://refreshingcities.com/](http://refreshingcities.com/)\n  * [http://refreshoc.com](http://refreshoc.com)\n  * [http://www.linkedin.com/in/billheaton](http://www.linkedin.com/in/billheaton)\n  * [http://twitter.com/pixelhandler](http://twitter.com/pixelhandler)\n  * [http://www.facebook.com/](http://www.facebook.com/profile.php?id=698254607) _(you may need a facebook account)_   \n\n\n_Found on the PodSafeMusicNetwork: _ Listen the track titled, _Surfin the\nBlast Wave_ by [Nony Zero](http://www.myspace.com/nonyzero) - at the end of\nthe broadcast!	Internet Marketing Report and Social Media Highlights Newsletter - June\n2008	reasons-for-business-blogging-and-kicking-off-a-local-socal-network	Reasons for Business Blogging and Kicking Off a Local Socal Network	2008-06-06	2015-05-07 17:03:21.546917	2015-05-07 17:03:21.546917	1	'/)''':676C '/](http://refreshingcities.com/)':893C '/](http://www.facebook.com/profile.php?id=698254607)':904C '/blog/](http://www.vqorthocare.com/blog/vq-news/kobe-bryant-electrical-stimulation-for-recovery-back-spasms/)':527C '/blog/vq-news/kobe-bryant-':316C '/in/billheaton](http://www.linkedin.com/in/billheaton)':898C '/nonyzero)':928C '/pixelhandler](http://twitter.com/pixelhandler)':901C '/sports/](http://www.latimes.com/sports/la-sp-kobeback13-2008may13,0,3003048.story)':524C '/sports/la-sp-':102C '0':106C '13':98C '2007':746C '2008':21B,99C '2008may13':105C '3003048.story':107C '50/50':874C 'abl':771C 'account':910C 'add':325C 'address':145C 'agenc':416C 'align':669C 'allow':308C,358C 'also':177C,246C,612C,638C 'anoth':27C 'area':701C 'around':763C,829C 'attend':748C,786C,821C 'back':93C,128C,322C,403C 'basic':189C,255C 'basket':117C 'basketbal':445C 'becam':227C,572C 'begin':849C 'benefit':382C,885C 'best':381C 'better':457C 'bill':22C 'blast':493C,921C 'block':481C 'blog':4A,33C,303C,313C,356C,407C,490C 'bring':543C 'broadcast':76C,934C 'broken':470C 'bryant':90C,140C,158C,176C 'build':562C,727C,830C 'busi':3A,31C,349C 'career':644C 'caus':888C 'center':828C 'citi':673C 'client':237C,431C,502C 'clock':166C 'common':765C 'communiti':681C,730C,812C 'compani':210C,233C,310C,367C 'complet':129C 'concept':677C,796C 'condit':395C 'confer':157C 'connect':548C 'content':327C 'continu':279C 'convers':496C 'could':120C,460C,871C 'counti':718C 'coupl':195C,261C 'creat':626C,735C 'creativ':690C,879C 'cultur':694C 'current':56C 'day':196C,262C,412C 'demo':859C 'describ':352C 'design':683C,703C 'develop':553C,685C 'devic':182C,221C,480C 'differ':342C 'discuss':802C,848C,858C 'distributor':64C 'drive':114C 'driven':826C 'electr':180C,318C 'electrical-stimulation-for-recovery-back-spasm':317C 'email':425C,492C 'employ':57C,206C 'employe':398C 'end':744C,931C 'endeavor':698C 'engin':333C 'enjoy':632C 'environ':842C 'equip':61C 'even':462C 'event':855C,870C 'experi':42C,733C 'facebook':909C 'facebook.com':596C 'facilit':823C 'fastcompani':609C 'favorit':586C 'find':712C 'fit':514C 'fli':645C 'flow':628C 'follow':264C 'format':357C 'found':911C 'freelanc':66C 'fund':883C 'game':136C,274C 'gather':762C,794C,827C 'general':338C,376C 'good':28C,241C 'got':624C 'great':229C 'group':429C 'grow':810C,838C 'happen':40C,846C 'hear':441C 'heard':613C 'heat':172C 'held':178C 'highlight':18B,528C 'home':656C 'hous':651C 'ice':171C 'impress':436C 'in-hous':649C 'includ':170C 'individuals._':569C 'injuri':94C,420C 'inspir':203C,659C 'interact':861C 'interest':73C,573C,710C,723C,758C,766C 'internet':12B,24C,82C,541C,583C,719C,815C,832C 'invest':487C 'involv':555C 'jeopardi':139C 'juic':627C 'june':20B 'key':501C 'kick':6A,661C 'kind':121C 'kobe':89C,218C,251C,269C,390C 'kobeback13':104C 'kobeback13-2008may13':103C 'la':85C 'laker':86C,286C 'last':69C 'latimes.com':96C 'learn':506C,773C,783C,836C 'leg':471C 'less':601C 'like':567C,581C,800C,819C 'like-mind':566C 'linkedin.com':591C 'listen':915C 'local':9A,619C,729C,887C 'lot':456C 'love':475C 'm':55C 'magazin':610C 'main':212C 'make':113C,547C 'mani':715C 'manufactur':62C 'market':13B,25C,47C 'massag':173C 'may':97C,340C,906C 'media':17B,531C,576C,697C 'medic':60C,220C,394C,479C 'meetup':620C 'mind':568C,582C 'miss':272C 'monday':143C 'month':70C 'move':287C 'much':641C 'multipl':414C 'mvp':449C 'nba':448C 'need':504C,907C 'network':11A,537C,578C,589C,633C,665C,725C 'new':563C,664C,696C 'news':74C,78C,156C,201C,226C,298C,312C,415C 'newslett':19B 'next':135C,194C,260C,291C 'ning':539C 'ning.com':607C,615C 'noni':924C 'object':336C 'oc':622C,805C,814C,867C 'offer':214C,354C 'often':602C 'one':795C 'onlin':535C,557C,587C 'ontario':752C 'open':498C,841C 'optim':334C,365C 'orang':717C 'organ':857C 'other':600C,775C 'pain':125C,483C 'particip':788C,825C,863C 'participant-driven':824C 'passion':768C 'peopl':544C,761C 'perhap':843C,868C 'person':550C,652C 'perspect':453C 'plan':854C 'play':111C 'player':446C 'playoff':292C 'podcamp':750C 'podsafemusicnetwork':914C 'possibl':808C 'post':409C 'postgam':155C 'product':213C 'profess':519C 'profession':444C,552C,584C,636C,693C,720C,816C,834C 'promot':702C 'public':339C,377C 'publish':48C 'put':133C 'quick':362C 'race':45C 'radio':79C 'raffl':875C 'rais':882C 'read':605C 'realli':137C,244C 'reason':1A,29C,198C,295C 'receiv':162C 'recent':570C 'recoveri':321C 'referenc':521C,890C 'refresh':672C,678C,688C,804C 'refreshingcities.com':675C,892C 'refreshingcities.com/)''':674C 'refreshingcities.com/](http://refreshingcities.com/)':891C 'refreshoc.com':666C,667C,894C,895C 'regimen':169C 'relat':37C 'relationship':564C 'report':14B,26C,146C,268C,379C,386C,388C,417C 'respons':363C 'return':485C 'right':864C 'round':164C 'round-the-clock':163C 'said':141C,159C 'say':186C,252C,450C,461C 'score':281C 'search':332C 'sell':50C 'sent':422C 'seo':335C 'seri':277C,293C 'share':235C,247C,732C,835C 'shoulder':473C 'side':185C 'sinc':630C 'site':330C,369C,520C,889C 'sleep':190C,256C 'socal':10A,753C 'social':16B,530C,536C,556C,575C,588C 'solo':646C 'solut':401C 'spasm':130C,323C,404C 'spent':640C 'sport':518C 'stand':148C 'standard':707C 'start':532C 'stimul':181C,319C 'stori':249C 'strategi':34C 'stretch':175C 'style':792C 'sunday':153C 'support':328C 'surf':740C 'surfin':919C 'talk':391C 'target':428C 'technic':691C 'technolog':243C,439C,467C,510C,704C 'term':372C 'though':463C 'titl':918C 'togeth':545C 'topic':36C,852C 'track':917C 'treatment':167C 'tri':109C 'twitter.com':593C,900C 'twitter.com/pixelhandler](http://twitter.com/pixelhandler)':899C 'unconfer':791C 'usabl':705C 'use':341C,350C,373C,465C,595C 'valuabl':301C,326C 'variat':343C 'want':781C 'wave':922C 'way':230C,560C,880C 'web':368C,737C 'web._':53C 'well':283C,477C 'within':516C 'without':126C 'withstand':123C 'word':346C 'work':654C,686C 'would':161C,188C,254C,433C,721C,799C,818C 'www.facebook.com':903C 'www.facebook.com/](http://www.facebook.com/profile.php?id=698254607)':902C 'www.latimes.com':101C,523C 'www.latimes.com/sports/](http://www.latimes.com/sports/la-sp-kobeback13-2008may13,0,3003048.story)':522C 'www.latimes.com/sports/la-sp-':100C 'www.linkedin.com':897C 'www.linkedin.com/in/billheaton](http://www.linkedin.com/in/billheaton)':896C 'www.myspace.com':927C 'www.myspace.com/nonyzero)':926C 'www.vqorthocare.com':315C,526C 'www.vqorthocare.com/blog/](http://www.vqorthocare.com/blog/vq-news/kobe-bryant-electrical-stimulation-for-recovery-back-spasms/)':525C 'www.vqorthocare.com/blog/vq-news/kobe-bryant-':314C 'zero':925C	published	pixelhandler
16	## What is a Finite-State Machine?\n\nIllustration from [Wikipedia][3] -\n\n\n> It is conceived as an abstract machine that can be in one of a finite number of states. The machine is in only one state at a time; the state it is in at any given time is called the current state. It can change from one state to another when initiated by a triggering event or condition; this is called a transition. A particular FSM is defined by a list of its states, and the triggering condition for each transition. \n\n> An example of a very simple mechanism that can be modeled by a state machine is a turnstile. \n\n> A turnstile, used to control access to subways and amusement park rides, is a gate with three rotating arms at waist height, one across the entryway. Initially the arms are locked, barring the entry, preventing customers from passing through. Depositing a coin or token in a slot on the turnstile unlocks the arms, allowing them to rotate by one-third of a complete turn, allowing a single customer to push through. After the customer passes through, the arms are locked again until another coin is inserted.\n\n> The turnstile has two states: **Locked** and **Unlocked**. There are two inputs that affect its state: putting a coin in the slot (*coin*) and pushing the arm (*push*). In the locked state, pushing on the arm has no effect; no matter how many times the input push is given it stays in the locked state. Putting a coin in, that is giving the machine a coin input, shifts the state from **Locked** to **Unlocked**. In the unlocked state, putting additional coins in has no effect; that is, giving additional coin inputs does not change the state. However, a customer pushing through the arms, giving a push input, shifts the state back to **Locked**.\n\n\n## A Turnstile as an Ember application\n\n### Demo\n\nExample Turnstile application built with Ember see in working at [jsbin][4], source code at: [github][1]\n\n\n### Templates\n\n**templates/application**\n\n    <script type="text/x-handlebars">\n      {{outlet}}\n    </script>\n\n**templates/index**\n\n    <script type="text/x-handlebars" data-template-name="index">\n      <button {{ action 'coin' controller }}>Coin</button>\n      <button {{ action 'push' controller }}>Push</button>\n      <h3>{{ display }}</h3>\n      <p>\n        Turnstile is: {{ currentState }}<br/>\n        Total Coins: {{ totalCoins }}\n      </p>\n    </script>    \n\n### Application\n\n**javascript/app.js**\n\n    var App = Ember.Application.create({\n      ready: function(){\n        App.turnstileManager = App.TurnstileManager.create({\n          enableLogging: true\n        });\n      }\n    });\n    \n    App.IndexRoute = Ember.Route.extend({\n      setupController: function( controller ){\n        var manager = App.turnstileManager;\n        manager.set( 'controller', controller );\n        controller.send( 'state', manager.get( 'currentState.name' ) );\n      },\n    \n      events: {\n        coin: function( controller ){\n          App.turnstileManager.send( 'coin', controller );\n        },\n    \n        push: function( controller ){\n          App.turnstileManager.send( 'push', controller );\n        }\n      }\n    });\n    \n    App.IndexController = Ember.Controller.extend({\n      totalCoins: 0,\n    \n      display: 'Please insert coin.',\n    \n      onCoin: function( display, isAccepted ){\n        this.set( 'display', display );\n        if( isAccepted ){\n          this.incrementProperty( 'totalCoins' );\n        }\n      },\n    \n      onPush: function( display ){\n        this.set( 'display', display );\n      },\n    \n      onSetup: function( display ){\n        this.set( 'display', display );\n      },\n    \n      state: function( name ){\n        this.set( 'currentState', name );\n      }\n    });\n    \n    App.BaseState = Ember.State.extend({\n      unhandledEvent: function( manager, eventName ) {\n        console.log( manager.toString() + ': unhandledEvent with name ' + eventName );\n      },\n    \n      enter: function( /*manager*/ ){},\n    \n      setup: function( manager, context ){\n        var controller = ( context ) ? context : manager.get('controller');\n        if( controller ){\n          controller.send( 'state', manager.get('currentState.name') );\n          controller.send( 'onSetup', 'Please insert coin.' );\n        }\n      },\n    \n      exit: function( /*manager*/ ){}\n    });\n    \n    App.TurnstileManager =  Ember.StateManager.extend({\n      initialState: 'locked',\n    \n      locked: App.BaseState.extend({\n        coin: function( manager, context ){\n          context.send( 'onCoin', 'Payment accepted.', true );\n          manager.transitionTo( 'unlocked', context );\n        },\n    \n        push: function( manager, context ){\n          context.send( 'onPush', 'Coin required, please insert coin.');\n        }\n      }),\n    \n      unlocked: App.BaseState.extend({\n        setup: function( manager, context ){\n          context.send( 'state', manager.get( 'currentState.name' ) );\n          context.send( 'onSetup', 'Please proceed.');\n        },\n    \n        coin: function( manager, context ){\n          context.send( 'onCoin', 'No coin needed. Try pushing.', false );\n        },\n    \n        push: function( manager, context ){\n          manager.transitionTo( 'inUse', context );\n        },\n    \n        inUse: App.BaseState.extend({\n          setup: function( manager, context ){\n            context.send( 'state', manager.get( 'currentState.name' ) );\n            context.send( 'onSetup', 'Please wait.');\n            Ember.run.later(function(){\n              manager.transitionTo( 'locked', context );\n            }, 1500);\n          }\n        })\n      })\n    });\n\n## Slide Deck as an Ember application\n\nThis browser app was created for a tech talk at the <http://www.meetup.com/Ember-SC/> meetup group. We discussed [Ember.StateManager in July 2013](http://www.meetup.com/Ember-SC/events/125461412/)\n\nThe ember slide deck app can run in two modes, `idling` and `playing`. Slides that have a time value (`milliseconds` property) automatically enter the `playing state`. When the `next` action is triggered by the `keyPress` event for a slide with no `milliseconds` the app transitions back to `idling`. Every slide has a URL so app state is managed with Ember.Router but states for playing and idling depend on user's behavior and the states exist along side the state represented in the URLs.\n\nIn the sample `fixtures.js` file the slides in the two sections automatically play then stop before the next section.\n\n### Templates\n\n**templates/application**\n\n    <script type="text/x-handlebars">\n      {{outlet}}\n    </script>\n\n**templates/slide-deck/slide.html**\n\n    <script type="text/x-handlebars" id="slide">\n      <img {{bindAttr src="model.filename"}}>\n      <input type="text" value="">\n    </script>    \n\n**templates/slide-deck/slides.html**\n\n    <script type="text/x-handlebars" id="slides">\n      {{#each model}}\n        {{#linkTo 'slide' this}}\n          <img {{bindAttr src="filename"}}>\n        {{/linkTo}}\n      {{/each}}\n    </script>\n\n\n### Application\n\n**javascript/slide-deck/app.js**\n\n    // Application\n    App = Ember.Application.create({\n      ready: function(){\n        App.stateMachine = App.StateMachine.create({\n          //enableLogging: true\n        });\n      }\n    });\n    \n    // Model\n    App.Store = DS.Store.extend({\n      revision: 12,\n      adapter: 'DS.FixtureAdapter'\n    });\n    \n    App.Slide = DS.Model.extend({\n      filename: DS.attr('string'),\n      milliseconds: DS.attr('number')\n    });\n    \n    // States\n    App.StateMachine = Ember.StateManager.extend({\n      initialState: 'idling',\n      idling: Ember.State.extend({\n        next: function (manager, context) {\n          var milliseconds = context.get('currentModel.milliseconds');\n          if (milliseconds && milliseconds !== 0) {\n            manager.transitionTo('playing', context);\n          } else {\n            var id = '' + (+context.get('currentModel.id') + 1);\n            window.document.location = '#/slides/' + id;\n          }\n        }\n      }),\n      playing: Ember.State.extend({\n        setup: function (manager, context) {\n          this.next(manager, context);\n        },\n        next: function (manager, context) {\n          var id = '' + (+context.get('currentModel.id') + 1);\n          window.document.location = '#/slides/' + id;\n          this.play(manager, context);\n        },\n        play: function (manager, context) {\n          var milliseconds = context.get('currentModel.milliseconds');\n          if (milliseconds && milliseconds !== 0) {\n            this.startInterval(context, milliseconds);\n          } else {\n            this.stopInterval();\n            manager.transitionTo('idling', context);\n          }\n        },\n        startInterval: function (context, milliseconds) {\n          var id = '' + (+context.get('currentModel.id') + 1);\n          this.timeoutId = Ember.run.later(function(){\n            window.document.location = '#/slides/' + id;\n            App.stateMachine.send('play', context);\n          }, milliseconds);\n        },\n        stopInterval: function () {\n          if (this._timeoutId) {\n            Ember.run.cancel(this._timeoutId);\n            delete this._timeoutId;\n          }\n        }\n      })\n    });\n    \n    App.Router.map(function() {\n      this.resource('/');\n      this.resource('slides');\n      this.resource('slide', { path: '/slides/:slide_id' });\n    });\n    \n    App.IndexRoute = Ember.Route.extend({\n      redirect: function() {\n        this.transitionTo('slides');\n      }\n    });\n    \n    App.SlidesRoute = Ember.Route.extend({\n      model: function() {\n        return App.Slide.find();\n      }\n    });\n    \n    App.SlideRoute = Ember.Route.extend({\n      model: function(params) {\n        return App.Slide.find(params.slide_id);\n      },\n      events: {\n        previous: function () {\n          var id = '' + (+this.get('currentModel.id') - 1);\n          window.document.location = '#/slides/' + id;\n        },\n        next: function () {\n          App.stateMachine.send('next', this);\n        },\n        first: function () {\n          window.document.location = '#/slides/' + 0;\n        }\n      }\n    });\n    \n    // Controllers\n    App.SlidesController = Ember.ArrayController.extend({\n      sortProperties: ['id']\n    });\n    \n    App.SlideController = Ember.Controller.extend({\n      // left = 37, up = 38, right = 39, down = 40\n      updateKey: function (code) {\n        if (code === 37) {\n          this.get('target').send('previous');\n        } else if (code === 39) {\n          this.get('target').send('next');\n        } else if (code === 38) {\n          this.get('target').send('first');\n        } else if (code === 40) {\n          this.get('target').send('last');\n        }\n      }\n    });\n    \n    // Views\n    App.SlidesView = Ember.View.extend({\n      classNames: ['slides']\n    });\n    \n    App.SlideView = Ember.View.extend({\n      classNames: ['slide'],\n      keyDown: function(e) {\n        this.get('controller').send('updateKey', e.keyCode);\n      },\n      didInsertElement: function() {\n        $('head title').text(\n            ['Using Ember.StateManager', this.get('context.model.filename')].join(' | ')\n        );\n        return this.$('input').focus();\n      },\n    });\n\n\n**javascript/slide-deck/fixtures.js**\n\n    App.Slide.FIXTURES = [\n      { id: '0', filename: 'http://fpoimg.com/800x600?text=Title'},\n      { id: '1', filename: 'http://fpoimg.com/800x600?text=Section-A', milliseconds: 1000 },\n      { id: '2', filename: 'http://fpoimg.com/800x600?text=Slide-A1', milliseconds: 500 },\n      { id: '3', filename: 'http://fpoimg.com/800x600?text=Slide-A2', milliseconds: 250 },\n      { id: '4', filename: 'http://fpoimg.com/800x600?text=Slide-A3' },\n      { id: '5', filename: 'http://fpoimg.com/800x600?text=Section-B', milliseconds: 300 },\n      { id: '6', filename: 'http://fpoimg.com/800x600?text=Slide-B1', milliseconds: 300 },\n      { id: '7', filename: 'http://fpoimg.com/800x600?text=Slide-B2', milliseconds: 300 },\n      { id: '8', filename: 'http://fpoimg.com/800x600?text=Slide-B3' },\n      { id: '9', filename: 'http://fpoimg.com/800x600?text=The End'}\n    ];    \n\n\n### Styles\n\n**css/style.css**\n\n\n    html, body {\n        margin: 0;\n        padding: 0;\n        text-align: left;\n    }\n    .slides img {\n        max-width: 102px;\n        max-height: 77px;\n        float: left;\n        display: inline-block;\n    }\n    .slide {\n        text-align: center;\n        position: relative;\n        top: 0;\n        margin: 0;\n        border: 0;\n        padding: 0;\n        height: 100%;\n        overflow: hidden;\n    }\n    .slide input {\n        position: absolute;\n        display: block;\n        left: -999em;\n    }\n    .slide img {\n        height: 100%;\n        border-style: none;\n    }\n\n\n## Observations on using Ember.StateManager\n\nEmber has some awesome tools baked into the framework. The StateManager is an example of an object to mange the state of objects like models, routes, or any object that needs to behave according to it's state.\n\nI few things I noticed when using Ember.State objects:\n\n* Action handlers for `enter` and `exit` may not have the `currentState.name` in the state that you expect, these events happen during transition to/from a state. \n\n* The `setup` method does have the `currentState` you would expect and receives the `manager` and `context` objects as arguments, while `enter` and `exit` only receive `manager`.\n\n* A state's methods for `enter` and `exit` are good for handling common behaviors when transitioning to sub-states. The `setup` method can be defined in a base state class as the  default setup action for states and thier child states as well.\n\n* Methods defined on a parent state are shared with sub-states.\n\n* Utilize the state pattern by defining the same action methods with varying outcomes depending on the state's required behaviors.\n\n* Reading the 'ember-states' test suite ([state_manager_test.js][5] & [state_test.js][6]) reveals everthing you want to know about the `Ember.StateManager`.\n\n* A state machine may be useful for: \n  * Interactions that don't need to be persisted and represented via a URL.\n  * Workflow, e.g. multiple steps to accomplish an objective.\n\nSee the [State Pattern][7] for another example of a state objects used to handle various behaviors of mouse activity.\n\n[0]: http://emberjs.com/api/classes/Ember.StateManager.html\n[1]: https://github.com/pixelhandler/ember-example-turnstile\n[2]: https://github.com/pixelhandler/ember-slide-deck\n[3]: https://en.wikipedia.org/wiki/Finite-state_machine\n[4]: http://jsbin.com/uvucuw/8/\n[5]: https://github.com/emberjs/ember.js/blob/master/packages/ember-states/tests/state_manager_test.js\n[6]: https://github.com/emberjs/ember.js/blob/master/packages/ember-states/tests/state_test.js\n[7]: http://en.wikipedia.org/wiki/State_pattern	**Example Apps**\n\nThis article demonstates two examples of using [Ember#StateManager][0] to\nmanage state that does not need to be represented by a URL.\n\n* The first is more of a an exercise to discover how to use Ember#StateManager in a basic application, [a turnstile app][1]\n* The second is a presentation application (slide deck) made with Ember, using the StateManager to autoplay slides (images).\n\nI used the ember slide deck app to animate some white board sketches during a talk at a meetup on this topic; [ember slide deck app][2].\n\n[0]: http://emberjs.com/api/classes/Ember.StateManager.html "Ember.StateManager"\n[1]: https://github.com/pixelhandler/ember-example-turnstile "Example use of Ember.StateManager"\n[2]: https://github.com/pixelhandler/ember-slide-deck "Presentation application written in Ember.js in slideshow format"	using-emberstatemanager-example-apps	Using Ember.StateManager: Example Apps	2013-07-20	2015-05-07 17:03:21.305293	2015-05-07 17:03:21.305293	1	'-999':1184C '/800x600?text=section-a'',':1068C '/800x600?text=section-b'',':1098C '/800x600?text=slide-a1'',':1076C '/800x600?text=slide-a2'',':1084C '/800x600?text=slide-a3''':1092C '/800x600?text=slide-b1'',':1106C '/800x600?text=slide-b2'',':1114C '/800x600?text=slide-b3''':1122C '/800x600?text=the':1128C '/800x600?text=title''':1062C '/api/classes/ember.statemanager.html':101B,1443C '/ember-sc/':676C '/ember-sc/events/125461412/)':687C '/emberjs/ember.js/blob/master/packages/ember-states/tests/state_manager_test.js':1463C '/emberjs/ember.js/blob/master/packages/ember-states/tests/state_test.js':1467C '/enablelogging':803C '/pixelhandler/ember-example-turnstile':106B,1447C '/pixelhandler/ember-slide-deck':114B,1451C '/slides':849C,870C,908C,930C,963C,973C '/uvucuw/8/':1459C '/wiki/finite-state_machine':1455C '/wiki/state_pattern':1471C '0':16B,98B,502C,838C,886C,974C,1058C,1135C,1137C,1166C,1168C,1170C,1172C,1440C '1':52B,103B,456C,847C,868C,903C,961C,1064C,1444C '100':1174C,1189C '1000':1070C '102px':1147C '12':809C '1500':656C '2':97B,111B,1072C,1448C '2013':684C '250':1086C '3':133C,1080C,1452C '300':1100C,1108C,1116C '37':983C,995C '38':985C,1011C '39':987C,1003C '4':451C,1088C,1456C '40':989C,1019C '5':1094C,1380C,1460C '500':1078C '6':1102C,1382C,1464C '7':1110C,1424C,1468C '77px':1151C '8':1118C '9':1124C 'absolut':1180C 'abstract':139C 'accept':588C 'access':238C 'accomplish':1417C 'accord':1231C 'across':256C 'action':717C,1245C,1331C,1360C 'activ':1439C 'adapt':810C 'addit':399C,408C 'affect':333C 'align':1140C,1161C 'allow':286C,298C 'along':763C 'amus':242C 'anim':79B 'anoth':183C,316C,1426C 'app':4A,6B,51B,77B,96B,463C,665C,692C,731C,742C,797C 'app.basestate':536C 'app.basestate.extend':580C,605C,638C 'app.indexcontroller':499C 'app.indexroute':471C,933C 'app.router.map':922C 'app.slide':812C 'app.slide.find':944C,951C 'app.slide.fixtures':1056C 'app.slidecontroller':980C 'app.slideroute':945C 'app.slidescontroller':976C 'app.slidesroute':939C 'app.slidesview':1025C 'app.slideview':1029C 'app.statemachine':801C,821C 'app.statemachine.create':802C 'app.statemachine.send':910C,967C 'app.store':806C 'app.turnstilemanager':467C,478C,575C 'app.turnstilemanager.create':468C 'app.turnstilemanager.send':490C,496C 'applic':48B,58B,116B,438C,442C,460C,662C,794C,796C 'argument':1288C 'arm':251C,261C,285C,311C,346C,355C,422C 'articl':8B 'automat':709C,782C 'autoplay':68B 'awesom':1201C 'back':430C,733C 'bake':1203C 'bar':264C 'base':1324C 'basic':47B 'behav':1230C 'behavior':758C,1309C,1371C,1436C 'block':1157C,1182C 'board':82B 'bodi':1133C 'border':1169C,1191C 'border-styl':1190C 'browser':664C 'built':443C 'call':172C,194C 'center':1162C 'chang':178C,413C 'child':1336C 'class':1326C 'classnam':1027C,1031C 'code':453C,992C,994C,1002C,1010C,1018C 'coin':274C,317C,338C,342C,377C,385C,400C,409C,487C,491C,506C,571C,581C,599C,603C,618C,625C 'common':1308C 'complet':296C 'conceiv':136C 'condit':191C,211C 'console.log':542C 'context':554C,557C,558C,584C,592C,596C,609C,621C,633C,636C,642C,655C,830C,841C,856C,859C,863C,874C,878C,888C,894C,897C,912C,1285C 'context.get':833C,845C,866C,881C,901C 'context.model.filename':1049C 'context.send':585C,597C,610C,614C,622C,643C,647C 'control':237C,475C,480C,481C,489C,492C,495C,498C,556C,560C,562C,975C,1037C 'controller.send':482C,563C,567C 'creat':667C 'css/style.css':1131C 'current':174C 'currentmodel.id':846C,867C,902C,960C 'currentmodel.milliseconds':834C,882C 'currentst':534C,1276C 'currentstate.name':485C,566C,613C,646C,1255C 'custom':268C,301C,307C,418C 'deck':60B,76B,95B,658C,691C 'default':1329C 'defin':201C,1321C,1341C,1357C 'delet':920C 'demo':439C 'demonst':9B 'depend':754C,1365C 'deposit':272C 'didinsertel':1041C 'discov':39B 'discuss':680C 'display':503C,509C,512C,513C,520C,522C,523C,526C,528C,529C,1154C,1181C 'ds.attr':815C,818C 'ds.fixtureadapter':811C 'ds.model.extend':813C 'ds.store.extend':807C 'e':1035C 'e.g':1413C 'e.keycode':1040C 'effect':358C,404C 'els':842C,890C,1000C,1008C,1016C 'em':1185C 'ember':14B,43B,63B,74B,93B,437C,445C,661C,689C,1198C,1375C 'ember-st':1374C 'ember.application.create':464C,798C 'ember.arraycontroller.extend':977C 'ember.controller.extend':500C,981C 'ember.js':119B 'ember.route.extend':472C,934C,940C,946C 'ember.router':747C 'ember.run.cancel':918C 'ember.run.later':651C,905C 'ember.state':1243C 'ember.state.extend':537C,826C,852C 'ember.statemanager':2A,102B,110B,681C,1047C,1197C,1391C 'ember.statemanager.extend':576C,822C 'ember.view.extend':1026C,1030C 'emberjs.com':100B,1442C 'emberjs.com/api/classes/ember.statemanager.html':99B,1441C 'en.wikipedia.org':1454C,1470C 'en.wikipedia.org/wiki/finite-state_machine':1453C 'en.wikipedia.org/wiki/state_pattern':1469C 'enablelog':469C 'end':1129C 'enter':548C,710C,1248C,1290C,1301C 'entri':266C 'entryway':258C 'event':189C,486C,723C,954C,1263C 'eventnam':541C,547C 'everi':736C 'everth':1384C 'exampl':3A,5B,11B,107B,216C,440C,1211C,1427C 'exercis':37B 'exist':762C 'exit':572C,1250C,1292C,1303C 'expect':1261C,1279C 'fals':629C 'file':775C 'filenam':814C,1059C,1065C,1073C,1081C,1089C,1095C,1103C,1111C,1119C,1125C 'finit':127C,148C 'finite-st':126C 'first':31B,970C,1015C 'fixtures.js':774C 'float':1152C 'focus':1054C 'format':122B 'fpoimg.com':1061C,1067C,1075C,1083C,1091C,1097C,1105C,1113C,1121C,1127C 'fpoimg.com/800x600?text=section-a'',':1066C 'fpoimg.com/800x600?text=section-b'',':1096C 'fpoimg.com/800x600?text=slide-a1'',':1074C 'fpoimg.com/800x600?text=slide-a2'',':1082C 'fpoimg.com/800x600?text=slide-a3''':1090C 'fpoimg.com/800x600?text=slide-b1'',':1104C 'fpoimg.com/800x600?text=slide-b2'',':1112C 'fpoimg.com/800x600?text=slide-b3''':1120C 'fpoimg.com/800x600?text=the':1126C 'fpoimg.com/800x600?text=title''':1060C 'framework':1206C 'fsm':199C 'function':466C,474C,488C,494C,508C,519C,525C,531C,539C,549C,552C,573C,582C,594C,607C,619C,631C,640C,652C,800C,828C,854C,861C,876C,896C,906C,915C,923C,936C,942C,948C,956C,966C,971C,991C,1034C,1042C 'gate':247C 'github':455C 'github.com':105B,113B,1446C,1450C,1462C,1466C 'github.com/emberjs/ember.js/blob/master/packages/ember-states/tests/state_manager_test.js':1461C 'github.com/emberjs/ember.js/blob/master/packages/ember-states/tests/state_test.js':1465C 'github.com/pixelhandler/ember-example-turnstile':104B,1445C 'github.com/pixelhandler/ember-slide-deck':112B,1449C 'give':381C,407C,423C 'given':169C,368C 'good':1305C 'group':678C 'handl':1307C,1434C 'handler':1246C 'happen':1264C 'head':1043C 'height':254C,1150C,1173C,1188C 'hidden':1176C 'howev':416C 'html':1132C 'id':844C,850C,865C,871C,900C,909C,932C,953C,958C,964C,979C,1057C,1063C,1071C,1079C,1087C,1093C,1101C,1109C,1117C,1123C 'idl':698C,735C,753C,824C,825C,893C 'illustr':130C 'imag':70B 'img':1143C,1187C 'initi':185C,259C 'initialst':577C,823C 'inlin':1156C 'inline-block':1155C 'input':331C,365C,386C,410C,426C,1053C,1178C 'insert':319C,505C,570C,602C 'interact':1399C 'inus':635C,637C 'isaccept':510C,515C 'javascript/app.js':461C 'javascript/slide-deck/app.js':795C 'javascript/slide-deck/fixtures.js':1055C 'join':1050C 'jsbin':450C 'jsbin.com':1458C 'jsbin.com/uvucuw/8/':1457C 'juli':683C 'keydown':1033C 'keypress':722C 'know':1388C 'last':1023C 'left':982C,1141C,1153C,1183C 'like':1221C 'list':204C 'lock':263C,313C,325C,350C,373C,391C,432C,578C,579C,654C 'machin':129C,140C,153C,229C,383C,1394C 'made':61B 'manag':18B,477C,540C,550C,553C,574C,583C,595C,608C,620C,632C,641C,745C,829C,855C,858C,862C,873C,877C,1283C,1295C 'manager.get':484C,559C,565C,612C,645C 'manager.set':479C 'manager.tostring':543C 'manager.transitionto':590C,634C,653C,839C,892C 'mang':1216C 'mani':362C 'margin':1134C,1167C 'matter':360C 'max':1145C,1149C 'max-height':1148C 'max-width':1144C 'may':1251C,1395C 'mechan':221C 'meetup':89B,677C 'method':1272C,1299C,1318C,1340C,1361C 'millisecond':707C,729C,817C,832C,836C,837C,880C,884C,885C,889C,898C,913C,1069C,1077C,1085C,1099C,1107C,1115C 'mode':697C 'model':225C,805C,941C,947C,1222C 'mous':1438C 'multipl':1414C 'name':532C,535C,546C 'need':23B,626C,1228C,1403C 'next':716C,788C,827C,860C,965C,968C,1007C 'none':1193C 'notic':1240C 'number':149C,819C 'object':1214C,1220C,1226C,1244C,1286C,1419C,1431C 'observ':1194C 'oncoin':507C,586C,623C 'one':145C,157C,180C,255C,292C 'one-third':291C 'onpush':518C,598C 'onsetup':524C,568C,615C,648C 'outcom':1364C 'overflow':1175C 'pad':1136C,1171C 'param':949C 'params.slide':952C 'parent':1344C 'park':243C 'particular':198C 'pass':270C,308C 'path':929C 'pattern':1355C,1423C 'payment':587C 'persist':1406C 'play':700C,712C,751C,783C,840C,851C,875C,911C 'pleas':504C,569C,601C,616C,649C 'posit':1163C,1179C 'present':57B,115B 'prevent':267C 'previous':955C,999C 'proceed':617C 'properti':708C 'push':303C,344C,347C,352C,366C,419C,425C,493C,497C,593C,628C,630C 'put':336C,375C,398C 'read':1372C 'readi':465C,799C 'receiv':1281C,1294C 'redirect':935C 'relat':1164C 'repres':26B,767C,1408C 'requir':600C,1370C 'return':943C,950C,1051C 'reveal':1383C 'revis':808C 'ride':244C 'right':986C 'rotat':250C,289C 'rout':1223C 'run':694C 'sampl':773C 'second':54B 'section':781C,789C 'see':446C,1420C 'send':998C,1006C,1014C,1022C,1038C 'setup':551C,606C,639C,853C,1271C,1317C,1330C 'setupcontrol':473C 'share':1347C 'shift':387C,427C 'side':764C 'simpl':220C 'singl':300C 'sketch':83B 'slide':59B,69B,75B,94B,657C,690C,701C,726C,737C,777C,926C,928C,931C,938C,1028C,1032C,1142C,1158C,1177C,1186C 'slideshow':121B 'slot':279C,341C 'sortproperti':978C 'sourc':452C 'startinterv':895C 'state':19B,128C,151C,158C,163C,175C,181C,207C,228C,324C,335C,351C,374C,389C,397C,415C,429C,483C,530C,564C,611C,644C,713C,743C,749C,761C,766C,820C,1218C,1235C,1258C,1269C,1297C,1315C,1325C,1333C,1337C,1345C,1351C,1354C,1368C,1376C,1393C,1422C,1430C 'state_manager_test.js':1379C 'state_test.js':1381C 'statemanag':15B,44B,66B,1208C 'stay':370C 'step':1415C 'stop':785C 'stopinterv':914C 'string':816C 'style':1130C,1192C 'sub':1314C,1350C 'sub-stat':1313C,1349C 'subway':240C 'suit':1378C 'talk':86B,671C 'target':997C,1005C,1013C,1021C 'tech':670C 'templat':457C,790C 'templates/application':458C,791C 'templates/index':459C 'templates/slide-deck/slide.html':792C 'templates/slide-deck/slides.html':793C 'test':1377C 'text':1045C,1139C,1160C 'text-align':1138C,1159C 'thier':1335C 'thing':1238C 'third':293C 'this._timeoutid':917C,919C,921C 'this.get':959C,996C,1004C,1012C,1020C,1036C,1048C 'this.incrementproperty':516C 'this.next':857C 'this.play':872C 'this.resource':924C,925C,927C 'this.set':511C,521C,527C,533C 'this.startinterval':887C 'this.stopinterval':891C 'this.timeoutid':904C 'this.transitionto':937C 'three':249C 'time':161C,170C,363C,705C 'titl':1044C 'to/from':1267C 'token':276C 'tool':1202C 'top':1165C 'topic':92B 'totalcoin':501C,517C 'transit':196C,214C,732C,1266C,1311C 'tri':627C 'trigger':188C,210C,719C 'true':470C,589C,804C 'turn':297C 'turnstil':50B,232C,234C,282C,321C,434C,441C 'two':10B,323C,330C,696C,780C 'unhandledev':538C,544C 'unlock':283C,327C,393C,396C,591C,604C 'updatekey':990C,1039C 'url':29B,740C,770C,1411C 'use':1A,13B,42B,64B,72B,108B,235C,1046C,1196C,1242C,1397C,1432C 'user':756C 'util':1352C 'valu':706C 'var':462C,476C,555C,831C,843C,864C,879C,899C,957C 'vari':1363C 'various':1435C 'via':1409C 'view':1024C 'waist':253C 'wait':650C 'want':1386C 'well':1339C 'white':81B 'width':1146C 'wikipedia':132C 'window.document.location':848C,869C,907C,962C,972C 'work':448C 'workflow':1412C 'would':1278C 'written':117B 'www.meetup.com':675C,686C 'www.meetup.com/ember-sc/':674C 'www.meetup.com/ember-sc/events/125461412/)':685C	published	pixelhandler
31	## Files used to create simple skinning scripts\n\n* css\n* style.css\n* includes \n\n  * body_bottom.phtml\n  * body_top.phtml\n  * class_template.php\n  * config.php\n  * footer.phtml\n  * head.phtml\n  * topnav.phtml\n  * tracking.phtml\n* index.php\n* js \n\n  * jquery.plugins.js\n  * tail.js\n    \n    \n    <?php\n    /*\n    See more info on this article or source for setup on .local domain with MAMP\n    */\n    require_once($_SERVER['DOCUMENT_ROOT'].'/includes/config.php');\n    // arg "Home" appends page title, "home" is id for body, site is owner\n    $template = new pageTemplate("Home","home","/",$site);\n    $template->description = "yada yada";\n    require_once($root.'/includes/head.phtml');\n    require_once($root.'/includes/body_top.phtml');\n    require_once($root.'/includes/topnav.phtml');\t\n    ?>\n    <div id="leader" class="full-16">\n    <!-- content here -->\n    </div>\n    <?php\n    require_once($root.'/includes/footer.phtml');\t\n    require_once($root.'/includes/body_bottom.phtml');\t\n    ?>\n    \n\n### includes/config.php\n\n    \n    \n    <?php\n    \n    # extra for testing, debugging, etc\n    # die("ERROR on line:" . __line__);\n    error_reporting(E_ALL);\n    ini_set('display_errors','on');\n    # print_r($_SERVER);\n    # if (!session_id()) session_start();\n    \n    # Globals\n    $root = $_SERVER['DOCUMENT_ROOT'];\n    $site = "My Site";\n    $url = $_SERVER['SERVER_NAME'];\n    $prod = "domain.com";\n    $local = "http://mysite.local:8888/";\n    $googleAnalytics = "XX-xxxxxxx-XX";\n    \n    if (TRUE) { \n    \t// override for local work , use FALSE for prod. use\n    \t$url = $local;\n    } else {\n    \t// running in prod\n    \t$url = $prod;\n    \tif ($_SERVER['SERVER_NAME'] != $prod) {\n    \t\theader( 'Location: ' . 'http://' . $prod . '/') ;\n    \t}\n    }\n    \n    # Class\n    require_once($root.'/includes/class_template.php');\n    ?>\n    \n\n### includes/class_template.php\n\n    \n    \n    <?php \n    // template class\n    \n    class pageTemplate\n    {\n    \t\n    \tvar $title;\n    \tvar $description;\n    \tvar $name;\n    \tvar $type;\n    \tvar $dir;\n    \t\n    \tfunction __construct($pagetitle="",$pagetype="details",$path="",$owner="")\n    \t{\n    \t\t$this->title = $owner;\n    \t\tif ($this->title != "") \n    \t\t{\n    \t\t\t$this->title .= " | " . $pagetitle;\n    \t\t} \n    \t\telse \n    \t\t{\n    \t\t\t$this->title = $pagetitle;\n    \t\t}\n    \t\t$this->name = $pagetitle;\n    \t\t$this->description = $pagetitle;\n    \t\t$this->type = strtolower($pagetype);\n    \t\t$this->owner = $owner;\n    \t\t$this->dir = strtolower($path);\n    \t}\n    \t\n    \tfunction style($cssfile,$stamp="")\n    \t{\n    \t\techo "<link href="" . $cssfile . "?" . round(time(), -3) . "" rel="stylesheet" type="text/css" media="screen" />rn";\n    \t}\n    \t\n    \tfunction script($jsfile)\n    \t{\n    \t\techo "<script src="" . $jsfile . "?" . round(time(), -3) . "" type="text/javascript" charset="utf-8"></script>rn";\n    \t}\n    \t\n    \tfunction pagetitle()\n    \t{\n    \t\techo "<title>" . $this->title . "</title>rn";\n    \t}\n    \n    }\n    \n    ?>\n    \n\n### css/style.css\n\n    \n    \n    /* =========================== \n       Setup your grid here... \n       http://html-src.com/web-dev/53/use-ruby-gem-sass-to-generate-a-css-grid-layout/\n       =========================*/\n    \n\n### includes/head.phtml\n\n    \n    \n    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\n    \t"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n    \n    <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">\n    \n    <head>\n    \t<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>\n    \t<?php echo $template->pagetitle(); ?>\n    \t<meta name="description" content="<?php echo $template->description; ?>">\n    \t<link rel="icon" href="favicon.ico" type="image/x-icon" />\n    \t<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />\n    \t<?php echo $template->style("/css/style.css"); ?>\n    \t<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>\n    \t<?php echo $template->script("/js/jquery.plugins.js"); ?>\n    </head>\n    \n\n### includes/body_top.phtml\n\n    \n    \n    <body id="<?php echo $template->type ?>" class="<?php echo $template->name ?>">\n    <div id="wrapper">\n    <div id="header" class="full-16">\n    \t<div class="inset">\n    \t\t<a href="#mainContent" class="accessibility">&#x2193; Skip to page content</a>\n    \t\t<a id="mainMenu" class="accessibility">Main Menu</a>\n    \t</div><!--/.inset-->\n    \t<hr class="accessibility" />\n    </div>\n    \n\n### includes/topnav.phtml\n\n    \n    \n    <div id="topnav">\n    \t<ul id="menu" class="nav">\n    \t\t<li><a href="/">Home</a><ul>\n    \t\t\t<li><a href="/articles/">Articles</a></li></ul>\n    \t\t</li>\n    \t</ul>\n    </div><!--/#topnav-->\n    \n\n### index.php\n\n    \n    \n    <?php\n    /*\n    # DNS notes, running on MAMP\n    # instructions for running your site on http://mysite.local:8888/\n    \n    # edit your hosts file with Textmate\n    mate /etc/hosts\n    \n    # add your site\n    127.0.0.1 mysite.local\n    \n    # if needed flush DNS on mac \n    dscacheutil -flushcache\n    \n    # add vhosts include:\n    mate /Applications/MAMP/conf/apache/httpd.conf \n    # the code below needs to be at the end of our httpd.conf file ...\n    \n    # NameVirtualHost *\n    Include /Applications/MAMP/conf/apache/httpd-vhosts.conf\n    \n    mate /Applications/MAMP/conf/apache/httpd-vhosts.conf\n    # below are the contents of the httpd-vhosts.conf file ...\n    # be sure to change yourhomedirectory to the result of \n    cd ~\n    pwd\n    # remember to start/stop MAMP when all setup\n    \n    #\n    # Virtual Hosts\n    #\n    NameVirtualHost *:8888\n    \n    <VirtualHost *:8888>\n    \tDocumentRoot /Users/home/Sites/htdocs\n    \tServerName localhost\n    </VirtualHost>\n    \n    <VirtualHost *:8888> \n      <Directory /Users/yourhomedirectory/Sites/htdocs/simplephpskinner> \n        AllowOverride All \n      </Directory> \n      DocumentRoot /Users/yourhomedirectory/Sites/htdocs/simplephpskinner\n      ServerName mysite.local\n    </VirtualHost>\n    \n    */\n    require_once($_SERVER['DOCUMENT_ROOT'].'/includes/config.php');\n    // arg "Home" appends page title, "home" is id for body, site is owner\n    $template = new pageTemplate("Home","home","/",$site);\n    $template->description = "yada yada";\n    require_once($root.'/includes/head.phtml');\n    require_once($root.'/includes/body_top.phtml');\n    require_once($root.'/includes/topnav.phtml');\t\n    ?>\n    <div id="leader" class="full-16">\n    <!-- content here -->\n    </div>\n    <?php\n    require_once($root.'/includes/footer.phtml');\t\n    require_once($root.'/includes/body_bottom.phtml');\t\n    ?>\n    \n\n### includes/footer.phtml\n\n    \n    \n    <div id="footer">\n    \t<p class="quarter">&copy; 2010 <?php echo $template->owner ?></p>\n    \t<div class="threeQuarter" id="nav">\n    \t\t<a href="/">Home</a> |\n    \t</div>\n    \t<br class="clearLeft" />\n    </div>\n    \n\n### includes/body_bottom.phtml\n\n    \n    \n    <a href="#mainContent" class="accessibility">&#x2191; Back to page content</a>\n    <a href="#mainMenu" class="accessibility">&#x2191; Back to main menu</a>\n    \t<!-- <div class="test">&nbsp;</div> -->\n    </div><!--/#wrapper-->\n    <?php echo $template->script("js/tail.js"); ?>\n    <?php # require_once($root.'/includes/tracking.phtml'); ?>\n    </body>\n    </html><!-- <?php echo(date("D F d Y",time())); ?> -->\n    \n\n### includes/tracking.phtml\n\n    \n    \n    <script type="text/javascript">\n      var _gaq = _gaq || [];\n      _gaq.push(['_setAccount', '<?php echo $googleAnalytics ?>']);\n      _gaq.push(['_trackPageview']);\n      (function() {\n        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n      })();\n    </script>\n    \n\n### js/jquery.plugins.js\n\n    \n    \n    /**\n     * jQuery go in here plugins.\n     */\n    \n\n### js/tail.js\n\n    \n    \n    /* load at end of page */\n    $(document).ready(function() { \n    \n    }); // end doc ready\n    \n	This example is based on a MAMP environment with DNS setup for a .local\ndomain, using MAMP apache's httpd.conf to set up vhosts; notes on this are in\nthe index.php file. Source code on github : [http://github.com/pixelhandler/si\nmplephpskinner](http://github.com/pixelhandler/simplephpskinner)	simple-php-skinning-scripts-using-basic-template-class	Simple PHP Skinning Scripts Using Basic Template Class	2010-08-15	2015-05-07 17:03:21.412722	2015-05-07 17:03:21.412722	1	'-3':285C '/applications/mamp/conf/apache/httpd-vhosts.conf':392C,394C '/applications/mamp/conf/apache/httpd.conf':376C '/css/style.css':321C '/etc/hosts':358C '/includes/body_bottom.phtml':139C,488C '/includes/body_top.phtml':126C,475C '/includes/class_template.php':221C '/includes/config.php':95C,444C '/includes/footer.phtml':135C,484C '/includes/head.phtml':122C,471C '/includes/topnav.phtml':130C,479C '/includes/tracking.phtml':514C '/js/jquery.plugins.js':326C '/pixelhandler/si':47B '/pixelhandler/simplephpskinner)':51B '/users/home/sites/htdocs':428C '/users/yourhomedirectory/sites/htdocs/simplephpskinner':436C '/web-dev/53/use-ruby-gem-sass-to-generate-a-css-grid-layout/':311C '127.0.0.1':362C '2010':490C '8888':424C,426C,432C 'add':359C,372C 'allowoverrid':433C 'apach':26B 'append':98C,447C 'arg':96C,445C 'articl':80C,336C 'back':497C,501C 'base':12B 'basic':6A 'bodi':105C,454C 'body_bottom.phtml':62C 'body_top.phtml':63C 'cd':412C 'chang':406C 'class':8A,217C,225C,226C 'class_template.php':64C 'code':42B,378C 'config.php':65C 'construct':239C 'content':331C,398C,500C 'creat':55C 'css':59C 'css/style.css':304C 'cssfile':277C,282C 'debug':145C 'descript':116C,231C,262C,465C 'detail':242C 'die':147C 'dir':237C,272C 'display':158C 'dns':18B,339C,367C 'doc':532C 'document':93C,172C,442C,528C 'documentroot':427C,435C 'domain':23B,87C 'domain.com':182C 'dscacheutil':370C 'e':154C 'echo':279C,296C,300C,314C,318C,323C,492C,506C 'edit':351C 'els':203C,254C 'end':385C,525C,531C 'environ':16B 'error':148C,152C,159C 'etc':146C 'exampl':10B 'extra':142C 'fals':197C 'file':40B,52C,354C,389C,402C 'flush':366C 'flushcach':371C 'footer.phtml':66C 'function':238C,275C,293C,298C,530C 'github':44B 'github.com':46B,50B 'github.com/pixelhandler/si':45B 'github.com/pixelhandler/simplephpskinner)':49B 'global':169C 'go':518C 'googleanalyt':185C 'grid':307C 'head.phtml':67C 'header':214C 'home':97C,101C,112C,113C,335C,446C,450C,461C,462C,495C 'host':353C,422C 'href':281C 'html-src.com':310C 'html-src.com/web-dev/53/use-ruby-gem-sass-to-generate-a-css-grid-layout/':309C 'httpd-vhosts.conf':401C 'httpd.conf':28B,388C 'id':103C,166C,452C 'includ':61C,374C,391C 'includes/body_bottom.phtml':496C 'includes/body_top.phtml':327C 'includes/class_template.php':222C 'includes/config.php':140C 'includes/footer.phtml':489C 'includes/head.phtml':312C 'includes/topnav.phtml':334C 'includes/tracking.phtml':515C 'index.php':39B,70C,337C 'info':77C 'ini':156C 'instruct':344C 'jqueri':517C 'jquery.plugins.js':72C 'js':71C 'js/jquery.plugins.js':516C 'js/tail.js':509C,522C 'jsfile':295C 'line':150C,151C 'link':280C 'load':523C 'local':22B,86C,183C,194C,202C 'localhost':430C 'locat':215C 'mac':369C 'main':332C,503C 'mamp':15B,25B,89C,343C,417C 'mate':357C,375C,393C 'media':290C 'menu':333C,504C 'mplephpskinn':48B 'mysite.local':363C,438C 'mysite.local:8888':184C,350C 'name':180C,212C,233C,259C 'namevirtualhost':390C,423C 'need':365C,380C 'new':110C,459C 'note':33B,340C 'overrid':192C 'owner':108C,244C,247C,269C,270C,457C,494C 'page':99C,330C,448C,499C,527C 'pagetempl':111C,227C,460C 'pagetitl':240C,253C,257C,260C,263C,299C,316C 'pagetyp':241C,267C 'path':243C,274C 'php':2A,74C,131C,141C,223C,313C,317C,322C,338C,480C,491C,505C,510C 'plugin':521C 'print':161C 'prod':181C,199C,206C,208C,213C,216C 'pwd':413C 'r':162C 'readi':529C,533C 'rel':286C 'rememb':414C 'report':153C 'requir':90C,119C,123C,127C,132C,136C,218C,439C,468C,472C,476C,481C,485C,511C 'result':410C 'rn':292C,297C,303C 'root':94C,121C,125C,129C,134C,138C,170C,173C,220C,443C,470C,474C,478C,483C,487C,513C 'round':283C 'run':204C,341C,346C 'screen':291C 'script':4A,58C,294C,325C,508C 'see':75C 'server':92C,163C,171C,178C,179C,210C,211C,441C 'servernam':429C,437C 'session':165C,167C 'set':30B,157C 'setup':19B,84C,305C,420C 'simpl':1A,56C 'site':106C,114C,174C,176C,348C,361C,455C,463C 'skin':3A,57C 'skip':328C 'sourc':41B,82C 'stamp':278C 'start':168C 'start/stop':416C 'strtolow':266C,273C 'style':276C,320C 'style.css':60C 'stylesheet':287C 'sure':404C 'tail.js':73C 'templat':7A,109C,115C,224C,315C,319C,324C,458C,464C,493C,507C 'test':144C 'text/css':289C 'textmat':356C 'time':284C 'titl':100C,229C,246C,250C,252C,256C,302C,449C 'topnav.phtml':68C 'tracking.phtml':69C 'true':191C 'type':235C,265C,288C 'url':177C,201C,207C 'use':5A,24B,53C,196C,200C 'var':228C,230C,232C,234C,236C 'vhost':32B,373C 'virtual':421C 'virtualhost':425C,431C 'work':195C 'xx':187C,189C 'xx-xxxxxxx-xx':186C 'xxxxxxx':188C 'yada':117C,118C,466C,467C 'yourhomedirectori':407C	published	pixelhandler
37	## In your grid.sass file:\n\nGrid CSS as SASS (grid.sass) [download](/downloads/code/sass/grid.sass)\n\n    \n    // Grid \n    // =========================== \n    // e.g. 960px, 12 columns (px) : | 10+ | 60 + 20 (x11) | 60 + 10 | \n    \n    // Setup your grid ...\n    // total page width\n    !gTotal = 960px\n    // number of columns\n    !grid = 16\n    // gutter between columns\n    !gGutter = 20px\n    // set margin at half of gutter\t\n    !gMargin = !gGutter / 2\n    // single column width\n    !gCol = ( !gTotal / !grid ) - !gGutter\n    // assign gird values to variables for use with semantic #id's\n    !col4 = ( !gCol * 4 ) + ( !gGutter * ( 4 - 1 ) )\n    !col16 = ( !gCol * !grid) + ( !gGutter * ( !grid - 1 ) )\n    \n    // mixins\n    =colWidth(!c)\n      width = ( !gCol * !c ) + ( !gGutter * ( !c - 1 ) )\n    =column\n      display: inline\n      float: left\n      margin-right = !gMargin\n      margin-left = !gMargin\n    \n    // simple example...\n    // =========================== \n    .full, .wide\n      clear: left\n    .wide\n      +colWidth(16)\n    .full\n      width = !col16\n    .quarter, .half, .threeQuarter\n      float: left\n    .quarter\n      width = !col4\n    .half\n      width = !col4 * 2\n    .threeQuarter\n      width = !col4 * 3\n    \n    // design or prototype use...\n    // =========================== \n    =gridTest\n      background: #ccc\n      margin-bottom: .5em\n      margin-top: .5em\n      min-height: 80px\n    .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col-13, .col-14, .col-15, .col-16\n      +column\n      +gridTest\n    .col-16\n      background-color: transparent\n    // loop to create column widths\n    @for !i from 1 through 12\n      .col-#{!i}\n        +colWidth(!i)\n        //width = ( !gCol * !i ) + ( !gGutter * ( !i - 1 ) )\n    .full-16\n      margin: 0 auto\n      width = !gTotal\n    @for !i from 1 through 4\n      .push-#{!i}\n        margin-left = ( !gCol + !gMargin ) * !i\n    @for !i from 1 through 4\n      .pull-#{!i}\n        margin-left = 0 - ( !i * ( !gCol + !gMargin ) )\n    \n    // helpers\n    .container\n      margin-right = 0\n      margin-left = 0\n    .first\n      clear: left\n      margin-left: 0\n    .last\n      margin-right: 0\n    .indentLeft\n      margin-left = !gMargin * 2\n    .indentRight\n      margin-right = !gMargin * 2\n    .extend\n      margin-right: 0\n      margin-left: 0\n      padding-left = !gMargin * 2\n      padding-right = !gMargin * 2\n    \n\n### Execute on the command line\n\n    \n    \n    # turns ruby into CSS\n    sass grid.sass grid.css\n    \n    # check it out with textmate\n    mate grid.css\n    \n\nthis is part of my\n[SimpleSassFramework](http://github.com/pixelhandler/simpleSassFramework) for\ngenerating a boilerplate html site. See the CSS output… Grid SASS output\n(grid.css)\n    \n    .full, .wide {\n      clear: left; }\n    \n    .wide {\n      width: 940px; }\n    \n    .full {\n      width: 940px; }\n    \n    .quarter, .half, .threeQuarter {\n      float: left; }\n    \n    .quarter {\n      width: 220px; }\n    \n    .half {\n      width: 440px; }\n    \n    .threeQuarter {\n      width: 660px; }\n    \n    .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col-13, .col-14, .col-15, .col-16 {\n      display: inline;\n      float: left;\n      margin-right: 10px;\n      margin-left: 10px;\n      background: #ccc;\n      margin-bottom: .5em;\n      margin-top: .5em;\n      min-height: 80px; }\n    \n    .col-16 {\n      background-color: transparent; }\n    \n    .col-1 {\n      width: 40px; }\n    \n    .col-2 {\n      width: 100px; }\n    \n    .col-3 {\n      width: 160px; }\n    \n    .col-4 {\n      width: 220px; }\n    \n    .col-5 {\n      width: 280px; }\n    \n    .col-6 {\n      width: 340px; }\n    \n    .col-7 {\n      width: 400px; }\n    \n    .col-8 {\n      width: 460px; }\n    \n    .col-9 {\n      width: 520px; }\n    \n    .col-10 {\n      width: 580px; }\n    \n    .col-11 {\n      width: 640px; }\n    \n    .col-12 {\n      width: 700px; }\n    \n    .full-16 {\n      margin: 0 auto;\n      width: 960px; }\n    \n    .push-1 {\n      margin-left: 50px; }\n    \n    .push-2 {\n      margin-left: 100px; }\n    \n    .push-3 {\n      margin-left: 150px; }\n    \n    .push-4 {\n      margin-left: 200px; }\n    \n    .pull-1 {\n      margin-left: -50px; }\n    \n    .pull-2 {\n      margin-left: -100px; }\n    \n    .pull-3 {\n      margin-left: -150px; }\n    \n    .pull-4 {\n      margin-left: -200px; }\n    \n    .container {\n      margin-right: 0;\n      margin-left: 0; }\n    \n    .first {\n      clear: left;\n      margin-left: 0; }\n    \n    .last {\n      margin-right: 0; }\n    \n    .indentLeft {\n      margin-left: 20px; }\n    \n    .indentRight {\n      margin-right: 20px; }\n    \n    .extend {\n      margin-right: 0;\n      margin-left: 0;\n      padding-left: 20px;\n      padding-right: 20px; }\n    \n	This is a basic template tool for generating your own grid system using Sass,\nand builds on best practices of existing CSS grid systems like 960.gs or\nBlueprint in a bare bones fashion. The generated CSS includes classes for\nprototyping or designing in a browser; and also creates variables for\nassignment to your semantic id’s for cleaner markup.  More on this topic see :\n[sass-lang.com](http://sass-lang.com/)	use-ruby-gem-sass-to-generate-a-css-grid-layout	Use Ruby Gem, Sass to Generate a CSS Grid Layout	2010-08-14	2015-05-07 17:03:21.437477	2015-05-07 17:03:21.437477	1	'-1':229C,445C,509C,564C,588C '-10':247C,463C,545C '-100':599C '-11':249C,465C,549C '-12':251C,467C,553C '-13':253C,469C '-14':255C,471C '-15':257C,473C '-150':606C '-16':259C,263C,290C,475C,503C,557C '-2':231C,447C,513C,570C,595C '-200':613C '-3':233C,449C,517C,576C,602C '-4':235C,451C,521C,582C,609C '-5':237C,453C,525C '-50':592C '-6':239C,455C,529C '-7':241C,457C,533C '-8':243C,459C,537C '-9':245C,461C,541C '/)':78B '/downloads/code/sass/grid.sass':89C '/pixelhandler/simplesassframework)':405C '/width':283C '0':292C,321C,330C,334C,341C,346C,363C,367C,559C,619C,623C,630C,635C,650C,654C '1':152C,158C,167C,276C,288C,299C,313C '10':96C,101C '100px':515C,574C '10px':483C,487C '12':93C,278C '150px':580C '16':114C,189C '160px':519C '2':128C,204C,352C,358C,372C,377C '20':98C '200px':586C '20px':119C,640C,645C,658C,662C '220px':437C,523C '280px':527C '3':208C '340px':531C '4':149C,151C,301C,315C '400px':535C '40px':511C '440px':440C '460px':539C '50px':568C '520px':543C '580px':547C '5em':219C,223C,493C,497C '60':97C,100C '640px':551C '660px':443C '700px':555C '80px':227C,501C '940px':426C,429C '960.gs':36B '960px':92C,109C,562C 'also':57B 'assign':61B,136C 'auto':293C,560C 'background':214C,265C,488C,505C 'background-color':264C,504C 'bare':41B 'basic':14B 'best':28B 'blueprint':38B 'boilerpl':409C 'bone':42B 'bottom':218C,492C 'browser':55B 'build':26B 'c':161C,164C,166C 'ccc':215C,489C 'check':390C 'class':48B 'cleaner':68B 'clear':185C,336C,422C,625C 'col':228C,230C,232C,234C,236C,238C,240C,242C,244C,246C,248C,250C,252C,254C,256C,258C,262C,279C,444C,446C,448C,450C,452C,454C,456C,458C,460C,462C,464C,466C,468C,470C,472C,474C,502C,508C,512C,516C,520C,524C,528C,532C,536C,540C,544C,548C,552C 'col16':153C,192C 'col4':147C,200C,203C,207C 'color':266C,506C 'column':94C,112C,117C,130C,168C,260C,271C 'colwidth':160C,188C,281C 'command':381C 'contain':326C,615C 'creat':58B,270C 'css':8A,32B,46B,84C,386C,414C 'design':52B,209C 'display':169C,476C 'download':88C 'e.g':91C 'exampl':182C 'execut':378C 'exist':31B 'extend':359C,646C 'fashion':43B 'file':82C 'first':335C,624C 'float':171C,196C,433C,478C 'full':183C,190C,289C,420C,427C,556C 'gcol':132C,148C,154C,163C,284C,307C,323C 'gem':3A 'generat':6A,18B,45B,407C 'ggutter':118C,127C,135C,150C,156C,165C,286C 'gird':137C 'github.com':404C 'github.com/pixelhandler/simplesassframework)':403C 'gmargin':126C,176C,180C,308C,324C,351C,357C,371C,376C 'grid':9A,21B,33B,83C,90C,104C,113C,134C,155C,157C,416C 'grid.css':389C,396C,419C 'grid.sass':81C,87C,388C 'gridtest':213C,261C 'gtotal':108C,133C,295C 'gutter':115C,125C 'half':123C,194C,201C,431C,438C 'height':226C,500C 'helper':325C 'html':410C 'id':65B,145C 'includ':47B 'indentleft':347C,636C 'indentright':353C,641C 'inlin':170C,477C 'last':342C,631C 'layout':10A 'left':172C,179C,186C,197C,306C,320C,333C,337C,340C,350C,366C,370C,423C,434C,479C,486C,567C,573C,579C,585C,591C,598C,605C,612C,622C,626C,629C,639C,653C,657C 'like':35B 'line':382C 'loop':268C 'margin':121C,174C,178C,217C,221C,291C,305C,319C,328C,332C,339C,344C,349C,355C,361C,365C,481C,485C,491C,495C,558C,566C,572C,578C,584C,590C,597C,604C,611C,617C,621C,628C,633C,638C,643C,648C,652C 'margin-bottom':216C,490C 'margin-left':177C,304C,318C,331C,338C,348C,364C,484C,565C,571C,577C,583C,589C,596C,603C,610C,620C,627C,637C,651C 'margin-right':173C,327C,343C,354C,360C,480C,616C,632C,642C,647C 'margin-top':220C,494C 'markup':69B 'mate':395C 'min':225C,499C 'min-height':224C,498C 'mixin':159C 'number':110C 'output':415C,418C 'pad':369C,374C,656C,660C 'padding-left':368C,655C 'padding-right':373C,659C 'page':106C 'part':399C 'practic':29B 'prototyp':50B,211C 'pull':316C,587C,594C,601C,608C 'push':302C,563C,569C,575C,581C 'px':95C,593C,600C,607C,614C 'quarter':193C,198C,430C,435C 'right':175C,329C,345C,356C,362C,375C,482C,618C,634C,644C,649C,661C 'rubi':2A,384C 'sass':4A,24B,86C,387C,417C 'sass-lang.com':75B,77B 'sass-lang.com/)':76B 'see':74B,412C 'semant':64B,144C 'set':120C 'setup':102C 'simpl':181C 'simplesassframework':402C 'singl':129C 'site':411C 'system':22B,34B 'templat':15B 'textmat':394C 'threequart':195C,205C,432C,441C 'tool':16B 'top':222C,496C 'topic':73B 'total':105C 'transpar':267C,507C 'turn':383C 'use':1A,23B,142C,212C 'valu':138C 'variabl':59B,140C 'wide':184C,187C,421C,424C 'width':107C,131C,162C,191C,199C,202C,206C,272C,294C,425C,428C,436C,439C,442C,510C,514C,518C,522C,526C,530C,534C,538C,542C,546C,550C,554C,561C 'x11':99C	published	pixelhandler
45	\n  * remove junk like .DS_Store or clean out repositories like folders named CVS .svn .git \n  * -type d for directories f for files\n    \n    \n    find . -name '.svn' -type d | xargs echo\n    \n    find . -name '.svn' -type d | xargs rm -rf\n    \n    find . -name '.git' -exec rm -rf {} ;\n    \n    find . -name '.DS_Store' -type f | xargs rm -rf\n    \n	Use command line to clean up directories prior to initializing repository.	clean-up-directories-prior-to-initializing-repository	Clean Up Directories Prior to Initializing Repository	2010-08-14	2015-05-07 17:03:21.474792	2015-05-07 17:03:21.474792	1	'clean':1A,12B,25C 'command':9B 'cvs':31C 'd':35C,45C,52C 'directori':3A,14B,37C 'ds':22C,64C 'echo':47C 'exec':59C 'f':38C,67C 'file':40C 'find':41C,48C,56C,62C 'folder':29C 'git':33C,58C 'initi':6A,17B 'junk':20C 'like':21C,28C 'line':10B 'name':30C,42C,49C,57C,63C 'prior':4A,15B 'remov':19C 'repositori':7A,18B,27C 'rf':55C,61C,70C 'rm':54C,60C,69C 'store':23C,65C 'svn':32C,43C,50C 'type':34C,44C,51C,66C 'use':8B 'xarg':46C,53C,68C	published	pixelhandler
49	<h2>A JavaScript plugin based on jQuery library that builds an expandable/collapsable menu tree from a list element</h2>\n\n<ul>\n<li><p>Requires JavaScript library: <a href="http://jquery.com/">jQuery</a></p></li>\n<li><p>Developed using jQuery version 1.4 ... <a href="http://plugins.jquery.com/project/menuTree">Plugin page</a></p></li>\n<li><p>Demo of the plugin behavior showing both lists and definition list... <a href="http://www.pixelhandler.com/menutree/jQuery-MenuTree-Plugin/example/">Demo</a></p></li>\n<li><p>Status : New plugin, give it a try!</p></li>\n<li><p>Tracer plugin added and featured with demo.</p></li>\n<li><p>Blog post for MenuTree plugin on my blog... <a href="http://www.pixelhandler.com/blog/2010/01/28/jquery-menutree-plugin-hosted-at-github-com/">Blog</a></p></li>\n</ul>\n\n\n<h2>How to build a menu tree that is expandable with jQuery</h2>\n\n<p>Your html will need to link to the jQuery plugin in the head element</p>\n\n<p><script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.0/jquery.min.js" type="text/javascript" charset="utf-8"></script></p>\n\n<p>Your html markup needs to use a list, see github link for reference.</p>\n\n\n<p>menuTree plugin plugin uses a few CSS classes for visual design...</p>\n<pre name="code" class="css">\n\n#myTree .menuTree:before {\n\tcontent: "[+] ";\n}\n\n#myTree .expanded:before {\n\tcontent: "[-] ";\n}\n\n#myTree .collapsed {\n\tdisplay: none;\n}\n\n</pre>\n<p>At the end of your html markup, before the closing body element use a script to setup the function...</p>\n<pre name="code" class="js">\n\n$(document).ready(function() {\n\n\t$('#myTree').menuTree({\n    \tanimation: true,\n\t\thandler: 'slideToggle',\n\t\tanchor: 'a[href="#"]',\n\t\ttrace: true\n\t});\n\n});\n\n</pre>\n<p>This plugin has default options which you may override. The animation option may use jQuery <strong>toggle or slideToggle</strong> methods, or just use the default <strong>css</strong> option to show/hide the child list(s).</p>\n\n<p>When called with the animation: true option the plugin uses the handler option to select <em>slideToggle</em> or <em>toggle</em> method to add effects to the display of child menu(s). You may set the speed as you please, e.g. speed: 'slow'. Also, you may indicate what the child menu(s) are marked up with, e.g. listElement: <em>'ol'</em> instead of the default listElement: <em>'ul'</em></p>\n\n<p>The default options:</p>\n<pre name="code" class="js">\n\n$.fn.menuTree.defaults = {\n\n\t// setup animation\n\tanimation: false, \n\thandler: 'css',\n\tspeed: 'fast',\n\t// setup hooks in markup\n\tlistElement: 'ul',\n\tanchor: 'a[href="#"]',\n\t// uses 'tracer' plugin\n\ttrace: false\n};\n\n</pre>\n<p>If you have any questions, please feel free to ask them on the jQuery\nmeetup site, found here:<br />\n<a href="http://meetups.jquery.com/group/jquerylosangeles">http://meetups.jquery.com/group/jquerylosangeles</a></p>\n	This is my first post of social code using the github repository at :\n\n[http://github.com/pixelhandler/jQuery-MenuTree-\nPlugin/](http://github.com/pixelhandler/jQuery-MenuTree-Plugin/)	jquery-menutree-plugin-hosted-on-github	jQuery MenuTree Plugin Hosted on github.com	2010-01-28	2015-05-07 17:03:21.490602	2015-05-07 17:03:21.490602	1	'/group/jquerylosangeles':324C '/pixelhandler/jquery-menutree-':22B '/pixelhandler/jquery-menutree-plugin/)':26B '1.4':52C 'ad':76C 'add':236C 'also':256C 'anchor':179C,296C 'anim':175C,194C,220C,283C,284C 'ask':313C 'base':30C 'behavior':59C 'blog':81C,88C,89C 'bodi':161C 'build':35C,92C 'call':217C 'child':213C,242C,262C 'class':135C 'close':160C 'code':14B 'collaps':148C 'content':142C,146C 'css':134C,208C,287C 'default':187C,207C,275C,279C 'definit':64C 'demo':55C,66C,80C 'design':138C 'develop':48C 'display':149C,240C 'document':170C 'e.g':253C,269C 'effect':237C 'element':43C,114C,162C 'end':153C 'expand':98C,144C 'expandable/collapsable':37C 'fals':285C,303C 'fast':289C 'featur':78C 'feel':310C 'first':10B 'fn.menutree.defaults':281C 'found':320C 'free':311C 'function':169C,172C 'github':17B,124C 'github.com':6A,21B,25B 'github.com/pixelhandler/jquery-menutree-':20B 'github.com/pixelhandler/jquery-menutree-plugin/)':24B 'give':70C 'handler':177C,227C,286C 'head':113C 'hook':291C 'host':4A 'href':181C,298C 'html':102C,116C,156C 'indic':259C 'instead':272C 'javascript':28C,45C 'jqueri':1A,32C,47C,50C,100C,109C,198C,317C 'librari':33C,46C 'link':106C,125C 'list':42C,62C,65C,122C,214C 'listel':270C,276C,294C 'mark':266C 'markup':117C,157C,293C 'may':191C,196C,246C,258C 'meetup':318C 'meetups.jquery.com':323C 'meetups.jquery.com/group/jquerylosangeles':322C 'menu':38C,94C,243C,263C 'menutre':2A,84C,128C,140C,174C 'method':202C,234C 'mytre':139C,143C,147C,173C 'need':104C,118C 'new':68C 'none':150C 'ol':271C 'option':188C,195C,209C,222C,228C,280C 'overrid':192C 'page':54C 'pleas':252C,309C 'plugin':3A,23B,29C,53C,58C,69C,75C,85C,110C,129C,130C,185C,224C,301C 'post':11B,82C 'question':308C 'readi':171C 'refer':127C 'repositori':18B 'requir':44C 'script':165C 'see':123C 'select':230C 'set':247C 'setup':167C,282C,290C 'show':60C 'show/hide':211C 'site':319C 'slidetoggl':178C,201C,231C 'slow':255C 'social':13B 'speed':249C,254C,288C 'status':67C 'toggl':199C,233C 'trace':182C,302C 'tracer':74C,300C 'tree':39C,95C 'tri':73C 'true':176C,183C,221C 'ul':277C,295C 'use':15B,49C,120C,131C,163C,197C,205C,225C,299C 'version':51C 'visual':137C	published	pixelhandler
13	## Setup Back-end\n\n1)  Create the api application with rails\n\n\n    rails new journal -d postgresql\n    cd journal\n\n\n2)  Create a migration for `Entry`\n\n\n    rails g migration create_entries name:string\n\n...\n\n    class CreateEntries < ActiveRecord::Migration\n      def change\n        create_table :entries do |t|\n          t.string :name\n        end\n      end\n    end\n    \n\n3)  Configure db\n\n\n    rake db:create\n    rake db:migrate\n\n\n4)  Create a model\n\nIn app/models/entry.rb\n\n\n    class Entry < ActiveRecord::Base\n    end\n\n\n5)  Add a record\n\n\n    rails console\n    Entry.create name: "First entry in my journal app"\n    Entry.all\n    exit\n\n\nCould have used seeds as well, see db/seeds.rb\n\n\n    Entry.create([{ name: 'Using rails as an api' }, { name: 'Using Ember-data for persistence' }])\n\n...\n\n    rake db:seed\n\n\n6)  Create a Serializer\n\nIn app/serializers/entry_serializer.rb\n\n\n    class EntrySerializer < ActiveModel::Serializer\n      attributes :id, :name\n    end\n\n\n7)  Update Gemfile\n\nRemove `gem 'turbolinks'`, add:\n\n    gem 'ember-rails'\n\n\n8)  Remove turbolinks from application layout\n\nIn app/views/layouts/application.html.erb\n\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>Journal</title>\n      <%= stylesheet_link_tag "application", media: "all" %>\n      <%= javascript_include_tag "application" %>\n      <%= csrf_meta_tags %>\n    </head>\n    <body>\n\n\n9)  Update configs\n\nIn environments/production.rb\n\n    config.ember.variant = :production\n\n\nIn environments/development.rb\n\n    config.ember.variant = :development\n\n\nIn environments/test.rb\n\n    config.ember.variant = :development\n\n\n10) Create controllers\n\nIn app/controllers/home_controller.rb\n\n    class HomeController < ApplicationController\n    end\n\n\nIn app/controllers/api/v1/entries_controller.rb\n\n    class Api::V1::EntriesController < ApplicationController\n      respond_to :json\n    \n      def index\n        respond_with Entry.all\n      end\n    \n      def show\n        respond_with Entry.find(params[:id])\n      end\n    \n      private\n    \n      def entry_params\n        params.require(:entry).permit(:name)\n      end\n    end\n\n\n11) Setup a namespace in routes.rb\n\nIn config/routes.rb\n\n    Journal::Application.routes.draw do\n      root to: 'home#index'\n    \n      namespace :api do\n        namespace :v1 do\n          resources :entries, only: [:index, :show]\n        end\n      end\n    end\n\n\n12) Add main `outlet` for ember content in `home#index` template\n\nIn app/views/home/index.erb\n\n    <script type="text/x-handlebars">{{ outlet }}</script>\n\n## Setup Front-end\n\n1)  Generate the Ember app code using CoffeeScript\n\n    rails g ember:bootstrap -g --javascript-engine coffee -n App\n\n\n2)  Download Canary version of ember into `vendor` directory\n\nSee [ember canary builds].\n\n    vendor/assets/javascripts/ember-data-canary.js\n    vendor/assets/javascripts/ember-canary.js\n\n\n[ember canary builds]: http://emberjs.com/builds/#/canary/latest\n\n3)  Also add in jQuery-1.9.1 and Handlebars-1.0.0\n\nJust grab from [emberjs/starter-kit]\n\n[emberjs/starter-kit]: https://github.com/emberjs/starter-kit/tree/master/js/libs\n\n4)  Update application.js for using Sprockets\n\n\n    //= require jquery-1.9.1\n    //= require jquery_ujs\n    //= require handlebars-1.0.0\n    //= require ember-canary\n    //= require ember-data-canary\n    //= require_self\n    //= require app\n    \n    // for more details see: http://emberjs.com/guides/application/\n    App = Ember.Application.create();\n    \n    //= require_tree .\n\n\n5)  Create the Entry model\n\nIn app/assets/javascripts/models/entry.js.coffee\n\n    App.Entry = DS.Model.extend\n      name: DS.attr('string')\n\n\n6)  Create a router\n\nIn app/assets/javascripts/router.js.coffee\n\n    App.Router.map ()->\n      @resource('entries')\n\n\nSee: [routing] guide\n\n[routing]: http://emberjs.com/guides/routing/\n\n7)  Create the Entry route\n\nIn app/assets/javascripts/routes/entries.js.coffee\n\n    App.EntriesRoute = Ember.Route.extend\n      model: ->\n        @get('store').findAll 'entry'\n\n\n8)  Setup the Store (persistence w/ ember-data)\n\nIn app/assets/javascripts/store.js.coffee\n\n    App.ApplicationAdapter = DS.RESTAdapter.extend\n      namespace: 'api/v1'\n      #configure: 'plurals', entry: 'entries'\n\n\nSee [defining-a-store] guide.\n\n[defining-a-store]: http://emberjs.com/guides/models/defining-a-store/\n\n9)  Create a couple handlebars templates\n\nIn app/assets/javascripts/templates/entries.handlebars\n\n    <h1>Entries...</h1>\n    {{#each entry in controller}}\n      {{render "entry" entry}}\n    {{/each}}    \n\nIn app/assets/javascripts/templates/entry.handlebars\n\n    <h2>{{name}}</h2>\n\n## Fire up the app\n\nCommand to start server\n\n    rails server\n\n\nTry it out in your browser, visit:  \n\n* <http://localhost:3000/#/entries>\n* <http://localhost:3000/api/v1/entries.json>\n\n### Credits:\n\nThanks to [Vic Ramon] for posting: [Setting up an Ember App with a Rails Backend]\n\n[Vic Ramon]: http://hashrocket.com/team/vic-ramon\n[Setting up an Ember App with a Rails Backend]: http://hashrocket.com/blog/posts/setting-up-an-ember-app-with-a-rails-backend	**Journal App**\n\nThis is a scaffold for setting up: an API with Rails and the ember-rails gem, persistence with Ember.Data, and a browser app using Ember.js\n\nSee source code on GitHub: [pixelhandler/journal].\n\n[pixelhandler/journal]: https://github.com/pixelhandler/journal	scaffold-for-a-browser-app-built-with-emberjs-rails-emberdata	Scaffold for a browser app built with Ember.js, Rails, Ember.Data	2013-09-24	2015-05-07 17:03:21.287245	2015-05-07 17:03:21.287245	1	'/blog/posts/setting-up-an-ember-app-with-a-rails-backend':552C '/builds/#/canary/latest':347C '/each':494C '/emberjs/starter-kit/tree/master/js/libs':364C '/entries':517C '/guides/application/':399C '/guides/models/defining-a-store/':477C '/guides/routing/':431C '/pixelhandler/journal':48B '/team/vic-ramon':540C '1':53C,308C '1.0.0':356C,379C '1.9.1':353C,373C '10':219C '11':262C '12':291C '2':67C,327C '3':96C,348C '3000':516C '3000/api/v1/entries.json':519C '4':105C,365C '5':116C,404C '6':157C,416C '7':171C,432C '8':182C,446C '9':204C,478C 'activemodel':165C 'activerecord':82C,113C 'add':117C,177C,292C,350C 'also':349C 'api':21B,56C,146C,231C,278C 'api/v1':460C 'app':5A,12B,36B,129C,312C,326C,392C,400C,501C,531C,545C 'app.applicationadapter':457C 'app.entriesroute':439C 'app.entry':411C 'app.router.map':422C 'app/assets/javascripts/models/entry.js.coffee':410C 'app/assets/javascripts/router.js.coffee':421C 'app/assets/javascripts/routes/entries.js.coffee':438C 'app/assets/javascripts/store.js.coffee':456C 'app/assets/javascripts/templates/entries.handlebars':485C 'app/assets/javascripts/templates/entry.handlebars':496C 'app/controllers/api/v1/entries_controller.rb':229C 'app/controllers/home_controller.rb':223C 'app/models/entry.rb':110C 'app/serializers/entry_serializer.rb':162C 'app/views/home/index.erb':303C 'app/views/layouts/application.html.erb':189C 'applic':57C,186C,194C,200C 'application.js':367C 'application.routes.draw':271C 'applicationcontrol':226C,234C 'attribut':167C 'back':51C 'back-end':50C 'backend':535C,549C 'base':114C 'bootstrap':319C 'browser':4A,35B,513C 'build':339C,344C 'built':6A 'canari':329C,338C,343C,383C,388C 'cd':65C 'chang':85C 'class':80C,111C,163C,224C,230C 'code':41B,313C 'coffe':324C 'coffeescript':315C 'command':502C 'config':206C 'config.ember.variant':209C,213C,217C 'config/routes.rb':269C 'configur':97C,461C 'consol':121C 'content':297C 'control':221C,490C 'could':132C 'coupl':481C 'creat':54C,68C,76C,86C,101C,106C,158C,220C,405C,417C,433C,479C 'createentri':81C 'credit':520C 'csrf':201C 'd':63C 'data':151C,387C,454C 'db':98C,100C,103C,155C 'db/seeds.rb':139C 'def':84C,238C,244C,253C 'defin':467C,472C 'defining-a-stor':466C,471C 'detail':395C 'develop':214C,218C 'directori':335C 'download':328C 'ds.attr':414C 'ds.model.extend':412C 'ds.restadapter.extend':458C 'ember':27B,150C,180C,296C,311C,318C,332C,337C,342C,382C,386C,453C,530C,544C 'ember-canari':381C 'ember-data':149C,452C 'ember-data-canari':385C 'ember-rail':26B,179C 'ember.application.create':401C 'ember.data':10A,32B 'ember.js':8A,38B 'ember.route.extend':440C 'emberjs.com':346C,398C,430C,476C 'emberjs.com/builds/#/canary/latest':345C 'emberjs.com/guides/application/':397C 'emberjs.com/guides/models/defining-a-store/':475C 'emberjs.com/guides/routing/':429C 'emberjs/starter-kit':360C,361C 'end':52C,93C,94C,95C,115C,170C,227C,243C,251C,260C,261C,288C,289C,290C,307C 'engin':323C 'entri':72C,77C,88C,112C,125C,254C,257C,284C,407C,424C,435C,445C,463C,464C,486C,488C,492C,493C 'entriescontrol':233C 'entry.all':130C,242C 'entry.create':122C,140C 'entry.find':248C 'entryseri':164C 'environments/development.rb':212C 'environments/production.rb':208C 'environments/test.rb':216C 'exit':131C 'findal':444C 'fire':498C 'first':124C 'front':306C 'front-end':305C 'g':74C,317C,320C 'gem':29B,175C,178C 'gemfil':173C 'generat':309C 'get':442C 'github':43B 'github.com':47B,363C 'github.com/emberjs/starter-kit/tree/master/js/libs':362C 'github.com/pixelhandler/journal':46B 'grab':358C 'guid':427C,470C 'handlebar':355C,378C,482C 'hashrocket.com':539C,551C 'hashrocket.com/blog/posts/setting-up-an-ember-app-with-a-rails-backend':550C 'hashrocket.com/team/vic-ramon':538C 'home':275C,299C 'homecontrol':225C 'id':168C,250C 'includ':198C 'index':239C,276C,286C,300C 'javascript':197C,322C 'javascript-engin':321C 'journal':11B,62C,66C,128C,190C,270C 'jqueri':352C,372C,375C 'json':237C 'layout':187C 'link':192C 'localhost':515C,518C 'main':293C 'media':195C 'meta':202C 'migrat':70C,75C,83C,104C 'model':108C,408C,441C 'n':325C 'name':78C,92C,123C,141C,147C,169C,259C,413C,497C 'namespac':265C,277C,280C,459C 'new':61C 'outlet':294C 'param':249C,255C 'params.require':256C 'permit':258C 'persist':30B,153C,450C 'pixelhandler/journal':44B,45B 'plural':462C 'post':526C 'postgresql':64C 'privat':252C 'product':210C 'rail':9A,23B,28B,59C,60C,73C,120C,143C,181C,316C,506C,534C,548C 'rake':99C,102C,154C 'ramon':524C,537C 'record':119C 'remov':174C,183C 'render':491C 'requir':371C,374C,377C,380C,384C,389C,391C,402C 'resourc':283C,423C 'respond':235C,240C,246C 'root':273C 'rout':426C,428C,436C 'router':419C 'routes.rb':267C 'scaffold':1A,16B 'see':39B,138C,336C,396C,425C,465C 'seed':135C,156C 'self':390C 'serial':160C,166C 'server':505C,507C 'set':18B,527C,541C 'setup':49C,263C,304C,447C 'show':245C,287C 'sourc':40B 'sprocket':370C 'start':504C 'store':443C,449C,469C,474C 'string':79C,415C 'stylesheet':191C 't.string':91C 'tabl':87C 'tag':193C,199C,203C 'templat':301C,483C 'thank':521C 'tree':403C 'tri':508C 'turbolink':176C,184C 'uj':376C 'updat':172C,205C,366C 'use':37B,134C,142C,148C,314C,369C 'v1':232C,281C 'vendor':334C 'vendor/assets/javascripts/ember-canary.js':341C 'vendor/assets/javascripts/ember-data-canary.js':340C 'version':330C 'vic':523C,536C 'visit':514C 'w':451C 'well':137C	published	pixelhandler
7	## Converting a Micro Library of Components to an Ember CLI Addon\n\nI have a simple micro library of components that I wanted to convert to an [Ember CLI] Addon. The [Ember Off Canvas Components] repository contains a group of Ember.js Components that interact to create an [Off Canvas] layout for use in a web application (powered by Ember). Here is an example of that interface included in another library: [UIkit Off-canvas]. I'm betting on the idea that most developers would rather pick a component (for the needs in the application they are creating) versus pick an entire UI library that has some common functionality.\n\nI was inspired by the [Liquid Fire] packaging which includes standalone files with each release for developers who are not yet using Ember CLI. The [developing addons] documentation for Ember CLI outlines the process of creating an Addon. I found that the [packaging][Liquid Fire packaging] scripts in the Liquid Fire repository were straight forward and a good template for including a secondary build of a standalone release.\n\nPrior to converting the off canvas components library to an addon I used [Emberella Component Blueprint] which provided great tooling for component development. Most of the successful platforms or content management systems that I've used over the past ten years has some type of a marketplace, bundle or packing solution for extending a framework. The [Ember Addons] website aggregates and provides a searchable collection of ember addons (NPM packages tagged with the ember-addon keyword). Which is a desirable way to share and find extensions for developing applications with Ember.js.\n\nI was on the fence for some time about using Ember CLI addons for components, at first it seemed that addons should be for tooling only; specific to extending the functionity (tooling) that Ember CLI provides. However, after some consideration and after using the standalone release of Liquid Fire it seemed to me that the time was right to give components (as addons) a chance. I've used Ember CLI for some time and now use it during my day job too. I've found that using a common set of development tools is desireable. I like using Testem, Broccoli, Ember QUnit helpers; for me, (my personal) developer happiness increases when I can standardize the way I develop for both applications and libraries. I expect that it would also be a nice-to-have for developers who may eventually work on code I've shipped, perhaps someone like Elad <https://twitter.com/Elad/status/537037555154554880>.\n\n## A Practical Example\n\nSo here is a practical guide on how to develop an addon for a component or group of components that work together...\n\nThe [Ember 2.0 RFC] mentions "...communication between components is often most naturally expressed as events or callbacks." which resonates with me. The off-canvas components addon facilitates communication between components using browser events (and bubbling). I did not use any bindings between components or a special dependency as an evented mediator between the components. The browser already provide events, so the components simply talk via custom events which need to be registered with [Ember.Application.customEvents]\n\nSince I've already shipped the off-canvas components library and it's used in a production application, I thought that it would be a valuable exercise to convert from a custom build to a more common build using Ember CLI. So, I started with following the docs for [developing addons]. But, I quickly found myself scratching my head. As I followed the guide, questions like "How do I..." and "Why do I do this..." began to interupt me. I hope that this replay of the process I found successful (in buiding an addon of components) will help others find some clartity.\n\nIf you are interested, perhaps peruse my [commit history] while converting over. from commit/0df9223 on 11/19/14 thru 63b84d8 on 11/22/14.\n\nAs I followed the docs and attempted to create an addon, I took note of a few topics that interested me or caused some curiosity.\n\nI took the approach of using the `addon` folder for the components source code and importing the prototypes in the `app` directory. This seemed like the best way to provide a component that can be used as-is; and can be easily extended or changed at-will by the consuming application developer who may need to extend or re-open the prototype in their own application source code.\n\n[Ember.js]: http://emberjs.com\n[Ember.Component]: http://emberjs.com/api/classes/Ember.Component.html\n[Web Components]: http://webcomponents.org\n[Ember 2.0 RFC]: https://github.com/emberjs/rfcs/pull/15\n[Ember CLI]: http://www.ember-cli.com\n[Ember Off Canvas Components]: https://github.com/pixelhandler/ember-off-canvas-components\n[Off Canvas]: http://jasonweaver.name/lab/offcanvas/\n[UIkit Off-canvas]: http://getuikit.com/docs/offcanvas.html\n[Liquid Fire]: https://github.com/ef4/liquid-fire\n[Liquid Fire packaging]: https://github.com/ef4/liquid-fire/tree/master/packaging\n[Emberella Component Blueprint]: https://github.com/realityendshere/emberella-component-blueprint\n[developing addons]: http://www.ember-cli.com/#developing-addons-and-blueprints\n[Ember Addons]: http://www.emberaddons.com\n[Ember.Application.customEvents]: http://emberjs.com/api/classes/Ember.Application.html#property_customEvents\n[commit history]: https://github.com/pixelhandler/ember-off-canvas-components/commits/master\n\n\n## Start by Generating the Files you Need\n\nThe docs suggest using the `ember` command to generate an addon then to generate the building blocks you will include in your addon.\n\n`ember addon ember-off-canvas-components` is the command I used to kick off the scaffold of my converstion to an addon.\n\nNext, use the `ember generate component` command to create the basic files you need for a component, including unit test files.\n\nYou can update the test with any test code you've already written or perhaps take the opportunity to mint a fresh new test.\n\nTo begin, a super simple test should fail, if you add an assertion for using [Custom Elements]. ([Web Components] use [Custom Elements], right?)\n\n[Custom Elements]: http://w3c.github.io/webcomponents/spec/custom/\n[Web Components]: http://www.w3.org/TR/components-intro/\n\n```javascript\nimport { moduleForComponent, test } from 'ember-qunit';\n\nmoduleForComponent('on-canvas', 'OnCanvasComponent');\n\ntest('it renders element with tagName on-canvas', function() {\n  expect(3);\n\n  var component = this.subject();\n  equal(component._state, 'preRender');\n\n  this.append();\n  equal(component._state, 'inDOM');\n  equal(component.get('element').tagName, 'on-canvas'.toUpperCase(), 'matches `on-canvas`');\n});\n```\n\nThen I copied over the code for this component (this is the simplest one, all I needed was to use a custom element). After the `ember generate component on-canvas` command I copied the generated code into the `addon/components` directory.\n\n```javascript\nimport Ember from 'ember';\n\n/**\n  To use this component in your app, add this to a template:\n\n  ```handlebars\n  {{#on-canvas}}\n    {{#off-canvas-opener}}\n      <i class="fa fa-bars"></i>\n    {{/off-canvas-opener}}\n    <div class="on-canvas-body">\n      On Canvas Contents\n    </div>\n  {{/on-canvas}}\n  ```\n\n  @extends Ember.Component\n*/\n\nexport default Ember.Component.extend({\n  /**\n    The type of element to render this view into. By default, samples will appear\n    as `<on-canvas/>` elements.\n\n    @property tagName\n    @type String\n  */\n  tagName: 'on-canvas',\n\n  classNames: ['on-canvas-default']\n});\n```\n\nNext, I changed the module that was generated, `app/components/on-canvas.js`, to only import the prototype from the addon directory.\n\n```javascript\nimport OnCanvasComponent from 'ember-off-canvas-components/components/on-canvas';\n\nexport default OnCanvasComponent;\n```\n\n\n## What About Initializers?\n\nI mentioned that the components talk using custom events, well the Ember Application will need to register the `customEvents`.\n\nFor example on click the component may toggle the display of the off canvas panel like so:\n\n```javascript\nclick: function (evt) {\n  var eventName;\n  if (this.get('useToggle')) {\n    eventName = 'toggleOffCanvas';\n  } else {\n    eventName = 'expandOffCanvas';\n  }\n  Ember.$(evt.target).trigger(eventName);\n  return false;\n}\n```\n\nThis requires an initializer to register the custom events I used in the group of components: `toggleOffCanvas`, `expandOffCanvas`, and `collapseOffCanvas`. \n\nAgain, using the command `ember generate initializer custom-events` creates the file I need in the `app/initializers` directory. I did the same thing I did with the component, I copied the generated file to `addon/initializers/custom-events.js` then pasted and updated the initializer code.\n\n```javascript\nimport Ember from 'ember';\n\nexport function initialize(container, application) {\n  var customEvents = application.get('customEvents') || {};\n  Ember.String.w('toggle expand collapse').forEach(function (prefix) {\n    var name = Ember.String.fmt("%@OffCanvas", prefix);\n    customEvents[name] = name;\n  });\n  application.set('customEvents', customEvents);\n}\n\nexport default {\n  name: 'ember-off-canvas-components/custom-events',\n  initialize: Ember.K\n};\n```\n\nThe initializer exports the `initialize` method which I import in the application. This will be come handy as I will need to import this initialzer in the app directory for apps consuming the addon as well as utilize the initializer in the packaging scripts for the standalone release to accompany each release of the addon.\n\nIn `app/initializers/eoc-custom-events.js` I added:\n\n```javascript\nimport { initialize } from 'ember-off-canvas-components/initializers/custom-events';\n\nexport default {\n  name: 'eoc-custom-events',\n  initialize: initialize\n};\n```\n\nI used a different name for the initializer, as I had some errors in the browser console about the name of the initializer 'custom-events' already being registered. So, I didn't fight it, just added a prefix.\n\nInitializers can be tested too; the ember generator already setup a unit test file. In `tests/unit/initializers/custom-events-test.js`:\n\n```javascript\nimport Ember from 'ember';\nimport { initialize } from 'ember-off-canvas-components/initializers/custom-events';\n\nvar container, application;\n\nmodule('CustomEventsInitializer', {\n  setup: function() {\n    Ember.run(function() {\n      container = new Ember.Container();\n      application = Ember.Application.create();\n      application.deferReadiness();\n    });\n  }\n});\n\ntest('it sets customEvents on the application', function() {\n  expect(1);\n\n  initialize(container, application);\n\n  var expected = {\n    toggleOffCanvas: "toggleOffCanvas",\n    expandOffCanvas: "expandOffCanvas",\n    collapseOffCanvas: "collapseOffCanvas"\n  };\n\n  deepEqual(application.customEvents, expected);\n});\n```\n\n## What About an Example App for gh-pages?\n\nEmber CLI includes a `dummy` app that you can work with during development with the `ember server` command or use as a demo app with the `ember build` script which builds the dummy app in your `/dist` directory. Here is the [demo] I created with the dummy app.\n\n[demo]: http://pixelhandler.github.io/ember-off-canvas-components/\n\nIn `tests/dummy` there are folders for `app`, `config`, and `public`, the makings of an ember application. In the [dummy directory] I added a few files I had already used in the previous iteration of this library (the pre-ember-cli version) as an example app. So I created the needed index controller and route, as well as templates for the application, index and a partial off-canvas template. I copied a few styles to the dummy app too. I needed to update the `tests/dummy/config/environment.js` to add a custom `contentSecurityPolicy` with settings to squelch some noisy errors in the browser console since I used font-awesome, `'style-src'` needed `'unsafe-inline'` and a cdn link. Perhaps research `contentSecurityPolicy` to setup your demo (dummy application) to your liking.\n\nLike developing a application with ember-cli, the `ember server` command rebuilds the source of the dummy app as you edit the code.\n\n[dummy directory]: https://github.com/pixelhandler/ember-off-canvas-components/tree/master/tests/dummy\n\nI used the `ember build` command then copy the output from the `/dist` directory to a separate `gh-pages` branch to share a demo app with the repository on Github.\n\n\n## So you want to use SASS, me too\n\nI had to consider a few concerns and curiosities in order to include node-sass as a dev dependency. After some trial and error, I found...\n\n1. Brocfile doesn’t import vendor files, index.js does\n2. I need a custom script for compiling CSS with node-sass and execute the compile step in the Brocfile\n3. No need to include the generated CSS in the repo - .gitignore the compiled CSS file(s)\n\nI ended up writing a script to compile the SASS to CSS and write the style sheet for the custom elements in the `/vendor` directory.\n\n* For SASS I used a directory `addon/styles/scss` for the .scss files, and setup `config/environment.js` with paths for compiling/output.\n\nThe compile-css.js script:\n\n```javascript\n/* global require, module */\nvar sass = require('node-sass');\nvar path = require('path');\n\nmodule.exports = function (env) {\n  env = env || 'development';\n  var configPath = path.resolve(__dirname, 'config/environment');\n  var config = require(configPath)(env);\n  var cssFile = 'vendor/' + config.addonPrefix + '.css';\n  var vendorFile = path.resolve(__dirname, cssFile);\n\n  sass.renderFile({\n    file: path.resolve(__dirname, config.sassMain),\n    success: function(/*css*/) {\n      console.log('node-sass compiled', vendorFile.split(__dirname)[1]);\n    },\n    error: function(error) {\n      console.error(error);\n    },\n    includePaths: [ path.resolve(__dirname, config.sassIncludePath) ],\n    outputStyle: (env === 'development') ? 'nested' : 'compressed',\n    outFile: vendorFile,\n    precision: 5,\n    sourceMap: (env === 'development')\n  });\n};\n```\n\nI added a `sass` script to the package.json file, which uses the above compile script, `"sass": "node -e \\"require('./compile-css.js')()\\""`.\n\nThe compile script is called from the Brocfile I expect that the css will be compiled on each change. \n\n```javascript\n/* global require, module */\nvar EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\nvar app = new EmberAddon();\n\nrequire('./compile-css')(app.env);\n\nmodule.exports = app.toTree();\n```\n\nSince the repository now has a dependency to compile SASS to CSS I added a `postinstall` script in the package.json using a shell script `postinstall.sh`:\n\n```bash\n#!/bin/sh\n\necho "postinstall..."\n\necho "installing bower dependendies"\nnpm install bower\n./node_modules/.bin/bower install\n\necho "installing node-sass"\nnpm install node-sass\n\necho "compiling CSS to /vendor with node-sass"\n./node_modules/.bin/node-sass ./addon/styles/scss/main.scss ./vendor/ember-off-canvas-components.css\n```\n\n\n## Ok, Ship It!\n\nIf your only targeted users are ember-cli users then just edit the package.json file, perhaps add a .npmignore file and surprise the travis config just works out of the box.\n\nSo are you telling me that I can develop [Web Components] and ship them with Ember CLI. No and yes, wait. I plan to do a followup post on using Native Web Components with an Ember component utilizing the strengths of Ember bindings. That's another topic for [Custom Elements], [HTML Imports], [Template] and [Shadow DOM]. Ember Components are currently isolated views, "An `Ember.Component` is a view that is completely isolated... There is no access to the surrounding context or outer controller; all contextual information must be passed in". But remember the Ember 2.0 rfc topic is filled with plans for components. That said developing component will become a significant area of focus for developers working with Ember.\n\n[HTML Imports]: http://w3c.github.io/webcomponents/spec/imports/\n[Template]: https://html.spec.whatwg.org/multipage/scripting.html#the-template-element\n[Shadow DOM]: http://w3c.github.io/webcomponents/spec/shadow/\n\nThat said, the genterated package.json file is already tagged with the `ember-addon` keyword. So you can login and publish at will.\n\n1. `npm login` follow the prompts, of course you will need a [npmjs.org] account\n2. `npm publish .` from inside the root directory of your addon\n\n[npmjs.org]: https://www.npmjs.org\n\n### Build, Test and Release\n\nI wrote a script `prepublish.sh` to use in the package.json scripts do the `prepublish` tasks of cleaning, building and executing tests.\n\n```bash\n#!/bin/sh\n\necho "clean vendor directory..."\nrm -fr ./vendor/*\n\necho "build and test..."\nember build\nember test\n\necho "building global/shim dist files..."\nrm -fr ./dist\ncd ./packaging\n../node_modules/.bin/broccoli build ../dist\n```\n\nAfter considering what will be published and trying out the prepublish script I made a few more tweeks:\n\n* Packaging builds standalone library files (.js and .css) to the main `/dist` directory. See the Standalone section for more details on packaging.\n* `config/envrionment.js` file needs development and test envrionment definitions\n* Add a `.npmignore` file to ignore the client dependency files for the NPM release.\n* in package.json set the main file to index.js\n\nBefore I actually published the a release on [npmjs.org] I wanted to provide a standalone release for developers not yet using Ember CLI. You can too, read on...\n\nI added a `clean` script to the package.json and use the clean and prepublish scripts to npm publish a version (npm login req) so prior to `npm login` and `npm publish .` I run `npm run clean`. The `prepublish` script will be run with the publish command.\n\n\n### Can any Ember Developer Use my Addon?\n\nIf you take a few steps to learn [Broccoli] to package up a standalone release. Hey someone has already done the heavy lifting. I'm hoping that the [Liquid Fire packaging] scripts will themselves become an addon.\n\n[Broccoli]: https://github.com/broccolijs/broccoli\n\n\n## A Standalone Release\n\nWith the Ember Off Canvas Components addon/library I included a copy of the Liquid Fire packaing scripts with a few customizations and generalization changes. See the [ember-off-canvas-components packaging] and [packaging README].\n\nThe Brocfile.js, registry.js, and wrap.js have a couple generalization changes to use the [addon config]\n\n[packaging README]: https://github.com/pixelhandler/ember-off-canvas-components/blob/master/packaging/README-packaging.md\n[ember-off-canvas-components packaging]: https://github.com/pixelhandler/ember-off-canvas-components/tree/master/packaging\n[addon config]: https://github.com/pixelhandler/ember-off-canvas-components/blob/master/config/environment.js\n\nThen there is the custom needs for shipping a library aside from Ember CLI. The standalone release of the addon will need to register the components in the Application continer so you can use the fancy helpers in the templates, e.g. `{{#off-canvas}}{{/off-canvas}}` (once HTMLBars lands that will look much more like a component). Also the standalone release will need to run any initializers you provide in your addon.\n\n### Exporting to a Global\n\nCreate an `index.js` in the addon folder for exporting the library attached to a global variable with a standalone build, like so:\n\n```javascript\nimport EOCViewportComponent from './components/eoc-viewport';\nimport OnCanvasComponent from './components/on-canvas';\nimport OffCanvasComponent from './components/off-canvas';\nimport OffCanvasOpenerComponent from './components/off-canvas-opener';\nimport OffCanvasCloserComponent from './components/off-canvas-closer';\n\nexport {\n  EOCViewportComponent,\n  OnCanvasComponent,\n  OffCanvasComponent,\n  OffCanvasOpenerComponent,\n  OffCanvasCloserComponent\n};\n```\n\nThis above export is not needed by an addon, but I guess you could use it as an entry point if you choose to.\n\n\n### The Glue\n\nThe packaging scripts utilize a glue.js file to meet the needs of shipping a standalone release.\n\nThe following is used to ship the library code and provide access on a global variable, `window.EmberOffCanvasComponents` it uses the index.js file in the root of the addon directory to import assign. It also uses a shim to add the container references. Finally, I wrapped the addon's initializer to register custom events using a `ember-off-canvas-components-shim` initializer.\n\n```javascript\n/* global define, require, window */\nvar addonName = 'ember-off-canvas-components';\n\ndefine('ember', ["exports"], function(__exports__) {\n  __exports__['default'] = window.Ember;\n});\n\nvar index = addonName + '/index';\ndefine(addonName, ["exports"], function(__exports__) {\n  var library = require(index);\n  Object.keys(lf).forEach(function(key) {\n    __exports__[key] = library[key];\n  });\n});\n\n// Glue library to a global var\nwindow.EmberOffCanvasComponents = window.EOC = require(index);\n\n// Register library items in the container\nvar shim = addonName + '-shim';\nwindow.Ember.Application.initializer({\n  name: shim,\n\n  initialize: function(container) {\n    require(shim).initialize(container);\n  }\n});\n\n// Register Custom Events on the Application\nvar customEventsInitializer = 'ember-off-canvas-components/initializers/custom-events';\nwindow.Ember.Application.initializer({\n  name: customEventsInitializer,\n\n  initialize: function(container, application) {\n    var customEvents = require(customEventsInitializer);\n    customEvents.initialize(container, application);\n  }\n});\n```\n\n## That's a Wrap\n\nWell now that the repository has tools available using `ember` and `npm run` on the command line. A few scripts were needed for post installation, pre-publishing, compiling CSS, and building a standalone release. Now, the [Ember Off Canvas Components] addon can be found on [Ember Addons] or with `npm search`. Developers can use the library with `npm install --save-dev pixelhandler/ember-off-canvas-components`\n\nWithout too much effort, the micro library of Ember Components can be created, tested, released and consumed by application developers.\n\nI'm looking forward to developing and sharing more components as Ember CLI addons.	Day in and day out, I build JavaScript applications with [Ember.js]. Occasionally, I am able to pull out a chunk of code and share it on Github. It would be great to have a searchable resource for discovering components focused on Ember development. [Web Components] can be shared as building blocks for application development. Since components are among the the leading topics of the [Ember 2.0 RFC] which address simplifying Ember concepts, I think they are great candidates for sharing as Ember CLI Addons.\n\nThis practical example walks through the process of creating and distributing a micro library for sharing component(s) using [Ember CLI].\n\n[Ember.js]: http://emberjs.com\n[Web Components]: http://webcomponents.org\n[Ember.Component]: http://emberjs.com/api/classes/Ember.Component.html\n[Ember 2.0 RFC]: https://github.com/emberjs/rfcs/pull/15\n[Ember CLI]: http://www.ember-cli.com	develop-embercomponents-for-sharing-as-ember-cli-addons-a-practical-example	Develop Ember.Components for Sharing as Ember CLI Addons, A Practical Example	2014-11-25	2015-05-07 17:03:21.251509	2015-05-07 17:03:21.251509	1	'/#developing-addons-and-blueprints':932C '/addon/styles/scss/main.scss':2185C '/api/classes/ember.application.html#property_customevents':939C '/api/classes/ember.component.html':125B,879C '/bin/sh':2153C,2430C '/broccolijs/broccoli':2650C '/compile-css':2123C '/compile-css.js':2087C '/components/eoc-viewport':2824C '/components/off-canvas':2832C '/components/off-canvas-closer':2840C '/components/off-canvas-opener':2836C '/components/on-canvas':1255C,2828C '/custom-events':1422C '/dist':1656C,1844C,2453C,2458C,2488C '/docs/offcanvas.html':910C '/ef4/liquid-fire':915C '/ef4/liquid-fire/tree/master/packaging':921C '/elad/status/537037555154554880':554C '/ember-off-canvas-components/':1671C '/emberjs/rfcs/pull/15':131B,888C '/index':2974C '/initializers/custom-events':1493C,1571C,3036C '/lab/offcanvas/':903C '/lib/broccoli/ember-addon':2117C '/multipage/scripting.html#the-template-element':2348C '/node_modules/.bin/bower':2163C '/node_modules/.bin/broccoli':2456C '/node_modules/.bin/node-sass':2184C '/off-canvas':2767C '/off-canvas-opener':1189C '/on-canvas':1193C '/packaging':2455C '/pixelhandler/ember-off-canvas-components':898C '/pixelhandler/ember-off-canvas-components/blob/master/config/environment.js':2722C '/pixelhandler/ember-off-canvas-components/blob/master/packaging/readme-packaging.md':2708C '/pixelhandler/ember-off-canvas-components/commits/master':944C '/pixelhandler/ember-off-canvas-components/tree/master/packaging':2717C '/pixelhandler/ember-off-canvas-components/tree/master/tests/dummy':1831C '/realityendshere/emberella-component-blueprint':927C '/tr/components-intro/':1075C '/vendor':1968C,2179C,2437C '/vendor/ember-off-canvas-components.css':2186C '/webcomponents/spec/custom/':1070C '/webcomponents/spec/imports/':2344C '/webcomponents/spec/shadow/':2353C '1':1596C,1898C,2046C,2377C '11/19/14':773C '11/22/14':777C '2':1907C,2391C '2.0':77B,127B,582C,884C,2315C '3':1100C,1928C '5':2064C '63b84d8':775C 'abl':26B 'access':2296C,2900C 'accompani':1474C 'account':2390C 'actual':2531C 'ad':1483C,1539C,1693C,2069C,2140C,2558C 'add':1053C,1176C,1759C,2207C,2507C,2927C 'addon':8A,95B,145C,163C,268C,279C,320C,367C,377C,385C,414C,422C,464C,569C,606C,706C,749C,788C,810C,929C,934C,962C,974C,976C,997C,1244C,1458C,1479C,2367C,2401C,2609C,2646C,2702C,2718C,2742C,2793C,2803C,2855C,2916C,2935C,3096C,3102C,3152C 'addon/components':1162C 'addon/initializers/custom-events.js':1373C 'addon/library':2660C 'addon/styles/scss':1976C 'addonnam':2957C,2973C,2976C,3011C 'address':80B 'aggreg':369C 'alreadi':637C,658C,1030C,1529C,1550C,1699C,2361C,2628C 'also':530C,2779C,2922C 'among':69B 'anoth':202C,2267C 'app':823C,1175C,1452C,1455C,1615C,1625C,1643C,1653C,1667C,1678C,1717C,1750C,1821C,1857C,2119C 'app.env':2124C 'app.totree':2126C 'app/components/on-canvas.js':1236C 'app/initializers':1355C 'app/initializers/eoc-custom-events.js':1481C 'appear':1212C 'applic':20B,64B,189C,227C,399C,522C,673C,855C,871C,1274C,1390C,1436C,1574C,1584C,1593C,1599C,1687C,1733C,1799C,1806C,2751C,3028C,3043C,3050C,3137C 'application.customevents':1609C 'application.deferreadiness':1586C 'application.get':1393C 'application.set':1411C 'approach':806C 'area':2332C 'as-i':839C 'asid':2733C 'assert':1055C 'assign':2920C 'at-wil':849C 'attach':2809C 'attempt':784C 'avail':3062C 'awesom':1779C 'bash':2152C,2429C 'basic':1008C 'becom':2329C,2644C 'began':731C 'begin':1044C 'best':829C 'bet':210C 'bind':621C,2264C 'block':62B,968C 'blueprint':325C,924C 'bower':2158C,2162C 'box':2221C 'branch':1852C 'broccoli':501C,2618C,2647C 'brocfil':1899C,1927C,2095C 'brocfile.js':2690C 'browser':612C,636C,1518C,1772C 'bubbl':615C 'buid':747C 'build':18B,61B,305C,688C,693C,967C,1647C,1650C,1836C,2404C,2425C,2439C,2443C,2447C,2457C,2478C,2817C,3086C 'bundl':357C 'call':2092C 'callback':596C 'candid':89B 'canva':167C,182C,207C,315C,604C,663C,894C,900C,907C,980C,1087C,1097C,1117C,1122C,1153C,1184C,1187C,1191C,1222C,1226C,1253C,1294C,1420C,1491C,1569C,1740C,2658C,2683C,2712C,2766C,2947C,2961C,3034C,3094C 'caus':800C 'cd':2454C 'cdn':1789C 'chanc':466C 'chang':848C,1230C,2106C,2677C,2698C 'choos':2869C 'chunk':31B 'clartiti':757C 'classnam':1223C 'clean':2424C,2432C,2560C,2568C,2592C 'cli':7A,94B,116B,133B,144C,162C,265C,272C,413C,436C,471C,696C,890C,1621C,1712C,1810C,2116C,2198C,2238C,2551C,2736C,3151C 'click':1284C,1299C 'client':2514C 'code':33B,544C,816C,873C,1027C,1128C,1159C,1380C,1826C,2897C 'collaps':1399C 'collapseoffcanva':1337C,1606C,1607C 'collect':374C 'come':1440C 'command':958C,984C,1004C,1154C,1341C,1637C,1814C,1837C,2602C,3070C 'commit':765C,940C 'commit/0df9223':771C 'common':240C,490C,692C 'communic':585C,608C 'compil':1914C,1923C,1941C,1952C,2043C,2081C,2089C,2103C,2135C,2176C,3083C 'compile-css.js':1989C 'compiling/output':1987C 'complet':2291C 'compon':50B,56B,67B,112B,120B,140C,153C,168C,175C,221C,316C,324C,331C,416C,462C,572C,576C,587C,605C,610C,623C,634C,642C,664C,751C,814C,834C,881C,895C,923C,981C,1003C,1014C,1061C,1072C,1102C,1131C,1150C,1172C,1254C,1266C,1286C,1333C,1366C,1421C,1492C,1570C,2232C,2254C,2258C,2279C,2323C,2327C,2659C,2684C,2713C,2748C,2778C,2948C,2962C,3035C,3095C,3128C,3148C 'component._state':1105C,1109C 'component.get':1112C 'compress':2060C 'concept':83B 'concern':1877C 'config':1679C,2017C,2215C,2703C,2719C 'config.addonprefix':2024C 'config.sassincludepath':2055C 'config.sassmain':2035C 'config/environment':2015C 'config/environment.js':1983C 'config/envrionment.js':2499C 'configpath':2012C,2019C 'consid':1874C,2460C 'consider':441C 'consol':1519C,1773C 'console.error':2050C 'console.log':2039C 'consum':854C,1456C,3135C 'contain':170C,1389C,1573C,1581C,1598C,2929C,3008C,3018C,3022C,3042C,3049C 'content':339C,1192C 'contentsecuritypolici':1762C,1793C 'context':2300C 'contextu':2305C 'contin':2752C 'control':1724C,2303C 'converst':994C 'convert':135C,158C,312C,684C,768C 'copi':1125C,1156C,1368C,1743C,1839C,2664C 'could':2860C 'coupl':2696C 'cours':2384C 'creat':104B,179C,230C,277C,786C,1006C,1348C,1663C,1720C,2798C,3131C 'css':1915C,1935C,1942C,1956C,2025C,2038C,2100C,2138C,2177C,2484C,3084C 'cssfile':2022C,2030C 'curios':802C,1879C 'current':2281C 'custom':646C,687C,1058C,1063C,1066C,1144C,1269C,1325C,1346C,1499C,1527C,1761C,1911C,1964C,2270C,2674C,2727C,2940C,3024C 'custom-ev':1345C,1526C 'customev':1280C,1392C,1394C,1408C,1412C,1413C,1590C,3045C 'customevents.initialize':3048C 'customeventsiniti':1576C,3030C,3039C,3047C 'day':12B,15B,481C 'deepequ':1608C 'default':1197C,1209C,1227C,1257C,1415C,1495C,2969C 'defin':2953C,2963C,2975C 'definit':2506C 'demo':1642C,1661C,1668C,1797C,1856C 'depend':627C,1890C,2133C,2515C 'dependendi':2159C 'desir':390C,496C 'detail':2496C 'dev':1889C,3117C 'develop':1A,54B,65B,216C,258C,267C,332C,398C,493C,509C,519C,538C,567C,705C,856C,928C,1632C,1804C,2010C,2058C,2067C,2230C,2326C,2336C,2502C,2546C,2606C,3107C,3138C,3144C 'didn':1534C 'differ':1506C 'directori':824C,1163C,1245C,1356C,1453C,1657C,1691C,1828C,1845C,1969C,1975C,2398C,2434C,2489C,2917C 'dirnam':2014C,2029C,2034C,2045C,2054C 'discov':49B 'display':1290C 'dist':2449C 'distribut':106B 'doc':703C,782C,953C 'document':269C 'doesn':1900C 'dom':2277C,2350C 'done':2629C 'dummi':1624C,1652C,1666C,1690C,1749C,1798C,1820C,1827C 'e':2085C 'e.g':2763C 'easili':845C 'echo':2154C,2156C,2165C,2175C,2431C,2438C,2446C 'edit':1824C,2202C 'effort':3122C 'elad':551C 'element':1059C,1064C,1067C,1092C,1113C,1145C,1202C,1214C,1965C,2271C 'els':1309C 'ember':6A,53B,76B,82B,93B,115B,126B,132B,143C,161C,165C,192C,264C,271C,366C,376C,384C,412C,435C,470C,502C,581C,695C,883C,889C,892C,933C,957C,975C,978C,1001C,1082C,1148C,1166C,1168C,1251C,1273C,1312C,1342C,1383C,1385C,1418C,1489C,1548C,1560C,1562C,1567C,1620C,1635C,1646C,1686C,1711C,1809C,1812C,1835C,2115C,2197C,2237C,2257C,2263C,2278C,2314C,2339C,2366C,2442C,2444C,2550C,2605C,2656C,2681C,2710C,2735C,2945C,2959C,2964C,3032C,3064C,3092C,3101C,3127C,3150C 'ember-addon':383C,2365C 'ember-c':1808C,2114C,2196C 'ember-off-canvas-compon':977C,1250C,1417C,1488C,1566C,2680C,2709C,2958C,3031C 'ember-off-canvas-components-shim':2944C 'ember-qunit':1081C 'ember.application.create':1585C 'ember.application.customevents':654C,936C 'ember.component':122B,876C,1195C,2285C 'ember.component.extend':1198C 'ember.components':2A 'ember.container':1583C 'ember.js':22B,117B,174C,401C,874C 'ember.k':1424C 'ember.run':1579C 'ember.string':1395C 'ember.string.fmt':1405C 'emberaddon':2112C,2121C 'emberella':323C,922C 'emberjs.com':118B,124B,875C,878C,938C 'emberjs.com/api/classes/ember.application.html#property_customevents':937C 'emberjs.com/api/classes/ember.component.html':123B,877C 'end':1946C 'entir':234C 'entri':2865C 'env':2007C,2008C,2009C,2020C,2057C,2066C 'envrion':2505C 'eoc':1498C 'eoc-custom-ev':1497C 'eocviewportcompon':2822C,2842C 'equal':1104C,1108C,1111C 'error':1515C,1769C,1895C,2047C,2049C,2051C 'event':594C,613C,630C,639C,647C,1270C,1326C,1347C,1500C,1528C,2941C,3025C 'eventnam':1303C,1307C,1310C,1315C 'eventu':541C 'evt':1301C 'evt.target':1313C 'exampl':11A,98B,196C,557C,1282C,1614C,1716C 'execut':1921C,2427C 'exercis':682C 'expand':1398C 'expandoffcanva':1311C,1335C,1604C,1605C 'expect':526C,1099C,1595C,1601C,1610C,2097C 'export':1196C,1256C,1386C,1414C,1427C,1494C,2794C,2806C,2841C,2849C,2965C,2967C,2968C,2977C,2979C,2989C 'express':592C 'extend':362C,430C,846C,861C,1194C 'extens':396C 'facilit':607C 'fail':1050C 'fals':1317C 'fanci':2758C 'fenc':406C 'fight':1536C 'file':253C,949C,1009C,1018C,1350C,1371C,1555C,1696C,1904C,1943C,1980C,2032C,2076C,2205C,2210C,2359C,2450C,2481C,2500C,2510C,2516C,2526C,2879C,2910C 'fill':2319C 'final':2931C 'find':395C,755C 'fire':248C,286C,292C,450C,912C,917C,2639C,2668C 'first':418C 'focus':51B,2334C 'folder':811C,1676C,2804C 'follow':701C,717C,780C,2380C,2890C 'followup':2248C 'font':1778C 'font-awesom':1777C 'foreach':1400C,2986C 'forward':296C,3142C 'found':281C,486C,710C,744C,1897C,3099C 'fr':2436C,2452C 'framework':364C 'fresh':1040C 'function':241C,432C,1098C,1300C,1387C,1401C,1578C,1580C,1594C,2006C,2037C,2048C,2966C,2978C,2987C,3017C,3041C 'general':2676C,2697C 'generat':947C,960C,965C,1002C,1149C,1158C,1235C,1343C,1370C,1549C,1934C 'genter':2357C 'getuikit.com':909C 'getuikit.com/docs/offcanvas.html':908C 'gh':1618C,1850C 'gh-page':1617C,1849C 'github':38B,1862C 'github.com':130B,887C,897C,914C,920C,926C,943C,1830C,2649C,2707C,2716C,2721C 'github.com/broccolijs/broccoli':2648C 'github.com/ef4/liquid-fire':913C 'github.com/ef4/liquid-fire/tree/master/packaging':919C 'github.com/emberjs/rfcs/pull/15':129B,886C 'github.com/pixelhandler/ember-off-canvas-components':896C 'github.com/pixelhandler/ember-off-canvas-components/blob/master/config/environment.js':2720C 'github.com/pixelhandler/ember-off-canvas-components/blob/master/packaging/readme-packaging.md':2706C 'github.com/pixelhandler/ember-off-canvas-components/commits/master':942C 'github.com/pixelhandler/ember-off-canvas-components/tree/master/packaging':2715C 'github.com/pixelhandler/ember-off-canvas-components/tree/master/tests/dummy':1829C 'github.com/realityendshere/emberella-component-blueprint':925C 'gitignor':1939C 'give':461C 'global':1992C,2108C,2797C,2812C,2903C,2952C,2997C 'global/shim':2448C 'glue':2872C,2993C 'glue.js':2878C 'good':299C 'great':42B,88B,328C 'group':172C,574C,1331C 'guess':2858C 'guid':563C,719C 'handi':1441C 'handlebar':1181C 'happi':510C 'head':714C 'heavi':2631C 'help':753C 'helper':504C,2759C 'hey':2625C 'histori':766C,941C 'hope':736C,2635C 'howev':438C 'html':2272C,2340C 'html.spec.whatwg.org':2347C 'html.spec.whatwg.org/multipage/scripting.html#the-template-element':2346C 'htmlbar':2769C 'idea':213C 'ignor':2512C 'import':818C,1077C,1165C,1239C,1247C,1382C,1433C,1447C,1485C,1559C,1563C,1902C,2273C,2341C,2821C,2825C,2829C,2833C,2837C,2919C 'includ':200C,251C,302C,971C,1015C,1622C,1883C,1932C,2662C 'includepath':2052C 'increas':511C 'index':1723C,1734C,2972C,2983C,3002C 'index.js':1905C,2528C,2800C,2909C 'indom':1110C 'inform':2306C 'initi':1261C,1321C,1344C,1379C,1388C,1423C,1426C,1429C,1464C,1486C,1501C,1502C,1510C,1525C,1542C,1564C,1597C,2788C,2937C,2950C,3016C,3021C,3040C 'initialz':1449C 'inlin':1786C 'insid':2395C 'inspir':244C 'instal':2157C,2161C,2164C,2166C,2171C,3079C,3114C 'interact':177C 'interest':761C,797C 'interfac':199C 'interupt':733C 'isol':2282C,2292C 'item':3005C 'iter':1704C 'jasonweaver.name':902C 'jasonweaver.name/lab/offcanvas/':901C 'javascript':19B,1076C,1164C,1246C,1298C,1381C,1484C,1558C,1991C,2107C,2820C,2951C 'job':482C 'js':2482C 'key':2988C,2990C,2992C 'keyword':386C,2368C 'kick':988C 'land':2770C 'layout':183C 'lead':72B 'learn':2617C 'lf':2985C 'librari':109B,138C,151C,203C,236C,317C,524C,665C,1707C,2480C,2732C,2808C,2896C,2981C,2991C,2994C,3004C,3111C,3125C 'lift':2632C 'like':498C,550C,721C,827C,1296C,1802C,1803C,2776C,2818C 'line':3071C 'link':1790C 'liquid':247C,285C,291C,449C,911C,916C,2638C,2667C 'login':2372C,2379C,2578C,2584C 'look':2773C,3141C 'm':209C,2634C,3140C 'made':2472C 'main':2487C,2525C 'make':1683C 'manag':340C 'marketplac':356C 'match':1119C 'may':540C,858C,1287C 'mediat':631C 'meet':2881C 'mention':584C,1263C 'method':1430C 'micro':108B,137C,150C,3124C 'mint':1038C 'modul':1232C,1575C,1994C,2110C 'module.exports':2005C,2125C 'moduleforcompon':1078C,1084C 'much':2774C,3121C 'must':2307C 'name':1404C,1409C,1410C,1416C,1496C,1507C,1522C,3014C,3038C 'nativ':2252C 'natur':591C 'need':224C,649C,859C,951C,1011C,1139C,1276C,1352C,1445C,1722C,1753C,1783C,1909C,1930C,2387C,2501C,2728C,2744C,2784C,2852C,2883C,3076C 'nest':2059C 'new':1041C,1582C,2120C 'next':998C,1228C 'nice':534C 'nice-to-hav':533C 'node':1885C,1918C,1999C,2041C,2084C,2168C,2173C,2182C 'node-sass':1884C,1917C,1998C,2040C,2167C,2172C,2181C 'noisi':1768C 'note':791C 'npm':378C,2160C,2170C,2378C,2392C,2519C,2573C,2577C,2583C,2586C,2590C,3066C,3105C,3113C 'npmignor':2209C,2509C 'npmjs.org':2389C,2402C,2537C 'object.keys':2984C 'occasion':23B 'off-canva':205C,602C,661C,905C,1738C,2764C 'off-canvas-open':1185C 'offcanva':1406C 'offcanvasclosercompon':2838C,2846C 'offcanvascompon':2830C,2844C 'offcanvasopenercompon':2834C,2845C 'often':589C 'ok':2187C 'on-canva':1085C,1095C,1115C,1120C,1151C,1182C,1220C 'on-canvas-default':1224C 'oncanvascompon':1088C,1248C,1258C,2826C,2843C 'one':1136C 'open':865C,1188C 'opportun':1036C 'order':1881C 'other':754C 'outer':2302C 'outfil':2061C 'outlin':273C 'output':1841C 'outputstyl':2056C 'pack':359C 'packa':2669C 'packag':249C,284C,287C,379C,918C,1467C,2477C,2498C,2620C,2640C,2685C,2687C,2704C,2714C,2874C 'package.json':2075C,2146C,2204C,2358C,2417C,2522C,2564C 'page':1619C,1851C 'panel':1295C 'partial':1737C 'pass':2309C 'past':348C,1375C 'path':1985C,2002C,2004C 'path.resolve':2013C,2028C,2033C,2053C 'perhap':548C,762C,1033C,1791C,2206C 'person':508C 'perus':763C 'pick':219C,232C 'pixelhandler.github.io':1670C 'pixelhandler.github.io/ember-off-canvas-components/':1669C 'pixelhandler/ember-off-canvas-components':3118C 'plan':2244C,2321C 'platform':337C 'point':2866C 'post':2249C,3078C 'postinstal':2142C,2155C 'postinstall.sh':2151C 'power':190C 'practic':10A,97B,556C,562C 'pre':1710C,3081C 'pre-ember-c':1709C 'pre-publish':3080C 'precis':2063C 'prefix':1402C,1407C,1541C 'prepublish':2421C,2469C,2570C,2594C 'prepublish.sh':2412C 'prerend':1106C 'previous':1703C 'prior':310C,2581C 'process':102B,275C,742C 'product':672C 'prompt':2382C 'properti':1215C 'prototyp':820C,867C,1241C 'provid':327C,371C,437C,638C,832C,2541C,2790C,2899C 'public':1681C 'publish':2374C,2393C,2464C,2532C,2574C,2587C,2601C,3082C 'pull':28B 'question':720C 'quick':709C 'qunit':503C,1083C 'rather':218C 're':864C 're-open':863C 'read':2555C 'readm':2688C,2705C 'rebuild':1815C 'refer':2930C 'regist':652C,1278C,1323C,1531C,2746C,2939C,3003C,3023C 'registry.js':2691C 'releas':256C,309C,447C,1472C,1476C,2407C,2520C,2535C,2544C,2624C,2653C,2739C,2782C,2888C,3089C,3133C 'rememb':2312C 'render':1091C,1204C 'replay':739C 'repo':1938C 'repositori':169C,293C,1860C,2129C,3059C 'req':2579C 'requir':1319C,1993C,1997C,2003C,2018C,2086C,2109C,2113C,2122C,2954C,2982C,3001C,3019C,3046C 'research':1792C 'reson':598C 'resourc':47B 'return':1316C 'rfc':78B,128B,583C,885C,2316C 'right':459C,1065C 'rm':2435C,2451C 'root':2397C,2913C 'rout':1726C 'run':2589C,2591C,2598C,2786C,3067C 'said':2325C,2355C 'sampl':1210C 'sass':1868C,1886C,1919C,1954C,1971C,1996C,2000C,2042C,2071C,2083C,2136C,2169C,2174C,2183C 'sass.renderfile':2031C 'save':3116C 'save-dev':3115C 'scaffold':991C 'scratch':712C 'script':288C,1468C,1648C,1912C,1950C,1990C,2072C,2082C,2090C,2143C,2150C,2411C,2418C,2470C,2561C,2571C,2595C,2641C,2670C,2875C,3074C 'scss':1979C 'search':3106C 'searchabl':46B,373C 'secondari':304C 'section':2493C 'see':2490C,2678C 'seem':420C,452C,826C 'separ':1848C 'server':1636C,1813C 'set':491C,1589C,1764C,2523C 'setup':1551C,1577C,1795C,1982C 'shadow':2276C,2349C 'share':4A,35B,59B,91B,111B,393C,1854C,3146C 'sheet':1961C 'shell':2149C 'shim':2925C,2949C,3010C,3012C,3015C,3020C 'ship':547C,659C,2188C,2234C,2730C,2885C,2894C 'signific':2331C 'simpl':149C,1047C 'simplest':1135C 'simpli':643C 'simplifi':81B 'sinc':66B,655C,1774C,2127C 'solut':360C 'someon':549C,2626C 'sourc':815C,872C,1817C 'sourcemap':2065C 'special':626C 'specif':428C 'squelch':1766C 'src':1782C 'standalon':252C,308C,446C,1471C,2479C,2492C,2543C,2623C,2652C,2738C,2781C,2816C,2887C,3088C 'standard':515C 'start':699C,945C 'step':1924C,2615C 'straight':295C 'strength':2261C 'string':1218C 'style':1746C,1781C,1960C 'style-src':1780C 'success':336C,745C,2036C 'suggest':954C 'super':1046C 'surpris':2212C 'surround':2299C 'system':341C 'tag':380C,2362C 'tagnam':1094C,1114C,1216C,1219C 'take':1034C,2612C 'talk':644C,1267C 'target':2193C 'task':2422C 'tell':2225C 'templat':300C,1180C,1730C,1741C,2274C,2345C,2762C 'ten':349C 'test':1017C,1023C,1026C,1042C,1048C,1079C,1089C,1545C,1554C,1587C,2405C,2428C,2441C,2445C,2504C,3132C 'testem':500C 'tests/dummy':1673C 'tests/dummy/config/environment.js':1757C 'tests/unit/initializers/custom-events-test.js':1557C 'thing':1361C 'think':85B 'this.append':1107C 'this.get':1305C 'this.subject':1103C 'thought':675C 'thru':774C 'time':409C,457C,474C 'togeth':579C 'toggl':1288C,1397C 'toggleoffcanva':1308C,1334C,1602C,1603C 'took':790C,804C 'tool':329C,426C,433C,494C,3061C 'topic':73B,795C,2268C,2317C 'touppercas':1118C 'travi':2214C 'tri':2466C 'trial':1893C 'trigger':1314C 'tweek':2476C 'twitter.com':553C 'twitter.com/elad/status/537037555154554880':552C 'type':353C,1200C,1217C 'ui':235C 'uikit':204C,904C 'unit':1016C,1553C 'unsaf':1785C 'unsafe-inlin':1784C 'updat':1021C,1377C,1755C 'use':114B,185C,263C,322C,345C,411C,444C,469C,477C,488C,499C,611C,619C,669C,694C,808C,838C,955C,986C,999C,1057C,1062C,1142C,1170C,1268C,1328C,1339C,1504C,1639C,1700C,1776C,1833C,1867C,1973C,2078C,2147C,2251C,2414C,2549C,2566C,2607C,2700C,2756C,2861C,2892C,2907C,2923C,2942C,3063C,3109C 'user':2194C,2199C 'usetoggl':1306C 'util':1462C,2259C,2876C 'valuabl':681C 'var':1101C,1302C,1391C,1403C,1572C,1600C,1995C,2001C,2011C,2016C,2021C,2026C,2111C,2118C,2956C,2971C,2980C,2998C,3009C,3029C,3044C 'variabl':2813C,2904C 've':344C,468C,485C,546C,657C,1029C 'vendor':1903C,2023C,2433C 'vendorfil':2027C,2062C 'vendorfile.split':2044C 'version':1713C,2576C 'versus':231C 'via':645C 'view':1206C,2283C,2288C 'w':1396C 'w3c.github.io':1069C,2343C,2352C 'w3c.github.io/webcomponents/spec/custom/':1068C 'w3c.github.io/webcomponents/spec/imports/':2342C 'w3c.github.io/webcomponents/spec/shadow/':2351C 'wait':2242C 'walk':99B 'want':156C,1865C,2539C 'way':391C,517C,830C 'web':55B,119B,188C,880C,1060C,1071C,2231C,2253C 'webcomponents.org':121B,882C 'websit':368C 'well':1271C,1460C,1728C,3055C 'window':2955C 'window.ember':2970C 'window.ember.application.initializer':3013C,3037C 'window.emberoffcanvascomponents':2905C,2999C 'window.eoc':3000C 'without':3119C 'work':542C,578C,1629C,2217C,2337C 'would':40B,217C,529C,678C 'wrap':2933C,3054C 'wrap.js':2693C 'write':1948C,1958C 'written':1031C 'wrote':2409C 'www.ember-cli.com':134B,891C,931C 'www.ember-cli.com/#developing-addons-and-blueprints':930C 'www.emberaddons.com':935C 'www.npmjs.org':2403C 'www.w3.org':1074C 'www.w3.org/tr/components-intro/':1073C 'year':350C 'yes':2241C 'yet':262C,2548C	published	pixelhandler
14	### Overview\n\nThe seven steps below cover the creation of a custom element using\n[Ember.Component] so I'll use a simple Ember application using a single\nindex route, which I'll trust Ember to map the default index route.\n\nScroll to the end for links on the topic of custom elements and\nEmber.Component.\n\nIf you've used Ember for any time now you're likely asking, "Why would\nI not just use [Ember.Select]?" I'm glad you asked, I want to add my own\ncustom markup instead of the markup that is generated by Ember.Select.\nAlso, I want to define a custom binding to the selected choice in a\nre-usable way. I'd rather not write a Handlebars helper to generate a\ncustom view, that's what Ember.Component is for. I'd like the custom\nselect box to work like a custom html element, e.g. `{{faux-select}}`\ncan be used where I would use a select element in my Handlebars templates.\n\nThe custom "faux" select box will look like this:\n\n<style type="text/css">\nselect.faux-select {\n    display: block;\n    filter: alpha(opacity=0);\n    opacity: 0;\n    position: absolute;\n    height: 20px;\n    width: 125px;\n    margin: 5px\n}\n\n.faux-select {\n    color: black;\n    position: relative;\n    font: 14px/18px "Andale Mono", AndaleMono, monospace;\n    letter-spacing: 1px;\n    text-transform: uppercase\n}\n\n.faux-select-box {\n    position: absolute;\n    min-width: 137px\n}\n\n.faux-select-selected, .faux-select-graphic {\n    border: 1px solid black;\n    height: 30px;\n    background: #fdfaed;\n    background: -moz-linear-gradient(top, #fdfaed 0%, #b5cbeb 100%);\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #fdfaed), color-stop(100%, #b5cbeb));\n    background: -webkit-linear-gradient(top, #fdfaed 0%, #b5cbeb 100%);\n    background: -o-linear-gradient(top, #fdfaed 0%, #b5cbeb 100%);\n    background: -ms-linear-gradient(top, #fdfaed 0%, #b5cbeb 100%);\n    background: linear-gradient(to bottom, #fdfaed 0%, #b5cbeb 100%);\n    filter: progid: DXImageTransform.Microsoft.gradient(startColorstr='#fdfaed', endColorstr='#b5cbeb', GradientType=0 )\n}\n\n.faux-select-selected {\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n    border-right: none;\n    float: left;\n    min-width: 117px;\n    padding: 5px 10px\n}\n\n.faux-select-graphic {\n    float: right;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n    padding: 5px 7px\n}\n</style>\n\n<div class="faux-select">\n  <div class="faux-select-box">\n    <span class="faux-select-selected">Choose One</span>\n    <span class="faux-select-graphic">&#x25BE;</span>\n  </div>\n  <select name="faux-select" class="faux-select">\n    <option value="">Choose One</option>\n    <option value="1">Ember.js</option>\n    <option value="2">Backbone.js</option>\n    <option value="3">AngularJS</option>\n  </select>\n</div>\n<br><br>\n\n### Step 1 - Start by using the Ember Starter-Kit repo\n\nIn this step the only work done is to remove some of the example code\nthat ships with the [emberjs/starter-kit] application.\n\nAn outlet in the Ember application template:\n\n**templates/application**\n\n    <script type="text/x-handlebars">\n      {{outlet}}\n    </script>    \n\nAn index template used to try out the custom element (component).\n\n**templates/index**\n\n    <script type="text/x-handlebars" id="index">\n      <h1>Components</h1>\n    </script>    \n\nAn empty model will be used for now, later I'll put a list of choices in\nthis object.\n\n**javascript/app.js**\n\n    App = Ember.Application.create();\n    \n    App.IndexRoute = Ember.Route.extend({\n      model: function() {\n        return {};\n      }\n    });    \n\n### Step 2 - Add a component template with a select box\n\nAdd a component template, this looks like a normal Handlebars template,\nhowever notice the naming convention `components/faux-select`. The\ntemplate name begins with `components/` and the name of the component\nuses a prefix `faux-`. This follows the recommendation for the W3C\nCustom Element, see [Web Components]. \n\n**templates/components/faux-select**\n\n    <script type="text/x-handlebars" id="components/faux-select">\n      <h2>Faux Select</h2>\n      <select>\n        <option value="">Choose One</option>\n      </select>\n    </script>    \n\nTo use the component just place the name of the component in a\nHandlebars template, I've added it in the index template so it renders.\nNotice the `{{faux-select}}` addition below:\n\n**templates/index**\n\n    <script type="text/x-handlebars" id="index">\n      <h1>Components</h1>\n      {{faux-select}}\n    </script>    \n\nNow the select element can be rendered, it's not much and not even a\nmuch as Ember.Select provides yet, but it's a start toward a custom\nelement.\n\n### Step 3 - Add a component template with a select box\n\nNow the model will need some conent to pass to the component as the list\nof choices, I've started with only one choice the default "Choose One".\n\n**javascript/app.js**\n\n    App = Ember.Application.create();\n    \n    App.IndexRoute = Ember.Route.extend({\n      model: function() {\n        return [\n          { choice: 'Choose One' }\n        ];\n      }\n    });    \n\nThe component template needs to enumerate over the list of choices:\n\n**templates/components/faux-select**\n\n    <script type="text/x-handlebars" id="components/faux-select">\n      <h2>Faux Select</h2>\n      <select class="faux-select">\n        {{#each choices}}\n          <option {{bindAttr value=choice}}>{{choice}}</option>\n        {{/each}}\n      </select>\n    </script>    \n\nNow the model defined in the route can be passed to the `choices`\nproperty of the component. Below the model data is mapped to the\ncomponent's choices property.\n\n**templates/index**\n\n    <script type="text/x-handlebars" id="index">\n      <h1>Components</h1>\n      {{faux-select choices=model}}\n    </script>    \n\n### Step 4 - Add some attributes and choices\n\nThe model now has an object with properties for className and name which can be\nused to set custom properties on the select box. Each instance of the component\ncan use the dynamic data for the name and css class. The choices list now has a\nfew items to choose from.\n\n**javascript/app.js**\n\n    App = Ember.Application.create();\n    \n    App.IndexRoute = Ember.Route.extend({\n      model: function() {\n        return {\n          name: 'one',\n          className: 'dropdown',\n          choices: [\n            { choice: 'Choose One' }, { choice: 'First' }, { choice: 'Last' }\n          ]\n        };\n      }\n    });\n\nThe select element's attributes are now dynamically set with `bindAttr`.\nOne static class name is kept for standard css styling, `faux-select`\n\n**templates/components/faux-select**\n\n    <script type="text/x-handlebars" id="components/faux-select">\n      <select {{bindAttr name=name class=":faux-select className"}}>\n        {{#each choices}}\n          <option {{bindAttr value=choice}}>{{choice}}</option>\n        {{/each}}\n      </select>\n    </script>\n\nThe instance of the `faux-select` component used in the index tempate now has\nthe dynamic properties mapped for name and className.\n\n**templates/index**\n\n    <script type="text/x-handlebars" id="index">\n      <h1>Components</h1>\n      <h2>Faux Select</h2>\n      {{faux-select choices=model.choices name=model.name className=model.className}}\n    </script>    \n\n### Step 5 - Scaffold markup and styles for faux select w/ zero opacity\n\nThe basic idea for this custom element is to hide the native select element\nand style some custom markup instead. So `position` and `opacity` give this\nresult, more style is needed but this css will be the foundation.\n\n**css/style.css**\n\n    /* FauxSelectComponent */\n    select.faux-select {\n        opacity: 0;\n        position: absolute;\n    }\n    .faux-select {\n        position: relative;\n    }\n    .faux-select-box {\n        position: absolute;\n    }\n    .faux-select-selected {}\n    .faux-select-graphic {}\n\nTo bind the `selected` value to the component's template a class (object)\nis needed which defines the property for the `selected` choice. Later an\nevent will be added to respond to the user's choice.\n\n**javascript/app.js**\n\n    App = Ember.Application.create();\n    \n    App.IndexRoute = Ember.Route.extend({\n      model: function() {\n        return {\n          name: 'one',\n          className: 'dropdown',\n          choices: [\n            { choice: 'Choose One' }, { choice: 'First' }, { choice: 'Last' }\n          ]\n        };\n      }\n    });\n    \n    App.FauxSelectComponent = Ember.Component.extend({\n      selected: 'Choose One'\n    });\n\nThe component's template now has the custom HTML to use instead of the\nnative select element.\n\n**templates/components/faux-select**\n\n    <script type="text/x-handlebars" id="components/faux-select">\n      <div class="faux-select">\n        <div class="faux-select-box">\n          <span class="faux-select-selected">{{selected}}</span>\n          <span class="faux-select-graphic">&#x25BE;</span>\n        </div>\n        <select {{bindAttr name=name class=":faux-select className"}}>\n        {{#each choices}}\n          <option {{bindAttr value=choice}}>{{choice}}</option>\n        {{/each}}\n        </select>\n      </div>\n    </script>\n\n### Step 6 - Add some custom style for the faux select box\n\nHere is an example implementation of a custom select box with linear gradients.\n\nBelow is a list of required styles for this example of a faux select box.\n\n* The `select` element has zero (0) opacity and is positioned `absolute`\n* The `.faux-select-box` element is also positioned `absolute`\n* The above two elements are siblings as the select box follows the faux element\n  resulting in a higher z-index value, so when user clicks the event is fired on\n  the invisble select box\n* the dimensions of the select box and faux select box need to match so the invisble\n  element can be used on top of the faux element\n\n**css/style.css**\n\n    /* FauxSelectComponent */\n    select.faux-select {\n        display: block;\n        filter: alpha(opacity=0);\n        opacity: 0;\n        position: absolute;\n        height: 20px;\n        width: 125px;\n        margin: 5px;\n    }\n    .faux-select {\n        color: black;\n        position: relative;\n        font: 14px/18px "Andale Mono", AndaleMono, monospace;\n        letter-spacing: 1px;\n        text-transform: uppercase;\n    }\n    .faux-select-box {\n        position: absolute;\n        min-width: 137px;\n    }\n    .faux-select-selected,\n    .faux-select-graphic {\n        background-image: linear-gradient(rgb(253, 250, 237), rgb(181, 203, 235));\n        /* visit http://www.colorzilla.com/gradient-editor/ and create your own */\n        border: 1px solid black;\n        height: 17px;\n    }\n    .faux-select-selected {\n        border-top-left-radius: 10px;\n        border-bottom-left-radius: 10px;\n        border-right: none;\n        fl    oat: left;\n        min-width: 117px;\n        padding: 5px 10px;\n    }\n    .faux-select-graphic {\n        float: right;\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n        padding: 5px 7px;\n    }\n\n### Step 7 - Bind the selected value\n\nThe `App.FauxSelectComponent` now has a `change` event binding the visible\nchoice to the choice selected by the user.\n\n**javascript/app.js**\n\n    App = Ember.Application.create();\n    \n    App.IndexRoute = Ember.Route.extend({\n      model: function() {\n        return {\n          name: 'one',\n          className: 'dropdown',\n          choices: [\n            { choice: 'Choose One' }, { choice: 'First' }, { choice: 'Last' }\n          ]\n        };\n      }\n    });\n    \n    App.FauxSelectComponent = Ember.Component.extend({\n      selected: 'Choose One',\n      change: function(e){\n        this.set('selected', e.target.value);\n      }\n    });\n\n## Summary\n\n### Advantages of using invisibe select element\n\n* Native browser support for select/dropdown behavior including arrow keys,\n  typing to select an option\n* Mobile devices still use finger friendly behaviour for select behaviors\n* Screen readers behave as expected with a standard select box\n* You don't have to fix all the bugs for taking over all the native brower\n  support listed above and the custom select box can now match the designer's\n  branding needs\n\n## Disclaimer\n\nThe code in this example select box component has not been tested in various\nbrowsers and cross-browser css has not been included in the demo code. The\nconcept of using 0 opacity for the select box does work in modern browsers.\n\n## Links\n\n* [emberjs/starter-kit]\n* [Components Guide]\n* [Ember.Select]\n* [Polymer Custom Element]\n* [Web Components]\n* [Mozilla Brick]\n* [source code example gist]\n* [diffs for the 7 steps]\n\n[Components Guide]: http://emberjs.com/guides/components/ "Components Guide"\n[Ember.Select]: http://emberjs.com/api/classes/Ember.Select.html "Ember.Select"\n[Ember.Component]: http://emberjs.com/api/classes/Ember.Component.html "Ember.Component"\n[Polymer Custom Element]: http://www.polymer-project.org/platform/custom-elements.html "Polymer"\n[Web Components]: https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html "Web Components"\n[Mozilla Brick]: http://mozilla.github.io/brick/ "Mozilla brick"\n[source code example gist]: https://gist.github.com/pixelhandler/6320922 "Ember Components Example"\n[diffs for the 7 steps]: https://github.com/Ember-SC/starter-kit/commits/components "Starter-kit components branch"	This tutorial steps over an useful example of creating a custom select box\nthat can look as custom as your designer would like. I've often been\nasked to customize the browsers components by designers, especially the\ndropdown/select element. A friend, [ultmast], gave me a simple solution\nwhich meets both my interest of not entirely re-inventing the wheel\n(select box behaviors) and also showing a completely customized select\nelement. Simply set the select box's opacity to zero and position the\ninvisble select box directly over the element that has custom design using\ncss, images or whatever. Then when user click to select the invisible\nselect box behavior takes over, only one binding from the invisible element to\nthe custom element is the selected option (choice).\n\n[ultmast]: https://twitter.com/ultmast\n\n## Use (mostly) the browser default behavior\n\n* With the select element using an opacity of zero (0), the element can have a\ncustom background, and when clicking on the element the hidden select box\nstill behaves normally (browser's default behavior)\n* The custom element will need javascript functionality to update a binding to\nthe value that is selected using the invisble select box (on change).\n\n## Steps to build a custom "faux" select box with Ember.js\n\n(Clone the [emberjs/starter-kit] to get started)\n\n1. Start by removing some of the application code from the\n   [emberjs/starter-kit] code\n2. Add a component template with a select box\n3. Use model for collection of choices\n4. Add some attributes and choices\n5. Scaffold markup and styles for faux select w/ zero opacity\n6. Add some custom style for the faux select box\n7. Bind the selected value\n\n[emberjs/starter-kit]: https://github.com/emberjs/starter-kit "Ember.js Starter Kit"	create-a-custom-select-box-using-ember-component	Create a Custom Select Box using Ember.Component	2013-08-25	2015-05-07 17:03:21.291935	2015-05-07 17:03:21.291935	1	'/api/classes/ember.component.html':1506C '/api/classes/ember.select.html':1501C '/brick/':1526C '/ember-sc/starter-kit/commits/components':1546C '/emberjs/starter-kit':284B '/gradient-editor/':1236C '/guides/components/':1495C '/hg/webcomponents/raw-file/tip/spec/custom/index.html':1519C '/pixelhandler/6320922':1535C '/platform/custom-elements.html':1513C '/ultmast':139B '0':155B,938C,1083C,1169C,1171C,1459C '1':220B,468C '10px':1256C,1262C,1276C,1288C,1294C '117px':1273C '125px':1177C '137px':1210C '14px/18px':1188C '17px':1246C '181':1230C '1px':1196C,1242C '2':233B,547C '203':1231C '20px':1175C '235':1232C '237':1228C '250':1227C '253':1226C '3':242B,666C '4':249B,757C '5':255B,884C '5px':1179C,1275C,1296C '6':266B,1040C '7':276B,1299C,1489C,1542C '7px':1297C 'absolut':940C,951C,1088C,1098C,1173C,1206C 'ad':619C,988C 'add':234B,250B,267B,368C,548C,556C,667C,758C,1041C 'addit':633C 'advantag':1354C 'alpha':1167C 'also':72B,382C,1096C 'andal':1189C 'andalemono':1191C 'angularj':466C 'app':539C,704C,815C,997C,1323C 'app.fauxselectcomponent':1016C,1305C,1342C 'app.indexroute':541C,706C,817C,999C,1325C 'applic':227B,309C,498C,504C 'arrow':1367C 'ask':35B,352C,364C 'attribut':252B,760C,838C 'backbone.js':465C 'background':162B,1220C 'background-imag':1219C 'basic':896C 'begin':576C 'behav':174B,1386C 'behavior':70B,117B,145B,179B,1365C,1383C 'behaviour':1380C 'bind':122B,190B,277B,389C,961C,1300C,1311C 'bindattr':844C 'black':1184C,1244C 'block':1165C 'border':1241C,1252C,1258C,1264C,1284C,1290C 'border-bottom-left-radius':1257C 'border-bottom-right-radius':1289C 'border-right':1263C 'border-top-left-radius':1251C 'border-top-right-radius':1283C 'bottom':1259C,1291C 'box':5A,20B,69B,83B,93B,116B,172B,201B,211B,241B,275B,425C,455C,555C,674C,786C,949C,1049C,1059C,1077C,1093C,1108C,1133C,1139C,1143C,1204C,1393C,1417C,1433C,1464C 'branch':1551C 'brand':1424C 'brick':1481C,1523C,1528C 'brower':1409C 'browser':39B,143B,176B,1361C,1441C,1445C,1469C 'bug':1402C 'build':206B 'chang':203B,1309C,1347C 'choic':135B,248B,254B,393C,534C,691C,698C,711C,724C,738C,753C,762C,804C,826C,827C,830C,832C,982C,995C,1008C,1009C,1012C,1014C,1314C,1317C,1334C,1335C,1338C,1340C 'choos':460C,462C,701C,712C,812C,828C,1010C,1019C,1336C,1345C 'class':802C,847C,971C 'classnam':772C,824C,881C,1006C,1332C 'click':110B,165B,1124C 'clone':214B 'code':228B,232B,492C,1428C,1454C,1483C,1530C 'collect':246B 'color':1183C 'complet':75B 'compon':40B,236B,517C,550C,558C,578C,584C,600C,605C,612C,669C,686C,715C,742C,751C,791C,866C,967C,1022C,1434C,1472C,1479C,1491C,1496C,1516C,1521C,1537C,1550C 'components/faux-select':572C 'concept':1456C 'conent':681C 'convent':571C 'cover':293C 'creat':1A,16B,1238C 'creation':295C 'cross':1444C 'cross-brows':1443C 'css':103B,801C,853C,928C,1446C 'css/style.css':933C,1160C 'custom':3A,18B,25B,37B,76B,100B,129B,161B,181B,208B,269B,298C,336C,371C,388C,411C,423C,430C,452C,515C,596C,663C,781C,900C,912C,1028C,1043C,1057C,1415C,1476C,1509C 'd':401C,420C 'data':746C,796C 'default':144B,178B,323C,700C 'defin':386C,729C,976C 'demo':1453C 'design':28B,42B,101B,1422C 'devic':1375C 'diff':1486C,1539C 'dimens':1135C 'direct':94B 'disclaim':1426C 'display':1164C 'done':484C 'dropdown':825C,1007C,1333C 'dropdown/select':45B 'dvcs.w3.org':1518C 'dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html':1517C 'dynam':795C,841C,875C 'e':1349C 'e.g':433C 'e.target.value':1352C 'element':46B,78B,97B,126B,130B,149B,157B,168B,182B,299C,337C,432C,446C,516C,597C,639C,664C,836C,901C,908C,1037C,1080C,1094C,1102C,1112C,1150C,1159C,1359C,1477C,1510C 'ember':308C,319C,344C,473C,503C,1536C 'ember.application.create':540C,705C,816C,998C,1324C 'ember.component':7A,301C,339C,416C,1503C,1507C 'ember.component.extend':1017C,1343C 'ember.js':213B,285B,464C 'ember.route.extend':542C,707C,818C,1000C,1326C 'ember.select':359C,381C,653C,1474C,1498C,1502C 'emberjs.com':1494C,1500C,1505C 'emberjs.com/api/classes/ember.component.html':1504C 'emberjs.com/api/classes/ember.select.html':1499C 'emberjs.com/guides/components/':1493C 'emberjs/starter-kit':216B,231B,281B,497C,1471C 'empti':520C 'end':329C 'entir':62B 'enumer':719C 'especi':43B 'even':649C 'event':985C,1126C,1310C 'exampl':14B,491C,1053C,1072C,1431C,1484C,1531C,1538C 'expect':1388C 'faux':209B,261B,273B,435C,453C,588C,631C,856C,864C,890C,942C,947C,953C,957C,1047C,1075C,1091C,1111C,1141C,1158C,1181C,1202C,1212C,1216C,1248C,1278C 'faux-select':434C,630C,855C,863C,941C,1180C 'faux-select-box':946C,1090C,1201C 'faux-select-graph':956C,1215C,1277C 'faux-select-select':952C,1211C,1247C 'fauxselectcompon':934C,1161C 'filter':1166C 'finger':1378C 'fire':1128C 'first':831C,1013C,1339C 'fix':1399C 'fl':1267C 'float':1281C 'follow':590C,1109C 'font':1187C 'foundat':932C 'friend':48B,1379C 'function':186B,544C,709C,820C,1002C,1328C,1348C 'gave':50B 'generat':379C,409C 'get':218B 'gist':1485C,1532C 'gist.github.com':1534C 'gist.github.com/pixelhandler/6320922':1533C 'github.com':283B,1545C 'github.com/ember-sc/starter-kit/commits/components':1544C 'github.com/emberjs/starter-kit':282B 'give':919C 'glad':362C 'gradient':1062C,1224C 'graphic':959C,1218C,1280C 'guid':1473C,1492C,1497C 'handlebar':406C,449C,565C,615C 'height':1174C,1245C 'helper':407C 'hidden':170B 'hide':904C 'higher':1116C 'howev':567C 'html':431C,1029C 'idea':897C 'imag':104B,1221C 'implement':1054C 'includ':1366C,1450C 'index':313C,324C,508C,623C,870C,1119C 'instanc':788C,860C 'instead':373C,914C,1032C 'interest':59B 'invent':65B 'invis':114B,125B 'invisbl':91B,199B,1131C,1149C 'invisib':1357C 'item':810C 'javascript':185B 'javascript/app.js':538C,703C,814C,996C,1322C 'kept':850C 'key':1368C 'kit':287B,476C,1549C 'last':833C,1015C,1341C 'later':527C,983C 'left':1254C,1260C,1269C 'letter':1194C 'letter-spac':1193C 'like':30B,351C,421C,428C,458C,562C 'linear':1061C,1223C 'linear-gradi':1222C 'link':331C,1470C 'list':532C,689C,722C,805C,1066C,1411C 'll':304C,317C,529C 'look':23B,457C,561C 'm':361C 'map':321C,748C,877C 'margin':1178C 'markup':257B,372C,376C,886C,913C 'match':1146C,1420C 'meet':56B 'min':1208C,1271C 'min-width':1207C,1270C 'mobil':1374C 'model':244B,521C,543C,677C,708C,728C,745C,764C,819C,1001C,1327C 'modern':1468C 'mono':1190C 'monospac':1192C 'most':141B 'mozilla':1480C,1522C,1527C 'mozilla.github.io':1525C 'mozilla.github.io/brick/':1524C 'much':646C,651C 'name':570C,575C,581C,609C,774C,799C,822C,848C,879C,1004C,1330C 'nativ':906C,1035C,1360C,1408C 'need':184B,679C,717C,925C,974C,1144C,1425C 'none':1266C 'normal':175B,564C 'notic':568C,628C 'oat':1268C 'object':537C,768C,972C 'often':33B 'one':121B,461C,463C,697C,702C,713C,823C,829C,845C,1005C,1011C,1020C,1331C,1337C,1346C 'opac':85B,152B,265B,894C,918C,937C,1084C,1168C,1170C,1460C 'option':134B,1373C 'outlet':500C 'overview':288C 'pad':1274C,1295C 'pass':683C,735C 'place':607C 'polym':1475C,1508C,1514C 'posit':89B,916C,939C,944C,950C,1087C,1097C,1172C,1185C,1205C 'prefix':587C 'properti':739C,754C,770C,782C,876C,978C 'provid':654C 'put':530C 'radius':1255C,1261C,1287C,1293C 'rather':402C 're':64B,350C,397C 're-inv':63B 're-us':396C 'reader':1385C 'recommend':592C 'relat':945C,1186C 'remov':223B,487C 'render':627C,642C 'repo':477C 'requir':1068C 'respond':990C 'result':921C,1113C 'return':545C,710C,821C,1003C,1329C 'rgb':1225C,1229C 'right':1265C,1282C,1286C,1292C 'rout':314C,325C,732C 'scaffold':256B,885C 'screen':1384C 'scroll':326C 'see':598C 'select':4A,19B,68B,77B,82B,92B,112B,115B,133B,148B,171B,196B,200B,210B,240B,262B,274B,279B,392C,424C,436C,445C,454C,554C,632C,638C,673C,785C,835C,857C,865C,891C,907C,936C,943C,948C,954C,955C,958C,963C,981C,1018C,1036C,1048C,1058C,1076C,1079C,1092C,1107C,1132C,1138C,1142C,1163C,1182C,1203C,1213C,1214C,1217C,1249C,1250C,1279C,1302C,1318C,1344C,1351C,1358C,1371C,1382C,1392C,1416C,1432C,1463C 'select.faux':935C,1162C 'select/dropdown':1364C 'set':80B,780C,842C 'seven':290C 'ship':494C 'show':73B 'sibl':1104C 'simpl':53B,307C 'simpli':79B 'singl':312C 'solid':1243C 'solut':54B 'sourc':1482C,1529C 'space':1195C 'standard':852C,1391C 'start':219B,221B,469C,660C,694C 'starter':286B,475C,1548C 'starter-kit':474C,1547C 'static':846C 'step':10B,204B,291C,467C,480C,546C,665C,756C,883C,1039C,1298C,1490C,1543C 'still':173B,1376C 'style':259B,270B,854C,888C,910C,923C,1044C,1069C 'summari':1353C 'support':1362C,1410C 'take':118B,1404C 'tempat':871C 'templat':237B,450C,505C,509C,551C,559C,566C,574C,616C,624C,670C,716C,969C,1024C 'templates/application':506C 'templates/components/faux-select':601C,725C,858C,1038C 'templates/index':518C,635C,755C,882C 'test':1438C 'text':1198C 'text-transform':1197C 'this.set':1350C 'time':347C 'top':1155C,1253C,1285C 'topic':334C 'toward':661C 'transform':1199C 'tri':512C 'trust':318C 'tutori':9B 'twitter.com':138B 'twitter.com/ultmast':137B 'two':1101C 'type':1369C 'ultmast':49B,136B 'updat':188B 'uppercas':1200C 'usabl':398C 'use':6A,13B,102B,140B,150B,197B,243B,300C,305C,310C,343C,358C,439C,443C,471C,510C,524C,585C,603C,778C,793C,867C,1031C,1153C,1356C,1377C,1458C 'user':109B,993C,1123C,1321C 'valu':193B,280B,964C,1120C,1303C 'various':1440C 've':32B,342C,618C,693C 'view':412C 'visibl':1313C 'visit':1233C 'w':263B,892C 'w3c':595C 'want':366C,384C 'way':399C 'web':599C,1478C,1515C,1520C 'whatev':106B 'wheel':67B 'width':1176C,1209C,1272C 'work':427C,483C,1466C 'would':29B,354C,442C 'write':404C 'www.colorzilla.com':1235C 'www.colorzilla.com/gradient-editor/':1234C 'www.polymer-project.org':1512C 'www.polymer-project.org/platform/custom-elements.html':1511C 'yet':655C 'z':1118C 'z-index':1117C 'zero':87B,154B,264B,893C,1082C	published	pixelhandler
21	### Links on the topic of Deferreds / Promises\n\n* <http://api.jquery.com/jQuery.ajax/>\n* <http://msdn.microsoft.com/en-us/scriptjunkie/gg723713>\n* <http://quickleft.com/blog/jquery-15-hotness-part-2> | <https://gist.github.com/862567>\n* <http://joseoncode.com/2011/09/26/a-walkthrough-jquery-deferred-and-promise/>\n\n## Short explanation\n\n* You really want to use jQuery methods : $.Deferred() .promise() .done() .fail() .isResolved() .isRejected() .then() .always() .pipe() .when()\n* You may be using a service to get some data e.g. via .ajax()\n* You need both ajax actions to complete (with success) then your code responds after both actions are done.\n* See Gists below ... <https://gist.github.com/1273143> | <https://gist.github.com/1273133>\n\n**See working example at** : <http://pixelhandler.com/downloads/code/deferred-promise/>\n\n## Code …\n\n    \n    <!docType html>\n    <html>\n    <head>\n      <title>Deferred / Promise</title>\n      <meta charset="utf-8">\n      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n      <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>\n      <script type="text/javascript" src="jquery-1.6.4-promises.js">// get script at https://gist.github.com/1273133</script>\n    </head>\n    <body>\n    <h1>Deferred / Promise Example using jQuery 1.4.2 by adding implementation in newer version</h1>\n    <script type="text/javascript" charset="utf-8">\n    \n    (function($){ // IIFE ...\n      \n    $(function(){ // doc ready ...\n      \n      var container, things, promises;\n          \n      // Code below borrowed from ...\n      //    Deferreds post : http://quickleft.com/blog/jquery-15-hotness-part-2\n      //    Code : https://gist.github.com/862567\n    \n      container = $( "<div/>" ).appendTo( document.body );\n      $('div').html("<p>jQuery version:" + jQuery.fn.jquery + ". Hang on this should take about 5 seconds to complete.</p>");\n    \n      // List of resources we want to load files on http://pixelhandler.com/ domain\n      things = [\n        {\n          url: "/downloads/code/deferred-promise/services/?type=XML",\n          data_type: "xml",\n          name: "Products XML"\n        },\n        {\n          url: "/downloads/code/deferred-promise/services/?type=JSON",\n          data_type: "json",\n          name: "Products JSON"\n        }\n      ];\n    \n      // Container to hold our promises\n      promises = [];\n    \n      function getSomething(thing){\n    \n        // Create our deferred\n        var dfd = $.Deferred();\n    \n        // - Make a request and resolve our deferred onSuccess\n        // - You can get super fancy here with $.ajax and explicitly\n        //   set fail or rejected states\n        $.get(\n          thing.url,\n          function() { dfd.resolve(); },\n          thing.data_type\n        );\n    \n        // We return a promise so we can watch it for a resolution\n        return dfd.promise();\n    \n      }\n    \n      // Iterate through our requests\n      $.each( things, function(_, thing){\n        // - Each getSomething() call will return a promise, so let's\n        //   push them into our promises array\n        promises.push( getSomething(thing).done(function(){\n          // - This is an inline done() handler which will fire when\n          //   the individual promise is resolved\n          container.append( '<p>Loaded ' + thing.name  + '. - Promise done.</p>' );\n          // - You could string other handlers like fail() after this\n          //   if you want to try a broken link or other situation\n        }) );\n      });\n    \n      setTimeout(function(){\n    \n        // Apply entire array of promises to a $.when listener\n        $.when.apply( null,  promises ).then(function(){\n          // All promises have been resolved :)\n          container.append( '<p class="green">Finished loading All Files - All promises have been resolved. (We can even wait a bit before we handle our promises. If they have already been resolved, jQuery will remember!)</p>' );\n        });\n    \n      }, 5000);\n    \n    }); // end ready\n    \n    }(jQuery)); // end IIFE\n    \n    </script>\n    </body>\n    </html>\n\n**Uses code from:**\n    \n    (function($){\n    \n        var // Promise methods\n            promiseMethods = "done fail isResolved isRejected promise then always pipe".split( " " ),\n            // Static reference to slice\n            sliceDeferred = [].slice;\n    \n        if (typeof $ !== 'function') {\n            return false;\n        } else {\n            jQuery.each(promiseMethods, function(){\n                if (typeof jQuery[this] !== 'undefined') {\n                    return false;\n                }\n            });\n        }\n    \n        // dependencies\n        if (typeof jQuery.type === 'undefined') {\n            var class2type = {};\n            // Populate the class2type map\n            jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {\n                class2type[ "[object " + name + "]" ] = name.toLowerCase();\n            });\n            jQuery.extend({\n                type: function( obj ) {\n                    return obj == null ?\n                        String( obj ) :\n                        class2type[ toString.call(obj) ] || "object";\n                }\n                // redefine isFunction using type method\n                //isFunction: function( obj ) {\n                //  return jQuery.type(obj) === "function";\n                //}\n            });\n    \n        }\n    \n        jQuery.extend({\n            // Create a simple deferred (one callbacks list)\n            _Deferred: function() {\n                var // callbacks list\n                    callbacks = [],\n                    // stored [ context , args ]\n                    fired,\n                    // to avoid firing when already doing so\n                    firing,\n                    // flag to know if the deferred has been cancelled\n                    cancelled,\n                    // the deferred itself\n                    deferred  = {\n    \n                        // done( f1, f2, ...)\n                        done: function() {\n                            if ( !cancelled ) {\n                                var args = arguments,\n                                    i,\n                                    length,\n                                    elem,\n                                    type,\n                                    _fired;\n                                if ( fired ) {\n                                    _fired = fired;\n                                    fired = 0;\n                                }\n                                for ( i = 0, length = args.length; i < length; i++ ) {\n                                    elem = args[ i ];\n                                    type = jQuery.type( elem );\n                                    if ( type === "array" ) {\n                                        deferred.done.apply( deferred, elem );\n                                    } else if ( type === "function" ) {\n                                        callbacks.push( elem );\n                                    }\n                                }\n                                if ( _fired ) {\n                                    deferred.resolveWith( _fired[ 0 ], _fired[ 1 ] );\n                                }\n                            }\n                            return this;\n                        },\n    \n                        // resolve with given context and args\n                        resolveWith: function( context, args ) {\n                            if ( !cancelled && !fired && !firing ) {\n                                // make sure args are available (#8421)\n                                args = args || [];\n                                firing = 1;\n                                try {\n                                    while( callbacks[ 0 ] ) {\n                                        callbacks.shift().apply( context, args );\n                                    }\n                                }\n                                finally {\n                                    fired = [ context, args ];\n                                    firing = 0;\n                                }\n                            }\n                            return this;\n                        },\n    \n                        // resolve with this as context and given arguments\n                        resolve: function() {\n                            deferred.resolveWith( this, arguments );\n                            return this;\n                        },\n    \n                        // Has this deferred been resolved?\n                        isResolved: function() {\n                            return !!( firing || fired );\n                        },\n    \n                        // Cancel\n                        cancel: function() {\n                            cancelled = 1;\n                            callbacks = [];\n                            return this;\n                        }\n                    };\n    \n                return deferred;\n            },\n    \n            // Full fledged deferred (two callbacks list)\n            Deferred: function( func ) {\n                var deferred = jQuery._Deferred(),\n                    failDeferred = jQuery._Deferred(),\n                    promise;\n                // Add errorDeferred methods, then and promise\n                jQuery.extend( deferred, {\n                    then: function( doneCallbacks, failCallbacks ) {\n                        deferred.done( doneCallbacks ).fail( failCallbacks );\n                        return this;\n                    },\n                    always: function() {\n                        return deferred.done.apply( deferred, arguments ).fail.apply( this, arguments );\n                    },\n                    fail: failDeferred.done,\n                    rejectWith: failDeferred.resolveWith,\n                    reject: failDeferred.resolve,\n                    isRejected: failDeferred.isResolved,\n                    pipe: function( fnDone, fnFail ) {\n                        return jQuery.Deferred(function( newDefer ) {\n                            jQuery.each( {\n                                done: [ fnDone, "resolve" ],\n                                fail: [ fnFail, "reject" ]\n                            }, function( handler, data ) {\n                                var fn = data[ 0 ],\n                                    action = data[ 1 ],\n                                    returned;\n                                if ( jQuery.isFunction( fn ) ) {\n                                    deferred[ handler ](function() {\n                                        returned = fn.apply( this, arguments );\n                                        if ( returned && jQuery.isFunction( returned.promise ) ) {\n                                            returned.promise().then( newDefer.resolve, newDefer.reject );\n                                        } else {\n                                            newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );\n                                        }\n                                    });\n                                } else {\n                                    deferred[ handler ]( newDefer[ action ] );\n                                }\n                            });\n                        }).promise();\n                    },\n                    // Get a promise for this deferred\n                    // If obj is provided, the promise aspect is added to the object\n                    promise: function( obj ) {\n                        if ( obj == null ) {\n                            if ( promise ) {\n                                return promise;\n                            }\n                            promise = obj = {};\n                        }\n                        var i = promiseMethods.length;\n                        while( i-- ) {\n                            obj[ promiseMethods[i] ] = deferred[ promiseMethods[i] ];\n                        }\n                        return obj;\n                    }\n                });\n                // Make sure only one callback list will be used\n                deferred.done( failDeferred.cancel ).fail( deferred.cancel );\n                // Unexpose cancel\n                delete deferred.cancel;\n                // Call given func if any\n                if ( func ) {\n                    func.call( deferred, deferred );\n                }\n                return deferred;\n            },\n    \n            // Deferred helper\n            when: function( firstParam ) {\n                var args = arguments,\n                    i = 0,\n                    length = args.length,\n                    count = length,\n                    deferred = length <= 1 && firstParam && jQuery.isFunction( firstParam.promise ) ?\n                        firstParam :\n                        jQuery.Deferred();\n                function resolveFunc( i ) {\n                    return function( value ) {\n                        args[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;\n                        if ( !( --count ) ) {\n                            // Strange bug in FF4:\n                            // Values changed onto the arguments object sometimes end up as undefined values\n                            // outside the $.when method. Cloning the object into a fresh array solves the issue\n                            deferred.resolveWith( deferred, sliceDeferred.call( args, 0 ) );\n                        }\n                    };\n                }\n                if ( length > 1 ) {\n                    for( ; i < length; i++ ) {\n                        if ( args[ i ] && jQuery.isFunction( args[ i ].promise ) ) {\n                            args[ i ].promise().then( resolveFunc(i), deferred.reject );\n                        } else {\n                            --count;\n                        }\n                    }\n                    if ( !count ) {\n                        deferred.resolveWith( deferred, args );\n                    }\n                } else if ( deferred !== firstParam ) {\n                    deferred.resolveWith( deferred, length ? [ firstParam ] : [] );\n                }\n                return deferred.promise();\n            }\n        });\n    \n    \n    }(jQuery));\n\n	## So, your app only uses a certain version of jQuery from last year sometime, e.g. v 1.4.2\n\nNot a problem, you can add in the newer features you need by copying form the source and defining any dependencies used by the newer code, also copied from the source. *Use the Source, Luke*\n\nThis example shows how to add $.Deferred and the jQuery promise methods to your app which is still using version 1.4.2; perhaps some mission critical plugin or other code is preventing you from an upgrade to the lasted jQuery release.	use-newer-jquery-features-when-your-app-is-stuck-on-older-version	Use Newer jQuery Features When Your App Is Stuck on Older Version	2011-10-08	2015-05-07 17:03:21.348727	2015-05-07 17:03:21.348727	1	'/1273133':185C '/1273143':182C '/2011/09/26/a-walkthrough-jquery-deferred-and-promise/':126C '/862567':123C '/blog/jquery-15-hotness-part-2':120C '/downloads/code/deferred-promise/':192C '/en-us/scriptjunkie/gg723713':117C '/isfunction':293C '/jquery.ajax/':114C '0':360C,363C,391C,423C,433C,542C,661C,686C,724C '1':393C,419C,465C,545C,668C,683C,727C '1.4.2':29B,85B,201C '8421':415C 'action':163C,174C,543C,567C,578C 'ad':203C,594C 'add':35B,70B,486C 'ajax':158C,162C 'alreadi':322C 'also':56B 'alway':143C,222C,504C 'api.jquery.com':113C 'api.jquery.com/jquery.ajax/':112C 'app':7A,15B,79B 'appli':425C 'arg':316C,348C,370C,401C,405C,412C,416C,417C,427C,431C,658C,680C,723C,733C,736C,739C,752C 'args.length':365C,663C 'argument':349C,443C,448C,509C,512C,556C,659C,685C,698C 'arguments.length':682C 'array':263C,377C,716C 'aspect':592C 'avail':414C 'avoid':319C 'boolean':259C 'bug':691C 'call':640C 'callback':306C,311C,313C,422C,466C,475C,627C 'callbacks.push':385C 'callbacks.shift':424C 'cancel':334C,335C,346C,407C,461C,462C,464C,637C 'certain':19B 'chang':695C 'class2type':253C,256C,271C,284C 'clone':710C 'code':55B,93B,170C,193C,209C 'complet':165C 'context':315C,399C,404C,426C,430C,440C 'copi':43B,57B 'count':664C,689C,747C,749C 'creat':301C 'critic':89B 'data':155C,538C,541C,544C 'date':264C 'defer':71B,110C,136C,194C,196C,304C,308C,331C,337C,339C,379C,453C,470C,473C,477C,481C,493C,508C,550C,570C,575C,585C,618C,648C,649C,651C,652C,666C,721C,751C,755C,758C 'deferred.cancel':635C,639C 'deferred.done':498C,632C 'deferred.done.apply':378C,507C 'deferred.promise':762C 'deferred.reject':745C 'deferred.resolvewith':389C,446C,720C,750C,757C 'defin':48B 'delet':638C 'depend':50B,247C 'done':138C,176C,216C,340C,343C,530C 'donecallback':496C,499C 'e.g':27B,156C 'elem':352C,369C,374C,380C,386C 'els':236C,381C,565C,574C,746C,753C 'end':701C 'errordef':487C 'exampl':66B,188C,198C 'explan':128C 'f1':341C 'f2':342C 'fail':139C,217C,500C,513C,533C,634C 'fail.apply':510C 'failcallback':497C,501C 'faildef':483C 'faildeferred.cancel':633C 'faildeferred.done':514C 'faildeferred.isresolved':520C 'faildeferred.resolve':518C 'faildeferred.resolvewith':516C 'fals':235C,246C 'featur':4A,39B 'ff4':693C 'final':428C 'fire':317C,320C,325C,354C,356C,357C,358C,359C,388C,390C,392C,408C,409C,418C,429C,432C,459C,460C 'firstparam':656C,669C,672C,756C,760C 'firstparam.promise':671C 'flag':326C 'fledg':472C 'fn':540C,549C 'fn.apply':554C 'fndone':523C,531C 'fnfail':524C,534C 'form':44B 'fresh':715C 'full':471C 'func':479C,642C,646C 'func.call':647C 'function':211C,233C,239C,262C,268C,277C,294C,299C,309C,344C,384C,403C,445C,457C,463C,478C,495C,505C,522C,527C,536C,552C,599C,655C,674C,678C 'get':153C,580C 'gist':178C 'gist.github.com':122C,181C,184C 'gist.github.com/1273133':183C 'gist.github.com/1273143':180C 'gist.github.com/862567':121C 'given':398C,442C,641C 'handler':537C,551C,576C 'helper':653C 'implement':204C 'isfunct':289C 'isreject':141C,219C,519C 'isresolv':140C,218C,456C 'issu':719C 'joseoncode.com':125C 'joseoncode.com/2011/09/26/a-walkthrough-jquery-deferred-and-promise/':124C 'jqueri':3A,22B,74B,103B,134C,200C,242C,763C 'jquery._deferred':482C,484C 'jquery.deferred':526C,673C 'jquery.each':237C,258C,529C 'jquery.extend':275C,300C,492C 'jquery.isfunction':548C,559C,670C,735C 'jquery.type':250C,297C,373C 'know':328C 'last':24B,102B 'length':351C,364C,367C,662C,665C,667C,726C,730C,759C 'link':105C 'list':307C,312C,476C,628C 'luke':64B 'make':410C,623C 'map':257C 'may':147C 'method':76B,135C,214C,292C,488C,709C 'mission':88B 'msdn.microsoft.com':116C 'msdn.microsoft.com/en-us/scriptjunkie/gg723713':115C 'name':270C,273C 'name.tolowercase':274C 'need':41B,160C 'newdef':528C,566C,571C,577C 'newdefer.reject':564C 'newdefer.resolve':563C 'newer':2A,38B,54B,206C 'null':281C,603C 'number':260C 'obj':278C,280C,283C,286C,295C,298C,587C,600C,602C,609C,615C,622C 'object':266C,272C,287C,597C,699C,712C 'older':11A 'one':305C,626C 'onto':696C 'outsid':706C 'perhap':86B 'pipe':144C,223C,521C 'pixelhandler.com':191C 'pixelhandler.com/downloads/code/deferred-promise/':190C 'plugin':90B 'popul':254C 'prevent':95B 'problem':32B 'promis':75B,111C,137C,195C,197C,213C,220C,485C,491C,579C,582C,591C,598C,605C,607C,608C,738C,741C 'promisemethod':215C,238C,616C,619C 'promisemethods.length':612C 'provid':589C 'quickleft.com':119C 'quickleft.com/blog/jquery-15-hotness-part-2':118C 'realli':130C 'redefin':288C 'refer':226C 'regexp':265C 'reject':517C,535C 'rejectwith':515C 'releas':104B 'resolv':396C,436C,444C,455C,532C 'resolvefunc':675C,743C 'resolvewith':402C 'respond':171C 'return':234C,245C,279C,296C,394C,434C,449C,458C,467C,469C,502C,506C,525C,546C,553C,558C,573C,606C,621C,650C,677C,761C 'returned.promise':560C,561C 'see':177C,186C 'servic':151C 'short':127C 'show':67B 'simpl':303C 'slice':228C,230C 'slicedef':229C 'slicedeferred.call':684C,722C 'solv':717C 'sometim':26B,700C 'sourc':46B,60B,63B 'split':224C,267C 'static':225C 'still':82B 'store':314C 'strang':690C 'string':261C,282C 'stuck':9A 'success':167C 'sure':411C,624C 'topic':108C 'tostring.call':285C 'tri':420C 'two':474C 'type':276C,291C,353C,372C,376C,383C 'typeof':232C,241C,249C 'undefin':244C,251C,704C 'unexpos':636C 'upgrad':99B 'use':1A,17B,51B,61B,83B,133C,149C,199C,208C,290C,631C 'v':28B 'valu':679C,687C,694C,705C 'var':212C,252C,310C,347C,480C,539C,610C,657C 'version':12A,20B,84B,207C 'via':157C 'want':131C 'work':187C 'year':25B	published	pixelhandler
64	  1. How would you describe the audience you want to attract?\n  2. Do you want the design to reflect your organization or your audience?\n  3. What is the primary message you wish to convey to your audience with this project?\n  4. What are the secondary objectives you hope to achieve?\n  5. Use three adjectives to describe how the overall design should be perceived by the end user. (Examples: conservative, progressive, friendly, formal, casual, serious, energetic, humorous, professional, fun.)\n  6. Would you like to see a group of stock photos? If yes, provide a range of the number of final photos that you estimate will be necessary to represent your product or company (e.g. 6 to 12 final photos).\n  7. Would it help to see 2-3 design comps? (different color schemes and text treatments)\n  8. Is there a color scheme, logo use, and/or photo(s) that you indent to use? (Do you already use marketing materials that should be followed for this project?)\n  9. What is the background, product line, and/or mission of your business? (This will help communicate the heart of the company to your audience.)\n  10. Please list URLs (web site addresses) of your competitors. Next to each specify what you like and don't like about these sites.\n  11. Please list any other URLs of sites that have look and feel and layout aspects you would like to emulate on your site.\n  12. Please give a range of the number of pages or screens that you feel will be sufficient to meet your project objectives (e.g. 20 to 25 final pages/screens).\n  13. For E-commerce Projects: \n    * Please estimate the total number of products (SKUs) and product categories.\n    * Do you have a merchant account with an online payment gateway (e.g. PayPal)?\n    * Would you like to use flat rate for shipping fees or live quotes from shipping providers?\n  14. Have you established a budget for the web site?\n  15. Do you have a copywriter for the content of your upcoming Web site? Do you need legal counsel to prepare 'terms of use' and 'privacy policy' pages?\n  16. Do you feel that Flash animation will help your visitors 'catch' your marketing message? if so, how many concepts/animations do you think will get the message across?\n  17. Are you interested in a dynamic or static web site? Dynamic sites use a database to update/edit content and/or product listings via your web browser. Static sites can be packaged with pre-paid maintenance plan for updates/edits.\n  18. Do you plan on advertising your products/service online? (Pay-per-click and banner ads, e.g. Google AdWords)\n  19. Do you have a strategy for Search Engine Optimization (SEO) for 'free leads' and/or Search Engine Marketing (SEM) for maximizing online advertising? SEO includes keyword research and planning your content for performance in Search Engine Results Pages (SERPs)\n  20. Finally, and perhaps most important, what is your 'unique selling proposition'? (i.e. How will you compete in the marketplace? What does your prospect need to know about the advantage of your products/services in order to become a client?)	Every Web project needs a solid plan to work through the estimate to the site delivery. Here is a list of project questions to plan your Web site with considerations for marketing, design, SEO, unique selling position, E-commerce, and more...	twenty-questions-to-plan-your-web-site-project	Twenty Questions to Plan Your Web Site Project	2007-10-27	2015-05-07 17:03:21.574279	2015-05-07 17:03:21.574279	1	'-3':174C '1':49C '10':236C '11':260C '12':164C,284C '13':313C '14':359C '15':369C '16':397C '17':425C '18':464C '19':483C '2':60C,173C '20':308C,522C '25':310C '3':73C '4':89C '5':99C '6':127C,162C '7':167C '8':183C '9':212C 'account':335C 'achiev':98C 'across':424C 'ad':479C 'address':242C 'adject':102C 'advantag':551C 'advertis':469C,505C 'adword':482C 'alreadi':201C 'and/or':191C,219C,444C,497C 'anim':403C 'aspect':275C 'attract':59C 'audienc':55C,72C,85C,235C 'background':216C 'banner':478C 'becom':558C 'browser':450C 'budget':364C 'busi':223C 'casual':121C 'catch':408C 'categori':329C 'click':476C 'client':560C 'color':178C,187C 'commerc':48B,317C 'communic':227C 'comp':176C 'compani':160C,232C 'compet':538C 'competitor':245C 'concepts/animations':416C 'conserv':117C 'consider':38B 'content':377C,443C,513C 'convey':82C 'copywrit':374C 'counsel':387C 'databas':440C 'deliveri':24B 'describ':53C,104C 'design':41B,65C,108C,175C 'differ':177C 'dynam':431C,436C 'e':47B,316C 'e-commerc':46B,315C 'e.g':161C,307C,341C,480C 'emul':280C 'end':114C 'energet':123C 'engin':491C,499C,518C 'establish':362C 'estim':20B,151C,320C 'everi':9B 'exampl':116C 'fee':352C 'feel':272C,298C,400C 'final':147C,165C,311C,523C 'flash':402C 'flat':348C 'follow':208C 'formal':120C 'free':495C 'friend':119C 'fun':126C 'gateway':340C 'get':421C 'give':286C 'googl':481C 'group':134C 'heart':229C 'help':170C,226C,405C 'hope':96C 'humor':124C 'i.e':534C 'import':527C 'includ':507C 'indent':196C 'interest':428C 'keyword':508C 'know':548C 'layout':274C 'lead':496C 'legal':386C 'like':130C,252C,256C,278C,345C 'line':218C 'list':28B,238C,262C,446C 'live':354C 'logo':189C 'look':270C 'mainten':460C 'mani':415C 'market':40B,203C,410C,500C 'marketplac':541C 'materi':204C 'maxim':503C 'meet':303C 'merchant':334C 'messag':78C,411C,423C 'mission':220C 'necessari':154C 'need':12B,385C,546C 'next':246C 'number':145C,291C,323C 'object':94C,306C 'onlin':338C,472C,504C 'optim':492C 'order':556C 'organ':69C 'overal':107C 'packag':455C 'page':293C,396C,520C 'pages/screens':312C 'paid':459C 'pay':474C 'pay-per-click':473C 'payment':339C 'paypal':342C 'per':475C 'perceiv':111C 'perform':515C 'perhap':525C 'photo':137C,148C,166C,192C 'plan':4A,15B,33B,461C,467C,511C 'pleas':237C,261C,285C,319C 'polici':395C 'posit':45B 'pre':458C 'pre-paid':457C 'prepar':389C 'primari':77C 'privaci':394C 'product':158C,217C,325C,328C,445C 'products/service':471C 'products/services':554C 'profession':125C 'progress':118C 'project':8A,11B,30B,88C,211C,305C,318C 'proposit':533C 'prospect':545C 'provid':140C,358C 'question':2A,31B 'quot':355C 'rang':142C,288C 'rate':349C 'reflect':67C 'repres':156C 'research':509C 'result':519C 'scheme':179C,188C 'screen':295C 'search':490C,498C,517C 'secondari':93C 'see':132C,172C 'sell':44B,532C 'sem':501C 'seo':42B,493C,506C 'serious':122C 'serp':521C 'ship':351C,357C 'site':7A,23B,36B,241C,259C,267C,283C,368C,382C,435C,437C,452C 'skus':326C 'solid':14B 'specifi':249C 'static':433C,451C 'stock':136C 'strategi':488C 'suffici':301C 'term':390C 'text':181C 'think':419C 'three':101C 'total':322C 'treatment':182C 'twenti':1A 'uniqu':43B,531C 'upcom':380C 'update/edit':442C 'updates/edits':463C 'url':239C,265C 'use':100C,190C,198C,202C,347C,392C,438C 'user':115C 'via':447C 'visitor':407C 'want':57C,63C 'web':6A,10B,35B,240C,367C,381C,434C,449C 'wish':80C 'work':17B 'would':51C,128C,168C,277C,343C 'yes':139C	published	pixelhandler
27	Each test will get values at different stages of user interaction with text\ninput field.\n\n  1. simulate user entering text within input field\n  2. simulate user leaving input field\n  3. simulate user re-entering input\n\n**Tests:**\n\n  1. Search form value empty prior to using searchText plugin\n  2. searchText jQuery Plugin With No Parameters\n  3. searchText jQuery Plugin With helperText Parameter\n  4. searchText jQuery Plugin With forceReset Parameter\n_[QUnit](http://docs.jquery.com/QUnit) is a lean testing framework used by the\ncontributors to the jQuery JavaScript library. _\n\n    \n    // documentation on writing tests here: http://docs.jquery.com/QUnit\n    // source : https://github.com/jquery/qunit\n    \n    // global var htmlsrc for namespace\n    if (!window.htmlsrc) {var htmlsrc = {};}\n    /*\n     * .searchText() testing user interaction with form input behaviors\n     */\n    \n    /* namespace */\n    module('namespace check');\n    test('is htmlsrc a global variable',function(){\n    \texpect(1);\n    \tok( window.htmlsrc, 'htmlsrc namespace is present');\n    });\n    \n    /* fixture */\n    htmlsrc.testMarkup = '#qunit-fixture';\n    \n    module(".searchText() jQuery Plugin", {\n      setup: function() {\n        htmlsrc.testForm = '<form action="submit" method="get" accept-charset="utf-8" id="searchform"><input type="text" name="s" value="" id="s" /><input type="submit" val="&rarr;" name="submit" /></form>';\n      },\n      teardown: function() {\n        $(htmlsrc.testMarkup).empty();\n      }\n    });\n    \n    test("Search form value empty prior to using searchText plugin", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value;  \n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n    \n      // Act\n      _Selector = 'input[type="text"]';\n      _Value = $(_Selector,_Form).val();\n    \n      // Assert\n      expect(1);\n      same(_Value,"", "text input field should have be empty, value is empty string");\n    });\n    \n    test("searchText jQuery Plugin With No Parameters", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value = {};  \n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n    \n      // Act\n      _Form.searchText();\n      _Selector = 'input[type="text"]';\n      _Value.a = $(_Selector, _Form).val();\n      _Value.b = $(_Selector, _Form).focus().val();\n      _Value.c = $(_Selector, _Form).focus().blur().val();\n      $(_Selector, _Form).blur();\n      _Value.c = $(_Selector, _Form).val();\n    \n      // Assert\n      expect(3);\n      same(_Value.a, "Search", "text input field should have the text 'Search'");\n      same(_Value.b, "", "text input field should not have any text on focus event");\n      same(_Value.c, "Search", "text 'Search' is devault after blur event");\n    });\n    \n    test("searchText jQuery Plugin With helperText Parameter", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value = {};\n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n      _Selector = 'input[type="text"]';\n    \n      // Act\n      _Form.searchText({ \n        helperText\t: "Search our site..."\n      });\n      // get values at different stages of user interaction with text input field\n      _Value.a = $(_Selector, _Form).val();\n      // simulate user entering text within input field\n      $(_Selector, _Form).focus();\n      _Value.b = $(_Selector, _Form).val();\n      $(_Selector, _Form).val("find it please");\n      // simulate user leaving input field\n      $(_Selector, _Form).blur();\n      _Value.c = $(_Selector, _Form).val();\n      // simulate user re-entering input\n      $(_Selector, _Form).focus();\n      _Value.d = $(_Selector, _Form).val();\n    \n      // Assert\n      expect(4);\n      same(_Value.a, "Search our site...", "text input field should have the custom text 'Search our site...'");\n      same(_Value.b, "", "text input field should not have any text on focus event");\n      same(_Value.c, "find it please", "new text value is kept after blur event");\n      same(_Value.d, "find it please", "new text value is not reset after re-entering input field");\n    });\n    \n    test("searchText jQuery Plugin With forceReset Parameter", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value = {};\n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n      _Selector = 'input[type="text"]';\n    \n      // Act\n      _Form.searchText({ \n        forceReset : true\n      });\n      // get values at different stages of user interaction with text input field\n      _Value.a = $(_Selector, _Form).val();\n      // simulate user entering text within input field\n      $(_Selector, _Form).focus();\n      _Value.b = $(_Selector, _Form).val();\n      $(_Selector, _Form).val("I am looking for cheese");\n      // simulate user leaving input field\n      $(_Selector, _Form).blur();\n      _Value.c = $(_Selector, _Form).val();\n      // simulate user re-entering input\n      $(_Selector, _Form).focus();\n      _Value.d = $(_Selector, _Form).val();\n    \n      // Assert\n      expect(4);\n      same(_Value.a, "Search", "text input field should have the default text 'Search'");\n      same(_Value.b, "", "text input field should not have any text on focus event");\n      same(_Value.c, "I am looking for cheese", "new text value is kept after blur event");\n      same(_Value.d, "", "new text value is forced to reset after re-entering (focus) input");\n    });\n	The purpose of this code is to test the behavior of the \n[.searchText() jQuery plugin](http://html-src.com/web-dev/71/searchtext-jquery-plugin-to-add-helper-text-in-search-input/). \n**[Source Code](https://gist.github.com/665652) |\n[Demo and QUnit tests](http://code.html-src.com/665652/)**	qunit-tests-for-searchtext-search-form-helper-plugin	QUnit Tests for .searchText() Search Form Helper Plugin	2010-11-11	2015-05-07 17:03:21.388948	2015-05-07 17:03:21.388948	1	'/665652)':31B '/665652/)**':38B '/jquery/qunit':136C '/qunit':132C '/qunit)':110C '/web-dev/71/searchtext-jquery-plugin-to-add-helper-text-in-search-input/).':26B '1':54C,76C,166C,220C '2':62C,86C '3':68C,93C,281C '4':100C,406C,556C 'act':209C,251C,337C,487C 'appendto':207C,249C,331C,481C 'arrang':200C,242C,324C,474C 'assert':218C,279C,404C,554C 'behavior':18B,153C 'blur':270C,274C,314C,386C,447C,536C,595C 'check':157C 'chees':528C,588C 'code':13B,28B 'code.html-src.com':37B 'code.html-src.com/665652/)**':36B 'contributor':119C 'custom':418C 'default':566C 'demo':32B 'devault':312C 'differ':45C,346C,494C 'docs.jquery.com':109C,131C 'docs.jquery.com/qunit':130C 'docs.jquery.com/qunit)':108C 'document':125C 'empti':80C,188C,193C,229C,232C 'enter':57C,73C,361C,395C,463C,509C,545C,609C 'event':305C,315C,435C,448C,581C,596C 'expect':165C,219C,280C,405C,555C 'field':53C,61C,67C,225C,287C,297C,354C,365C,383C,414C,427C,465C,502C,513C,533C,562C,573C 'find':376C,438C,451C 'fixtur':173C,177C 'focus':264C,269C,304C,368C,399C,434C,516C,549C,580C,610C 'forc':603C 'forcereset':105C,471C,489C 'form':6A,78C,151C,191C,202C,205C,216C,244C,247C,259C,263C,268C,273C,277C,326C,329C,357C,367C,371C,374C,385C,389C,398C,402C,476C,479C,505C,515C,519C,522C,535C,539C,548C,552C 'form.searchtext':252C,338C,488C 'framework':115C 'function':164C,183C,186C,199C,241C,323C,473C 'get':42C,343C,491C 'gist.github.com':30B 'gist.github.com/665652)':29B 'github.com':135C 'github.com/jquery/qunit':134C 'global':137C,162C 'helper':7A 'helpertext':98C,321C,339C 'html-src.com':25B 'html-src.com/web-dev/71/searchtext-jquery-plugin-to-add-helper-text-in-search-input/).':24B 'htmlsrc':139C,145C,160C,169C 'htmlsrc.testform':184C,206C,248C,330C,480C 'htmlsrc.testmarkup':174C,187C,208C,250C,332C,482C 'input':52C,60C,66C,74C,152C,211C,224C,254C,286C,296C,334C,353C,364C,382C,396C,413C,426C,464C,484C,501C,512C,532C,546C,561C,572C,611C 'interact':49C,149C,350C,498C 'javascript':123C 'jqueri':22B,88C,95C,102C,122C,180C,236C,318C,468C 'kept':445C,593C 'lean':113C 'leav':65C,381C,531C 'librari':124C 'look':526C,586C 'modul':155C,178C 'namespac':141C,154C,156C,170C 'new':441C,454C,589C,599C 'ok':167C 'paramet':92C,99C,106C,240C,322C,472C 'pleas':378C,440C,453C 'plugin':8A,23B,85C,89C,96C,103C,181C,198C,237C,319C,469C 'present':172C 'prior':81C,194C 'purpos':10B 'qunit':1A,34B,107C,176C 'qunit-fixtur':175C 're':72C,394C,462C,544C,608C 're-ent':71C,393C,461C,543C,607C 'reset':459C,605C 'search':5A,77C,190C,284C,292C,308C,310C,340C,409C,420C,559C,568C 'searchtext':4A,21B,84C,87C,94C,101C,146C,179C,197C,235C,317C,467C 'selector':203C,210C,215C,245C,253C,258C,262C,267C,272C,276C,327C,333C,356C,366C,370C,373C,384C,388C,397C,401C,477C,483C,504C,514C,518C,521C,534C,538C,547C,551C 'setup':182C 'simul':55C,63C,69C,359C,379C,391C,507C,529C,541C 'site':342C,411C,422C 'sourc':27B,133C 'stage':46C,347C,495C 'string':233C 'teardown':185C 'test':2A,16B,35B,40C,75C,114C,128C,147C,158C,189C,234C,316C,466C 'text':51C,58C,213C,223C,256C,285C,291C,295C,302C,309C,336C,352C,362C,412C,419C,425C,432C,442C,455C,486C,500C,510C,560C,567C,571C,578C,590C,600C 'true':490C 'type':212C,255C,335C,485C 'use':83C,116C,196C 'user':48C,56C,64C,70C,148C,349C,360C,380C,392C,497C,508C,530C,542C 'val':217C,260C,265C,271C,278C,358C,372C,375C,390C,403C,506C,520C,523C,540C,553C 'valu':43C,79C,192C,204C,214C,222C,230C,246C,328C,344C,443C,456C,478C,492C,591C,601C 'value.a':257C,283C,355C,408C,503C,558C 'value.b':261C,294C,369C,424C,517C,570C 'value.c':266C,275C,307C,387C,437C,537C,583C 'value.d':400C,450C,550C,598C 'var':138C,144C,201C,243C,325C,475C 'variabl':163C 'window.htmlsrc':143C,168C 'within':59C,363C,511C 'write':127C	published	pixelhandler
29	\n    \n    (function($) {\n    /**  \n     *  .searchText()\n     *\t\tadd some helper text to search input field\n     */\n    $.fn.searchText = function(options) {\n    \tvar defaults = {\n    \t\thelperText : 'Search',\n    \t\tinputId    : '#s',\n    \t\tforceReset : false\n    \t};\n    \tvar opts = $.extend({},defaults, options);\n    \treturn this.each(function() {\n    \t\t// write helper text inside input field\n    \t\t$(opts.inputId).bind('blur', {msg: opts.helperText}, function(event){\n    \t\t\t// $.log(event.type + " : " + event.target.id + " : " + event.data.msg);\n    \t\t\tvar _self = $(this);\n    \t\t\tif (_self.val() === '') {\n    \t\t\t\t_self.val(event.data.msg);\n    \t\t\t}\n    \t\t\treturn false;\n    \t\t}).bind('focus', {msg: opts.helperText}, function(event){\n    \t\t\tvar _self = $(this);\n    \t\t\tif (opts.forceReset || _self.val() === event.data.msg) {\n    \t\t\t\t// clear search input form\n    \t\t\t\t_self.val('');\n    \t\t\t}\n    \t\t\treturn false;\n    \t\t}).trigger('blur');\n    \t});\n    };\n    })(jQuery);\n    \n    // Use the plugin in your document ready block\n    // Use plugin when WordPress search form id is present\n    //   - $('#searchform').searchText();\n    // Call plugin with option to force reseting the text on focus\n    $('#searchform').searchText({\n    \thelperText : 'Search',\n    \tinputId    : '#s',\n    \tforceReset : true\n    });\n\n**Use the plugin in your document ready :**\n    \n    \n    // use plugin when WordPress search form id is present\n    $('#searchform').searchText();\n    \n\n**Or,**\n    \n    \n    // call plugin with option to force reseting the text on focus\n    $('#searchform').searchText({\n    \thelperText : 'Search',\n    \tinputId    : '#s',\n    \tforceReset : true\n    });\n    \n    \n    <!DOCTYPE html>\n    <html lang="en">\n    <head>\n      <title>HTML for .searchText() jQuery Plugin, custom helper text input value</title>\n      <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>\n    </head>\n    <body>\n      <h1>.searchText() jQuery Plugin, adding search helper text / behavior</h1>\n      <ol>\n        <li>\n          <p><strong>Default options</strong>, &quot;Search&quot; text added to input&hellip;</p>\n          <form action="#" method="get" accept-charset="utf-8" id="defaultform">\n            <input type="text" name="s" value="" id="d" />\n            <input type="submit" val="submit" name="submit" />\n          </form>\n        </li>\n      \n        <li>\n          <p>Extend default options, forcing text to <strong>reset upon re-entry</strong>&hellip;</strong></p>\n          <form action="#" method="get" accept-charset="utf-8" id="searchform">\n            <input type="text" name="s" value="" id="s" />\n            <input type="submit" val="submit" name="submit" />\n          </form>\n        </li>\n      \n        <li>\n          <p>Extend default options, with <strong>custom helper</strong> text&hellip;</p>\n          <form action="#" method="get" accept-charset="utf-8" id="findform">\n            <input type="text" name="s" value="" id="f" />\n            <input type="submit" val="submit" name="submit" />\n          </form>\n        </li>\n      \n        <li>\n          <p>Extend default options, with <strong>helperText</strong> and <strong>forceReset</strong> options&hellip;</p>\n          <form action="#" method="get" accept-charset="utf-8" id="whereform">\n            <input type="text" name="s" value="" id="w" />\n            <input type="submit" val="submit" name="submit" />\n          </form>\n        </li>\n      </ol>\n      <h2>Unit Tests</h2>\n      <p><a href="unitTests.html">Click to run tests with QUnit!</a></p>\n      <script src="jquery.htmlsrc.searchText.js"></script>\n      <script type="text/javascript" charset="utf-8">\n      (function($){\n        // 1. Extend default options\n        $('#defaultform').searchText({\n        \tinputId    : '#d'\n        });\n    \n        // 2. Extend default options, forcing field to reset upon re-entry\n        // was already in the jquery.htmlsrc.searchText.js file\n    \n        // 3. Extend default options, with custom helper text\n        $('#findform').searchText({\n        \thelperText : 'Find something...',\n        \tinputId    : '#f'\n        });\n    \n        // 4. \n        $('#whereform').searchText({\n        \thelperText : 'where is...',\n        \tinputId    : '#w',\n        \tforceReset : true\n        });\n    \n      })(this.jQuery);\n      </script>\n    </body>\n    </html>\n\n**Clone the code snippet with git…**\n    \n    \n    git clone git://gist.github.com/665652.git\n    \n    \n    // documentation on writing tests here: http://docs.jquery.com/QUnit\n    // source : https://github.com/jquery/qunit\n    \n    // global var htmlsrc for namespace\n    if (!window.htmlsrc) {var htmlsrc = {};}\n    /*\n     * .searchText() testing user interaction with form input behaviors\n     */\n    \n    /* namespace */\n    module('namespace check');\n    test('is htmlsrc a global variable',function(){\n    \texpect(1);\n    \tok( window.htmlsrc, 'htmlsrc namespace is present');\n    });\n    \n    /* fixture */\n    htmlsrc.testMarkup = '#qunit-fixture';\n    \n    module(".searchText() jQuery Plugin", {\n      setup: function() {\n        htmlsrc.testForm = '<form action="submit" method="get" accept-charset="utf-8" id="searchform"><input type="text" name="s" value="" id="s" /><input type="submit" val="&rarr;" name="submit" /></form>';\n      },\n      teardown: function() {\n        $(htmlsrc.testMarkup).empty();\n      }\n    });\n    \n    test("Search form value empty prior to using searchText plugin", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value;  \n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n    \n      // Act\n      _Selector = 'input[type="text"]';\n      _Value = $(_Selector,_Form).val();\n    \n      // Assert\n      expect(1);\n      same(_Value,"", "text input field should have be empty, value is empty string");\n    });\n    \n    test("searchText jQuery Plugin With No Parameters", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value = {};  \n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n    \n      // Act\n      _Form.searchText();\n      _Selector = 'input[type="text"]';\n      _Value.a = $(_Selector, _Form).val();\n      _Value.b = $(_Selector, _Form).focus().val();\n      _Value.c = $(_Selector, _Form).focus().blur().val();\n      $(_Selector, _Form).blur();\n      _Value.c = $(_Selector, _Form).val();\n    \n      // Assert\n      expect(3);\n      same(_Value.a, "Search", "text input field should have the text 'Search'");\n      same(_Value.b, "", "text input field should not have any text on focus event");\n      same(_Value.c, "Search", "text 'Search' is devault after blur event");\n    });\n    \n    test("searchText jQuery Plugin With helperText Parameter", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value = {};\n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n      _Selector = 'input[type="text"]';\n    \n      // Act\n      _Form.searchText({ \n        helperText\t: "Search our site..."\n      });\n      // get values at different stages of user interaction with text input field\n      _Value.a = $(_Selector, _Form).val();\n      // simulate user entering text within input field\n      $(_Selector, _Form).focus();\n      _Value.b = $(_Selector, _Form).val();\n      $(_Selector, _Form).val("find it please");\n      // simulate user leaving input field\n      $(_Selector, _Form).blur();\n      _Value.c = $(_Selector, _Form).val();\n      // simulate user re-entering input\n      $(_Selector, _Form).focus();\n      _Value.d = $(_Selector, _Form).val();\n    \n      // Assert\n      expect(4);\n      same(_Value.a, "Search our site...", "text input field should have the custom text 'Search our site...'");\n      same(_Value.b, "", "text input field should not have any text on focus event");\n      same(_Value.c, "find it please", "new text value is kept after blur event");\n      same(_Value.d, "find it please", "new text value is not reset after re-entering input field");\n    });\n    \n    test("searchText jQuery Plugin With forceReset Parameter", function() {\n    \n      // Arrange\n      var _Form, _Selector, _Value = {};\n      _Form = $(htmlsrc.testForm).appendTo(htmlsrc.testMarkup);\n      _Selector = 'input[type="text"]';\n    \n      // Act\n      _Form.searchText({ \n        forceReset : true\n      });\n      // get values at different stages of user interaction with text input field\n      _Value.a = $(_Selector, _Form).val();\n      // simulate user entering text within input field\n      $(_Selector, _Form).focus();\n      _Value.b = $(_Selector, _Form).val();\n      $(_Selector, _Form).val("I am looking for cheese");\n      // simulate user leaving input field\n      $(_Selector, _Form).blur();\n      _Value.c = $(_Selector, _Form).val();\n      // simulate user re-entering input\n      $(_Selector, _Form).focus();\n      _Value.d = $(_Selector, _Form).val();\n    \n      // Assert\n      expect(4);\n      same(_Value.a, "Search", "text input field should have the default text 'Search'");\n      same(_Value.b, "", "text input field should not have any text on focus event");\n      same(_Value.c, "I am looking for cheese", "new text value is kept after blur event");\n      same(_Value.d, "", "new text value is forced to reset after re-entering (focus) input");\n    });\n	This jQuery plugin script added text to an input field in a search form. The\ndefaults are set to the IDs used in a WordPress search form. The behavior can\nbe set to force clearing of text every time user causes focus event to fire in\ntext input (clicks to type). The function tirggers the focus event to start\noff with the helper text in the input field. [Demo and QUnit\ntests](http://code.html-src.com/665652/)	searchtext-jquery-plugin-to-add-helper-text-in-search-input	searchText() jQuery Plugin to Add Helper Text in Search Input	2010-09-02	2015-05-07 17:03:21.402957	2015-05-07 17:03:21.402957	1	'/665652.git':309C '/665652/)':85B '/jquery/qunit':321C '/qunit':317C '1':351C,405C '3':466C '4':591C,741C 'act':394C,436C,522C,672C 'ad':15B,253C,262C 'add':5A,88C 'appendto':392C,434C,516C,666C 'arrang':385C,427C,509C,659C 'assert':403C,464C,589C,739C 'behavior':39B,257C,338C 'bind':122C,141C 'block':171C 'blur':123C,162C,455C,459C,499C,571C,632C,721C,780C 'call':183C,221C 'caus':51B 'check':342C 'chees':713C,773C 'clear':45B,154C 'click':59B,293C 'clone':299C,306C 'code':301C 'code.html-src.com':84B 'code.html-src.com/665652/)':83B 'custom':245C,280C,603C 'default':26B,100C,110C,258C,266C,277C,284C,751C 'demo':79B 'devault':497C 'differ':531C,679C 'docs.jquery.com':316C 'docs.jquery.com/qunit':315C 'document':169C,207C,310C 'empti':373C,378C,414C,417C 'enter':546C,580C,648C,694C,730C,794C 'entri':275C 'event':53B,67B,127C,146C,490C,500C,620C,633C,766C,781C 'event.data.msg':131C,138C,153C 'event.target.id':130C 'event.type':129C 'everi':48B 'expect':350C,404C,465C,590C,740C 'extend':109C,265C,276C,283C 'fals':106C,140C,160C 'field':20B,78B,95C,120C,410C,472C,482C,539C,550C,568C,599C,612C,650C,687C,698C,718C,747C,758C 'find':561C,623C,636C 'fire':55B 'fixtur':358C,362C 'fn.searchtext':96C 'focus':52B,66B,142C,193C,231C,449C,454C,489C,553C,584C,619C,701C,734C,765C,795C 'forc':44B,188C,226C,268C,788C 'forcereset':105C,200C,238C,289C,656C,674C 'form':24B,37B,157C,177C,214C,336C,376C,387C,390C,401C,429C,432C,444C,448C,453C,458C,462C,511C,514C,542C,552C,556C,559C,570C,574C,583C,587C,661C,664C,690C,700C,704C,707C,720C,724C,733C,737C 'form.searchtext':437C,523C,673C 'function':63B,86C,97C,114C,126C,145C,349C,368C,371C,384C,426C,508C,658C 'get':528C,676C 'gist.github.com':308C 'gist.github.com/665652.git':307C 'git':304C,305C 'github.com':320C 'github.com/jquery/qunit':319C 'global':322C,347C 'helper':6A,73B,90C,116C,246C,255C,281C 'helpertext':101C,196C,234C,287C,506C,524C 'html':240C 'htmlsrc':324C,330C,345C,354C 'htmlsrc.testform':369C,391C,433C,515C,665C 'htmlsrc.testmarkup':359C,372C,393C,435C,517C,667C 'id':31B,178C,215C 'input':10A,19B,58B,77B,94C,119C,156C,248C,264C,337C,396C,409C,439C,471C,481C,519C,538C,549C,567C,581C,598C,611C,649C,669C,686C,697C,717C,731C,746C,757C,796C 'inputid':103C,198C,236C 'insid':118C 'interact':334C,535C,683C 'jqueri':2A,12B,163C,243C,251C,365C,421C,503C,653C 'kept':630C,778C 'leav':566C,716C 'log':128C 'look':711C,771C 'modul':340C,363C 'msg':124C,143C 'namespac':326C,339C,341C,355C 'new':626C,639C,774C,784C 'ok':352C 'opt':108C 'option':98C,111C,186C,224C,259C,267C,278C,285C,290C 'opts.forcereset':151C 'opts.helpertext':125C,144C 'opts.inputid':121C 'paramet':425C,507C,657C 'pleas':563C,625C,638C 'plugin':3A,13B,166C,173C,184C,204C,210C,222C,244C,252C,366C,383C,422C,504C,654C 'present':180C,217C,357C 'prior':379C 'qunit':81B,298C,361C 'qunit-fixtur':360C 're':274C,579C,647C,729C,793C 're-ent':578C,646C,728C,792C 're-entri':273C 'readi':170C,208C 'reset':189C,227C,271C,644C,790C 'return':112C,139C,159C 'run':295C 'script':14B 'search':9A,23B,36B,93C,102C,155C,176C,197C,213C,235C,254C,260C,375C,469C,477C,493C,495C,525C,594C,605C,744C,753C 'searchform':181C,194C,218C,232C 'searchtext':1A,87C,182C,195C,219C,233C,242C,250C,331C,364C,382C,420C,502C,652C 'selector':388C,395C,400C,430C,438C,443C,447C,452C,457C,461C,512C,518C,541C,551C,555C,558C,569C,573C,582C,586C,662C,668C,689C,699C,703C,706C,719C,723C,732C,736C 'self':133C,148C 'self.val':136C,137C,152C,158C 'set':28B,42B 'setup':367C 'simul':544C,564C,576C,692C,714C,726C 'site':527C,596C,607C 'snippet':302C 'sourc':318C 'stage':532C,680C 'start':69B 'string':418C 'teardown':370C 'test':82B,292C,296C,313C,332C,343C,374C,419C,501C,651C 'text':7A,16B,47B,57B,74B,91C,117C,191C,229C,247C,256C,261C,269C,282C,398C,408C,441C,470C,476C,480C,487C,494C,521C,537C,547C,597C,604C,610C,617C,627C,640C,671C,685C,695C,745C,752C,756C,763C,775C,785C 'this.each':113C 'time':49B 'tirgger':64B 'trigger':161C 'true':201C,239C,675C 'type':61B,397C,440C,520C,670C 'unit':291C 'upon':272C 'use':32B,164C,172C,202C,209C,381C 'user':50B,333C,534C,545C,565C,577C,682C,693C,715C,727C 'val':402C,445C,450C,456C,463C,543C,557C,560C,575C,588C,691C,705C,708C,725C,738C 'valu':249C,377C,389C,399C,407C,415C,431C,513C,529C,628C,641C,663C,677C,776C,786C 'value.a':442C,468C,540C,593C,688C,743C 'value.b':446C,479C,554C,609C,702C,755C 'value.c':451C,460C,492C,572C,622C,722C,768C 'value.d':585C,635C,735C,783C 'var':99C,107C,132C,147C,323C,329C,386C,428C,510C,660C 'variabl':348C 'window.htmlsrc':328C,353C 'within':548C,696C 'wordpress':35B,175C,212C 'write':115C,312C	published	pixelhandler
50	![photo of balanced rocks along coast](http://pixelhandler.com/wp-content/uploads/2009/12/BalanceStonesPhoto160x120.jpg)\n\nThis weekend I celebrated my 10 year anniversary by taking a day trip to San Diego with my bride. \nAlong the coast was a street performer showing his talent of balancing rocks. \nWe happened to stroll by as the sun dipped toward the ocean and I took a quick picture with my iPhone. (© 2009, Bill Heaton)	![impression of balanced rocks at sunset](http://pixelhandler.com/wp-content/uploads/2009/12/BalanceStones091206.jpg)	balanced-rocks-at-sunset-in-san-diego	Balanced Rocks at Sunset in San Diego	2009-12-06	2015-05-07 17:03:21.494877	2015-05-07 17:03:21.494877	1	'/wp-content/uploads/2009/12/balancestones091206.jpg)':16B '/wp-content/uploads/2009/12/balancestonesphoto160x120.jpg)':25C '10':31C '2009':79C 'along':21C,45C 'anniversari':33C 'balanc':1A,10B,19C,56C 'bill':80C 'bride':44C 'celebr':29C 'coast':22C,47C 'day':37C 'diego':7A,41C 'dip':66C 'happen':59C 'heaton':81C 'impress':8B 'iphon':78C 'ocean':69C 'perform':51C 'photo':17C 'pictur':75C 'pixelhandler.com':15B,24C 'pixelhandler.com/wp-content/uploads/2009/12/balancestones091206.jpg)':14B 'pixelhandler.com/wp-content/uploads/2009/12/balancestonesphoto160x120.jpg)':23C 'quick':74C 'rock':2A,11B,20C,57C 'san':6A,40C 'show':52C 'street':50C 'stroll':61C 'sun':65C 'sunset':4A,13B 'take':35C 'talent':54C 'took':72C 'toward':67C 'trip':38C 'weekend':27C 'year':32C	published	pixelhandler
4	## Test-Driven Development by Example: Toran Billups, 5:30 - 6:00 PM\n\n_Maybe there are other people at the conference who build Web apps like I do, this is for you_ - Pro Tips about TDD…\n\nYour tests should still pass between design iterations!\n\n#### Let's build a Kanban board, TDD style\n\nLive coding building a mini app from scratch using Ember CLI, and using test-driven development.\n\n* Using an ember-cli app, start by generating an acceptance test, assignment\n* `visiting /assignment` use `ember test --server` start with failing test 3 unassigned items\n* Define a route 'todos'\n* Red -> Green -> Refactor; it's OK to keep using Red for immediate feedback\n* Add a "todos" controller with the ember generator\n* Create the `unassigned` property, return an array with 3 items in it\n* Test result is green\n* In the acceptance test add a specific assertion for a seletector you'll use in your template\n* Add some sample data in the controller, 3 objects each with a projects property\n* Oops the tests were dependent on the HTML markup, instead remove any specific assertions about the layout (elements), use classes instead\n* Add the `assigned` property to the controller to iterate on the acceptance tests\n* Fixup the template to include the property that was in the test/assertion\n* Add a new property to the model object for the status\n* Rip out the mock model objects from the controller and paste into the Route's model hook\n* Add the status property to the template\n* Acceptance testing is great to show the happy path flow from your route to controller\n* Time to break out of acceptance testing and into unit testing so explore the transition between a status of 'unassigned' to 'assigned'\n* Unit test run in isolation, you can run just one test, `ember test --filter='todo'`\n* Create a Todo model and a computed property for `status`, match up the lingo your template to a boolean property of the status_code\n* Every piece of test code is code you maintain, it is ok to delete a test, if another test already tests the same behavior\n* Write another acceptance test for toggling the status from unassigned to assigned\n* Test code documents your app, so it's a good idea to tell the before and after story\n  * Create some assertions for the state before (in the arrangement) you act, then assert.\n* Figure out how to mock the XHR and move out the hardcoded model from the route's model hook\n* In the route hook add the code to make the XHR request\n* Mock the XHR and in your test simulate the response\n* Add a new acceptance test to show the details for an item, `visit`, `click`, `andThen`\n* Add a `link-to` helper in the template for the details, give it a class that your test can use for a selector\n* Add a nested route for /todo/:todo_id\n* Oops the test breaks, the data set needs an ID property\n* Assume that the details info is hidden, so update the test so assert that the content is hidden\n* When the URL is toggled then the details content hides or shows\n* Check the current route name to see what the URL is represented by (in your test)\n* Go back to the template and add an outlet\n\n## Dynamic Graphic Composition in Ember: Chris Henn, 4:45 - 5:15 PM\n\n#### When is the Grammer of Graphics appropriate?\n\n* You decide how much of this abstraction you would like to apply\n* General purpose plotting library vs. App with one visualization\n\n#### Considerations\n\n* Interactivity?\n* Animations and Transitions\n  * The how point of the visualization is to convey data, use transitions (D3)\n\nBreaking graphic down into parts allows you to add simple snippets of interactivity or transitions.\n\n#### What does this look like in Ember\n\n* Data to Aesthetic mappings\n* Scales: a constructor / function ( including its inverse)\n  * in Ember can use a computed property (macro)\n* Layers: each layer as a separate component\n  * Generalizable, like playing with Legos\n* Geometries: SVG\n\n#### How to we split a statistical graphic into parts?\n\n* Faceting: How to compose data visualizations\n* A coordinate system, e.g. plots, circular plane\n* Layers: Geometry / Stat / Optional Data to Aesthetic mapping\n* Representing the mappings as points, the Geometry\n* For every data to aesthetic mapping there is a scale, a mapping function\n* A Simple scatter plot with 3 mappings (data to aesthetic mapping)\n* Grammer of Graphics, Hadley Wickham\n* Need: a flexible system\n* Adding a block param layer and adding multiple layers\n* Do heavier cars get worse mileage? (DEMO - scatterplot)\n  * Graph: Horizontal:weight / Vertical:mileage\n* Encourages custom visualizations\n* Suggests the aspects of a plot that are possible to change\n* Lets change one feature of the graphic at a time\n* Tackle it with composition\n\n*Use Ember to take advantage of visualizations*\n\n<http://chrishenn.net> | Twitter: @cwhnn | github: chnn/composing-graphics\n\n## Bring Sanity to Frontend Infrastructure with Ember: Sam Selikoff, 4:00 - 4:30 PM\n\n(latest updates flow in at the top)\n\nDevelop successful solutions for solid primitives is found in iteration and innovation\n\n1. Give developers the tools to tinker\n2. Deliberately fold in shared solutions\n3. Innovate and Share!\n\nAcme was right to start with a monolith, but over time they would identify the right abstractions and solutions for their framework and tooling. \n\n#### Ember CLI - future freshness baked in\n\n* The Ember community is relentless about finding and promoting best practices as they emerge as standards\n* Trust: new standards and best practices from the Web community will eventually land in the APIs found in Ember CLI\n* Overall architecture is more flexible so sub-sets of the system can be swapped out\n* semver + CLI conventions\n\n#### Process\n\n_Identify Redundancies and Abstractions_\n\nIt's important to have a process around discovering the right abstractions\n\n#### Testing\n\n* ember generate factory\n* Addon for data concerns, e.g. http mocks; more consistency in the ecosystem\n* More similarities emerged, mocking data, proxies\n* `ember test` provides a test harness that is common\n\n#### Solutions Ember CLI brought for deployment concerns\n\n1. manual\n2. shared script\n3. deploy addon\n4. deploy server\n\n#### Deployments\n\n* ember-deploy was all they needed to ship applications to production, various components were created as addons (pluggable)\n* Push an index.html and JS/CSS, backend can work with that consistency\n* Wrote a script for CI (continuous integration)\n* Conventions for building clarified how to distribute the application\n\n#### Ember and Ember CLI\n\n* Ember brings in solid conventions for frontend application development\n* Command line tools: `ember` new, build, generate\n* Reduce boilerplate, eliminate trivial differences that hold us back\n\n#### A story about the growth of a codebase, from monolith to various services, data layers and frontend interfaces (UI)\n\n* One day the frontend teams adopted Ember CLI and immediately had common solutions\n* Frontends interfaces each had resulting choices/adoptions with variations and incompatibilities\n* Every time they needed a new interface the programs had to make a lot of decisions about libraries, architecture, build pipeline, testing solutions and delivery systems\n* The Frontend didn't just split up and scale\n* Backend systems grew and spawned independent services, smaller and focused; developer were productive and happy\n\n## Ambitious UX for Ambitious Apps: Lauren Tan, 3:00 - 3:30 PM\n\nGood Design is Reactive, Playful, Informative and Intuitive…\n\n#### Design is not how it looks and feels its about how it works\n\n* [Slides](https://speakerdeck.com/poteto/emberconf-2015-ambitious-ux-for-ambitious-apps)\n\n#### Drag and Drop\n\n* [Ember.js and HTML5 Drag and Drop](https://medium.com/delightful-ui-for-ember-apps/ember-js-and-html5-drag-and-drop-fa5dfe478a9a)\n\n#### Design of a Messaging Service\n\n* [ember-cli-flash](https://github.com/poteto/ember-cli-flash)\n* [Ember Flash Message Demo](https://medium.com/delightful-ui-for-ember-apps/adding-flash-messages-to-an-ember-app-437b13e49c1b) `ember-cli-flash`\n* Can use a lifecycle for a message instance using `.destroy()`\n* Ember.Object for the message model - can have methods for the supported macros\n* Messages can be wrapped in a component and queued in a service object for application notifications\n* Flash messages or growl messages\n* Visibility of system status, Jacob Nielsen\n\n#### Using Services\n\n* demo of inserting a clever shower thought in to a loading message\n* Inject macro that is not cached and randomized\n\n#### Think about good UX\n\n* If your shirt isn't tucked into your pants then your pants are tucked into your shirt\n* Reddit - shower thoughts\n* Clever loading messages\n\n#### FRP in Ember\n\n* Observers invoked when dependent properties change\n* Ember.computed.X see the api docs\n* Computed properties and Observers, write macros too\n* Bacon.js - FRP, but Ember is different - the observer pattern\n* Functional Reactive Programming (FRP) - event streams and properties\n  * A sequence (stream) of events and properties, consider the mouse movements, and it's properties for it's physical position on the screen\n\n#### What is Good Design\n\n* Ember enables reactivity via observers\n* Reative programming: continous flow of data and maintaining the relationships between the data\n* It's reactive\n\n#### Design is how it works\n\n* It doesn't matter what we think as developers, we need to consider what our users think. Design is really important\n* Give clear answers to your users, don't mess with their experience\n* But I'm not a designer\n\n#### About Lauren\n* Lauren - Designer and Front end developer at Homely ( in Austalia ) @sugarpirate\n\n## The Art of Ember Deployment: Luke Melia, 1:25 - 2:45 PM\n\nAwesome new story for deploying an Ember application: [ember-cli/ember-cli-deploy](https://github.com/ember-cli/ember-cli-deploy)\n\n_Real Artist Deploy_\n\n#### We still need some collaberation\n\n* Let's talk… how will this work with FastBoot?\n* What is the relationship between the FastBoot server and your application server\n\n#### Roadmap for ember-cli-deploy\n\n* After initial release\n  * deploy to named buckets, deploy config instead of HTML, e.g. manifest from static build, let server drive what is sent to the client\n* Usage: builds, deploys assets, can rollback, deploy targets, e.g. staging, give you a preview URL\n  * Activate using an identifier after testing on live\n* ember-cli-deploy plugins should use one or more of the hooks, willDeploy, build, updateAssets, updateIndex, activate, didDeploy, list\n* New pipeline, hooks and plugins architecture, similar to Ember Addons\n  * e.g. Post deploy hooks\n* Documentation for plugin developers\n* Release the end of this week\n* Update existing plugins\n\n#### Pluggable deployment solutions\n\n* Paving the cow paths…\n* Merged the 3 projects, one awesome project [ember-cli/ember-cli-deploy](https://github.com/ember-cli/ember-cli-deploy) with a team of six maintainers\n* ember-deploy has the biggest eco-system\n* projects: ember-deploy, ember-cli-deploy, front-end-builds, etc\n\n#### New Possibilities when deploying a JS App independently from server apps\n\n* Notifying connected clients, hey user - it's time to refresh\n* How about serving various version of an app simultaneously\n* Dynamic HTML Rewriting, e.g. a Rails controller\n  * CSRF tokens, dynamic analytics, A/B testing, feature flags\n* Add a new level of confidence by going live once the app is tested on production\n* Preview the new version of the application\n\n#### Modern Flow for deploying Web apps…\n\n* How about Redis, deploy the HTML (index page for a single page app) into Redis, Rails server reading out of Redis and assets deployed to S3\n* Do we deploy the built JS app to S3, but S3 reads can be slow, need speed\n* Deploying JS apps should be decoupled from server application deployments and restarts, basically UI deploys independently from backend\n* Caching should be minimal to none, so new users get the latest versions\n* HTML apps need fingerprinted assets for JS/CSS, specific config data for that current version of the app\n* For connected clients consuming a changing API they need the previous version running. Can we do the same for our Ember Apps?\n* During deployment need two apps running concurrently, how about versioning API and client app together? (its a fallacy)\n* Long-lived session and API changes\n  * in the deployment cycle users may get an incorrect data representation\n* Keep static assets working during rolling restarts\n  * deploy old assets to a CDN and keep for awhile\n\n#### Looking back at how we deployed software\n\n* We no longer deploy individual files to the Web, Fetch app\n* We no longer use CD ROM duplicators to deploy web software\n* So how do we deliver software to the Web?\n* Then came the internet\n* Managing software over time… cassettes, cartridges, etc.\n* Luke organizes NYC Ember meetup and runs @YappLabs.\n\n## Hijacking Hacker News with Ember.js: Godfrey Chan, 1:30 - 2:00 PM\n\n_if @chancancode so can you…_\n\n* New project (joke) CocoaBars, has 0 commits so get to work :)\n\nChrome Extension: <https://chrome.google.com/webstore/detail/hn-reader/emgghjnnkkopedbjfajejpkidaiedhlf>\n\nThe power of the Adapter pattern in Ember allows you to customize your data mapping needs. You get small libraries to build your custom solutions on top of. Even if the frameworks opinions don't fit your needs the Adapter pattern opens up limitless possibility.\n\n#### Adapter Patterns\n\n* Used Ember.Observable get, set, addObserver to wrap localStorage API\n* use localStorage API to back data in the extension routes\n* Ember.History (Location API in the router) has `getURL` and `formatURL` hooks\n* Extension needed 100% URL compatibility with Hacker News website\n* Router API has flexibility on how you name your outlets\n* Ran into a problem with URL's as Ember Data is opinionated about how to construct URLs\n* Adapter is responsible for talking to server, and Serializer is responsible for transforming data\n* Drop in an Adapter to talk to your local store needs in an extension even though the adapter is not talking to an API\n* JSON API / Ember Data work together well, but what about a custom data source?\n* Today Ember Data is a local object store so can use an Adapter the way you choose\n* Now that we can get JSON data on the HN domain, can we store locally?\n* Extension is running on the HN domain so no need to cross-domain or API calls, just XHR /get\n* In the case of a chrome plugin app there is not necessarily a backend, fetching HTML and parsing from the Hacker news server in json\n\n#### Demo of HN Reader App\n\n* [hn-reader](https://github.com/chancancode/hn-reader)\n* Submitting extension to Hacker News in real-time\n* Chrome extension to hack the Hacker News website\n\n#### Canadian Programmers\n\nHad some fun and laughs talking about Canadians talking to Americans…\n\n* `gem install canada`\n* `isEmpty.eh()?`\n\n\n## Designing for Ember Apps: Steve Trevathan, 11:30 - 12:00 PM\n\nComing soon… *Tools of the Trade* - a free design pattern library - <http://toolsofthetrade.dockyard.com>\n\n#### Create Repeatable Design Methods & Patterns\n\n* Offline Mode - "Goliath mode"\n  * When a lost connection is restored then make doable updates (patches)\n  * Responding Optimistically\n  * Connection lost, but you can still use the app\n  * Disallow editing? NO!\n* Micro > Macro - Core interactions become a symbol of your app\n  * iPhone thumbprint scanner, standard authorization step, repeated\n  * The game "THREES" has one way to interact with the app\n* Reuse Core interactions, e.g. card formats with common interfaces\n* Carry Context - don't leave me waiting at the bus stop\n  * Can be a major save, imagine an online trade (investment) and your computer fails, so you pick up your phone and complete the transaction\n* Skeleton UI - thinning out the spinners (e.g. gridlines where a map is loading tiles)\n  * Draw an empty card format then fill in the details\n* Gradual engagement - reducing the perceived risk\n\n#### Mental Models: Use them explicitly and break them when you must\n\n* Remember the original iPod interface, a micro interaction on the wheel\n\n*Digital Experiences*\n\n* Borrowing metal models is different that copying an application\n* _Build a framework for understanding_ some applications have a difficult learning path\n* Take from existing models and meet expectations, both macro and micro, e.g. chat apps have been around for a while\n* The past: Razor phone, Instant Messanger app, chat app\n\n*Micro Models*\n\n* How I think it works\n\n*Mental Models:*\n\n* Can challenge or reinterpret incorrectly, be careful about pushing the limits of UX/design\n* What is "home" ? - Match peoples idea of what a home is and what you are building\n* Can be changed / updated\n* Influenced by experiences from my past\n\nHow to we stop our users from spitting all over us? we don't marry them, but we do try to understand their mental models.\n\nI'll be your "pain in the ass user" - I'm gonna hate the front door you build me\n\nMetaphor *We're designing a house* - as we build an application with Ember. We're dealing with a large perhaps infinite number of use cases.\n\n… loading presentation …\n\n## Ember.js Performance: Stefan Penner, 10:45 - 11:15 AM\n\n#### Mis-alignments to fix…\n\n* Combine approaches\n* Benchmarks can trick you\n* Premature optimization is not a good idea\n* Ember.Object.reopen - slowly augment objects; solution: limit reopen to only work until the constructor has it's first instance\n  * `actionsFor`, need to optimize the instances for meta - listeners (subscription)\n  * Meta is 'live' inheriting - this is a problem\n  * Meta, every class and every instance has a meta, it's the meta for the instances that kill performance\n* init/super - need to embrace super\n  * pass in args to init(args), this._super(args); use `arg.prop || 'default'`;\n* Actions Up, bindings down\n* improved clarity makes the app faster\n\n#### About the runtime and your code\n\n* Reasonable code should have reasonable cost\n* Allocation === cost, closures, unoptimized code allocates more objects\n* If the runtime believes the code is stable and predictable then it can optimize speed\n* Mad Science: Types + Stabiltiy\n* Need to understand the runtime, e.g. V8 or others\n  * E.g. specialize type, specialized compiler methods - efficient native code\n* "Mechanical Sympathy" - Jackie Stewart, align the car with the driver\n* "Only a sith uses abosolutes" - what are the performance questions that need to be answered?\n* Guided evolution\n  * We have some choices to make.. productive for developers vs performance\n* Why? we confuse ourselves and the runtime, we should understand the runtime\n* We still have work to do, the ceiling is still high\n* Bluebird, Promises made faster\n  * Done without external API change or breakage\n  * Did less work, allocate less objects, align with the underlining primitive\n  * Promises using normal for loops is fast\n\n**Myth? performance is about enumerating arrays**\n\n## Opening Keynote: Yehuda Katz & Tom Dale, 9:45 - 10:30 AM\n\n__Your Antidote to Hype Fatigue__\n\n#### Introduction\n\n* 625+ people in attendance and about 24 countries represented.\n* Ember is really growing this year, new apps built in Ember… Ghost, Beatport, Intercom.io, Customer.io, The Nest Store and more\n* The number of meetups has grown around the world\n* Special guest in the house an a Tomster mascott\n* Epic meetup video showing with a super long intro. <3\n* The core team is represented my many companies, 3 new people added today… Martin, Mixonic, & Edward\n\n#### Report Card\n\nLast year we made lots of big promises, and guest what we shipped them.\n\n* Early adopter of ES6 (ES2015) features… plan to be an early adopter of ES2016\n* Ember Data\n  * Adapter Ecosystem\n  * Relationships are always Async, build with async loading in mind\n  * Data can come at any time and people really expect that data relationships are updated\n  * On client get relationships on demand\n  * Relationship Syncing, easy on the server not easy on the client (browser)\n  * SSOT branch landed\n* ES6 Modules, drive making the spec awesome but early adoption, helps out TC-39\n* Testing\n  * At the end of 2014 and into 2015 has an awesome testing story\n  * Out of the box with Ember CLI, functional and unit with great async support\n* Ember CLI\n  * Add whatever test harness you like\n  * Scaffold new app instantly, and use various tooling to your liking, e.g. Coffeescript\n  * Ember Addons - 663+ and growing, a single install command\n  * testing, performance, stubbing, server proxy, content security policy, transpile with Babel, source maps,\n* Ember Inspector\n  * Thanks Teddy Zeenny\n  * Firefox support, nav bar, bookmarklet\n  * Performance pane\n  * Promises pain has decreased\n  * Ember Data pain has decreased\n* RIP `script` tags as metamorphs\n* HTMLBars: At compile time your templates are validated and error feedback is reported; full compliant HTML parser\n* `<calendar-day>` can remove `{{…}}` mustache syntax; TLDR - rebuild the render engine\n* Context of blocks, component scope… use block parameters today\n* HTMLBars `<a href={{url}}>`\n* Rapid Release has worked really great, please run the beta release channel and report bugs\n  * Robert Jackson <http://getrwjblueabeer.com>\n  * RFC process, a couple dozen submitted\n\n\n## Ember FastBoot\n\n  * Bend the load time curve and front load the HTML\n  * Can `curl` a Ember.js app, fastboot can be installed as middleware in an Express app\n  * Ember is running as expected, but on the server\n  * Lynx user now can user your Ember Apps, JavaScript disabled in the browser\n  * Live demo of FastBoot, woot! "Musing of a Thoughtleader"\n  * Boot up your app in a node process, hit the API server and render, just running on a different computer, not the browser\n  * Run your app on the server and extract, abandon progressive enhancement\n\n## Performance\n\n* Ember release 1.13 will include *Glimmer* and will be compatible with your current apps\n* Is Ember Fast Yet? <http://is-ember-fast-yet.firebaseapp.com>\n* Glimmer, *the new rendering engine* built with HTMLBars\n* Confirm Ryan Floreance's complaint, stress test\n* Alternative Approach to Virtual DOM\n  * Dirty checking for dynamic properties in the declarative syntax, we can know what parts will be changing\n  * Only check for diff sets in the the changing pieces of the template\n  * Handlebars, render the template, emit the DOM; while rendering track all the dynamic content (curlies `{{…}}`)\n* Virtual DOM\n  * Batch changes, since DOM is the bottleneck, smart refreshes\n  * Manages rendering only the change sets, done in memory\n* Render Virtual DOM and compare the DOM, diff then draw (ReactJS)\n* You can do a lot in JavaScript and less in DOM\n* Never say no to a feature, giving a reason of performance is not there\n\n#### What's next in 2016\n\n* Ember FastBoot\n* Release Dates, beta candidates\n  * ListView June 12th\n  * Ember Data 1.0 is June 12th\n  * Ember Inspector is June 12th\n  * Ember 2.0 release is June 12th\n  * concrete dates\n* Ember Data\n  * Ship It! we need a 1.0\n  * Pagination & Filtering need first class support in JSON API transport\n  * JSON API out of the box\n  * JSON API designed from the ground up for what Ember Data needs\n  * [json:api] spec, Steve K and Dan G. working hard on the spec\n* Ember 2.0, the release plan is the Feature, rolling out in 1x release and under way\n  * Keep up the rapid release pace, notify of deprecations often, remove on major releases\n* Async & Routable Components\n* Liquid Fire @ef4 working closely so that HTMLBars is compatible\n* `<angle-bracket>` Components, already in Canary\n* ListView (emberjs/list-view on github)\n* RFC: Engines, encapsulate application code for larger teams\n* Next Version: Ember CLI included in the guides\n* Versioned guides, live today, <http://guides.emberjs.com>\n	_Notes were taken in real time, the last entries in each section may reflect beginning of the talk (so the last became the first and the first became the last, or not)…_\n\n- Opening Keynote: Yehuda Katz & Tom Dale  \n- The Art of Ember Deployment  \n- Hijacking Hacker News with Ember.js  \n- Ambitious UX for Ambitious Apps  \n- Bring Sanity to Frontend Infrastructure with Ember  \n- Dynamic Graphic Composition in Ember  \n- Test-Driven Development by Example  \n	emberconf-2015-day-1	EmberConf 2015 - March 3rd (day 1)	2015-03-03	2015-05-07 17:03:21.230449	2015-05-07 17:03:21.230449	1	'-39':3173C '..':2926C '/assignment':161C '/chancancode/hn-reader)':2341C '/delightful-ui-for-ember-apps/adding-flash-messages-to-an-ember-app-437b13e49c1b)':1305C '/delightful-ui-for-ember-apps/ember-js-and-html5-drag-and-drop-fa5dfe478a9a)':1286C '/ember-cli-deploy':1575C,1727C '/ember-cli/ember-cli-deploy)':1578C,1730C '/get':2305C '/poteto/ember-cli-flash)':1298C '/poteto/emberconf-2015-ambitious-ux-for-ambitious-apps)':1274C '/todo':555C '/webstore/detail/hn-reader/emgghjnnkkopedbjfajejpkidaiedhlf':2088C '0':2078C '00':89C,879C,1246C,2066C,2385C '1':6A,902C,1059C,1559C,2063C '1.0':3583C,3607C '1.13':3429C '10':2732C,2998C '100':2168C '11':2382C,2734C '12':2384C '12th':3580C,3586C,3591C,3597C '15':634C,2735C '1x':3660C '2':909C,1061C,1561C,2065C '2.0':3593C,3650C '2014':3179C '2015':2A,3182C '2016':3571C '24':3013C '25':1560C '3':170C,206C,238C,792C,915C,1064C,1245C,1247C,1719C,3063C,3072C '30':87C,881C,1248C,2064C,2383C,2999C '3rd':4A '4':631C,878C,880C,1067C '45':632C,1562C,2733C,2997C '5':86C,633C '6':88C '625':3007C '663':3225C '9':2996C 'a/b':1800C 'abandon':3423C 'abosolut':2907C 'abstract':649C,935C,1008C,1020C 'accept':157C,216C,277C,326C,346C,428C,514C 'acm':919C 'act':467C 'action':2826C 'actionsfor':2773C 'activ':1655C,1680C 'ad':807C,813C,3075C 'adapt':2093C,2128C,2134C,2202C,2219C,2233C,2266C,3112C 'add':190C,218C,231C,266C,291C,319C,493C,511C,526C,550C,621C,690C,1804C,3204C 'addobserv':2140C 'addon':1025C,1066C,1088C,1692C,3224C 'adopt':1170C,3097C,3107C,3169C 'advantag':861C 'aesthet':706C,765C,778C,796C 'align':2739C,2897C,2972C 'alloc':2848C,2853C,2969C 'allow':687C,2097C 'alreadi':421C,3693C 'altern':3461C 'alway':3116C 'ambiti':55B,58B,1238C,1241C 'american':2371C 'analyt':1799C 'andthen':525C 'anim':666C 'anoth':419C,427C 'answer':1523C,2917C 'antidot':3002C 'api':980C,1421C,1930C,1956C,1969C,2144C,2147C,2157C,2176C,2239C,2241C,2301C,2962C,3402C,3616C,3619C,3625C,3637C 'app':59B,102C,135C,152C,442C,660C,1242C,1765C,1769C,1787C,1815C,1832C,1845C,1865C,1878C,1908C,1923C,1945C,1950C,1959C,2016C,2313C,2335C,2379C,2429C,2442C,2460C,2593C,2606C,2608C,2834C,3023C,3212C,3350C,3360C,3377C,3395C,3417C,3440C 'appli':654C 'applic':1080C,1116C,1128C,1346C,1571C,1606C,1826C,1884C,2567C,2574C,2711C,3703C 'approach':2743C,3462C 'appropri':642C 'architectur':986C,1206C,1688C 'arg':2817C,2820C,2822C 'arg.prop':2824C 'around':1016C,2596C,3042C 'arrang':465C 'array':204C,2989C 'art':46B,1553C 'artist':1580C 'aspect':834C 'ass':2689C 'assert':221C,258C,458C,469C,581C 'asset':1643C,1855C,1911C,1984C,1991C 'assign':159C,268C,362C,437C 'assum':569C 'async':3117C,3120C,3200C,3679C 'attend':3010C 'augment':2757C 'austalia':1550C 'author':2447C 'awesom':1564C,1722C,3166C,3185C 'awhil':1998C 'babel':3242C 'back':616C,1145C,2000C,2149C 'backend':1095C,1223C,1893C,2319C 'bacon.js':1430C 'bake':947C 'bar':3253C 'basic':1888C 'batch':3513C 'beatport':3028C 'becam':28B,34B 'becom':2437C 'begin':21B 'behavior':425C 'believ':2859C 'benchmark':2744C 'bend':3336C 'best':958C,969C 'beta':3319C,3576C 'big':3088C 'biggest':1742C 'billup':85C 'bind':2828C 'block':809C,3299C,3303C 'bluebird':2955C 'board':127C 'boilerpl':1138C 'bookmarklet':3254C 'boolean':396C 'boot':3392C 'borrow':2559C 'bottleneck':3519C 'box':3191C,3623C 'branch':3158C 'break':343C,561C,682C,2541C 'breakag':2965C 'bring':60B,869C,1122C 'brought':1055C 'browser':3156C,3382C,3414C 'bucket':1620C 'bug':3324C 'build':100C,124C,132C,1110C,1135C,1207C,1630C,1641C,1677C,1757C,2110C,2568C,2646C,2699C,2709C,3118C 'built':1863C,3024C,3451C 'bus':2479C 'cach':1378C,1894C 'call':2302C 'came':2038C 'canada':2374C 'canadian':2359C,2368C 'canari':3695C 'candid':3577C 'car':818C,2899C 'card':2465C,2522C,3081C 'care':2624C 'carri':2470C 'cartridg':2046C 'case':2308C,2725C 'cassett':2045C 'cd':2021C 'cdn':1994C 'ceil':2951C 'challeng':2619C 'chan':2062C 'chancancod':2069C 'chang':842C,844C,1416C,1929C,1970C,2649C,2963C,3482C,3491C,3514C,3526C 'channel':3321C 'chat':2592C,2607C 'check':599C,3467C,3484C 'chnn/composing-graphics':868C 'choic':2923C 'choices/adoptions':1183C 'choos':2270C 'chris':629C 'chrishenn.net':864C 'chrome':2084C,2311C,2351C 'chrome.google.com':2087C 'chrome.google.com/webstore/detail/hn-reader/emgghjnnkkopedbjfajejpkidaiedhlf':2086C 'ci':1105C 'circular':757C 'clarifi':1111C 'clariti':2831C 'class':264C,541C,2793C,3612C 'clear':1522C 'clever':1365C,1405C 'cli':140C,151C,944C,984C,1002C,1054C,1120C,1172C,1294C,1308C,1574C,1612C,1665C,1726C,1752C,3194C,3203C,3711C 'click':524C 'client':1639C,1772C,1926C,1958C,3140C,3155C 'close':3686C 'closur':2850C 'cocoabar':2076C 'code':131C,401C,406C,408C,439C,495C,2841C,2843C,2852C,2861C,2892C,3704C 'codebas':1153C 'coffeescript':3222C 'collaber':1586C 'combin':2742C 'come':2387C,3126C 'command':1130C,3231C 'commit':2079C 'common':1051C,1176C,2468C 'communiti':951C,974C 'compani':3071C 'compar':3535C 'compat':2170C,3436C,3691C 'compil':2888C,3273C 'complaint':3458C 'complet':2502C 'compliant':3285C 'compon':729C,1084C,1338C,3300C,3681C,3692C 'compos':749C 'composit':69B,626C,856C 'comput':384C,720C,1423C,2493C,3411C 'concern':1028C,1058C 'concret':3598C 'concurr':1952C 'confer':98C 'confid':1809C 'config':1622C,1915C 'confirm':3454C 'confus':2934C 'connect':1771C,1925C,2411C,2421C 'consid':1454C,1512C 'consider':664C 'consist':1033C,1100C 'construct':2200C 'constructor':710C,2767C 'consum':1927C 'content':584C,595C,3237C,3509C 'context':2471C,3297C 'contin':1481C 'continu':1106C 'control':193C,237C,272C,310C,340C,1795C 'convent':1003C,1108C,1125C 'convey':677C 'coordin':753C 'copi':2565C 'core':2435C,2462C,3065C 'cost':2847C,2849C 'countri':3014C 'coupl':3331C 'cow':1715C 'creat':198C,378C,456C,1086C,2399C 'cross':2298C 'cross-domain':2297C 'csrf':1796C 'cur':3510C 'curl':3347C 'current':601C,1919C,3439C 'curv':3340C 'custom':830C,2100C,2112C,2251C 'customer.io':3030C 'cwhnn':866C 'cycl':1974C 'd3':681C 'dale':44B,2995C 'dan':3642C 'data':234C,563C,678C,704C,750C,763C,776C,794C,1027C,1041C,1159C,1484C,1491C,1916C,1980C,2102C,2150C,2194C,2215C,2243C,2252C,2256C,2277C,3111C,3124C,3135C,3262C,3582C,3601C,3634C 'date':3575C,3599C 'day':5A,1166C 'deal':2716C 'decid':644C 'decis':1203C 'declar':3473C 'decoupl':1881C 'decreas':3260C,3265C 'default':2825C 'defin':173C 'delet':415C 'deliber':910C 'deliv':2032C 'deliveri':1212C 'demand':3144C 'demo':822C,1302C,1361C,2331C,3384C 'depend':249C,1414C 'deploy':49B,1057C,1065C,1068C,1070C,1073C,1556C,1568C,1581C,1613C,1617C,1621C,1642C,1646C,1666C,1695C,1711C,1739C,1749C,1753C,1762C,1830C,1836C,1856C,1861C,1876C,1885C,1890C,1947C,1973C,1989C,2004C,2009C,2025C 'deprec':3673C 'design':120C,1251C,1258C,1287C,1473C,1495C,1517C,1538C,1542C,2376C,2395C,2401C,2704C,3626C 'destroy':1319C 'detail':519C,537C,572C,594C,2528C 'develop':75B,81C,146C,890C,904C,1129C,1233C,1508C,1546C,1700C,2929C 'diddeploy':1681C 'didn':1216C 'diff':3486C,3538C 'differ':1141C,1435C,2563C,3410C 'difficult':2577C 'digit':2557C 'dirti':3466C 'disabl':3379C 'disallow':2430C 'discov':1017C 'distribut':1114C 'doabl':2416C 'doc':1422C 'document':440C,1697C 'doesn':1501C 'dom':3465C,3502C,3512C,3516C,3533C,3537C,3552C 'domain':2281C,2292C,2299C 'done':2959C,3528C 'door':2697C 'dozen':3332C 'drag':1275C,1281C 'draw':2519C,3540C 'drive':1633C,3162C 'driven':74B,80C,145C 'driver':2902C 'drop':1277C,1283C,2216C 'duplic':2023C 'dynam':67B,624C,1789C,1798C,3469C,3508C 'e.g':755C,1029C,1626C,1648C,1693C,1792C,2464C,2511C,2591C,2880C,2884C,3221C 'earli':3096C,3106C,3168C 'easi':3147C,3152C 'eco':1744C 'eco-system':1743C 'ecosystem':1036C,3113C 'edit':2431C 'edward':3079C 'ef4':3684C 'effici':2890C 'element':262C 'elimin':1139C 'ember':48B,66B,71B,139C,150C,163C,196C,374C,628C,703C,716C,858C,875C,943C,950C,983C,1022C,1043C,1053C,1072C,1117C,1119C,1121C,1133C,1171C,1293C,1299C,1307C,1410C,1433C,1474C,1555C,1570C,1573C,1611C,1664C,1691C,1725C,1738C,1748C,1751C,1944C,2051C,2096C,2193C,2242C,2255C,2378C,2713C,3016C,3026C,3110C,3193C,3202C,3223C,3245C,3261C,3334C,3361C,3376C,3427C,3442C,3572C,3581C,3587C,3592C,3600C,3633C,3649C,3710C 'ember-c':149C,1572C,1724C 'ember-cli-deploy':1610C,1663C,1750C 'ember-cli-flash':1292C,1306C 'ember-deploy':1071C,1737C,1747C 'ember.computed':1417C 'ember.history':2155C 'ember.js':54B,1278C,2060C,2728C,3349C 'ember.object':1320C 'ember.object.reopen':2755C 'ember.observable':2137C 'emberconf':1A 'emberjs/list-view':3697C 'embrac':2813C 'emerg':962C,1039C 'emit':3500C 'empti':2521C 'enabl':1475C 'encapsul':3702C 'encourag':829C 'end':1545C,1703C,1756C,3177C 'engag':2530C 'engin':3296C,3450C,3701C 'enhanc':3425C 'entri':15B 'enumer':2988C 'epic':3054C 'error':3280C 'es2015':3100C 'es2016':3109C 'es6':3099C,3160C 'etc':1758C,2047C 'even':2117C,2230C 'event':1443C,1451C 'eventu':976C 'everi':402C,775C,1188C,2792C,2795C 'evolut':2919C 'exampl':77B,83C 'exist':1708C,2582C 'expect':2586C,3133C,3365C 'experi':1532C,2558C,2653C 'explicit':2539C 'explor':353C 'express':3359C 'extens':2085C,2153C,2166C,2229C,2286C,2343C,2352C 'extern':2961C 'extract':3422C 'facet':746C 'factori':1024C 'fail':168C,2494C 'fallaci':1963C 'fast':2983C,3443C 'fastboot':1595C,1602C,3335C,3351C,3386C,3573C 'faster':2835C,2958C 'fatigu':3005C 'featur':846C,1802C,3101C,3558C,3656C 'feedback':189C,3281C 'feel':1265C 'fetch':2015C,2320C 'figur':470C 'file':2011C 'fill':2525C 'filter':376C,3609C 'find':955C 'fingerprint':1910C 'fire':3683C 'firefox':3250C 'first':30B,33B,2771C,3611C 'fit':2124C 'fix':2741C 'fixup':279C 'flag':1803C 'flash':1295C,1300C,1309C,1348C 'flexibl':805C,989C,2178C 'floreanc':3456C 'flow':335C,885C,1482C,1828C 'focus':1232C 'fold':911C 'format':2466C,2523C 'formaturl':2164C 'found':897C,981C 'framework':940C,2120C,2570C 'free':2394C 'fresh':946C 'front':1544C,1755C,2696C,3342C 'front-end-build':1754C 'frontend':63B,872C,1127C,1162C,1168C,1178C,1215C 'frp':1408C,1431C,1442C 'full':3284C 'fun':2363C 'function':711C,786C,1439C,3195C 'futur':945C 'g':3643C 'game':2451C 'gem':2372C 'general':655C 'generaliz':730C 'generat':155C,197C,1023C,1136C 'geometri':735C,760C,773C 'get':819C,1903C,1977C,2081C,2106C,2138C,2275C,3141C 'getrwjblueabeer.com':3327C 'geturl':2162C 'ghost':3027C 'github':867C,3699C 'github.com':1297C,1577C,1729C,2340C 'github.com/chancancode/hn-reader)':2339C 'github.com/ember-cli/ember-cli-deploy)':1576C,1728C 'github.com/poteto/ember-cli-flash)':1296C 'give':538C,903C,1521C,1650C,3559C 'glimmer':3432C,3446C 'go':615C,1811C 'godfrey':2061C 'goliath':2406C 'gonna':2693C 'good':447C,1250C,1383C,1472C,2753C 'gradual':2529C 'grammer':639C,798C 'graph':824C 'graphic':68B,625C,641C,683C,743C,800C,849C 'great':329C,3199C,3315C 'green':178C,213C 'grew':1225C 'gridlin':2512C 'ground':3629C 'grow':3019C,3227C 'growl':1351C 'grown':3041C 'growth':1150C 'guest':3046C,3091C 'guid':2918C,3715C,3717C 'guides.emberjs.com':3720C 'hack':2354C 'hacker':51B,2057C,2172C,2326C,2345C,2356C 'hadley':801C 'handlebar':3496C 'happi':333C,1237C 'har':1048C,3207C 'hard':3645C 'hardcod':481C 'hate':2694C 'heavier':817C 'help':3170C 'helper':531C 'henn':630C 'hey':1773C 'hidden':575C,586C 'hide':596C 'high':2954C 'hijack':50B,2056C 'hit':3400C 'hn':2280C,2291C,2333C,2337C 'hn-reader':2336C 'hold':1143C 'home':1548C,2633C,2640C 'hook':318C,488C,492C,1675C,1685C,1696C,2165C 'horizont':825C 'hous':2706C,3049C 'href':3308C 'html':252C,1625C,1790C,1838C,1907C,2321C,3286C,3345C 'html5':1280C 'htmlbar':3271C,3306C,3453C,3689C 'http':1030C 'hype':3004C 'id':557C,567C 'idea':448C,2636C,2754C 'identifi':932C,1005C,1658C 'imagin':2486C 'immedi':188C,1174C 'import':1011C,1520C 'improv':2830C 'includ':283C,712C,3431C,3712C 'incompat':1187C 'incorrect':1979C,2622C 'independ':1228C,1766C,1891C 'index':1839C 'index.html':1092C 'individu':2010C 'infinit':2721C 'influenc':2651C 'info':573C 'inform':1255C 'infrastructur':64B,873C 'inherit':2786C 'init':2819C 'init/super':2810C 'initi':1615C 'inject':1373C 'innov':901C,916C 'insert':1363C 'inspector':3246C,3588C 'instal':2373C,3230C,3354C 'instanc':1317C,2772C,2778C,2796C,2806C 'instant':2604C,3213C 'instead':254C,265C,1623C 'integr':1107C 'interact':665C,694C,2436C,2457C,2463C,2553C 'intercom.io':3029C 'interfac':1163C,1179C,1194C,2469C,2550C 'internet':2040C 'intro':3062C 'introduct':3006C 'intuit':1257C 'invers':714C 'invest':2490C 'invok':1412C 'iphon':2443C 'ipod':2549C 'is-ember-fast-yet.firebaseapp.com':3445C 'isempty.eh':2375C 'isn':1388C 'isol':367C 'item':172C,207C,522C 'iter':121C,274C,899C 'jacki':2895C 'jackson':3326C 'jacob':1357C 'javascript':3378C,3548C 'joke':2075C 'js':1764C,1864C,1877C 'js/css':1094C,1913C 'json':2240C,2276C,2330C,3615C,3618C,3624C,3636C 'june':3579C,3585C,3590C,3596C 'k':3640C 'kanban':126C 'katz':42B,2993C 'keep':184C,1982C,1996C,3665C 'keynot':40B,2991C 'kill':2808C 'know':3477C 'land':977C,3159C 'larg':2719C 'larger':3706C 'last':14B,27B,36B,3082C 'latest':883C,1905C 'laugh':2365C 'lauren':1243C,1540C,1541C 'layer':723C,725C,759C,811C,815C,1160C 'layout':261C 'learn':2578C 'leav':2474C 'lego':734C 'less':2967C,2970C,3550C 'let':122C,843C,1587C,1631C 'level':1807C 'librari':658C,1205C,2108C,2397C 'lifecycl':1313C 'like':103C,652C,701C,731C,3209C,3220C 'limit':2628C,2760C 'limitless':2132C 'line':1131C 'lingo':391C 'link':529C 'link-to':528C 'liquid':3682C 'list':1682C 'listen':2781C 'listview':3578C,3696C 'live':130C,1662C,1812C,1966C,2785C,3383C,3718C 'll':226C,2683C 'load':1371C,1406C,2517C,2726C,3121C,3338C,3343C 'local':2224C,2259C,2285C 'localstorag':2143C,2146C 'locat':2156C 'long':1965C,3061C 'long-liv':1964C 'longer':2008C,2019C 'look':700C,1263C,1999C 'loop':2981C 'lost':2410C,2422C 'lot':1201C,3086C,3546C 'luke':1557C,2048C 'lynx':3370C 'm':1535C,2692C 'macro':722C,1331C,1374C,1428C,2434C,2588C 'mad':2871C 'made':2957C,3085C 'maintain':410C,1486C,1736C 'major':2484C,3677C 'make':497C,1199C,2415C,2832C,2925C,3163C 'manag':2041C,3522C 'mani':3070C 'manifest':1627C 'manual':1060C 'map':707C,766C,769C,779C,785C,793C,797C,2103C,2515C,3244C 'march':3A 'markup':253C 'marri':2671C 'martin':3077C 'mascott':3053C 'match':388C,2634C 'matter':1503C 'may':19B,1976C 'mayb':91C 'mechan':2893C 'medium.com':1285C,1304C 'medium.com/delightful-ui-for-ember-apps/adding-flash-messages-to-an-ember-app-437b13e49c1b)':1303C 'medium.com/delightful-ui-for-ember-apps/ember-js-and-html5-drag-and-drop-fa5dfe478a9a)':1284C 'meet':2585C 'meetup':2052C,3039C,3055C 'melia':1558C 'memori':3530C 'mental':2535C,2616C,2680C 'merg':1717C 'mess':1529C 'messag':1290C,1301C,1316C,1323C,1332C,1349C,1352C,1372C,1407C 'messang':2605C 'meta':2780C,2783C,2791C,2799C,2803C 'metal':2560C 'metamorph':3270C 'metaphor':2701C 'method':1327C,2402C,2889C 'micro':2433C,2552C,2590C,2609C 'middlewar':3356C 'mileag':821C,828C 'mind':3123C 'mini':134C 'minim':1897C 'mis':2738C 'mis-align':2737C 'mixon':3078C 'mock':305C,474C,501C,1031C,1040C 'mode':2405C,2407C 'model':297C,306C,317C,381C,482C,487C,1324C,2536C,2561C,2583C,2610C,2617C,2681C 'modern':1827C 'modul':3161C 'monolith':926C,1155C 'mous':1456C 'move':478C 'movement':1457C 'much':646C 'multipl':814C 'muse':3388C 'must':2545C 'mustach':3290C 'myth':2984C 'name':603C,1619C,2182C 'nativ':2891C 'nav':3252C 'necessarili':2317C 'need':565C,803C,1077C,1191C,1510C,1584C,1874C,1909C,1932C,1948C,2104C,2126C,2167C,2226C,2295C,2774C,2811C,2875C,2914C,3605C,3610C,3635C 'nest':552C,3032C 'never':3553C 'new':293C,513C,966C,1134C,1193C,1565C,1683C,1759C,1806C,1822C,1901C,2073C,3022C,3073C,3211C,3448C 'news':52B,2058C,2173C,2327C,2346C,2357C 'next':3569C,3708C 'nielsen':1358C 'node':3398C 'none':1899C 'normal':2979C 'note':7B 'notif':1347C 'notifi':1770C,3671C 'number':2722C,3037C 'nyc':2050C 'object':239C,298C,307C,1344C,2260C,2758C,2855C,2971C 'observ':1411C,1426C,1437C,1478C 'offlin':2404C 'often':3674C 'ok':182C,413C 'old':1990C 'one':372C,662C,845C,1165C,1670C,1721C,2454C 'onlin':2488C 'oop':245C,558C 'open':39B,2130C,2990C 'opinion':2121C,2196C 'optim':2749C,2776C,2869C 'optimist':2420C 'option':762C 'organ':2049C 'origin':2548C 'other':2883C 'outlet':623C,2184C 'overal':985C 'pace':3670C 'page':1840C,1844C 'pagin':3608C 'pain':2686C,3258C,3263C 'pane':3256C 'pant':1393C,1396C 'param':810C 'paramet':3304C 'pars':2323C 'parser':3287C 'part':686C,745C,3479C 'pass':118C,2815C 'past':312C,2601C,2656C 'patch':2418C 'path':334C,1716C,2579C 'pattern':1438C,2094C,2129C,2135C,2396C,2403C 'pave':1713C 'penner':2731C 'peopl':95C,2635C,3008C,3074C,3131C 'perceiv':2533C 'perform':2729C,2809C,2911C,2931C,2985C,3233C,3255C,3426C,3563C 'perhap':2720C 'phone':2500C,2603C 'physic':1465C 'pick':2497C 'piec':403C,3492C 'pipelin':1208C,1684C 'plan':3102C,3653C 'plane':758C 'play':732C,1254C 'pleas':3316C 'plot':657C,756C,790C,837C 'pluggabl':1089C,1710C 'plugin':1667C,1687C,1699C,1709C,2312C 'pm':90C,635C,882C,1249C,1563C,2067C,2386C 'point':671C,771C 'polici':3239C 'posit':1466C 'possibl':840C,1760C,2133C 'post':1694C 'power':2090C 'practic':959C,970C 'predict':2865C 'prematur':2748C 'present':2727C 'preview':1653C,1820C 'previous':1934C 'primit':895C,2976C 'pro':110C 'problem':2188C,2790C 'process':1004C,1015C,3329C,3399C 'product':1082C,1235C,1819C,2927C 'program':1196C,1441C,1480C 'programm':2360C 'progress':3424C 'project':243C,1720C,1723C,1746C,2074C 'promis':2956C,2977C,3089C,3257C 'promot':957C 'properti':201C,244C,269C,285C,294C,322C,385C,397C,568C,721C,1415C,1424C,1446C,1453C,1461C,3470C 'provid':1045C 'proxi':1042C,3236C 'purpos':656C 'push':1090C,2626C 'question':2912C 'queu':1340C 'rail':1794C,1848C 'ran':2185C 'random':1380C 'rapid':3310C,3668C 'razor':2602C 're':2703C,2715C 'reactiv':1253C,1440C,1476C,1494C 'reactj':3541C 'read':1850C,1870C 'reader':2334C,2338C 'real':11B,1579C,2349C 'real-tim':2348C 'realli':1519C,3018C,3132C,3314C 'reason':2842C,2846C,3561C 'reativ':1479C 'rebuild':3293C 'red':177C,186C 'reddit':1402C 'redi':1835C,1847C,1853C 'reduc':1137C,2531C 'redund':1006C 'refactor':179C 'reflect':20B 'refresh':1779C,3521C 'reinterpret':2621C 'relationship':1488C,1599C,3114C,3136C,3142C,3145C 'releas':1616C,1701C,3311C,3320C,3428C,3574C,3594C,3652C,3661C,3669C,3678C 'relentless':953C 'rememb':2546C 'remov':255C,3289C,3675C 'render':3295C,3405C,3449C,3497C,3504C,3523C,3531C 'reopen':2761C 'repeat':2400C,2449C 'report':3080C,3283C,3323C 'repres':610C,767C,3015C,3068C 'represent':1981C 'request':500C 'respond':2419C 'respons':510C,2204C,2212C 'restart':1887C,1988C 'restor':2413C 'result':211C,1182C 'return':202C 'reus':2461C 'rewrit':1791C 'rfc':3328C,3700C 'right':921C,934C,1019C 'rip':302C,3266C 'risk':2534C 'roadmap':1608C 'robert':3325C 'roll':1987C,3657C 'rollback':1645C 'rom':2022C 'rout':175C,315C,338C,485C,491C,553C,602C,2154C 'routabl':3680C 'router':2160C,2175C 'run':365C,370C,1936C,1951C,2054C,2288C,3317C,3363C,3407C,3415C 'runtim':2838C,2858C,2879C,2938C,2943C 'ryan':3455C 's3':1858C,1867C,1869C 'sam':876C 'sampl':233C 'saniti':61B,870C 'save':2485C 'say':3554C 'scaffold':3210C 'scale':708C,783C,1222C 'scanner':2445C 'scatter':789C 'scatterplot':823C 'scienc':2872C 'scope':3301C 'scratch':137C 'screen':1469C 'script':1063C,1103C,3267C 'section':18B 'secur':3238C 'see':605C,1419C 'selector':549C 'seletector':224C 'selikoff':877C 'semver':1001C 'sent':1636C 'separ':728C 'sequenc':1448C 'serial':2210C 'serv':1782C 'server':165C,1069C,1603C,1607C,1632C,1768C,1849C,1883C,2208C,2328C,3150C,3235C,3369C,3403C,3420C 'servic':1158C,1229C,1291C,1343C,1360C 'session':1967C 'set':564C,993C,2139C,3487C,3527C 'share':913C,918C,1062C 'ship':1079C,3094C,3602C 'shirt':1387C,1401C 'show':331C,517C,598C,3057C 'shower':1366C,1403C 'similar':1038C,1689C 'simpl':691C,788C 'simul':508C 'simultan':1788C 'sinc':3515C 'singl':1843C,3229C 'sith':2905C 'six':1735C 'skeleton':2505C 'slide':1271C 'slow':1873C 'slowli':2756C 'small':2107C 'smaller':1230C 'smart':3520C 'snippet':692C 'softwar':2005C,2027C,2033C,2042C 'solid':894C,1124C 'solut':892C,914C,937C,1052C,1177C,1210C,1712C,2113C,2759C 'soon':2388C 'sourc':2253C,3243C 'spawn':1227C 'speakerdeck.com':1273C 'speakerdeck.com/poteto/emberconf-2015-ambitious-ux-for-ambitious-apps)':1272C 'spec':3165C,3638C,3648C 'special':2885C,2887C,3045C 'specif':220C,257C,1914C 'speed':1875C,2870C 'spinner':2510C 'spit':2664C 'split':740C,1219C 'ssot':3157C 'stabiltiy':2874C 'stabl':2863C 'stage':1649C 'standard':964C,967C,2446C 'start':153C,166C,923C 'stat':761C 'state':461C 'static':1629C,1983C 'statist':742C 'status':301C,321C,358C,387C,400C,433C,1356C 'stefan':2730C 'step':2448C 'steve':2380C,3639C 'stewart':2896C 'still':117C,1583C,2426C,2945C,2953C 'stop':2480C,2660C 'store':2225C,2261C,2284C,3033C 'stori':455C,1147C,1566C,3187C 'stream':1444C,1449C 'stress':3459C 'stub':3234C 'style':129C 'sub':992C 'sub-set':991C 'submit':2342C,3333C 'subscript':2782C 'success':891C 'sugarpir':1551C 'suggest':832C 'super':2814C,3060C 'support':1330C,3201C,3251C,3613C 'svg':736C 'swap':999C 'symbol':2439C 'sympathi':2894C 'sync':3146C 'syntax':3291C,3474C 'system':754C,806C,996C,1213C,1224C,1355C,1745C 'tackl':853C 'tag':3268C 'take':860C,2580C 'taken':9B 'talk':24B,1589C,2206C,2221C,2236C,2366C,2369C 'tan':1244C 'target':1647C 'tc':3172C 'tdd':113C,128C 'team':1169C,1733C,3066C,3707C 'teddi':3248C 'tell':450C 'templat':230C,281C,325C,393C,534C,619C,3276C,3495C,3499C 'test':73B,79C,115C,144C,158C,164C,169C,210C,217C,247C,278C,327C,347C,351C,364C,373C,375C,405C,417C,420C,422C,429C,438C,507C,515C,544C,560C,579C,614C,1021C,1044C,1047C,1209C,1660C,1801C,1817C,3174C,3186C,3206C,3232C,3460C 'test-driven':72B,78C,143C 'test/assertion':290C 'thank':3247C 'thin':2507C 'think':1381C,1506C,1516C,2613C 'this._super':2821C 'though':2231C 'thought':1367C,1404C 'thoughtlead':3391C 'three':2452C 'thumbprint':2444C 'tile':2518C 'time':12B,341C,852C,929C,1189C,1777C,2044C,2350C,3129C,3274C,3339C 'tinker':908C 'tip':111C 'tldr':3292C 'today':2254C,3076C,3305C,3719C 'todo':176C,192C,377C,380C,556C 'togeth':1960C,2245C 'toggl':431C,591C 'token':1797C 'tom':43B,2994C 'tomster':3052C 'tool':906C,942C,1132C,2389C,3217C 'toolsofthetrade.dockyard.com':2398C 'top':889C,2115C 'toran':84C 'track':3505C 'trade':2392C,2489C 'transact':2504C 'transform':2214C 'transit':355C,668C,680C,696C 'transpil':3240C 'transport':3617C 'trevathan':2381C 'tri':2676C 'trick':2746C 'trivial':1140C 'trust':965C 'tuck':1390C,1398C 'twitter':865C 'two':1949C 'type':2873C,2886C 'ui':1164C,1889C,2506C 'unassign':171C,200C,360C,435C 'underlin':2975C 'understand':2572C,2678C,2877C,2941C 'unit':350C,363C,3197C 'unoptim':2851C 'updat':577C,884C,1707C,2417C,2650C,3138C 'updateasset':1678C 'updateindex':1679C 'url':589C,608C,1654C,2169C,2190C,2201C,3309C 'us':1144C,2667C 'usag':1640C 'use':138C,142C,147C,162C,185C,227C,263C,546C,679C,718C,857C,1311C,1318C,1359C,1656C,1669C,2020C,2136C,2145C,2264C,2427C,2537C,2724C,2823C,2906C,2978C,3215C,3302C 'user':1515C,1526C,1774C,1902C,1975C,2662C,2690C,3371C,3374C 'ux':56B,1239C,1384C 'ux/design':2630C 'v8':2881C 'valid':3278C 'variat':1185C 'various':1083C,1157C,1783C,3216C 'version':1784C,1823C,1906C,1920C,1935C,1955C,3709C,3716C 'vertic':827C 'via':1477C 'video':3056C 'virtual':3464C,3511C,3532C 'visibl':1353C 'visit':160C,523C 'visual':663C,674C,751C,831C,863C 'vs':659C,2930C 'wait':2476C 'way':2268C,2455C,3664C 'web':101C,973C,1831C,2014C,2026C,2036C 'websit':2174C,2358C 'week':1706C 'weight':826C 'well':2246C 'whatev':3205C 'wheel':2556C 'wickham':802C 'willdeploy':1676C 'without':2960C 'woot':3387C 'work':1097C,1270C,1499C,1593C,1985C,2083C,2244C,2615C,2764C,2947C,2968C,3313C,3644C,3685C 'world':3044C 'wors':820C 'would':651C,931C 'wrap':1335C,2142C 'write':426C,1427C 'wrote':1101C 'x':1418C 'xhr':476C,499C,503C,2304C 'yapplab':2055C 'year':3021C,3083C 'yehuda':41B,2992C 'yet':3444C 'zeenni':3249C	published	pixelhandler
8	## Cases when a 404 page is needed\n\n1. When the URL does not match any defined routes, the application should render a 404 page.\n1. When a route's `model` hook has a call to `this.store` or `Em.$.ajax` and the result is a promise that is rejected perhaps the application should show a 404 page. \n\nFor example, when your adapter cannot find the resource that a route is expected to fetch. Ember.js routes may use an `error` action to transition to a 404 page. This will support a route which fails to transition due to a rejected promise caused by one or more of the route's hooks, e.g. `model`. \n\n## Catch-all route\n\nTo address the first case (above), when a given url doesn't match any route, define the last route in your router using a [wildcard globbing route]. \n\n[wildcard globbing route]: http://emberjs.com/guides/routing/defining-your-routes/#toc_wildcard-globbing-routes\n\nI setup a route for **[not-found]** in my router. The last route uses the wildcard `/*path` to catch any text string not already matched by other routes or resources. See the `'not-found'` route in the router example below.\n\n[not-found]: https://github.com/pixelhandler/blog/blob/master/client/app/router.js\n\n    Router.map(function () {\n      this.route('about');\n      this.resource('posts', function () {\n        this.resource('post', { path: ':post_slug' });\n      });\n      this.route('not-found', { path: '/*path' });\n    });\n\nWhen the wildcard path matches a url that should result in the application rendering a 404 page, the (404) [not-found route] utilizes the `redirect` hook in order to transition to the url `/not-found`. My app has a Route prototype (app/routes/not-found.js) which is mapped to the 'non-found' route:\n\n[not-found route]: https://github.com/pixelhandler/blog/blob/master/client/app/routes/not-found.js\n\n    import Ember from 'ember';\n\n    export default Ember.Route.extend({\n      redirect: function () {\n        var url = this.router.location.formatURL('/not-found');\n        if (window.location.pathname !== url) {\n          this.transitionTo('/not-found');\n        }\n      }\n    });\n\nThe result is that the application renders a `not-found` template (templates/not-found.hbs) with a link to my archives page. \n\n[not-found template]: https://github.com/pixelhandler/blog/blob/master/client/app/templates/not-found.hbs\n\n    <h1>404 Not Found</h1>\n    <p>\n      Perhaps you have a link that has changed, see {{#link-to 'posts'}}Archives{{/link-to}}.\n    </p>\n\n## Error in a route hook\n\nAny route having a hook (e.g. `model`, `beforeModel`, `afterModel`) that results in a rejected promise, can use the `error` action to transition to the 404. See the [Ember.Route error event] doc page.\n\n[Ember.Route error event]: http://emberjs.com/api/classes/Ember.Route.html#event_error\n\nDefine the action, log the error and transition to the '/not-found' page\n\n    import Ember from 'ember';\n\n    export default Ember.Route.extend({\n      actions: {\n        error: function (error) {\n          Ember.Logger.error(error);\n          this.transitionTo('/not-found');\n        }\n      }\n    });\n\nHere is my 404 page: <http://pixelhandler.com/not-found>.	Every so often someone in the `#emberjs` irc channel asks, "How do I handle a 404 page using Ember.js?" For example, see this [stackoverflow question], "How to handle 'no route matched' in Ember.js and show 404 page?"\n\n[stackoverflow question]: http://stackoverflow.com/a/25558348/499642	how-to-use-404-page-in-your-emberjs-application	How to Use 404 Page in Your Ember.js Application	2014-08-29	2015-05-07 17:03:21.257767	2015-05-07 17:03:21.257767	1	'/a/25558348/499642':51B '/api/classes/ember.route.html#event_error':429C '/guides/routing/defining-your-routes/#toc_wildcard-globbing-routes':199C '/link-to':386C '/not-found':300C,336C,341C,440C,456C,464C '/pixelhandler/blog/blob/master/client/app/router.js':247C '/pixelhandler/blog/blob/master/client/app/routes/not-found.js':323C '/pixelhandler/blog/blob/master/client/app/templates/not-found.hbs':368C '1':59C,76C '404':4A,25B,45B,55C,74C,106C,135C,281C,284C,369C,416C,460C 'action':130C,411C,432C,449C 'adapt':112C 'address':168C 'aftermodel':400C 'ajax':90C 'alreadi':224C 'app':302C 'app/routes/not-found.js':307C 'applic':9A,70C,102C,278C,347C 'archiv':360C,385C 'ask':19B 'beforemodel':399C 'call':85C 'cannot':113C 'case':52C,171C 'catch':164C,219C 'catch-al':163C 'caus':151C 'chang':379C 'channel':18B 'default':329C,447C 'defin':67C,182C,430C 'doc':422C 'doesn':177C 'due':146C 'e.g':161C,397C 'em':89C 'ember':325C,327C,443C,445C 'ember.js':8A,28B,42B,124C 'ember.logger.error':453C 'ember.route':419C,424C 'ember.route.extend':330C,448C 'emberj':16B 'emberjs.com':198C,428C 'emberjs.com/api/classes/ember.route.html#event_error':427C 'emberjs.com/guides/routing/defining-your-routes/#toc_wildcard-globbing-routes':197C 'error':129C,387C,410C,420C,425C,435C,450C,452C,454C 'event':421C,426C 'everi':10B 'exampl':30B,109C,240C 'expect':121C 'export':328C,446C 'fail':143C 'fetch':123C 'find':114C 'first':170C 'found':207C,235C,244C,263C,287C,315C,319C,352C,364C,371C 'function':249C,254C,332C,451C 'github.com':246C,322C,367C 'github.com/pixelhandler/blog/blob/master/client/app/router.js':245C 'github.com/pixelhandler/blog/blob/master/client/app/routes/not-found.js':321C 'github.com/pixelhandler/blog/blob/master/client/app/templates/not-found.hbs':366C 'given':175C 'glob':192C,195C 'handl':23B,37B 'hook':82C,160C,292C,391C,396C 'import':324C,442C 'irc':17B 'last':184C,212C 'link':357C,376C,382C 'link-to':381C 'log':433C 'map':310C 'match':40B,65C,179C,225C,270C 'may':126C 'model':81C,162C,398C 'need':58C 'non':314C 'non-found':313C 'not-found':205C,233C,242C,261C,285C,317C,350C,362C 'often':12B 'one':153C 'order':294C 'page':5A,26B,46B,56C,75C,107C,136C,282C,361C,423C,441C,461C 'path':217C,257C,264C,265C,269C 'perhap':100C,372C 'pixelhandler.com':463C 'pixelhandler.com/not-found':462C 'post':253C,256C,258C,384C 'promis':96C,150C,406C 'prototyp':306C 'question':34B,48B 'redirect':291C,331C 'reject':99C,149C,405C 'render':72C,279C,348C 'resourc':116C,230C 'result':93C,275C,343C,402C 'rout':39B,68C,79C,119C,125C,141C,158C,166C,181C,185C,193C,196C,203C,213C,228C,236C,288C,305C,316C,320C,390C,393C 'router':188C,210C,239C 'router.map':248C 'see':31B,231C,380C,417C 'setup':201C 'show':44B,104C 'slug':259C 'someon':13B 'stackoverflow':33B,47B 'stackoverflow.com':50B 'stackoverflow.com/a/25558348/499642':49B 'string':222C 'support':139C 'templat':353C,365C 'templates/not-found.hbs':354C 'text':221C 'this.resource':252C,255C 'this.route':250C,260C 'this.router.location.formaturl':335C 'this.store':87C 'this.transitionto':340C,455C 'transit':132C,145C,296C,413C,437C 'url':62C,176C,272C,299C,334C,339C 'use':3A,27B,127C,189C,214C,408C 'util':289C 'var':333C 'wildcard':191C,194C,216C,268C 'window.location.pathname':338C	published	pixelhandler
10	I may have missed a few segments of the presentations or been distracted during a few talks so I apologize in advance to the speakers if I have not included notes from your talks in this article. I can honestly say that I did find value in every presentation. (That has not always been the case when I've attended a conference.) The headings I use in this article may not match the speakers presentation titles. This article captures what I learned from the conference so I've taken liberty to create new headings and combine common topics; besides "Keynote" as a heading lacks context ;)\n\n## Speed, Efficiency, Productivity...\n\nThe take away is that by adopting the conventions of the Ember.js framework a developer gets "Speed, Efficiency, Productivity..." by default.\n\n_Flows are just as important as screens_. With Ember you control (users') flow through your Web application using the `Router`. The routing features that Ember provides are more than just URLs. This was proven by more that one presentation on the topic of routing. There was a very impressive presentation later on [fnd.io](https://fnd.io) which used every model known by the application to route any type of object that a search application could identify. And another presentation that injected additional logic to manage transitions between complex states in a banking like Web application.\n\n"Get rid of sinkholes, use commonality" Routing provides strong defaults in how to organize flow and state in a true Web application.\n\nMy experience with the router has been that once I grok how to use it the next time I start an application the productivity is noticeable and satisfying. The same can be said of other conventions that Ember.js provides. The concepts in the router are simple and complex at the same time; but the net take away is that using this common way of managing flow and state yields productivity. There is a reward for investing time in learning and using the conventions of routing for a browser application. \n\n## Frameworks are Designed to Nudge You in the Right Direction\n\nThe Vine app for sharing videos is built with Ember and it turns out that using many many videos on a page can be a bit of a challenge in a Web application; especially for creating a snappy user experience. Data visualization can be a complex chore for a team with varying strengths. Ember `Component` can be used to encapsulate complexity of using a 3rd party library like D3 for pretty data on screen. Application code can be built with more than one recipe to deliver a different experience by only changing the dependency for a router file.\n\nI find that once I get the concepts of using components to isolate behavior and reuse it in various contexts that is a very powerful and valuable convention. And Web components are in the not so far off future already. \n\n_Welcome to the future :)_ (Not really.) But I do think that using Ember components is a peek into what will likely be a shared way build reusable components on the Web in general.\n\n## Contributing\n\nThe contributing presentation provided great details on how to get involved and help the community. The TL;DR summary is do try to make it easy for the core team to help you help the community.\n\nIt would be a good idea to subscribe to the security email list. Also you can enable feature flags in the beta/release channels of Ember but DON'T DO IT. The fixes to bugs found in new features will not be patched onto those release channels. It's best to use Canary to try and contribute to new features or bugs.\n\nI think this talk exposed a common and priceless value of the Ember community in general... there is a huge value that is given by the core team members as well as those who decide to contribute and any level. This value is sacrificial and comes at a very high price, the time belonging to loved ones. I would conclude that there is a genuine passion for the project itself as well as the people who use the project's codebases.\n\nThe fast track to helping with the community is an attitude of others first. Adopting the conventions on how to commit code for a feature or a bug makes peoples lives better.\n\n## Love Trolls\n\nTrolling is common on the interwebs, love trolling not as much. Well, unless you're at EmberConf.\n\nThe phase "Just Stop" is all it takes to find common ground between such a wide variety of world views within the development community.\n\nI think this expression represents a care for humans in general, like... "Hey my friend, please don't make a fool of yourself" or, "Hey I just need you to know I'm not ok with that, can we move on to common ground". \n\nJust as we are capable of introducing bugs to a codebase, we are all capable of hurting others. More important than an awesome framework are awesome people who aren't left out. \n\nThis idea rises above political correctness and just puts others before self; a valuable ethic for any community. And, it's found in the Ember community.\n\n## Data Persistence\n\n### ...A Hard Problem\n\n* Data Transformation\n* Asynchrony\n* Caching\n* Locality\n* Relationships\n\nThe above are the objectives that Ember Data achieves to solve for Web applications. However it's not as easy as one would expect. When all the above happen together, there be dragons. \n\nThe premise of the Ember Data project are...\n\n1. Easy problems should be locked down less often (give developers more flexibility)\n2. Lock down API for hard problem\n\n### ...You're Building A Distributed Computing System\n\nWe received a lecture on math theory related to distributed computing systems. There is a trade-off between availability and consistency. Safety (always right) or liveness (eventually there), how would you like your data? A good goal is to build weak consistency with higher availability. Something to consider is that once you send data to a client it immediately becomes a cache of that data (and most likely to become stale quickly).\n\nI forgot how much I enjoy mathematics and theory, it was refreshing to think about the client-server data caching problem from this perspective. A server-based data driven application should know how to manage the data cache sent to it's clients, or perhaps a client application should know it's contract for the data it receives. One thing I'd like to work on is using sockets to manage multiple data stores (caches): perhaps a memory store, a local store (disc) and a remote store communicating with clients via Web sockets.\n\n## Tooling: Build Your App with Broccoli\n\nRemember those little veggie trees? Your application's modules (files) live in trees (folders), the broccoli build library only knows about trees, `read`, `read`, and `cleanup`. The API is small leaving room for adding specific sets of functionality by writing plugins. You can have many plugins and build targets as well as a `mergeTrees` method to package up your application.\n\nBroccoli is for working with files in your repository it's not a task runner. Integration within your tool set can be achieved as you choose, perhaps a grunt task kick off the build.\n\nThe benefit of using `broccoli` to build your application is... only files with a change in last modified date are re-processed so the result a super speedy build with each change; even when you have a large set of files (modules) composing your application.\n\nBroccoli is the newest choice of tooling for generating a build for a JavaScript application. And its likely the fastest too. What a considerable contribution to the Ember community. I am looking forward to a speed boost in my development cycles.\n\n## Animation and Transitions, Janky Not Allowed\n\nWhy animate? Just because developers understand crazy abstractions, not everyone is "freakish like that". Providing some direction to flow by animating a change gives users a sense of where they are navigating to and how to go back to where they've been. If every link just immediately appeared users would have a limited sense of what the application's flow is. As users transition between screens or even parts of a screen, animation provides some directional context that makes the application feel more natural.\n\nUsing Ember there are two types of animations. One is a simple animation within a single route, done with CSS (based on class attributes that belong to a component on the screen). The second is a complex animation between route transitions.\n\nTo avoid jankiness in an Ember application it is a good idea to silence browser events so that your application is not listening or responding to irrelevant event handlers. One solution is to add back in needed event handlers by wrapping the code needing the events with a component which does listen for the event. A couple concepts to hook into so wrangle complex animations are using `willTransition` and also named outlets. For thinks like a modal using `query-params-new` allows you to bypass router and reuse the same modal anywhere.\n\n## Angular's Transclusion is not a Misnomer\n\nTransclusion is the inclusion of one thing into something else. It's like using an Ember.Component instance with `yield`. I think the goal of using a directive with transclusion is to encapsulate HTML, CSS and JavaScript, to roll your own reusable widgets. Perhaps a dependent select box is a good example of a Web Component that would utilize Angular directives and transclusion; alternatively, an Ember.Component would be used for the same.\n\nI'm not sure that I really know why there was a Talk on Angular other than to call out that in some cases we are working on common solutions in both development communities; however the techniques and naming may be quite different to achieve the same goal. I did like how the speaker tackled a couple topics which those in the Ember community have poked fun at perhaps at the expense of those in the Angular community. At the end of the day we're all JavaScript developers.\n\nI think that the speaker on the Angular topic was quite brave to take on this topic for a decidedly "Ember" audience. For me the take away is that there are different strokes for different folks; and that's just fine; perhaps we'll learn something from each other of find some common ground in an area like Web components.\n\n## Doing Better with Available API's Using Ember.js\n\nSearching the iTunes Music Store and App store can be at times not so great of an experience, especially on the Web. Apple's  API's to query media types make a good source to build an application built without a backend, and perhaps do a better job on the Web than Apple has done. [Fnd.io](http://fnd.io) is the example that takes on Apple's search experience on the Web platform head on. \n\nA talk was presented on how to model iTunes Media using Mixins and Ember Data. Using composition to model various data types found in the stores' API gave some flexibility to identify types from an API where it's not always clear what things actually are typed as. The fnd.io site focuses on product search rather than document search.\n\nThe value Ember provided was beautiful URLs with a fast product search tool that rivals any experience searching for iTunes and App store products on the web.\n\n"Tapas with Ember" (Brunch recipe) may have been a result of this project which uses Brunch for a build tool.\n\n## 2X-3X Performance Boost Coming Soon: HTMLBars\n\nThe project is still in an alpha stage; though it was not possible to release an alpha version for EmberConf2014 serious effort was made to do so. The promise is 2X-3X times speed gains once HTMLBars ships. I'm looking forward to kissing metamorphs good-bye and saying hello to "fast" with HTMLBars.\n\nSome of the differences in HTMLBars are:\n\n* Unlike Handlebars HTMLBars understands your markup\n* Builds DOM fragments instead of Strings\n* No more `script` tags (MetaMorphs)\n* Large lists are much more performance, as the source uses `clone`\n* Binding update order\n* Stop recursion / Limits re-render (anti-pattern)\n* Simplicity in the markup, removes the need for helpers like `bind-attr`\n\nUltimately the goal of HTMLBars is to step into a simpler primitive.\n\nI could tell that the team working on the project was a bit spent and also sensed that a significant sacrifice of personal time has been invested in toward increased performance for the Ember community. Thanks for the hard work guys; and thanks to your loved ones for leasing you to the Ember community for this project.\n\n## Reusable Views: Components\n\nA couple questions to ask when considering to create a component are:\n\n* Does it have behavior?\n* Does it need to use a specific class or action?\n\nGood examples are `form` with `input type=submit`; and `select` with `option`. The behavior of a form change when there is a submit input element.\n\nSome advice given regarding building with Ember:\n\n* Don't build large components with big templates\n* Do use composite components; lean on using no templates\n* Test and develop with dynamic data\n* Build native Ember components rather then using Bootstrap\n* Child components should inform parent they exist to change behavior, `willInsertElement` is a good hook to use\n\n`ic-tabs` and `ic-menu` component micro-libraries were demonstrated. I good goal for an architect of an application is to measure success by the frequency that your team asks how to use the apis provided to the application developers. Using components to abstract complexity and provide consistency may reduce the amount of support needed. Also using method names that define the action and combining the `.on('eventName')` extension to the method helps communicate the how and why of the methods contained in your components. Thank you [Instructure](https://github.com/instructure) team, for contributing these components to the Ember community.\n\n## Ember AppKit Gives Birth to Ember CLI\n\n`ember-cli` is the child project conceived by the bleeding edge work done on Ember App Kit (EAK). While creating new tooling for Ember projects, the EAK project tackled various problems and paved the way to abstract many solutions. Using Ember App Kit allows developers to ship real stuff and also experiment with solutions at the same time. It's my opinion that good things come from real apps. So, thank you to those to felt comfortable living on the bleeding edge, your pains have born `ember-cli`.\n\nSome of the byproducts of the EAK project are:\n\n1. *Problem*: Coupling / *Solution*: Inversion of control, `resolver` knows/finds in `container`\n1. *Problem*: Assemble Source / *Solution*: Build Tooling\n1. *Problem*: Upgrade nightmares / *Solution*: Better abstractions, hide nearly all the complexity\n1. *Problem*: Copious bugs / *Solution*: Thorough test suite\n1. *Problem*: Build Stability / Solution: Tool choice, build pipeline with Broccoli\n\n_"When a problem comes along you must whip it"_ - My perception of EAK's theme\n\n`ember-cli` is the single place to focus using the solutions above. You can help too! A call to action was echoed from the podium, "we need a good story for fingerprinting". (Perhaps using md5 hash in asset filenames and updating links to assets using the same hash.) This is not a new problem but needs a good story for JavaScript applications.\n\nPerhaps the most noticeable result of EAK was the adoption of using es6 modules in Ember applications today. (Welcome to the future.)\n\n## Give Back, You Can Make a Difference\n\nYou can teach a web development class as long as your students can type. DeVaris Brown did just that, and proved that it's possible to teach 16 to 19 year old kids Web development. His story was amazing, heartfelt and received with many cheers and tears alike. As developers we have a highly valuable skill and DeVaris has carved out curriculum for teaching the basic building blocks of Web development to kids. Sounds like madness no? Well for Devaris there were more than a few magical moments. He said that the kids "liked the magic of the Ember.js framework". This was caught after kids asked if there was another way beside copy and paste to create Web pages. Aha, you can build dynamic web pages with Ember.js; magic right! It appears so.\n\nWhat Devaris strived to do was make a difference for underprivileged kids using what he knows. He learning that the basic requirement for accepting students is the ability to type; he discovered that people can do good in their communities. The kids worked on a project to support connecting people, foodbanks, and food providers; how awesome that is!\n\nImagine explaining the DOM to kids and teaching HTML, CSS, and JavaScript basics. Devaris committed to sharing his curriculum (a collection of Markdown files) on github. He also mentioned that he found [typing.io](http://typing.io) to be a good tool to help with the typing challenges, "kids only use a few characters while texting".\n\nI was very impressed with how Devaris hung in there until that **aha** moment when the kids caught it; Devaris was like "Thank you Jesus!" and we all were clapping and crying. Nice work Devaris, you made a difference and inspired others to do the same.\n\n## Who Owns Query Params, Router or Controller?\n\nMr. Router thought that the `Router` should own query params, yet there was a convincing case for the `Controller` to manage these variables. `query-params-new` has a controller-centric API.\n\nThere is a problem to solve, controller property stickiness, perhaps a new primitive "model dependent state" may be the resolution. This concept (vaporware at this point in time) would scope controller state to a model instance. The issue of controller stickiness is not unique to query-params.\n\nMy take away is that things that seem simple can become hard; and until a feature becomes stable it remains behind a feature flag like `query-params-new`.\n\n## Ember.js Testing is Not Hard, It's Unknown\n\nThe `ember-qunit` project has a great concept that makes testing an Ember application much easier that is has been in the past. The `resolver` is used to pluck out the subject of the test into an new container which sets up a sandbox for unit testing.\n\nEmber's testing backstory (the happy path using QUnit) was presented with funny slides. It's been a year since we've had the `ember-testing` package, and there has been additional helpers added to the project as well.\n\nIntegration testing is fairy straight forward and now with `ember-qunit` unit testing has an improved story. To setup and insert the test helpers call `setupForTesting()` and `injectTestHelpers()` on your application namespace. The (global) helpers are `visit`, `click`, `fillIn`, `find`, `findWithAssert`, `keyEvent`, `andThen`; the newest are: `triggerEvent`, `currentRouteName`. See the API docs for more info on using the helpers.\n\nPerhaps the best way to get started with reading example tests:\n\n* [jsbin.com/suteg](http://jsbin.com/suteg/7/edit?html,js,output)\n* [jsbin.com/cahuc](http://jsbin.com/cahuc/1/edit?html,js,output)\n* [jsbin.com/qifon](http://jsbin.com/qifon/5/edit?html,js,output)\n* [jsbin.com/numof](http://jsbin.com/numof/9/edit?html,js,output)\n* [jsbin.com/witut](http://jsbin.com/witut/7/edit?html,js,output)\n* [jsbin.com/kilej](http://jsbin.com/kilej/3/edit?html,js,output)\n\nAnd also, don't forget to checkout the new guide in progress:\n\n* [Initial PR for ember testing guide redux](https://github.com/emberjs/website/pull/1401)\n\nI had taken a stab a writing a testing guide awhile back, [website/pull/610](https://github.com/emberjs/website/pull/610/files), which I closed out as the testing story was still a bit painful and we really needed something like `ember-qunit` to evolve and simplify isolating tests.\n\nThanks to everyone involved in helping the Ember testing story evolve from painful to simple; I'm looking forward to an awesome testing guide.\n\n## Controlling Flow in the Router\n\nTraversing routes to enforce a specific flow event with optional flows can be achieved. The example presented was a login flow to a backing application with various options that depend on the user's choices made while stepping through this flow.\n\nWhen designing flows, start by a) listing every single permutation, b) inventory all routes, c) list linear paths, d) contain state modification on nodes, by describing state on each node;  finally e) traverse backwards (back button). The route's `replaceWith` method is well suited for using custom flow.\n\nThe project presented is [ember-flows](https://github.com/nathanhammond/ember-flows); which is a great example of extending functionality by injecting an object into your application container.\n\nThe object used in to define flow strategy has properties for `from` (route path), `to` (route path), `weight` (number), and `conditions` (Array). And the hook used to enforce the flow is `beforeModel` like so `this.get('flow').check();`. The flow object injected into the application can make a choice about when to change paths in the router using `replaceWith`. Well hopefully I grokked it correctly see the `ember-flows` project if you'd like the details.\n\nAgain I's great to know that there are solutions that are essentially plugin-able to being shared that are based on solutions to complex problems.\n\n## Snappy Performance Makes Users Happy\n\nHow fast is fast?\n\n* 16ms : 60 fps is **Fast**\n* 300ms: is **Snappy**\n* 1s+ is like I'm **waiting**\n* 10s+ is bad, you just **lost a visitor**\n\nWhen working with Ember applications remember that the Ember part is a subset of the code that affects Web performance (page speed). A good goal is to provide a snappy response which is under 1 second; about 300 milliseconds. When measuring page speed, the visual performance, how a visitor perceives responsiveness should be considered as well. Recording a video of the page load and marking when the page looks ready is an indicator that should be weighted along other speed measurements like first load time, document ready, etc.\n\nMethodology\n\n1. Gather Facts\n1. Analyze and Theorize\n1. Change a Single Thing\n1. Confirm your Theory\n\nAlso when testing it's a good idea to disable browser extensions. "Browser Networking" is a book we should all own and reference. Getting familiar with the browser's development tools for performance is what is needed to analyze and test performance optimizations. The flame chart in a render snapshot can expose problematic cycles of re-rendering and performance sinkholes. Also property change notifications can affect performance. Instead of looping over a collection and inserting or setting properties during each iteration, look for ways to complete enumerations then make an assignment of a collection to an object property.\n\nI think it was mentioned that there should be a book on this topic coming soon. See the speakers post on the talk here: [Performance in Ember Apps](http://madhatted.com/2014/3/28/via-emberconf-performance-in-ember-apps)\n\n## Evolution: The Extensible Web\n\nOpen source is awesome! Remember when Netscape pushed it's source code to the Web. That was a Revolution. The JavaScript development lifecycle is still evolving. \n\n* Focus: don't re-invent the universe\n* Consistency: keep unified development model\n* Adoption: gradual adoption with polyfills, compilers\n\nOne example of evolution is the use of `"use strict";` developers can opt-in. But we know opt-out is better, so ES6 modules are strict by default.\n\nThe cycle of evolution is: a) study the text then b) interpret the text, next a) study the text, and b) interpret the text. Repeat A then B until the delta between the two (study/interpret) becomes small enough to ship. As developers we like to move fast and break things. The loop we work in is: build, ship, evaluate, repeat while it's all good. When talking about standards we need to add a step, "don't break the web". So the cycle becomes: build, ship, evaluate, oh, don't break the web then repeat while everything is still good.\n\nThe aim of [the Extensible Web](http://extensiblewebmanifesto.org) is to tighten the feedback loop between the editors of web standards and web developers. It's critical for developers to be involved with browser vendors during this cycle. That's why we try new thinks and sometimes there's some breakage until those deltas become closer.\n\nThe key story of The Extensible Web is:\n\n* Add missing primitives\n* Enable userland polyfills & compilers\n* Work together to design the future\n\nOne think I noticed about the Ember community was the adoption of ES6 modules. I've seen some breakage in Ember Canary while this shift has been happening. It actually bothered me a bit I was thinking aren't there bigger fish to fry, like data persistence? After this talk I see how these minor growing pains do contribute to the development community as a whole. We've been hungry for modules and they've just about landed in browserland for new we're using a transpiler to AMD but this exercise not only shows browser vendors the value of modules it gives us a chance to put the concepts into flight as the standard is adopted.\n\n## Just Stop\n\nThis topic was introduced at the onset of the conference; and I did already touch on it once; I'd like to emphasize the importance of the community. The core team of the Ember community came to an agreement about what rules we should adopt as a development community. \n\nIn practice... if someone says something that offends you, do speak up for yourself by saying "Just stop." Likewise, if a friend says something that you think might offend another friend, we're all friends by the way, in case you didn't know, speak up for your friend by saying "Just stop."\n\n*Simple isn't it.*\n\nRules were made to be broken right, well we're all human and I think that is the point. We are all capable of saying something we might regret so when we adopt to play by this rule we can help our community flourish and also benefit from the results of a thriving development community that is basically re-inventing the Web platform.\n\nWhether you are a religious Jew, someone who doesn't drink, are born of a minority race, or you belong to any facet that composes a diverse community of people having a varying (even conflicting) set of world views; you can show respect toward others, so can I. *I really like this concept of thinking about others first.* I think that this idea is already engrained within the Ember community. Just think about how much sacrifice has already been poured into the framework that we use; and together iterate and improve upon.\n\n## Post Hoc (After the Buzz Settles)\n\nThe Ember community is more than a group of people working on a framework; the community is composed of professionals, hackers, entire families (contributors are leased by their loved ones to the community). We're not born of the same country, same blood or race, not in the same timezone; nor do we have the same native language. But we all write code for the Web platform. We have a common goal to make the Web a better platform and we use Ember.js to do it.\n\n**Ciao, my extended Ember family, talk to you on IRC.** Please do comment on this post if you'd like to share your thoughts.\n\n### Links\n\nThanks to [Ember Weekly Issue 51](http://us4.campaign-archive1.com/?u=ac25c8565ec37f9299ac75ca0&id=3901835468&e=bc026993ad) for collecting the buzz on EmberConf 2014...\n\n**Other EmberConf 2014 Notes/Summaries**\n\n* [EmberConf picks up where the Rails community left off](http://reefpoints.dockyard.com/2014/03/17/emberconf-picks-ups-where-the-rails-community-left-off.html)\n* [EmberConf Notes (markdown), Kurt MacDonald](https://github.com/zurt/notes/blob/master/EmberConf-2014.markdown)\n* [EmberConf Notes (sketched), Michael Chan](http://chantastic.io/emberconf2014/)\n* [EmberConf Notes (blog), Allison Sheren](http://allisonsherenmcmillan.blogspot.ca/search/label/emberconf%202014)\n* [EmberConf 2014, Herman Radtke](http://hermanradtke.com/2014/03/27/emberconf-2014.html)\n* [EmberConf Wrap Up by Justin Ball](http://www.justinball.com/2014/03/27/ember-conf-2014-wrap-up/)\n\n**[EmberConf 2014](http://emberconf.com/schedule.html) Presentations**\n\n**Day 1**\n\n* [EmberConf 2014 Keynote - Tom Dale & Yehuda Katz](https://speakerdeck.com/tomdale/emberconf-2014-keynote)\n* [Using Ember to Make the Seemingly Impossible Easy - Heyjin Kim & Andre Malan](https://speakerdeck.com/simplereach/using-ember-to-make-the-seemingly-impossible-easy)\n* [Contributing to Ember: The Inside Scoop - Robert Jackson](https://speakerdeck.com/rwjblue/contributing-to-ember)\n* [Ember Data and the Way Forward - Igor Terzic](http://terzicigor.com/talks/index.html#/)\n* [No more grunt watch: Modern build workflows with Broccoli - Jo Liss](http://www.slideshare.net/jo_liss/broccoli-32911567)\n* [Animations and Transitions in an Ember App - Edward Faulkner](http://ef4.github.io/ember-animation-demo/#/title-slide)\n* [Ember Components Transclude My Directives - John K. Paul](http://johnkpaul.github.io/presentations/emberconf/components-transclude-directives/)\n* [Modeling the App Store and iTunes with Ember Data - Jeremy Mack](http://emberconf.com/images/slides/2014_jmack.pdf)\n* [HTMLBars: The Next-Generation of Templating in Ember.js - Erik Bryn & Kris Selden](http://talks.erikbryn.com/htmlbars-emberconf/)\n\n**Day 2**\n\n* [The {{x-foo}} in You - Ryan Florence](https://github.com/rpflorence/talk-emberconf-2014)\n* [Ember CLI - Stef Penner](http://static.iamstef.net/ember_conf_2014.pdf)\n* [Ember is for the Children - DeVaris Brown](https://speakerdeck.com/devarispbrown/ember-is-for-the-children)\n* [Mr. Router embraces the Controller - Alex Matchneer](https://speakerdeck.com/machty/emberconf-2014-mr-router-embraces-the-controller-alex-matchneer)\n* [Convergent/Divergent - Christopher Meiklejohn](https://speakerdeck.com/cmeiklejohn/divergent)\n* [The Unofficial, Official Ember Testing Guide - Eric Berry](https://speakerdeck.com/coderberry/the-unofficial-official-ember-testing-guide)\n* [Controlling Route Traversal with Flows - Nathan Hammond](https://www.dropbox.com/s/02peoxevqwjz1bu/Controlling%20Route%20Traversal.pdf)\n* [Snappy Means Happy: Performance in Ember Apps - Matthew Beale](http://madhatted.com/2014/3/28/via-emberconf-performance-in-ember-apps)\n\n\n	I missed EmberCamp last year, but am very fortunate to have attended EmberConf 2014 this year. Not only did I gain profitable knowledge about a framework for the Web platform; but also, I gained a connection with the community that is more than a group of developers writing code for the Web. My experience at the conference showed me how the Ember.js community genuinely shares an equal passion for the people who develop applications with Ember.js and for the framework itself. Below you will find my conference notes combined with the underlying story behind the Ember development community itself...	we-are-emberconf-2014	We are EmberConf 2014	2014-03-30	2015-05-07 17:03:21.26969	2015-05-07 17:03:21.26969	1	'/2014/03/17/emberconf-picks-ups-where-the-rails-community-left-off.html)':4667C '/2014/03/27/ember-conf-2014-wrap-up/)':4707C '/2014/03/27/emberconf-2014.html)':4698C '/2014/3/28/via-emberconf-performance-in-ember-apps)':3883C,4908C '/?u=ac25c8565ec37f9299ac75ca0&id=3901835468&e=bc026993ad)':4644C '/cahuc](http://jsbin.com/cahuc/1/edit?html,js,output)':3292C '/cmeiklejohn/divergent)':4875C '/coderberry/the-unofficial-official-ember-testing-guide)':4886C '/devarispbrown/ember-is-for-the-children)':4859C '/ember-animation-demo/#/title-slide)':4788C '/ember_conf_2014.pdf)':4849C '/emberconf2014/)':4683C '/emberjs/website/pull/1401)':3326C '/emberjs/website/pull/610/files),':3342C '/htmlbars-emberconf/)':4829C '/images/slides/2014_jmack.pdf)':4813C '/instructure)':2441C '/jo_liss/broccoli-32911567)':4776C '/kilej](http://jsbin.com/kilej/3/edit?html,js,output)':3304C '/machty/emberconf-2014-mr-router-embraces-the-controller-alex-matchneer)':4869C '/nathanhammond/ember-flows);':3498C '/numof](http://jsbin.com/numof/9/edit?html,js,output)':3298C '/presentations/emberconf/components-transclude-directives/)':4799C '/qifon](http://jsbin.com/qifon/5/edit?html,js,output)':3295C '/rpflorence/talk-emberconf-2014)':4842C '/rwjblue/contributing-to-ember)':4751C '/s/02peoxevqwjz1bu/controlling%20route%20traversal.pdf)':4896C '/schedule.html)':4712C '/search/label/emberconf%202014)':4691C '/simplereach/using-ember-to-make-the-seemingly-impossible-easy)':4740C '/suteg](http://jsbin.com/suteg/7/edit?html,js,output)':3289C '/talks/index.html#/)':4762C '/tomdale/emberconf-2014-keynote)':4725C '/witut](http://jsbin.com/witut/7/edit?html,js,output)':3301C '/zurt/notes/blob/master/emberconf-2014.markdown)':4675C '1':1025C,2557C,2568C,2575C,2587C,2595C,3683C,3738C,3741C,3745C,3750C,4715C '10s':3641C '16':2740C '16ms':3627C '19':2742C '1s':3635C '2':1038C,4831C '2014':4A,18B,4651C,4654C,4693C,4709C,4717C '2x':2047C,2085C '2x-3x':2046C,2084C '300':3686C '300ms':3632C '3rd':510C '3x':2048C,2086C '51':4641C '60':3628C 'abil':2873C 'abl':3606C 'abstract':1420C,2394C,2495C,2581C 'accept':2869C 'achiev':992C,1308C,1754C,3413C 'action':2267C,2413C,2641C 'actual':1984C,4167C 'ad':1259C,3210C 'add':1572C,4035C,4125C 'addit':311C,3208C 'adopt':217C,810C,2693C,3927C,3929C,4148C,4254C,4301C,4395C 'advanc':124C 'advic':2294C 'affect':3666C,3820C 'agreement':4295C 'aha':2832C,2969C 'aim':4064C 'alex':4865C 'alik':2760C 'allison':4687C 'allisonsherenmcmillan.blogspot.ca':4690C 'allisonsherenmcmillan.blogspot.ca/search/label/emberconf%202014)':4689C 'allow':1412C,1621C,2502C 'along':2610C,3726C 'alpha':2060C,2070C 'alreadi':583C,4270C,4491C,4504C 'also':36B,667C,1608C,2197C,2406C,2509C,2931C,3306C,3754C,3815C,4408C 'altern':1701C 'alway':155C,1075C,1980C 'amaz':2751C 'amd':4226C 'amount':2402C 'analyz':3742C,3792C 'andr':4736C 'andthen':3259C 'angular':1632C,1697C,1724C,1786C,1806C 'anim':1407C,1414C,1433C,1486C,1505C,1510C,1535C,1603C,4777C 'anoth':307C,2822C,4335C 'anti':2155C 'anti-pattern':2154C 'anywher':1631C 'api':1041C,1253C,1863C,1891C,1966C,1975C,2385C,3042C,3267C 'apolog':122C 'app':448C,1223C,1873C,2020C,2474C,2500C,2527C,3880C,4783C,4802C,4903C 'appear':1461C,2844C 'appkit':2452C 'appl':1889C,1919C,1930C 'applic':78B,248C,293C,303C,324C,346C,368C,435C,478C,520C,997C,1156C,1174C,1232C,1285C,1328C,1365C,1380C,1471C,1494C,1545C,1558C,1904C,2369C,2389C,2683C,2700C,3142C,3247C,3424C,3513C,3558C,3653C 'architect':2366C 'area':1855C 'aren':943C,4175C 'array':3536C 'articl':139C,171C,180C 'ask':2246C,2380C,2818C 'assembl':2570C 'asset':2659C,2665C 'assign':3845C 'asynchroni':980C 'attend':16B,162C 'attitud':806C 'attr':2169C 'attribut':1521C 'audienc':1820C 'avail':1071C,1097C,1862C 'avoid':1540C 'away':213C,403C,1825C,3093C 'awesom':937C,940C,2901C,3392C,3891C 'awhil':3337C 'b':3451C,3973C,3983C,3990C 'back':1450C,1573C,2707C,3338C,3423C,3475C 'backend':1908C 'backstori':3179C 'backward':3474C 'bad':3643C 'ball':4704C 'bank':321C 'base':1153C,1518C,3612C 'basic':2778C,2866C,2916C,4420C 'beal':4905C 'beauti':2004C 'becom':1112C,1122C,3101C,3107C,3998C,4046C,4115C 'beforemodel':3546C 'behavior':557C,2257C,2281C,2340C 'behind':98B,3111C 'belong':768C,1523C,4446C 'benefit':1321C,4409C 'berri':4883C 'besid':201C,2824C 'best':702C,3278C 'beta/release':675C 'better':827C,1860C,1913C,2580C,3955C,4602C 'big':2306C 'bigger':4178C 'bind':2145C,2168C 'bind-attr':2167C 'birth':2454C 'bit':471C,2194C,3354C,4171C 'bleed':2468C,2539C 'block':2780C 'blog':4686C 'blood':4567C 'book':3770C,3863C 'boost':1402C,2050C 'bootstrap':2330C 'born':2544C,4439C,4561C 'bother':4168C 'box':1685C 'brave':1810C 'break':4011C,4040C,4053C 'breakag':4111C,4156C 'broccoli':1225C,1241C,1286C,1324C,1366C,2605C,4771C 'broken':4368C 'brown':2728C,4856C 'browser':434C,1553C,3764C,3766C,3781C,4094C,4233C 'browserland':4217C 'brunch':2029C,2041C 'bryn':4824C 'bug':687C,714C,823C,922C,2590C 'build':609C,1047C,1092C,1221C,1242C,1273C,1319C,1326C,1349C,1376C,1902C,2044C,2123C,2297C,2302C,2323C,2573C,2597C,2602C,2779C,2835C,4019C,4047C,4768C 'built':453C,524C,1905C 'button':3476C 'buzz':4523C,4648C 'bye':2102C 'bypass':1624C 'byproduct':2551C 'c':3455C 'cach':981C,1114C,1145C,1164C,1201C 'call':1728C,2639C,3241C 'came':4292C 'canari':705C,4159C 'capabl':919C,929C,4385C 'captur':181C 'care':877C 'carv':2772C 'case':158C,1733C,3025C,4345C 'caught':2815C,2974C 'centric':3041C 'challeng':474C,2948C 'chan':4680C 'chanc':4243C 'chang':537C,1334C,1352C,1435C,2285C,2339C,3566C,3746C,3817C 'channel':676C,699C 'chantastic.io':4682C 'chantastic.io/emberconf2014/)':4681C 'charact':2954C 'chart':3799C 'check':3551C 'checkout':3311C 'cheer':2757C 'child':2331C,2463C 'children':4854C 'choic':1370C,2601C,3434C,3562C 'choos':1311C 'chore':492C 'christoph':4871C 'ciao':4611C 'clap':2986C 'class':1520C,2265C,2719C 'cleanup':1251C 'clear':1981C 'cli':2457C,2460C,2547C,2623C,4844C 'click':3254C 'client':1109C,1142C,1169C,1173C,1216C 'client-serv':1141C 'clone':2144C 'close':3345C 'closer':4116C 'code':53B,521C,817C,1581C,3664C,3899C,4587C 'codebas':795C,925C 'collect':2924C,3827C,3848C,4646C 'combin':93B,198C,2415C 'come':760C,2051C,2524C,2609C,3867C 'comfort':2535C 'comment':4623C 'commit':816C,2918C 'common':199C,330C,408C,721C,832C,857C,913C,1738C,1851C,4595C 'communic':1214C,2424C 'communiti':43B,67B,102B,632C,653C,728C,803C,870C,964C,972C,1394C,1743C,1773C,1787C,2216C,2235C,2450C,2885C,4145C,4200C,4284C,4291C,4305C,4405C,4417C,4454C,4496C,4527C,4540C,4557C,4662C 'compil':3932C,4131C 'complet':3840C 'complex':317C,394C,491C,506C,1534C,1602C,2395C,2586C,3616C 'compon':500C,554C,574C,597C,611C,1526C,1587C,1693C,1858C,2241C,2252C,2304C,2311C,2326C,2332C,2355C,2392C,2435C,2446C,4790C 'compos':1363C,4451C,4542C 'composit':1956C,2310C 'comput':1050C,1062C 'conceiv':2465C 'concept':387C,551C,1596C,3064C,3136C,4247C,4479C 'conclud':774C 'condit':3535C 'confer':61B,91B,164C,187C,4266C 'confirm':3751C 'conflict':4461C 'connect':40B,2894C 'consid':1100C,2248C,3702C 'consider':1389C 'consist':1073C,1094C,2398C,3922C 'contain':2432C,2567C,3167C,3460C,3514C 'context':207C,563C,1490C 'contract':1179C 'contribut':617C,619C,709C,751C,1390C,2444C,4196C,4741C 'contributor':4548C 'control':242C,2563C,3009C,3028C,3040C,3049C,3073C,3082C,3395C,4864C,4887C 'controller-centr':3039C 'convent':219C,382C,429C,571C,812C 'convergent/divergent':4870C 'convinc':3024C 'copi':2825C 'copious':2589C 'core':646C,741C,4286C 'correct':952C,3578C 'could':304C,2183C 'countri':4565C 'coupl':1595C,1766C,2243C,2559C 'crazi':1419C 'creat':194C,481C,2250C,2478C,2829C 'cri':2988C 'critic':4087C 'css':1517C,1672C,2913C 'currentroutenam':3264C 'curriculum':2774C,2922C 'custom':3487C 'cycl':1406C,3807C,3964C,4045C,4098C 'd':1188C,3459C,3587C,4276C,4629C 'd3':514C 'dale':4720C 'data':486C,517C,973C,978C,991C,1022C,1086C,1106C,1117C,1144C,1154C,1163C,1182C,1199C,1954C,1960C,2322C,4183C,4753C,4808C 'date':1338C 'day':1793C,4714C,4830C 'decid':749C,1818C 'default':231C,334C,3962C 'defin':2411C,3520C 'deliv':531C 'delta':3993C,4114C 'demonstr':2360C 'depend':539C,1683C,3057C,3429C 'describ':3466C 'design':438C,3442C,4135C 'detail':623C,3590C 'devari':2727C,2770C,2792C,2847C,2917C,2963C,2976C,2991C,4855C 'develop':51B,77B,101B,225C,869C,1035C,1405C,1417C,1742C,1798C,2319C,2390C,2503C,2718C,2747C,2762C,2783C,3783C,3909C,3925C,3943C,4004C,4084C,4089C,4199C,4304C,4416C 'didn':4347C 'differ':533C,1752C,1830C,1833C,2113C,2712C,2854C,2995C 'direct':445C,1429C,1489C,1665C,1698C,4793C 'disabl':3763C 'disc':1209C 'discov':2877C 'distract':115C 'distribut':1049C,1061C 'divers':4453C 'doc':3268C 'document':1997C,3734C 'doesn':4435C 'dom':2124C,2907C 'done':1515C,1921C,2471C 'dr':635C 'dragon':1016C 'drink':4437C 'driven':1155C 'dynam':2321C,2836C 'e':3472C 'eak':2476C,2485C,2554C,2618C,2690C 'easi':643C,1003C,1026C,4733C 'easier':3144C 'echo':2643C 'edg':2469C,2540C 'editor':4078C 'edward':4784C 'ef4.github.io':4787C 'ef4.github.io/ember-animation-demo/#/title-slide)':4786C 'effici':209C,228C 'effort':2075C 'element':2292C 'els':1648C 'email':665C 'ember':100B,240C,256C,455C,499C,596C,678C,727C,971C,990C,1021C,1393C,1499C,1544C,1772C,1819C,1953C,2001C,2028C,2215C,2234C,2299C,2325C,2449C,2451C,2456C,2459C,2473C,2482C,2499C,2546C,2622C,2699C,3130C,3141C,3176C,3201C,3226C,3320C,3363C,3378C,3494C,3582C,3652C,3657C,3879C,4144C,4158C,4290C,4495C,4526C,4614C,4638C,4727C,4743C,4752C,4782C,4789C,4807C,4843C,4850C,4879C,4902C 'ember-c':2458C,2545C,2621C 'ember-flow':3493C,3581C 'ember-qunit':3129C,3225C,3362C 'ember-test':3200C 'ember.component':1654C,1703C 'ember.js':66B,80B,222C,384C,1866C,2811C,2840C,3120C,4607C,4822C 'embercamp':7B 'emberconf':3A,17B,846C,4650C,4653C,4656C,4668C,4676C,4684C,4692C,4699C,4708C,4716C 'emberconf.com':4711C,4812C 'emberconf.com/images/slides/2014_jmack.pdf)':4811C 'emberconf.com/schedule.html)':4710C 'emberconf2014':2073C 'embrac':4862C 'emphas':4279C 'enabl':670C,4128C 'encapsul':505C,1670C 'end':1790C 'enforc':3403C,3542C 'engrain':4492C 'enjoy':1130C 'enough':4000C 'entir':4546C 'enumer':3841C 'equal':71B 'eric':4882C 'erik':4823C 'es6':2696C,3957C,4150C 'especi':479C,1885C 'essenti':3603C 'etc':3736C 'ethic':961C 'evalu':4021C,4049C 'even':1353C,1481C,4460C 'event':1554C,1566C,1576C,1584C,1593C,3407C 'eventnam':2418C 'eventu':1079C 'everi':150C,288C,1457C,3448C 'everyon':1422C,3373C 'everyth':4059C 'evolut':3884C,3936C,3966C 'evolv':3366C,3381C,3913C 'exampl':1689C,1926C,2269C,3285C,3415C,3503C,3934C 'exercis':4229C 'exist':2337C 'expect':1007C 'expens':1781C 'experi':58B,348C,485C,534C,1884C,1933C,2015C,2510C 'explain':2905C 'expos':719C,3805C 'express':874C 'extend':3505C,4613C 'extens':2419C,3765C,3886C,4067C,4122C 'extensiblewebmanifesto.org':4069C 'facet':4449C 'fact':3740C 'fairi':3219C 'famili':4547C,4615C 'familiar':3778C 'far':580C 'fast':797C,2008C,2107C,3624C,3626C,3631C,4009C 'fastest':1385C 'faulkner':4785C 'featur':254C,671C,691C,712C,820C,3106C,3113C 'feedback':4074C 'feel':1495C 'felt':2534C 'file':543C,1235C,1291C,1331C,1361C,2927C 'filenam':2660C 'fillin':3255C 'final':3471C 'find':89B,147C,545C,856C,1849C,3256C 'findwithassert':3257C 'fine':1839C 'fingerprint':2653C 'first':809C,3731C,4484C 'fish':4179C 'fix':685C 'flag':672C,3114C 'flame':3798C 'flexibl':1037C,1969C 'flight':4249C 'florenc':4839C 'flourish':4406C 'flow':232C,244C,339C,412C,1431C,1473C,3396C,3406C,3410C,3420C,3440C,3443C,3488C,3495C,3521C,3544C,3550C,3553C,3583C,4891C 'fnd.io':284C,285C,1922C,1923C,1989C 'focus':1991C,2629C,3914C 'folder':1239C 'folk':1834C 'foo':4835C 'food':2898C 'foodbank':2896C 'fool':891C 'forget':3309C 'forgot':1126C 'form':2271C,2284C 'fortun':13B 'forward':1398C,2096C,3221C,3389C,4757C 'found':688C,968C,1962C,2935C 'fps':3629C 'fragment':2125C 'framework':30B,84B,223C,436C,938C,2812C,4509C,4538C 'freakish':1424C 'frequenc':2376C 'fri':4181C 'friend':885C,4327C,4336C,4340C,4354C 'fun':1776C 'function':1263C,3506C 'funni':3188C 'futur':582C,587C,2705C,4137C 'gain':25B,38B,2089C 'gather':3739C 'gave':1967C 'general':616C,730C,881C 'generat':1374C,4818C 'genuin':68B,779C 'get':226C,325C,549C,627C,3281C,3777C 'github':2929C 'github.com':2440C,3325C,3341C,3497C,4674C,4841C 'github.com/emberjs/website/pull/1401)':3324C 'github.com/emberjs/website/pull/610/files),':3340C 'github.com/instructure)':2439C 'github.com/nathanhammond/ember-flows);':3496C 'github.com/rpflorence/talk-emberconf-2014)':4840C 'github.com/zurt/notes/blob/master/emberconf-2014.markdown)':4673C 'give':1034C,1436C,2453C,2706C,4240C 'given':738C,2295C 'global':3250C 'go':1449C 'goal':1089C,1661C,1757C,2172C,2363C,3673C,4596C 'good':658C,1088C,1549C,1688C,1899C,2101C,2268C,2344C,2362C,2522C,2650C,2679C,2882C,2941C,3672C,3760C,4027C,4062C 'good-by':2100C 'gradual':3928C 'great':622C,1881C,3135C,3502C,3594C 'grok':357C 'grokk':3576C 'ground':858C,914C,1852C 'group':49B,4532C 'grow':4193C 'grunt':1314C,4765C 'guid':3314C,3322C,3336C,3394C,4881C 'guy':2222C 'hacker':4545C 'hammond':4893C 'handlebar':2118C 'handler':1567C,1577C 'happen':1012C,4165C 'happi':3181C,3622C,4899C 'hard':976C,1043C,2220C,3102C,3124C 'hash':2657C,2669C 'head':166C,196C,205C,1938C 'heartfelt':2752C 'hello':2105C 'help':630C,649C,651C,800C,2423C,2636C,2944C,3376C,4403C 'helper':2165C,3209C,3240C,3251C,3275C 'herman':4694C 'hermanradtke.com':4697C 'hermanradtke.com/2014/03/27/emberconf-2014.html)':4696C 'hey':883C,895C 'heyjin':4734C 'hide':2582C 'high':764C,2766C 'higher':1096C 'hoc':4520C 'honest':142C 'hook':1598C,2345C,3539C 'hope':3574C 'howev':998C,1744C 'html':1671C,2912C 'htmlbar':2053C,2091C,2109C,2115C,2119C,2174C,4814C 'huge':734C 'human':879C,4374C 'hung':2964C 'hungri':4207C 'hurt':931C 'ic':2349C,2353C 'ic-menu':2352C 'ic-tab':2348C 'idea':659C,948C,1550C,3761C,4489C 'identifi':305C,1971C 'igor':4758C 'imagin':2904C 'immedi':1111C,1460C 'import':236C,934C,4281C 'imposs':4732C 'impress':280C,2960C 'improv':3232C,4517C 'includ':132C 'inclus':1642C 'increas':2211C 'indic':3721C 'info':3271C 'inform':2334C 'initi':3317C 'inject':310C,3508C,3555C 'injecttesthelp':3244C 'input':2273C,2291C 'insert':3237C,3829C 'insid':4745C 'inspir':2997C 'instanc':1655C,3078C 'instead':2126C,3822C 'instructur':2438C 'integr':1301C,3216C 'interpret':3974C,3984C 'interweb':835C 'introduc':921C,4260C 'invent':3919C,4423C 'inventori':3452C 'invers':2561C 'invest':422C,2208C 'involv':628C,3374C,4092C 'irc':4620C 'irrelev':1565C 'isn':4360C 'isol':556C,3369C 'issu':3080C,4640C 'iter':3835C,4515C 'itun':1869C,1948C,2018C,4805C 'jackson':4748C 'janki':1410C,1541C 'javascript':1379C,1674C,1797C,2682C,2915C,3908C 'jeremi':4809C 'jesus':2981C 'jew':4432C 'jo':4772C 'job':1914C 'john':4794C 'johnkpaul.github.io':4798C 'johnkpaul.github.io/presentations/emberconf/components-transclude-directives/)':4797C 'jsbin.com':3288C,3291C,3294C,3297C,3300C,3303C 'jsbin.com/cahuc](http://jsbin.com/cahuc/1/edit?html,js,output)':3290C 'jsbin.com/kilej](http://jsbin.com/kilej/3/edit?html,js,output)':3302C 'jsbin.com/numof](http://jsbin.com/numof/9/edit?html,js,output)':3296C 'jsbin.com/qifon](http://jsbin.com/qifon/5/edit?html,js,output)':3293C 'jsbin.com/suteg](http://jsbin.com/suteg/7/edit?html,js,output)':3287C 'jsbin.com/witut](http://jsbin.com/witut/7/edit?html,js,output)':3299C 'justin':4703C 'k':4795C 'katz':4722C 'keep':3923C 'key':4118C 'keyev':3258C 'keynot':202C,4718C 'kick':1316C 'kid':2745C,2785C,2805C,2817C,2857C,2887C,2909C,2949C,2973C 'kim':4735C 'kiss':2098C 'kit':2475C,2501C 'know':901C,1158C,1176C,1245C,1717C,2861C,3596C,3950C,4349C 'knowledg':27B 'known':290C 'knows/finds':2565C 'kris':4825C 'kurt':4671C 'lack':206C 'land':4215C 'languag':4582C 'larg':1358C,2134C,2303C 'last':8B,1336C 'later':282C 'lean':2312C 'learn':184C,425C,1843C,2863C 'leas':2230C,4550C 'leav':1256C 'lectur':1055C 'left':945C,4663C 'less':1032C 'level':754C 'liberti':192C 'librari':512C,1243C,2358C 'lifecycl':3910C 'like':322C,513C,604C,882C,1084C,1120C,1189C,1383C,1425C,1613C,1651C,1760C,1856C,2166C,2787C,2806C,2978C,3115C,3361C,3547C,3588C,3637C,3730C,4006C,4182C,4277C,4477C,4630C 'likewis':4324C 'limit':1466C,2150C 'linear':3457C 'link':1458C,2663C,4635C 'liss':4773C 'list':666C,2135C,3447C,3456C 'listen':1561C,1590C 'littl':1228C 'live':826C,1078C,1236C,2536C 'll':1842C 'load':3711C,3732C 'local':982C,1207C 'lock':1030C,1039C 'logic':312C 'login':3419C 'long':2721C 'look':1397C,2095C,3388C,3717C,3836C 'loop':3824C,4014C,4075C 'lost':3646C 'love':770C,828C,836C,2227C,4553C 'm':903C,1711C,2094C,3387C,3639C 'macdonald':4672C 'mack':4810C 'mad':2788C 'made':2077C,2993C,3435C,4365C 'madhatted.com':3882C,4907C 'madhatted.com/2014/3/28/via-emberconf-performance-in-ember-apps)':3881C,4906C 'magic':2799C,2808C,2841C 'make':641C,824C,889C,1492C,1897C,2710C,2852C,3138C,3560C,3620C,3843C,4598C,4729C 'malan':4737C 'manag':314C,411C,1161C,1197C,3030C 'mani':462C,463C,1270C,2496C,2756C 'mark':3713C 'markdown':2926C,4670C 'markup':2122C,2160C 'match':174C 'matchneer':4866C 'math':1057C 'mathemat':1131C 'matthew':4904C 'may':104C,172C,1749C,2031C,2399C,3059C 'md5':2656C 'mean':4898C 'measur':2372C,3689C,3729C 'media':1895C,1949C 'meiklejohn':4872C 'member':743C 'memori':1204C 'mention':2932C,3857C 'menu':2354C 'mergetre':1279C 'metamorph':2099C,2133C 'method':1280C,2408C,2422C,2431C,3481C 'methodolog':3737C 'michael':4679C 'micro':2357C 'micro-librari':2356C 'might':4333C,4390C 'millisecond':3687C 'minor':4192C,4442C 'misnom':1638C 'miss':6B,106C,4126C 'mixin':1951C 'modal':1615C,1630C 'model':289C,1947C,1958C,3056C,3077C,3926C,4800C 'modern':4767C 'modif':3462C 'modifi':1337C 'modul':1234C,1362C,2697C,3958C,4151C,4209C,4238C 'moment':2800C,2970C 'move':910C,4008C 'mr':3010C,4860C 'much':840C,1128C,2137C,3143C,4501C 'multipl':1198C 'music':1870C 'must':2612C 'name':1609C,1748C,2409C 'namespac':3248C 'nathan':4892C 'nativ':2324C,4581C 'natur':1497C 'navig':1444C 'near':2583C 'need':898C,1575C,1582C,2163C,2260C,2405C,2648C,2677C,3359C,3790C,4033C 'net':401C 'netscap':3894C 'network':3767C 'new':195C,690C,711C,1620C,2479C,2674C,3036C,3054C,3119C,3166C,3313C,4104C,4219C 'newest':1369C,3261C 'next':363C,3977C,4817C 'next-gener':4816C 'nice':2989C 'nightmar':2578C 'node':3464C,3470C 'note':92B,133C,4669C,4677C,4685C 'notes/summaries':4655C 'notic':372C,2687C,4141C 'notif':3818C 'nudg':440C 'number':3533C 'object':299C,988C,3510C,3516C,3554C,3851C 'offend':4313C,4334C 'offici':4878C 'often':1033C 'oh':4050C 'ok':905C 'old':2744C 'one':269C,528C,771C,1005C,1185C,1506C,1568C,1644C,2228C,3933C,4138C,4554C 'onset':4263C 'onto':696C 'open':3888C 'opinion':2520C 'opt':3946C,3952C 'opt-in':3945C 'opt-out':3951C 'optim':3796C 'option':2279C,3409C,3427C 'order':2147C 'organ':338C 'other':808C,932C,956C,2998C,4471C,4483C 'outlet':1610C 'own':3004C 'packag':1282C,3203C 'page':467C,2831C,2838C,3669C,3690C,3710C,3716C 'pain':2542C,3355C,3383C,4194C 'param':1619C,3006C,3019C,3035C,3090C,3118C 'parent':2335C 'part':1482C,3658C 'parti':511C 'passion':72B,780C 'past':2827C,3151C 'patch':695C 'path':3182C,3458C,3528C,3531C,3567C 'pattern':2156C 'paul':4796C 'pave':2491C 'peek':600C 'penner':4846C 'peopl':75B,789C,825C,941C,2879C,2895C,4456C,4534C 'perceiv':3698C 'percept':2616C 'perform':2049C,2139C,2212C,3619C,3668C,3694C,3786C,3795C,3813C,3821C,3877C,4900C 'perhap':1171C,1202C,1312C,1681C,1778C,1840C,1910C,2654C,2684C,3052C,3276C 'permut':3450C 'persist':974C,4184C 'person':2204C 'perspect':1149C 'phase':848C 'pick':4657C 'pipelin':2603C 'place':2627C 'platform':34B,1937C,4426C,4591C,4603C 'play':4397C 'pleas':886C,4621C 'pluck':3157C 'plugin':1266C,1271C,3605C 'plugin-':3604C 'podium':2646C 'point':3068C,4381C 'poke':1775C 'polit':951C 'polyfil':3931C,4130C 'possibl':2066C,2737C 'post':3872C,4519C,4626C 'pour':4506C 'power':568C 'pr':3318C 'practic':4307C 'premis':1018C 'present':112C,151C,177C,270C,281C,308C,620C,1943C,3186C,3416C,3491C,4713C 'pretti':516C 'price':765C 'priceless':723C 'primit':2181C,3055C,4127C 'problem':977C,1027C,1044C,1146C,2489C,2558C,2569C,2576C,2588C,2596C,2608C,2675C,3046C,3617C 'problemat':3806C 'process':1342C 'product':210C,229C,370C,416C,1993C,2009C,2022C 'profession':4544C 'profit':26B 'progress':3316C 'project':783C,793C,1023C,2038C,2055C,2191C,2238C,2464C,2483C,2486C,2555C,2891C,3132C,3213C,3490C,3584C 'promis':2082C 'properti':3050C,3524C,3816C,3832C,3852C 'prove':2733C 'proven':265C 'provid':257C,332C,385C,621C,1427C,1487C,2002C,2386C,2397C,2899C,3676C 'push':3895C 'put':955C,4245C 'queri':1618C,1894C,3005C,3018C,3034C,3089C,3117C 'query-param':3088C 'query-params-new':1617C,3033C,3116C 'question':2244C 'quick':1124C 'quit':1751C,1809C 'qunit':3131C,3184C,3227C,3364C 'race':4443C,4569C 'radtk':4695C 'rail':4661C 'rather':1995C,2327C 're':844C,1046C,1341C,1795C,2152C,3810C,3918C,4221C,4338C,4372C,4422C,4559C 're-inv':3917C,4421C 're-process':1340C 're-rend':2151C,3809C 'read':1248C,1249C,3284C 'readi':3718C,3735C 'real':2506C,2526C 'realli':589C,1716C,3358C,4476C 'receiv':1053C,1184C,2754C 'recip':529C,2030C 'record':3705C 'recurs':2149C 'reduc':2400C 'redux':3323C 'reefpoints.dockyard.com':4666C 'reefpoints.dockyard.com/2014/03/17/emberconf-picks-ups-where-the-rails-community-left-off.html)':4665C 'refer':3776C 'refresh':1136C 'regard':2296C 'regret':4391C 'relat':1059C 'relationship':983C 'releas':698C,2068C 'religi':4431C 'remain':3110C 'rememb':1226C,3654C,3892C 'remot':1212C 'remov':2161C 'render':2153C,3802C,3811C 'repeat':3987C,4022C,4057C 'replacewith':3480C,3572C 'repositori':1294C 'repres':875C 'requir':2867C 'resolut':3062C 'resolv':2564C,3153C 'respect':4469C 'respond':1563C 'respons':3679C,3699C 'result':1345C,2035C,2688C,4412C 'reus':559C,1627C 'reusabl':610C,1679C,2239C 'revolut':3906C 'reward':420C 'rid':326C 'right':444C,1076C,2842C,4369C 'rise':949C 'rival':2013C 'robert':4747C 'roll':1676C 'room':1257C 'rout':253C,275C,295C,331C,431C,1514C,1537C,3401C,3454C,3478C,3527C,3530C,4888C 'router':251C,351C,390C,542C,1625C,3007C,3011C,3015C,3399C,3570C,4861C 'rule':4298C,4363C,4400C 'runner':1300C 'ryan':4838C 'sacrific':2202C,4502C 'sacrifici':758C 'safeti':1074C 'said':379C,2802C 'sandbox':3172C 'satisfi':374C 'say':143C,2104C,4310C,4321C,4328C,4356C,4387C 'scoop':4746C 'scope':3072C 'screen':238C,519C,1479C,1485C,1529C 'script':2131C 'search':302C,1867C,1932C,1994C,1998C,2010C,2016C 'second':1531C,3684C 'secur':664C 'see':3265C,3579C,3869C,4189C 'seem':3098C,4731C 'seen':4154C 'segment':109C 'selden':4826C 'select':1684C,2277C 'self':958C 'send':1105C 'sens':1439C,1467C,2198C 'sent':1165C 'serious':2074C 'server':1143C,1152C 'server-bas':1151C 'set':1261C,1305C,1359C,3169C,3831C,4462C 'settl':4524C 'setup':3235C 'setupfortest':3242C 'share':69B,450C,607C,2920C,3609C,4632C 'sheren':4688C 'shift':4162C 'ship':2092C,2505C,4002C,4020C,4048C 'show':62B,4232C,4468C 'signific':2201C 'silenc':1552C 'simpl':392C,1509C,3099C,3385C,4359C 'simpler':2180C 'simplic':2157C 'simplifi':3368C 'sinc':3195C 'singl':1513C,2626C,3449C,3748C 'sinkhol':328C,3814C 'site':1990C 'sketch':4678C 'skill':2768C 'slide':3189C 'small':1255C,3999C 'snappi':483C,3618C,3634C,3678C,4897C 'snapshot':3803C 'socket':1195C,1219C 'solut':1569C,1739C,2497C,2512C,2560C,2572C,2579C,2591C,2599C,2632C,3600C,3614C 'solv':994C,3048C 'someon':4309C,4433C 'someth':1098C,1647C,1844C,3360C,4311C,4329C,4388C 'sometim':4107C 'soon':2052C,3868C 'sound':2786C 'sourc':1900C,2142C,2571C,3889C,3898C 'speak':4316C,4350C 'speaker':127C,176C,1763C,1803C,3871C 'speakerdeck.com':4724C,4739C,4750C,4858C,4868C,4874C,4885C 'speakerdeck.com/cmeiklejohn/divergent)':4873C 'speakerdeck.com/coderberry/the-unofficial-official-ember-testing-guide)':4884C 'speakerdeck.com/devarispbrown/ember-is-for-the-children)':4857C 'speakerdeck.com/machty/emberconf-2014-mr-router-embraces-the-controller-alex-matchneer)':4867C 'speakerdeck.com/rwjblue/contributing-to-ember)':4749C 'speakerdeck.com/simplereach/using-ember-to-make-the-seemingly-impossible-easy)':4738C 'speakerdeck.com/tomdale/emberconf-2014-keynote)':4723C 'specif':1260C,2264C,3405C 'speed':208C,227C,1401C,2088C,3670C,3691C,3728C 'speedi':1348C 'spent':2195C 'stab':3331C 'stabil':2598C 'stabl':3108C 'stage':2061C 'stale':1123C 'standard':4031C,4081C,4252C 'start':366C,3282C,3444C 'state':318C,341C,414C,3058C,3074C,3461C,3467C 'static.iamstef.net':4848C 'static.iamstef.net/ember_conf_2014.pdf)':4847C 'stef':4845C 'step':2177C,3437C,4037C 'sticki':3051C,3083C 'still':2057C,3352C,3912C,4061C 'stop':850C,2148C,4256C,4323C,4358C 'store':1200C,1205C,1208C,1213C,1871C,1874C,1965C,2021C,4803C 'stori':97B,2651C,2680C,2749C,3233C,3350C,3380C,4119C 'straight':3220C 'strategi':3522C 'strength':498C 'strict':3942C,3960C 'string':2128C 'strive':2848C 'stroke':1831C 'strong':333C 'student':2724C,2870C 'studi':3969C,3979C 'study/interpret':3997C 'stuff':2507C 'subject':3160C 'submit':2275C,2290C 'subscrib':661C 'subset':3661C 'success':2373C 'suit':2594C,3484C 'summari':636C 'super':1347C 'support':2404C,2893C 'sure':1713C 'system':1051C,1063C 'tab':2350C 'tackl':1764C,2487C 'tag':2132C 'take':212C,402C,854C,1812C,1824C,1928C,3092C 'taken':191C,3329C 'talk':119C,136C,718C,1722C,1941C,3875C,4029C,4187C,4616C 'talks.erikbryn.com':4828C 'talks.erikbryn.com/htmlbars-emberconf/)':4827C 'tapa':2026C 'target':1274C 'task':1299C,1315C 'teach':2715C,2739C,2776C,2911C 'team':495C,647C,742C,2187C,2379C,2442C,4287C 'tear':2759C 'techniqu':1746C 'tell':2184C 'templat':2307C,2316C,4820C 'terzic':4759C 'terzicigor.com':4761C 'terzicigor.com/talks/index.html#/)':4760C 'test':2317C,2593C,3121C,3139C,3163C,3175C,3178C,3202C,3217C,3229C,3239C,3286C,3321C,3335C,3349C,3370C,3379C,3393C,3756C,3794C,4880C 'text':2956C,3971C,3976C,3981C,3986C 'thank':2217C,2224C,2436C,2529C,2979C,3371C,4636C 'theme':2620C 'theori':1058C,1133C,3753C 'theoriz':3744C 'thing':1186C,1645C,1983C,2523C,3096C,3749C,4012C 'think':593C,716C,872C,1138C,1612C,1659C,1800C,3854C,4105C,4139C,4174C,4332C,4377C,4481C,4486C,4498C 'this.get':3549C 'thorough':2592C 'though':2062C 'thought':3012C,4634C 'thrive':4415C 'tighten':4072C 'time':364C,398C,423C,767C,1878C,2087C,2205C,2516C,3070C,3733C 'timezon':4574C 'titl':178C 'tl':634C 'today':2701C 'togeth':1013C,4133C,4514C 'tom':4719C 'tool':1220C,1304C,1372C,2011C,2045C,2480C,2574C,2600C,2942C,3784C 'topic':200C,273C,1767C,1807C,1815C,3866C,4258C 'touch':4271C 'toward':2210C,4470C 'track':798C 'trade':1068C 'trade-off':1067C 'transclud':4791C 'transclus':1634C,1639C,1667C,1700C 'transform':979C 'transit':315C,1409C,1477C,1538C,4779C 'transpil':4224C 'travers':3400C,3473C,4889C 'tree':1230C,1238C,1247C 'tri':639C,707C,4103C 'triggerev':3263C 'troll':829C,830C,837C 'true':344C 'turn':458C 'two':1502C,3996C 'type':297C,1503C,1896C,1961C,1972C,1986C,2274C,2726C,2875C,2947C 'typing.io':2936C,2937C 'ultim':2170C 'under':96B 'underprivileg':2856C 'understand':1418C,2120C 'unifi':3924C 'uniqu':3086C 'unit':3174C,3228C 'univers':3921C 'unknown':3127C 'unless':842C 'unlik':2117C 'unoffici':4877C 'updat':2146C,2662C 'upgrad':2577C 'upon':4518C 'url':262C,2005C 'us':4241C 'us4.campaign-archive1.com':4643C 'us4.campaign-archive1.com/?u=ac25c8565ec37f9299ac75ca0&id=3901835468&e=bc026993ad)':4642C 'use':168C,249C,287C,329C,360C,406C,427C,461C,503C,508C,553C,595C,704C,791C,1194C,1323C,1498C,1605C,1616C,1652C,1663C,1706C,1865C,1950C,1955C,2040C,2143C,2262C,2309C,2314C,2329C,2347C,2383C,2391C,2407C,2498C,2630C,2655C,2666C,2695C,2858C,2951C,3155C,3183C,3273C,3486C,3517C,3540C,3571C,3939C,3941C,4222C,4512C,4606C,4726C 'user':243C,484C,1437C,1462C,1476C,3432C,3621C 'userland':4129C 'util':1696C 'valu':148C,724C,735C,756C,2000C,4236C 'valuabl':570C,960C,2767C 'vaporwar':3065C 'vari':497C,4459C 'variabl':3032C 'varieti':863C 'various':562C,1959C,2488C,3426C 've':161C,190C,1454C,3197C,4153C,4205C,4212C 'veggi':1229C 'vendor':4095C,4234C 'version':2071C 'via':1217C 'video':451C,464C,3707C 'view':866C,2240C,4465C 'vine':447C 'visit':3253C 'visitor':3648C,3697C 'visual':487C,3693C 'wait':3640C 'watch':4766C 'way':409C,608C,2493C,2823C,3279C,3838C,4343C,4756C 'weak':1093C 'web':33B,56B,247C,323C,345C,477C,573C,614C,996C,1218C,1692C,1857C,1888C,1917C,1936C,2025C,2717C,2746C,2782C,2830C,2837C,3667C,3887C,3902C,4042C,4055C,4068C,4080C,4083C,4123C,4425C,4590C,4600C 'website/pull/610':3339C 'week':4639C 'weight':3532C,3725C 'welcom':584C,2702C 'well':745C,786C,841C,1276C,2790C,3215C,3483C,3573C,3704C,4370C 'whether':4427C 'whip':2613C 'whole':4203C 'wide':862C 'widget':1680C 'willinsertel':2341C 'willtransit':1606C 'within':867C,1302C,1511C,4493C 'without':1906C 'work':1191C,1289C,1736C,2188C,2221C,2470C,2888C,2990C,3650C,4016C,4132C,4535C 'workflow':4769C 'world':865C,4464C 'would':655C,773C,1006C,1082C,1463C,1695C,1704C,3071C 'wrangl':1601C 'wrap':1579C,4700C 'write':52B,1265C,3333C,4586C 'www.dropbox.com':4895C 'www.dropbox.com/s/02peoxevqwjz1bu/controlling%20route%20traversal.pdf)':4894C 'www.justinball.com':4706C 'www.justinball.com/2014/03/27/ember-conf-2014-wrap-up/)':4705C 'www.slideshare.net':4775C 'www.slideshare.net/jo_liss/broccoli-32911567)':4774C 'x':4834C 'x-foo':4833C 'year':9B,20B,2743C,3194C 'yehuda':4721C 'yet':3020C 'yield':415C,1657C	published	pixelhandler
11	* Entire application stack is tested with the integration tests\n* The database seed files can be used on the client to confirm rendered templates\n  have the expected data\n* Since no data is mocked only one set of JSON is maintained with tests, could be\n  actual production data\n* [Ember Test] helpers are promise driven and work well with [QUnit]\n* The testing suites and application code are written in the same language, in my case\n  the API is also written in JavaScript\n* The tests are executed with the built files, which boosts confidence in shipping\n  code to production\n* Async issues that come up in testing are most likely real bugs, missed in manual\n  browser testing\n* Automated test suite runs wickedly fast compared to other testing solutions like\n  Selenium (Capybara)\n\n## Screencast: Walkthrough of blog code repository and testing suites\n\nThis video runs about 20 minutes and covers the Ember.js blog application this\nwebsite is built with, [pixelhandler/blog]. Basically it's a walkthrough of my\nintegration tests for this blog. The content may be a bit rough, I was a bit tired :)\n\n<video poster="http://s3.amazonaws.com/cdn.pixelhandler.com/uploads/blog-app-integration-tests.png" width="640" height="400" controls>\n  <source src="http://s3.amazonaws.com/cdn.pixelhandler.com/uploads/blog-app-integration-tests.mp4" type='video/mp4' />\n</video>\n\n* [Video File](http://s3.amazonaws.com/cdn.pixelhandler.com/uploads/blog-app-integration-tests.mp4)\n\n## My Testing Strategy\n\nFor this application I had to take a leap of faith in the testing suites of the\nlibraries I chose to use. My main concern was that the components and features\nof the libraries can work together. So, I didn't write any unit tests as I'm\nmostly using the libary code as it was designed to be used.\n\nWhen tests break there may not be a direct relation between the broken tests and\na specific javascript module, but instead the failing test is an indicator of a\nbroken feature. So I wrote broken acceptance (feature) tests first as often as I\nwas able to. Then wrote the code to pass the acceptance test.\n\nHackers don't mock (if thay can avoid it), since the application is speaking JSON\nover HTTP... I chose a database that also speaks JSON, RethinkDB. Rethink can\nimport/export in JSON docs, which comes in handy to create a database seed script\nthat can be used on the client and the server testing suites.\n\n## Links\n\n* [Source code for the blog application][pixelhandler/blog]\n* [Express], build with [node.js]\n* [RethinkDB]\n* [Ember.js], client testing with [QUnit] and [Ember Test] integration test helpers\n* [Brunch]\n* [ember-cli]\n* API testing: [mocha], [supertest], [superagent]\n\n[pixelhandler/blog]: https://github.com/pixelhandler/blog\n[node.js]: http://nodejs.org\n[Express]: http://expressjs.com\n[RethinkDB]: http://www.rethinkdb.com\n[Ember.js]: http://emberjs.com\n[Brunch]: http://brunch.io\n[mocha]: http://visionmedia.github.io/mocha/\n[supertest]: https://github.com/visionmedia/supertest\n[superagent]: https://github.com/visionmedia/superagent\n[QUnit]: https://qunitjs.com\n[Ember Test]: http://emberjs.com/guides/testing/integration/\n[ember-cli]: http://ember-cli.com\n\n## UPDATE 6/21/14\n\nI've switched from using [Brunch] to using [ember-cli] so the demo in the video is not up to date with how I use the blog repository with [ember-cli]. The Makefile uses the `ember` command for builds, and launching dev server.	In preparation for an application I voluteered to build, I rebuilt my blog with\n[Ember.js] and [Express].  I used test-driven development (TDD) most of the time.\nMy goal was to focus on end-to-end (integration) testing for the entire\napplication stack. I did write request / response tests using [mocha] to work\nout the API layer for the application (built w/ [Express] and [RethinkDB])\n\nA few of the strengths resulting from this testing strategy...\n\n[Express]: http://expressjs.com\n[RethinkDB]: http://www.rethinkdb.com\n[Ember.js]: http://emberjs.com\n[mocha]: http://visionmedia.github.io/mocha/	end-to-end-javascript-testing-integration-tests-using-emberjs-test-helpers	End-to-end Javascript Testing: Integration Tests Using Ember.js Test Helpers	2014-03-13	2015-05-07 17:03:21.27818	2015-05-07 17:03:21.27818	1	'/cdn.pixelhandler.com/uploads/blog-app-integration-tests.mp4)':281C '/guides/testing/integration/':519C '/mocha/':99B,504C '/pixelhandler/blog':490C '/visionmedia/superagent':512C '/visionmedia/supertest':508C '20':239C '6/21/14':525C 'abl':389C 'accept':380C,398C 'actual':143C 'also':175C,422C 'api':70B,173C,482C 'applic':17B,56B,74B,101C,161C,246C,287C,411C,460C 'async':195C 'autom':212C 'avoid':407C 'basic':253C 'bit':270C,275C 'blog':25B,229C,245C,264C,459C,553C 'boost':188C 'break':347C 'broken':357C,374C,379C 'browser':210C 'brunch':478C,499C,531C 'brunch.io':500C 'bug':206C 'build':21B,463C,566C 'built':75B,185C,250C 'capybara':225C 'case':171C 'chose':304C,418C 'cli':481C,522C,536C,558C 'client':118C,448C,468C 'code':162C,192C,230C,337C,394C,456C 'come':198C,433C 'command':564C 'compar':218C 'compon':313C 'concern':309C 'confid':189C 'confirm':120C 'content':266C 'could':141C 'cover':242C 'creat':437C 'data':126C,129C,145C 'databas':110C,420C,439C 'date':547C 'demo':539C 'design':341C 'dev':569C 'develop':35B 'didn':324C 'direct':353C 'doc':431C 'driven':34B,151C 'ember':146C,473C,480C,515C,521C,535C,557C,563C 'ember-c':479C,520C,534C,556C 'ember-cli.com':523C 'ember.js':10A,27B,94B,244C,467C,497C 'emberjs.com':95B,498C,518C 'emberjs.com/guides/testing/integration/':517C 'end':2A,4A,48B,50B 'end-to-end':1A,47B 'entir':55B,100C 'execut':182C 'expect':125C 'express':29B,77B,90B,462C,493C 'expressjs.com':91B,494C 'fail':367C 'faith':295C 'fast':217C 'featur':315C,375C,381C 'file':112C,186C,278C 'first':383C 'focus':45B 'github.com':489C,507C,511C 'github.com/pixelhandler/blog':488C 'github.com/visionmedia/superagent':510C 'github.com/visionmedia/supertest':506C 'goal':42B 'hacker':400C 'handi':435C 'helper':12A,148C,477C 'http':416C 'import/export':428C 'indic':371C 'instead':365C 'integr':7A,51B,107C,260C,475C 'issu':196C 'javascript':5A,178C,362C 'json':136C,414C,424C,430C 'languag':168C 'launch':568C 'layer':71B 'leap':293C 'libari':336C 'librari':302C,318C 'like':204C,223C 'link':454C 'm':332C 'main':308C 'maintain':138C 'makefil':560C 'manual':209C 'may':267C,349C 'minut':240C 'miss':207C 'mocha':65B,96B,484C,501C 'mock':131C,403C 'modul':363C 'most':333C 'node.js':465C,491C 'nodejs.org':492C 'often':385C 'one':133C 'pass':396C 'pixelhandler/blog':252C,461C,487C 'prepar':14B 'product':144C,194C 'promis':150C 'qunit':156C,471C,513C 'qunitjs.com':514C 'real':205C 'rebuilt':23B 'relat':354C 'render':121C 'repositori':231C,554C 'request':61B 'respons':62B 'result':85B 'rethink':426C 'rethinkdb':79B,92B,425C,466C,495C 'rough':271C 'run':215C,237C 's3.amazonaws.com':280C 's3.amazonaws.com/cdn.pixelhandler.com/uploads/blog-app-integration-tests.mp4)':279C 'screencast':226C 'script':441C 'seed':111C,440C 'selenium':224C 'server':451C,570C 'set':134C 'ship':191C 'sinc':127C,409C 'solut':222C 'sourc':455C 'speak':413C,423C 'specif':361C 'stack':57B,102C 'strategi':89B,284C 'strength':84B 'suit':159C,214C,234C,299C,453C 'superag':486C,509C 'supertest':485C,505C 'switch':528C 'take':291C 'tdd':36B 'templat':122C 'test':6A,8A,11A,33B,52B,63B,88B,104C,108C,140C,147C,158C,180C,201C,211C,213C,221C,233C,261C,283C,298C,329C,346C,358C,368C,382C,399C,452C,469C,474C,476C,483C,516C 'test-driven':32B 'thay':405C 'time':40B 'tire':276C 'togeth':321C 'unit':328C 'updat':524C 'use':9A,31B,64B,115C,306C,334C,344C,445C,530C,533C,551C,561C 've':527C 'video':236C,277C,542C 'visionmedia.github.io':98B,503C 'visionmedia.github.io/mocha/':97B,502C 'volut':19B 'w':76B 'walkthrough':227C,257C 'websit':248C 'well':154C 'wick':216C 'work':67B,153C,320C 'write':60B,326C 'written':164C,176C 'wrote':378C,392C 'www.rethinkdb.com':93B,496C	published	pixelhandler
68	## Practical Example…\n\nAt the top level, where all `error` events bubble to, is the `ApplicationRoute`.\nAn `application_error` substate can be added using a combination of both an\n`application-error` route and `application-error` template. If you only display\nthe `error.message` and have no need to use a condition to set a title on the\ntemplate, then you could use the template alone (without an error route substate).\n\nThe application error template below handles any error thrown by a route that is\nnot handled by a child route's `error` substate.\n\nThe **app/router.js** file will not need any error routes added, they are built-in.\n\nSince the `model` is passed to the `setupController(controller, error)` hook,\nthe `error.message` property can be rendered to notify the user of the error.\n\n**app/templates/application-error.hbs**\n\n    <h1>Oops, the app is borked…</h1>\n    <p>{{model.message}}</p>\n\nAlternatively, when a substate is not used to display an error notification,\nyour application template can display any messages that you set on the\napplication controller; e.g. `errorMessage` and `errorDetails`.\n\n**app/templates/application.hbs**\n\n    {{#if errorMessage}}\n      <button class="error-message" {{action 'dismissErrorMessage'}}>\n        {{errorMessage}} {{errorDetails}}\n      </button>\n    {{/if}}\n    \n    {{outlet}}\n\nIf you want to vary the error notification text of the error substate template,\nuse the `setupController` hook to set a `title` property for the template.\n\nIn a route (below the application), e.g. the `PostRoute`, an error substate can\nbe used to branch the display of the title to differentiate between a **client**\nand **server** error like so:\n\n**app/templates/post-error.hbs**\n\n    <h1>{{title}}</h1>\n    <p>{{model.message}}</p>\n\nThe `title` attribute of the controller is used in the above template. It is\ncustomized depending on the error code.\n\n**app/routes/post-error.js**\n\n    import Ember from 'ember';\n    \n    export default Ember.Route.extend({\n      setupController(controller, error) {\n        let title = 'Oops, this post is borked…';\n        let code = error.code || error.get('code');\n        if (code) {\n          if (code >= 500) {\n            title = 'Oops, there was a server error…';\n          } else if (code === 404) {\n            title = "Opps, can't find this one…";\n          }\n          controller.set('title', title);\n        }\n        this._super(controller, error);\n      }\n    });\n\nSince the application template may be used for errors that you do not need to\ntransition to an `error` substate, the user will need a way to dismiss. An\naction `dismissErrorMessage` can be used to clear application error properties.\n\n**app/routes/application.js**\n\n    import Ember from 'ember';\n    \n    export default Ember.Route.extend({\n      errorMessage: null,\n      errorDetails: null,\n    \n      actions: {\n        dismissErrorMessage() {\n          this.controllerFor('application').setProperties({\n            'errorMessage': null,\n            'errorDetails': null\n          });\n        }\n      }\n    });\n\nThe `application_error` substate will be used to display any [500] errors, or\na [404] error. However, in the case of a specific client error like [400] or [422]\nthat your application should handle without making a transition, conditions will\nneed to be added to branch the behavior between using `error` substates and the\napplication `error` template.\n\nIf you use any nested routes, for example **admin/edit** and **admin/create**,\nyou can define specific error substates at that level in the route structure,\n(below the application's default error handing).\n\n**app/templates/admin/edit-error.hbs**\n\n    <h1>{{title}}</h1>\n    <p>{{model.message}}</p>\n\nNotice the template above is the same as the 'post-error.hbs' template. The post\n`error` template handles the display of non-admin errors; the "/admin/" directory\nis used for editing and creating resources.\n\nThe route hierarchy used in this example is below. When using the `error` substates\nyou do not need to add any routes to the *router.js* file. Error substates are\nbuilt into the [Ember.js] Router.\n\n**app/router.js**\n\n    import Ember from 'ember';\n    import config from './config/environment';\n    \n    const Router = Ember.Router.extend({\n      location: config.locationType\n    });\n    \n    Router.map(function() {\n      this.route('index', { path: '/' });\n      this.route('post', { path: '/:post_id' }, function () {\n        this.route('detail', { path: '/' });\n        this.route('comments');\n      });\n      this.route('admin', function () {\n        this.route('index');\n        this.route('create');\n        this.route('edit', { path: ':edit_id' });\n      });\n    });\n    \n    export default Router;\n\nTo assit with testing the `error` substates - I set the `PostController` of the\nbackend (API) to respond with an error. This is the repo for the API application:\n[blog-api] using a branch 'ember-jsonapi-resources-testing'. See the commented\ncode I used to send [error responses].\n\nI used the `setupController` hook to set a relevant `title` for the notification\nand used a console *warning* for a condition that should not be handled by a\ntransition. In an effort to build a solution for the desired user experience,\nit can be helpful to log the error conditions.\n\n**app/routes/admin/edit-error.js**\n\n    import Ember from 'ember';\n    \n    export default Ember.Route.extend({\n      setupController(controller, error) {\n        let title = 'Oops, this post is borked…';\n        let code = error.code || error.get('code');\n        if (code) {\n          if (code >= 500) {\n            title = 'Oops, there was a server error…';\n          } else if (code === 404) {\n            title = "Opps, can't find this one…";\n          } else if (code === 422) {\n            Ember.Logger.warn('Not expecting to handle 422 in an error substate');\n          }\n          controller.set('title', title);\n        }\n        this._super(controller, error);\n      }\n    });\n\nThe post form component sends an `update` action to persist changes via the Post\nresource endpoint.\n\n**app/templates/admin/edit.hbs**\n\n    <p><strong>Edit a Blog Post</strong></p>\n    {{form-post post=model isNew=model.isNew on-edit=(action "update")}}\n\nThe action is triggered after the user exists the field, this prevents a flood\nof updates from every keystroke - caused from binding a model property to an input.\n\n**app/components/form-post.js**\n\n    import Ember from 'ember';\n    import BufferedProxy from 'ember-buffered-proxy/proxy';\n    \n    export default Ember.Component.extend({\n      tagName: 'form',\n    \n      resource: Ember.computed('post', function() {\n        return BufferedProxy.create({ content: this.get('post') });\n      }).readOnly(),\n    \n      isNew: null,\n      isEditing: true,\n    \n      focusOut() {\n        if (!this.get('isNew')) {\n          this.get('resource').applyChanges();\n          this.set('isEditing', false);\n          let action = this.get('on-edit');\n          if (typeof action === 'function') {\n            action(this.get('post'), function callback() {\n              this.set('isEditing', true);\n            }.bind(this));\n          }\n        }\n      }\n      /* … */\n    });\n\nThe `admin.edit` route responds to the actions send by the form component. After\nthe API request is made successfully, the `callback` function, sent with the action,\nis called. Or, an error may be caught by the failed promise.\n\nIn the case of an error, the changes to the model are rolled back and the error\nresponse is handled by the route. It depends on the error code whether or not\na transition will be made to an `error` substate. When an error is not thrown by\na route's model hook, then a transition needs to be made explicitly via `catch`.\n\nIn the example below, it may be a bad user experience to transition away from the\nadmin form the user is editing - due to a client error (such as "Bad Request" [400],\nor an "Unprocessable Entity" [422]). Instead, error properties are set on the\napplication controller which results in a dismissible error notification.\n\n**app/routes/admin/edit.js**\n\n    import Ember from 'ember';\n    import ApplicationErrorsMixin from 'jr-test/mixins/application-errors';\n    \n    export default Ember.Route.extend(ApplicationErrorsMixin, {\n      model(params) {\n        return this.store.find('posts', params.edit_id);\n      },\n    \n      setupController(controller, model) {\n        this._super(controller, model);\n        controller.set('isEditing', true);\n      },\n    \n      actions: {\n        update(model, callback) {\n          return this.store.updateResource('posts', model)\n          .finally(function() {\n            if (typeof callback === 'function') {\n              callback();\n            }\n          })\n          .catch(function(error) {\n            model.rollback();\n            this.send('error', error);\n          }.bind(this));\n        },\n    \n        error(error) {\n          if (error.code === 422 || error.code === 400) {\n            this.handleApplicationError(error);\n          } else {\n            this.intermediateTransitionTo('admin.edit_error', error);\n          }\n        }\n      }\n    });\n\nSo that both the *admin/edit* and *admin/create* routes can use the same behavior,\nthe method `handleApplicationError` is defined in a mixin.\n\nThis mixin is used to parse the error responses and format error details.\n\n**app/mixins/application-errors.js**\n\n    import Ember from 'ember';\n    \n    export default Ember.Mixin.create({\n    \n      handleApplicationError(error) {\n        let details = this.handleUnprocessableEntities(error);\n        details = details || this.handleBadRequest(error);\n        this.controllerFor('application').setProperties({\n          'errorMessage': error.message,\n          'errorDetails': details || undefined\n        });\n      },\n    \n      handleBadRequest(error) {\n        if (error.code !== 400 || !error.errors.length) { return; }\n        // See https://github.com/cerebris/jsonapi-resources#error-codes\n        let errors = error.errors.filterBy('code', 105);\n        errors = errors.mapBy('detail');\n        return (!errors) ? '' : errors.join(' ');\n      },\n    \n      handleUnprocessableEntities(error) {\n        if (error.code !== 422 || !error.errors.length) { return; }\n        // See https://github.com/cerebris/jsonapi-resources#error-codes\n        let errors = error.errors.filterBy('code', 100);\n        let fields = errors.map(function(error) {\n          let paths = error.source.pointer.split('/');\n          let attr = paths[paths.length - 1].split('_');\n          attr = attr.map(function(str) {\n            return Ember.String.capitalize(str);\n          });\n          return attr.join(' ');\n        });\n        return (!fields) ? '' : 'Invalid fields: ' + fields.join(', ') + '.';\n      }\n    });\n\nFor the *admin/create* route no `error` substate template was needed. For handling\n[500] errors the parent application `error` substate will be used. And, for\nhandling [400] or [422] responses it makes sense to display the errors "in-context",\nwithout making a transition to a substate. The only reason the `admin.edit_error`\nsubstate uses the `admin/edit/error.hbs` template is to handle a [404] and a [500]\nresponse. That is not the case with the `admin.create` route; the parent substate,\n`application_error` will work just fine.\n\nNotice the naming convention used with ember-cli, the substates use a `.` period\nand `_` for the substate name and the templates use `/` and `-`. So, to transition\nto the application error substate use `application_error` like so:\n`this.intermediateTransitionTo('application_error', err)`, or to a nested substate:\n`this.intermediateTransitionTo('admin.edit_error', err)`.\n\n## Take-Aways…\n\nThe `ApplicationRoute` `error` action handler can be used to catch and handle\nvarious errors and delegate the notification of the errors to the\n`ApplicationController` and accompanying HTMLBars application template. Or, an\n`applicaton_error` substate with an `applicaton-error` template may handle\nroute `error` events.\n\nAlso, you may combine both `error` substates and `error` action handling strategies\nin a creative way my sending the `error` event when the error occurs as the result\nof another action; instead of by a model hook method, e.g. `model`, `beforeModel`,\n`afterModel`, etc.\n\nI favor the using `error` substates as the primary strategy for fault tolerance\nin an ember application. I also like the fact that the `error` action may be\nutilized creatively as a secondary strategy.\n\nIn the [Ember JSONAPI Resources] addon a [ErrorMixin] defines error types for:\n\n* `ServerError` - handles 50x\n* `ClientError` - handles 40x\n* `FetchError` (default failure) - handles 30x\n\nThe error objects thrown by a resource's `service` includes the error code.\nYou can use the `code` to determine how to present the error notification, use\nthe error type, or use the `error.name` property. The `error.code` the most specific.\n\nBased on the `error.code` the route `error` action can transition to a custom route\nto handle that specific error type. In the first example, a transition is made to\na `/not-found` route, that could have used an `intermediateTransitionTo` to keep\nthe URL unchanged.\n\nHowever, there is a catch when using a route's `error` action, by doing so the route\n`error` substates are not used. The second solution does not use use the\nroute `error` action. Instead, it uses route `error` substates with `error` templates.\n\nUsing the `error` substates allows the use of the `route-name_error` state and\nassociated `route-name-error` template. The `setupController` hook of the `*_error`\nroute receives objects: `controller` and `error` (as it's `model`). Using the route\n`error` substate to define properties for the error template is a good way to\ncustomize the display of the error notifications, depending on the error code.\n\nWhen the error is not thrown by one of the route model hooks, perhaps by a custom\n`action`, you can decide how to handle the error. If the error is recoverable\nperhaps set properties on the application controller for display by the application\ntemplate. Or, if the error is not recoverable perhaps fire the `error` event on\nthe route, e.g. `this.send('error', resp);`\n\n(One caveat - the current state of using an acceptance test for an error substate\nis that the test may fail. Any error may cause your test adapter to fail the test.\nSee [12791].)\n\nThe [ember-jsonapi-resources] addon uses custom error objects to make fault tolerance\nfirst class in your ember application.\n\n### Further Reading…\n\n- [Ember.js Loading and Error Substates](https://guides.emberjs.com/v2.2.0/routing/loading-and-error-substates/#toc_code-error-code-substates)\n- [JSON API Error Objects](http://jsonapi.org/examples/#error-objects-error-codes)\n- [JSONAPI::Resources Error Codes](https://github.com/cerebris/jsonapi-resources#error-codes)\n- [Rails Layouts and Rendering](http://guides.rubyonrails.org/layouts_and_rendering.html)\n- [Ember.js Acceptance Testing Issue](https://github.com/emberjs/ember.js/issues/12791#issuecomment-170675020)\n- [Ember.js Debugging](https://guides.emberjs.com/v2.2.0/configuring-ember/debugging/)\n\n[ErrorMixin]: https://github.com/pixelhandler/ember-jsonapi-resources/blob/master/addon/utils/errors.js\n[jr-test]: https://github.com/pixelhandler/jr-test\n[jr-test route.js]: https://github.com/pixelhandler/jr-test/blob/master/app/router.js\n[blog-api]: https://github.com/pixelhandler/blog-api/tree/ember-jsonapi-resources-testing\n[error responses]: https://github.com/pixelhandler/blog-api/blob/ember-jsonapi-resources-testing/app/controllers/api/v1/posts_controller.rb#L4-L14\n[500]: http://httpstatus.es/500\n[422]: http://httpstatus.es/422\n[404]: http://httpstatus.es/404\n[400]: http://httpstatus.es/400\n[Ember.js]: http://emberjs.com\n[ember-jsonapi-resources]: http://ember-jsonapi-resources.com\n[Ember JSONAPI Resources]: https://github.com/pixelhandler/ember-jsonapi-resources\n[Error Handling Guide]: https://github.com/pixelhandler/ember-jsonapi-resources/wiki/Error%20Handling\n[12791]: https://github.com/emberjs/ember.js/issues/12791	Handing data persistence operations between your Ember (client) application and\nAPI server requires fault tolerance. The app needs to notify users of relevant\nerror responses and how to recover from various API server error responses.\n\nHandling JSON API error responses for HTTP status codes 400, 404, 422, 500, 502,\n302, etc. should be first class in the application code.\n\nIn this article `error` actions will not be primarily used, instead the `error`\nsubstate of an `Ember.Route` will be used to respond to the errors. The `error`\naction will be used secondarily by sending an `error` action, `send('error')`,\nafter a failed update.\n\nThe [ember-jsonapi-resources] addon has a example "test" app, see [jr-test] which\nincludes example code for using `error` substates to handle various server\nresponses, i.e. [500], [400], [404], [422]. This article was first created as\ndocumentation for the addon see the [Error Handling Guide] for additional content.\n\n[jr-test]: https://github.com/pixelhandler/jr-test\n[500]: http://httpstatus.es/500\n[422]: http://httpstatus.es/422\n[404]: http://httpstatus.es/404\n[400]: http://httpstatus.es/400\n[ember-jsonapi-resources]: http://ember-jsonapi-resources.com\n[Error Handling Guide]: https://github.com/pixelhandler/ember-jsonapi-resources/wiki/Error%20Handling	emberjs-handling-failure-using-route-error-substates	Ember.js: Handling Failure Using Route `error` Substates	2016-01-19	2016-01-19 08:46:21.541538	2016-01-20 18:31:56.03479	1	'/400':182B,2086C '/404':178B,2082C '/422':174B,2078C '/500':170B,2074C '/admin':685C '/cerebris/jsonapi-resources#error-codes':1355C,1377C '/cerebris/jsonapi-resources#error-codes)':2023C '/config/environment':736C '/emberjs/ember.js/issues/12791':2109C '/emberjs/ember.js/issues/12791#issuecomment-170675020)':2037C '/examples/#error-objects-error-codes)':2016C '/if':375C '/layouts_and_rendering.html)':2030C '/mixins/application-errors':1226C '/not-found':1763C '/pixelhandler/blog-api/blob/ember-jsonapi-resources-testing/app/controllers/api/v1/posts_controller.rb#l4-l14':2070C '/pixelhandler/blog-api/tree/ember-jsonapi-resources-testing':2065C '/pixelhandler/ember-jsonapi-resources':2099C '/pixelhandler/ember-jsonapi-resources/blob/master/addon/utils/errors.js':2046C '/pixelhandler/ember-jsonapi-resources/wiki/error%20handling':193B,2105C '/pixelhandler/jr-test':166B,2052C '/pixelhandler/jr-test/blob/master/app/router.js':2059C '/proxy':1011C '/v2.2.0/configuring-ember/debugging/)':2042C '/v2.2.0/routing/loading-and-error-substates/#toc_code-error-code-substates)':2009C '1':1395C '100':1382C '105':1360C '12791':1979C,2106C '302':57B '30x':1692C '400':52B,140B,179B,596C,1193C,1277C,1349C,1436C,2083C '404':53B,141B,175B,496C,584C,910C,1472C,2079C '40x':1687C '422':54B,142B,171B,598C,921C,927C,1198C,1275C,1371C,1438C,2075C '500':55B,139B,167B,485C,580C,899C,1423C,1475C,2071C '502':56B '50x':1684C 'accept':1955C,2032C 'accompani':1573C 'action':71B,94B,103B,371C,539C,561C,945C,969C,972C,1042C,1049C,1051C,1067C,1086C,1247C,1551C,1602C,1623C,1661C,1740C,1787C,1808C,1901C 'ad':215C,296C,613C 'adapt':1973C 'add':713C 'addit':159B 'addon':115B,152B,1675C,1985C 'admin':682C,759C,1178C 'admin.create':1484C 'admin.edit':1062C,1282C,1461C,1542C 'admin/create':637C,1291C,1413C 'admin/edit':635C,1289C 'admin/edit/error.hbs':1466C 'aftermodel':1634C 'allow':1822C 'alon':258C 'also':1593C,1654C 'altern':333C 'anoth':1622C 'api':18B,39B,45B,787C,799C,803C,1075C,2011C,2062C 'app':24B,120B,329C 'app/components/form-post.js':999C 'app/mixins/application-errors.js':1319C 'app/router.js':288C,728C 'app/routes/admin/edit-error.js':872C 'app/routes/admin/edit.js':1215C 'app/routes/application.js':549C 'app/routes/post-error.js':458C 'app/templates/admin/edit-error.hbs':658C 'app/templates/admin/edit.hbs':954C 'app/templates/application-error.hbs':326C 'app/templates/application.hbs':363C 'app/templates/post-error.hbs':435C 'applic':16B,65B,210C,223C,228C,265C,346C,357C,408C,512C,546C,564C,571C,601C,624C,653C,800C,1206C,1338C,1427C,1489C,1524C,1528C,1533C,1575C,1652C,1920C,1926C,1999C 'application-error':222C,227C 'applicationcontrol':1571C 'applicationerrorsmixin':1221C,1230C 'applicationrout':208C,1549C 'applicaton':1579C,1585C 'applicaton-error':1584C 'applychang':1037C 'articl':69B,144B 'assit':774C 'associ':1833C 'attr':1392C,1397C 'attr.join':1405C 'attr.map':1398C 'attribut':440C 'away':1175C,1547C 'back':1112C 'backend':786C 'bad':1170C,1191C 'base':1733C 'beforemodel':1633C 'behavior':617C,1297C 'bind':992C,1059C,1269C 'blog':802C,957C,2061C 'blog-api':801C,2060C 'bork':331C,475C,889C 'branch':419C,615C,806C 'bubbl':204C 'buffer':1009C 'bufferedproxi':1005C 'bufferedproxy.create':1022C 'build':855C 'built':300C,723C 'built-in':299C 'button':366C 'call':1088C 'callback':1055C,1081C,1250C,1259C,1261C 'case':589C,1101C,1481C 'catch':1161C,1262C,1557C,1780C 'caught':1094C 'caus':990C,1970C 'caveat':1948C 'chang':948C,1106C 'child':282C 'class':62B,367C,1995C 'clear':545C 'cli':1503C 'client':15B,429C,593C,1187C 'clienterror':1685C 'code':51B,66B,128B,457C,477C,480C,482C,484C,495C,815C,891C,894C,896C,898C,909C,920C,1127C,1359C,1381C,1705C,1710C,1883C,2020C 'combin':218C,1596C 'comment':757C,814C 'compon':941C,1072C 'condit':244C,608C,842C,871C 'config':734C 'config.locationtype':741C 'consol':838C 'const':737C 'content':160B,1023C 'context':1449C 'control':310C,358C,443C,467C,508C,881C,936C,1207C,1239C,1242C,1848C,1921C 'controller.set':504C,932C,1244C 'convent':1498C 'could':254C,1766C 'creat':147B,692C,764C 'creativ':1607C,1665C 'current':1950C 'custom':452C,1745C,1872C,1900C,1987C 'data':9B 'debug':2039C 'decid':1904C 'default':464C,555C,655C,771C,878C,1013C,1228C,1325C,1689C 'defin':640C,1302C,1678C,1861C 'deleg':1563C 'depend':453C,1123C,1879C 'desir':860C 'detail':754C,1318C,1330C,1333C,1334C,1343C,1363C 'determin':1712C 'differenti':426C 'directori':686C 'dismiss':537C,1212C 'dismisserrormessag':372C,540C,562C 'display':234C,341C,349C,421C,578C,678C,1444C,1874C,1923C 'document':149B 'due':1184C 'e.g':359C,409C,1631C,1943C 'edit':690C,766C,768C,955C,968C,1046C,1183C 'effort':853C 'els':493C,907C,918C,1280C 'ember':14B,112B,184B,460C,462C,551C,553C,730C,732C,808C,874C,876C,1001C,1003C,1008C,1217C,1219C,1321C,1323C,1502C,1651C,1672C,1982C,1998C,2090C,2094C 'ember-buffered-proxi':1007C 'ember-c':1501C 'ember-jsonapi-resourc':111B,183B,1981C,2089C 'ember-jsonapi-resources-test':807C 'ember-jsonapi-resources.com':187B,2093C 'ember.component.extend':1014C 'ember.computed':1018C 'ember.js':1A,726C,2002C,2031C,2038C,2087C 'ember.logger.warn':922C 'ember.mixin.create':1326C 'ember.route':83B 'ember.route.extend':465C,556C,879C,1229C 'ember.router.extend':739C 'ember.string.capitalize':1402C 'emberjs.com':2088C 'endpoint':953C 'entiti':1197C 'err':1535C,1544C 'error':6A,31B,41B,46B,70B,79B,91B,93B,102B,105B,131B,155B,188B,202C,211C,224C,229C,261C,266C,271C,285C,294C,311C,325C,343C,369C,383C,388C,413C,432C,456C,468C,492C,509C,518C,528C,547C,572C,581C,585C,594C,620C,625C,642C,656C,674C,683C,706C,720C,778C,792C,820C,870C,882C,906C,930C,937C,1091C,1104C,1115C,1126C,1138C,1142C,1188C,1200C,1213C,1264C,1267C,1268C,1271C,1272C,1279C,1283C,1284C,1313C,1317C,1328C,1332C,1336C,1346C,1357C,1361C,1365C,1368C,1379C,1387C,1416C,1424C,1428C,1446C,1462C,1490C,1525C,1529C,1534C,1543C,1550C,1561C,1568C,1580C,1586C,1591C,1598C,1601C,1612C,1616C,1640C,1660C,1679C,1694C,1704C,1717C,1721C,1739C,1751C,1786C,1793C,1807C,1813C,1816C,1820C,1830C,1837C,1844C,1850C,1858C,1865C,1877C,1882C,1886C,1909C,1912C,1931C,1938C,1945C,1959C,1968C,1988C,2005C,2012C,2019C,2066C,2100C 'error-messag':368C 'error.code':478C,892C,1274C,1276C,1348C,1370C,1729C,1736C 'error.errors.filterby':1358C,1380C 'error.errors.length':1350C,1372C 'error.get':479C,893C 'error.message':236C,314C,1341C 'error.name':1726C 'error.source.pointer.split':1390C 'errordetail':362C,374C,559C,568C,1342C 'errormessag':360C,365C,373C,557C,566C,1340C 'errormixin':1677C,2043C 'errors.join':1366C 'errors.map':1385C 'errors.mapby':1362C 'etc':58B,1635C 'event':203C,1592C,1613C,1939C 'everi':988C 'exampl':118B,127B,195C,634C,700C,1164C,1756C 'exist':978C 'expect':924C 'experi':862C,1172C 'explicit':1159C 'export':463C,554C,770C,877C,1012C,1227C,1324C 'fact':1657C 'fail':108B,1097C,1966C,1975C 'failur':3A,1690C 'fals':1040C 'fault':21B,1647C,1992C 'favor':1637C 'fetcherror':1688C 'field':980C,1384C,1407C,1409C 'fields.join':1410C 'file':289C,719C 'final':1255C 'find':501C,915C 'fine':1494C 'fire':1936C 'first':61B,146B,1755C,1994C 'flood':984C 'focusout':1031C 'form':940C,960C,1016C,1071C,1179C 'form-post':959C 'format':1316C 'function':743C,752C,760C,1020C,1050C,1054C,1082C,1256C,1260C,1263C,1386C,1399C 'github.com':165B,192B,1354C,1376C,2022C,2036C,2045C,2051C,2058C,2064C,2069C,2098C,2104C,2108C 'github.com/cerebris/jsonapi-resources#error-codes':1353C,1375C 'github.com/cerebris/jsonapi-resources#error-codes)':2021C 'github.com/emberjs/ember.js/issues/12791':2107C 'github.com/emberjs/ember.js/issues/12791#issuecomment-170675020)':2035C 'github.com/pixelhandler/blog-api/blob/ember-jsonapi-resources-testing/app/controllers/api/v1/posts_controller.rb#l4-l14':2068C 'github.com/pixelhandler/blog-api/tree/ember-jsonapi-resources-testing':2063C 'github.com/pixelhandler/ember-jsonapi-resources':2097C 'github.com/pixelhandler/ember-jsonapi-resources/blob/master/addon/utils/errors.js':2044C 'github.com/pixelhandler/ember-jsonapi-resources/wiki/error%20handling':191B,2103C 'github.com/pixelhandler/jr-test':164B,2050C 'github.com/pixelhandler/jr-test/blob/master/app/router.js':2057C 'good':1869C 'guid':157B,190B,2102C 'guides.emberjs.com':2008C,2041C 'guides.emberjs.com/v2.2.0/configuring-ember/debugging/)':2040C 'guides.emberjs.com/v2.2.0/routing/loading-and-error-substates/#toc_code-error-code-substates)':2007C 'guides.rubyonrails.org':2029C 'guides.rubyonrails.org/layouts_and_rendering.html)':2028C 'hand':8B,657C 'handl':2A,43B,134B,156B,189B,269C,279C,603C,676C,847C,926C,1118C,1422C,1435C,1470C,1559C,1589C,1603C,1683C,1686C,1691C,1748C,1907C,2101C 'handleapplicationerror':1300C,1327C 'handlebadrequest':1345C 'handler':1552C 'handleunprocessableent':1367C 'help':866C 'hierarchi':696C 'hook':312C,394C,826C,1151C,1629C,1841C,1896C 'howev':586C,1776C 'htmlbar':1574C 'http':49B 'httpstatus.es':169B,173B,177B,181B,2073C,2077C,2081C,2085C 'httpstatus.es/400':180B,2084C 'httpstatus.es/404':176B,2080C 'httpstatus.es/422':172B,2076C 'httpstatus.es/500':168B,2072C 'i.e':138B 'id':751C,769C,1237C 'import':459C,550C,729C,733C,873C,1000C,1004C,1216C,1220C,1320C 'in-context':1447C 'includ':126B,1702C 'index':745C,762C 'input':998C 'instead':77B,1199C,1624C,1809C 'intermediatetransitionto':1770C 'invalid':1408C 'isedit':1029C,1039C,1057C,1245C 'isnew':964C,1027C,1034C 'issu':2034C 'jr':123B,162B,1224C,2048C,2054C 'jr-test':122B,161B,1223C,2047C,2053C 'json':44B,2010C 'jsonapi':113B,185B,809C,1673C,1983C,2017C,2091C,2095C 'jsonapi.org':2015C 'jsonapi.org/examples/#error-objects-error-codes)':2014C 'keep':1772C 'keystrok':989C 'layout':2025C 'let':469C,476C,883C,890C,1041C,1329C,1356C,1378C,1383C,1388C,1391C 'level':199C,646C 'like':433C,595C,1530C,1655C 'load':2003C 'locat':740C 'log':868C 'made':1078C,1135C,1158C,1760C 'make':605C,1441C,1451C,1991C 'may':514C,1092C,1167C,1588C,1595C,1662C,1965C,1969C 'messag':351C,370C 'method':1299C,1630C 'mixin':1305C,1307C 'model':304C,963C,994C,1109C,1150C,1231C,1240C,1243C,1249C,1254C,1628C,1632C,1854C,1895C 'model.isnew':965C 'model.message':332C,437C,660C 'model.rollback':1265C 'name':1497C,1513C,1829C,1836C 'need':25B,240C,292C,523C,533C,610C,711C,1155C,1420C 'nest':631C,1539C 'non':681C 'non-admin':680C 'notic':661C,1495C 'notif':344C,384C,834C,1214C,1565C,1718C,1878C 'notifi':27B,320C 'null':558C,560C,567C,569C,1028C 'object':1695C,1847C,1989C,2013C 'occur':1617C 'on-edit':966C,1044C 'one':503C,917C,1891C,1947C 'oop':327C,471C,487C,885C,901C 'oper':11B 'opp':498C,912C 'outlet':376C 'param':1232C 'params.edit':1236C 'parent':1426C,1487C 'pars':1311C 'pass':306C 'path':746C,749C,755C,767C,1389C,1393C 'paths.length':1394C 'perhap':1897C,1915C,1935C 'period':1508C 'persist':10B,947C 'post':473C,673C,748C,750C,887C,939C,951C,958C,961C,962C,1019C,1025C,1053C,1235C,1253C 'post-error.hbs':670C 'postcontrol':783C 'postrout':411C 'practic':194C 'present':1715C 'prevent':982C 'primari':1644C 'primarili':75B 'promis':1098C 'properti':315C,399C,548C,995C,1201C,1727C,1862C,1917C 'proxi':1010C 'rail':2024C 'read':2001C 'readon':1026C 'reason':1459C 'receiv':1846C 'recov':36B 'recover':1914C,1934C 'relev':30B,830C 'render':318C,2027C 'repo':796C 'request':1076C,1192C 'requir':20B 'resourc':114B,186B,693C,810C,952C,1017C,1036C,1674C,1699C,1984C,2018C,2092C,2096C 'resp':1946C 'respond':88B,789C,1064C 'respons':32B,42B,47B,137B,821C,1116C,1314C,1439C,1476C,2067C 'result':1209C,1620C 'return':1021C,1233C,1251C,1351C,1364C,1373C,1401C,1404C,1406C 'roll':1111C 'rout':5A,225C,262C,275C,283C,295C,405C,632C,649C,695C,715C,1063C,1121C,1148C,1292C,1414C,1485C,1590C,1738C,1746C,1764C,1784C,1792C,1806C,1812C,1828C,1835C,1845C,1857C,1894C,1942C 'route-nam':1827C 'route-name-error':1834C 'route.js':2056C 'router':727C,738C,772C 'router.js':718C 'router.map':742C 'second':1799C 'secondari':1668C 'secondarili':98B 'see':121B,153B,812C,1352C,1374C,1978C 'send':100B,104B,819C,942C,1068C,1610C 'sens':1442C 'sent':1083C 'server':19B,40B,136B,431C,491C,905C 'servererror':1682C 'servic':1701C 'set':246C,354C,396C,781C,828C,1203C,1916C 'setproperti':565C,1339C 'setupcontrol':309C,393C,466C,825C,880C,1238C,1840C 'sinc':302C,510C 'solut':857C,1800C 'specif':592C,641C,1732C,1750C 'split':1396C 'state':1831C,1951C 'status':50B 'str':1400C,1403C 'strategi':1604C,1645C,1669C 'structur':650C 'substat':7A,80B,132B,212C,263C,286C,336C,389C,414C,529C,573C,621C,643C,707C,721C,779C,931C,1139C,1417C,1429C,1456C,1463C,1488C,1505C,1512C,1526C,1540C,1581C,1599C,1641C,1794C,1814C,1821C,1859C,1960C,2006C 'success':1079C 'tagnam':1015C 'take':1546C 'take-away':1545C 'templat':230C,251C,257C,267C,347C,390C,402C,449C,513C,626C,663C,671C,675C,1418C,1467C,1516C,1576C,1587C,1817C,1838C,1866C,1927C 'test':119B,124B,163B,776C,811C,1225C,1956C,1964C,1972C,1977C,2033C,2049C,2055C 'text':385C 'this._super':507C,935C,1241C 'this.controllerfor':563C,1337C 'this.get':1024C,1033C,1035C,1043C,1052C 'this.handleapplicationerror':1278C 'this.handlebadrequest':1335C 'this.handleunprocessableentities':1331C 'this.intermediatetransitionto':1281C,1532C,1541C 'this.route':744C,747C,753C,756C,758C,761C,763C,765C 'this.send':1266C,1944C 'this.set':1038C,1056C 'this.store.find':1234C 'this.store.updateresource':1252C 'thrown':272C,1145C,1696C,1889C 'titl':248C,398C,424C,436C,439C,470C,486C,497C,505C,506C,659C,831C,884C,900C,911C,933C,934C 'toler':22B,1648C,1993C 'top':198C 'transit':525C,607C,850C,1132C,1154C,1174C,1453C,1521C,1742C,1758C 'trigger':974C 'true':1030C,1058C,1246C 'type':1680C,1722C,1752C 'typeof':1048C,1258C 'unchang':1775C 'undefin':1344C 'unprocess':1196C 'updat':109B,944C,970C,986C,1248C 'url':1774C 'use':4A,76B,86B,97B,130B,216C,242C,255C,339C,391C,417C,445C,516C,543C,576C,619C,629C,688C,697C,704C,804C,817C,823C,836C,1294C,1309C,1432C,1464C,1499C,1506C,1517C,1527C,1555C,1639C,1708C,1719C,1724C,1768C,1782C,1797C,1803C,1804C,1811C,1818C,1824C,1855C,1953C,1986C 'user':28B,322C,531C,861C,977C,1171C,1181C 'util':1664C 'vari':381C 'various':38B,135B,1560C 'via':949C,1160C 'want':379C 'warn':839C 'way':535C,1608C,1870C 'whether':1128C 'without':259C,604C,1450C 'work':1492C	published	pixelhandler
69	My Goals:\n\nA) In an (Ember CLI) addon - add PostCSS processing to my (Ember CLI) application's build (and utilize a few selected PostCSS plugins for conversion of upcoming CSS syntax for today's browsers). I am digging PostCSS! I'm very satisfied using next generation CSS syntax in my applications today.\n\nB) To move common styles out of various applications and into one single Ember CLI addon. (I still want to continue using PostCSS).\n\nI ran into a snag, the Ember CLI addon to process I used did not Just Work™ as I hoped.\n\nI have used Broccoli as a build pipeline for a JavaScript library, So I thought - "How hard could it be?"\n\nI found that it is not trivial. Fortunately, there are other developers who have already crossed this bridge. I found help in the [embercommunity.slack.com] chatrooms (#ember-cli and #need-help), [sign up here].\n\n[embercommunity.slack.com]: https://embercommunity.slack.com\n[sign up here]: https://ember-community-slackin.herokuapp.com\n\nThe question of "Where in the addon do I put my styles?" did confused me. I tried using `addon/styles/addon.css` then tried `app/styles/addon.css` vs. `app/styles/app.css`. What surpised my was that when I put styles into `addon/my-file.css` and processed it with `broccoli-postcss` (an npm module) the styles were built into the `dist/vendor.css` file. At first, this didn't make sense to me. My assumption was that files in the addon's `app` directory would be merged with the files in the consuming application's `app` directory. However, that was not the case.\n\nSomeone in the chat channel, posted a link to an issue for an `ember-cli` thread that went back a year or so; which included discussion about how styles behave in addons as well as what magic surrounded processing CSS in an Ember CLI addon. So, my first thought was - "avoid the magic"; like I avoid the plague. So, I continued to setup a customized build solution in a new addon (for common styles); and to simply use CSS files within a `styles` directory in the addon root directory. That worked for me. Well it did seem that I should begin to look for a pattern in existing Ember addons that include CSS styles as the primary solution, like a UI kit.\n\nApparently, it's a thing to place CSS files in an addon inside the `app` directory. And by doing so, the CSS files are built into the `dist/vendor.css` file. Ok, that's how the magic works, nice :) - it follows that the consuming applications can import the addon's `vendor` styles into the application's own `vendor` directory.\n\nPerhaps I have a handle on unravelling this "mystery" of where styles go, how styles are built, and how a consuming application imports the addon's stylesheets. (This was not obvious at first.)\n\nI thought "oh, I should build an addon for processing PostCSS, for addon development". Well, the solution was less than 100 lines of code. Maybe it's better to just use this solution as boilerplate code instead of creating yet another addon. ([emberaddons.com] already has over 2,000 NPM modules.)\n\n[emberaddons.com]: https://www.emberaddons.com\n\nI read an article, titled [Kill Your Dependencies], which emphasized owning code that you can, exercising caution when selecting a dependency, and advocated responsibility for library developers. At this point, I discouraged myself from writing Yet Another Library™ for processing PostCSS. It's responsible, for now, to simply share my solution and to explain how Ember developers can customize a [Broccoli] build pipeline, within an Ember CLI addon, as a solution for processing CSS, perhaps with PostCSS.\n\n[Kill Your Dependencies]: http://www.mikeperham.com/2016/02/09/kill-your-dependencies/\n[Broccoli]: http://broccolijs.com\n\n\n### My Use Cases (Wish List)\n\n* I want to use an Ember CLI Addon as a library for common styles for various applictions that can share a common set of styles. This addon will become the shared styles for a group of application engines within the platform I work on.\n* I don't want to publish this addon on NPM, I want to use a URL to the git repository.\n* It would be great if I could distribute the CSS file and have a common URL to load the styles from, so that the browser caches common URL.\n* As the applications grow, I want to remove common styles from various applications into this library of common styles.\n* I like versioned dependencies, even for a CSS library.\n* I want to use modern CSS today, PostCSS provides that. Perhaps one day, the modern CSS I write today will become standard; then I can remove the custom processing.\n* I'd like to just install the addon for my stylesheets, and the CSS should Just Work™. I'm ok with owning that.\n\nIf you're curious about how this solution turned out for me…\n\n**Once I understood how Ember CLI addons proccess CSS in the build pipeline it was fairly simple to add custom processing with Broccoli.**\n\n\n### TLDR; see the repositories below:\n\n* <https://gitlab.com/pixelhandler/xyz-styles>\n* <https://gitlab.com/pixelhandler/xyz-foundation>\n\nThe `xyz-styles` addon is utilized by the `xyz-foundation` app. \n\n\n### PostCSS processing in an Ember CLI Addon\n\nBelow is an explaination the solution I found, starting from the end of the story (the part where it just works).\n\nFirst an application needs to install the addon (for common styles).\n\n    ember install git+ssh://git@gitlab.com:pixelhandler/xyz-styles.git\n\nThis command results in adding dependencies to my package.json. I moved the 'styles addon' to `dependencies` (from `devDependencies`):\n\n* <https://gitlab.com/pixelhandler/xyz-foundation/blob/master/package.json#L50>\n\nThe output was…\n\n    version: 2.3.0\n    Installed packages for tooling via npm.\n    installing xyz-styles\n    install packages autoprefixer, broccoli-funnel, broccoli-merge-trees, broccoli-postcss, postcss-cssnext, postcss-import\n    Installing packages for tooling via npm..caniuse-api: Generation ok\n    Installed packages for tooling via npm.\n    Installed addon package.\n\nIn order for this command to work, the addon needed a [blueprint]…\n\n[blueprint]: https://gitlab.com/pixelhandler/xyz-styles/blob/master/blueprints/xyz-styles/index.js\n\n    /* jshint node: true */\n    /* global module */\n    module.exports = {\n      description: 'xyz-styles',\n    \n      normalizeEntityName: function () {},\n    \n      afterInstall: function () {\n        return this.addPackagesToProject([\n          { name: 'autoprefixer', target: '^6.3.3' },\n          { name: 'broccoli-funnel', target: '^1.0.1' },\n          { name: 'broccoli-merge-trees',target: '^1.1.1' },\n          { name: 'broccoli-postcss', target: '^2.1.1' },\n          { name: 'postcss-cssnext', target: '^2.4.0' },\n          { name: 'postcss-import', target: '^8.0.2' }\n        ]);\n      }\n    };\n\nMy `afterInstall` hook in the `index.js` file adds  required dependencies for processing CSS files using PostCSS and a couple plugins for `cssnext` and `import`.\n\nLearn more about Ember CLI's [Addon Hooks][ADDON_HOOKS.md].\n\n[ADDON_HOOKS.md]: https://github.com/ember-cli/ember-cli/blob/master/ADDON_HOOKS.md\n\nWith these NPM modules in place, this "xyz-styles" addon can utilize them to process the CSS which utilize next generation CSS syntax.\n\nAn Ember CLI addon uses it's `index.js` file to provide hooks for the consuming application. The consuming application can process the modern CSS syntax provided within the addon's code though the `included` hook. This hook in the addon is used by the consuming applicaiton as the entry point to build the stylesheets into the application's `vendor.css` file. The vendor CSS will be imported into the consuming Ember application's vendor styles.\n\nBelow is the `xyz-styles/index.js` file:\n\n    /* jshint node: true */\n    /* global require, module */\n    'use strict';\n    \n    module.exports = {\n      name: 'xyz-styles',\n    \n      getCssFileName: function () {\n        return this.name + '.css';\n      },\n    \n      isAddon: function () {\n        var keywords = this.project.pkg.keywords;\n        return (keywords && keywords.indexOf('ember-addon') !== -1);\n      },\n    \n      included: function (app) {\n        this._super.included(app);\n        if (!this.isAddon()) {\n          app.import('vendor/' + this.getCssFileName());\n        }\n      },\n    \n      treeForVendor: function (node) {\n        if (this.isAddon()) { return node; }\n    \n        var path = require('path');\n        var Funnel = require('broccoli-funnel');\n        var mergeTrees = require('broccoli-merge-trees');\n        var compileCSS = require('broccoli-postcss');\n    \n        var styles = path.join(this.project.nodeModulesPath, this.name, 'app', 'styles');\n        var inputTrees = new Funnel(styles, { include: [/.css$/] });\n        var inputFile = this.getCssFileName();\n        var outputFile = inputFile;\n        var plugins = this.getPlugins();\n        var sourceMaps = { inline: true };\n        var css = compileCSS([inputTrees], inputFile, outputFile, plugins, sourceMaps);\n        node = (node) ? mergeTrees([ node, css ]) : css;\n    \n        return node;\n      },\n    \n      getPlugins() {\n        var autoprefixer = require('autoprefixer');\n        var cssnext = require('postcss-cssnext');\n        var cssimport = require('postcss-import');\n    \n        return [\n          { module: autoprefixer, options: { browsers: ['last 2 version'] } },\n          { module: cssimport },\n          { module: cssnext, options: { sourcemap: true } }\n        ];\n      }\n    };\n\nThe `treeForVendor` hook above utilizes the PostCSS modules and a few Broccoli.js modules - to build the CSS with the build pipeline of the consuming application. I used a `getPlugins` method to setup the options for the `broccoli-postcss` module to compile the CSS with.\n\nThe proccesing by the `included` hook will only occur in the case where there is a consuming app including the addon. There are two points of interest… when the consuming application includes the addon…\n\n1. using the `treeForVendor` hook, the addon's `app/xyz-styles.css` file is processed and written to `vendor/xyz-styles.css`, and\n2. the processed styles are imported using `app.import` within the `include` hook of the addon. That's it.\n\nWhat if I want to build the styles without a consuing app?\n\nIn the example repositories, linked above (see TLDR;) - the `xyz-foundation` application consumes the `xyz-styles` addon. What if I want to share the processed styles with a older application, that is not using Ember CLI yet? The `ember-cli-build.js` file is the build recipe for the addon, including its "dummy" (or test) application. This build recipe is not used by a consuming application. So I could use it during development to build a distribution CSS file from this styles (library) addon. Potentially, Ember CLI's build could be used to build generic CSS libraries too, nice :)\n\nNotice that the [ember-cli-build.js] file is very similar to the `index.js` file…\n\n[ember-cli-build.js]: https://gitlab.com/pixelhandler/xyz-styles/blob/master/ember-cli-build.js\n\n    /*jshint node:true*/\n    /* global require, module */\n    var EmberAddon = require('ember-cli/lib/broccoli/ember-addon');\n    var autoprefixer = require('autoprefixer');\n    var cssnext = require('postcss-cssnext');\n    var cssimport = require('postcss-import');\n    var Funnel = require('broccoli-funnel');\n    var compileCSS = require('broccoli-postcss');\n    var path = require('path');\n    \n    module.exports = function(defaults) {\n      var options = {\n        plugins: [\n          { module: autoprefixer, options: { browsers: ['last 2 version'] } },\n          { module: cssimport },\n          { module: cssnext, options: { sourcemap: true } }\n        ]\n      };\n    \n      var app = new EmberAddon(defaults, { postcssOptions: options });\n    \n      var file = 'xyz-styles.css';\n      var styles = path.join('./', 'app', 'styles');\n      styles = new Funnel(styles, { include: [/.css$/] });\n      var css = compileCSS([styles], file, 'vendor/' + file, options.plugins, { inline: false });\n    \n      return app.toTree([css]);\n    };\n\nThe build recipe above uses the same strategy as the build setup in the addon's index.js file. It utilizes a file `xyz-styles.css` as the target for input, and outputs the same filename inside the `dist/vendor` directory.\n\n### Next Generation CSS syntax using PostCSS\n\nThe `xyz-styles` addon's `app/styles` directory is setup with a file named `xyz-styles.css` as the main file to process. The build recipe utilizes a plugin, `postcss-import` to concatinate the files that are imported. The `postcss-cssnext` plugin allows the use of modern or next generation CSS syntax, like `color: var(--name);`.\n\nSee these example files:\n\n* [app/styles/xyz-styles.css] uses the import plugin\n* [app/styles/colors.css] uses the cssnext plugin for variable definition\n* [app/styles/elements.css] and [app/styles/classes.css] assign a CSS variable\n\n[app/styles/xyz-styles.css]: https://gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/xyz-styles.css\n[app/styles/colors.css]: https://gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/colors.css\n[app/styles/elements.css]: https://gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/elements.css\n[app/styles/classes.css]: https://gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/classes.css\n\nThe consuming application (xyx-foundation) uses a similar file structure as the css addon (xyz-styles). This demonstrates how an Ember CLI application handles the load order for `app/styles` in both the application and and addon codebases. By default, the styles defined in the `app/styles` directory of the application, are built into the application's CSS file, `xyz-foundation.css`. This file is loaded after the CSS imported from the addon(s) - which are built into the `vendor.css` file. This default order of loading styles in the applicaiton's `index.html` file ensures that the vendor CSS styles are the base and the applicaiton's CSS styles can redefine or extend those vendor style declarations from withing the applicaiton's own CSS `app.css` file(s).\n\nIn this example, the xyz-foundation app defines a `body` style with the color as **blue**. And the addon, xyz-styles, also defines the body style but with color as **red**. The foundaiton app defines a CSS class named `blue` and the styles addon defines a CSS class named `red`. In the foundation application's template, [app/templates/application.hbs], these classes can be used.\n\n[app/templates/application.hbs]: https://gitlab.com/pixelhandler/xyz-foundation/blob/master/app/templates/application.hbs\n\n    <h2 id="title">Welcome to <span class="red">Ember</span></h2>\n\nThe `red` class above is introduced to the application's vendor CSS by the styles addon. The title text is blue since the vendor CSS set the text color to **red**, but the application's CSS defines the body text as **blue**.\n\n![xyz-foundation-app screenshot](https://pixelhandler.com/uploads/xyz-foundation-app.jpg)\n\n![xyz-foundation css stylesheet screenshot](https://pixelhandler.com/uploads/xyz-foundation-css.jpg)\n\n![xyz-foundation vendor styles screenshot](https://pixelhandler.com/uploads/xyz-styles-vendor-css.jpg)	Over the years I've used [Sass] and [Less] to improve my development experience with CSS (stylesheets for web applications). I enjoyed the improvements that both Less and Sass provided. Now that I use [Babel] to transpile JavaScript modules in my application's build pipeline using [Ember CLI] - I enjoy using modern JavaScript as I develop and ship web applications today. Can I also write next generation CSS styles today? The answer is yes! With [PostCSS].\n\n[Ember CLI]: http://ember-cli.com\n[PostCSS]: http://postcss.org\n[Less]: http://lesscss.org\n[Sass]: http://sass-lang.com\n[Babel]: https://babeljs.io	developing-ember-addons-next-generation-css-with-postcss	Developing Ember Addons: Next Generation CSS with PostCSS	2016-02-24	2016-02-24 00:47:58.980806	2016-02-24 01:05:12.981084	1	'-1':1288C '/.css':1342C,1729C '/2016/02/09/kill-your-dependencies/':691C '/ember-cli/ember-cli/blob/master/addon_hooks.md':1152C '/index.js':1257C '/lib/broccoli/ember-addon':1656C '/pixelhandler/xyz-foundation':916C '/pixelhandler/xyz-foundation/blob/master/app/templates/application.hbs':2073C '/pixelhandler/xyz-foundation/blob/master/package.json#l50':994C '/pixelhandler/xyz-styles':913C '/pixelhandler/xyz-styles/blob/master/app/styles/classes.css':1881C '/pixelhandler/xyz-styles/blob/master/app/styles/colors.css':1873C '/pixelhandler/xyz-styles/blob/master/app/styles/elements.css':1877C '/pixelhandler/xyz-styles/blob/master/app/styles/xyz-styles.css':1869C '/pixelhandler/xyz-styles/blob/master/blueprints/xyz-styles/index.js':1064C '/pixelhandler/xyz-styles/blob/master/ember-cli-build.js':1643C '/uploads/xyz-foundation-app.jpg)':2126C '/uploads/xyz-foundation-css.jpg)':2135C '/uploads/xyz-styles-vendor-css.jpg)':2144C '000':604C '1':1483C '1.0.1':1090C '1.1.1':1097C '100':577C '2':603C,1395C,1500C,1700C '2.1.1':1103C '2.3.0':999C '2.4.0':1109C '6.3.3':1084C '8.0.2':1115C 'ad':978C 'add':104C,901C,1123C 'addon':3A,103C,163C,179C,258C,321C,376C,389C,415C,431C,454C,478C,513C,548C,564C,569C,598C,676C,706C,725C,750C,855C,889C,921C,936C,965C,987C,1047C,1057C,1146C,1163C,1180C,1205C,1216C,1287C,1469C,1482C,1489C,1514C,1548C,1578C,1612C,1757C,1790C,1896C,1919C,1952C,2025C,2051C,2092C 'addon/my-file.css':286C 'addon/styles/addon.css':270C 'addon_hooks.md':1148C,1149C 'advoc':631C 'afterinstal':1077C,1117C 'allow':1828C 'alreadi':225C,600C 'also':72B,2029C 'anoth':597C,645C 'answer':80B 'api':1037C 'app':323C,336C,481C,929C,1291C,1293C,1334C,1466C,1529C,1710C,1722C,2013C,2041C,2122C 'app.css':2003C 'app.import':1296C,1507C 'app.totree':1741C 'app/styles':1792C,1912C,1928C 'app/styles/addon.css':273C 'app/styles/app.css':275C 'app/styles/classes.css':1861C,1878C 'app/styles/colors.css':1851C,1870C 'app/styles/elements.css':1859C,1874C 'app/styles/xyz-styles.css':1846C,1866C 'app/templates/application.hbs':2064C,2070C 'app/xyz-styles.css':1491C 'appar':467C 'applic':28B,50B,68B,111C,146C,156C,334C,509C,519C,545C,735C,793C,803C,960C,1192C,1195C,1233C,1247C,1428C,1479C,1542C,1561C,1584C,1594C,1884C,1906C,1916C,1932C,1937C,2061C,2085C,2110C 'applicaiton':1222C,1969C,1984C,1999C 'applict':715C 'articl':612C 'assign':1862C 'assumpt':315C 'autoprefix':1012C,1082C,1374C,1376C,1391C,1658C,1660C,1696C 'avoid':395C,400C 'b':148C 'babel':43B,94B 'babeljs.io':95B 'back':363C 'base':1981C 'becom':727C,839C 'begin':445C 'behav':374C 'better':584C 'blue':2022C,2047C,2097C,2118C 'blueprint':1060C,1061C 'bodi':2016C,2032C,2115C 'boilerpl':591C 'bridg':228C 'broccoli':194C,292C,669C,692C,905C,1014C,1017C,1021C,1087C,1093C,1100C,1314C,1320C,1327C,1441C,1677C,1683C 'broccoli-funnel':1013C,1086C,1313C,1676C 'broccoli-merge-tre':1016C,1092C,1319C 'broccoli-postcss':291C,1020C,1099C,1326C,1440C,1682C 'broccoli.js':1415C 'broccolijs.com':693C 'browser':130C,787C,1393C,1698C 'build':52B,113C,197C,410C,562C,670C,894C,1228C,1418C,1423C,1523C,1574C,1586C,1603C,1617C,1622C,1744C,1753C,1808C 'built':300C,491C,540C,1934C,1956C 'cach':788C 'canius':1036C 'caniuse-api':1035C 'case':343C,696C,1460C 'caution':625C 'channel':348C 'chat':347C 'chatroom':235C 'class':2045C,2055C,2066C,2079C 'cli':56B,86B,102C,110C,162C,178C,238C,359C,388C,675C,705C,888C,935C,1144C,1179C,1567C,1615C,1655C,1905C 'code':580C,592C,620C,1207C 'codebas':1920C 'color':1839C,2020C,2036C,2105C 'command':975C,1053C 'common':151C,417C,711C,720C,777C,789C,799C,808C,967C 'compil':1445C 'compilecss':1324C,1358C,1680C,1732C 'concatin':1817C 'confus':265C 'consu':1528C 'consum':333C,508C,544C,1191C,1194C,1221C,1245C,1427C,1465C,1478C,1543C,1593C,1883C 'continu':168C,405C 'convers':122C 'could':208C,769C,1597C,1618C 'coupl':1134C 'creat':595C 'cross':226C 'css':6A,24B,76B,125C,142C,384C,423C,457C,474C,488C,682C,772C,817C,824C,834C,861C,891C,1128C,1170C,1175C,1200C,1239C,1276C,1357C,1368C,1369C,1420C,1447C,1606C,1624C,1731C,1742C,1782C,1836C,1864C,1895C,1939C,1948C,1977C,1986C,2002C,2044C,2054C,2088C,2101C,2112C,2130C 'cssimport':1384C,1398C,1668C,1703C 'cssnext':1025C,1107C,1137C,1378C,1382C,1400C,1662C,1666C,1705C,1826C,1854C 'curious':874C 'custom':409C,667C,846C,902C 'd':849C 'day':831C 'declar':1995C 'default':1691C,1713C,1922C,1962C 'defin':1925C,2014C,2030C,2042C,2052C,2113C 'definit':1858C 'demonstr':1901C 'depend':616C,629C,688C,813C,979C,989C,1125C 'descript':1071C 'devdepend':991C 'develop':1A,21B,64B,222C,570C,635C,665C,1601C 'didn':308C 'dig':133C 'directori':324C,337C,428C,433C,482C,523C,1779C,1793C,1929C 'discourag':640C 'discuss':370C 'dist/vendor':1778C 'dist/vendor.css':303C,494C 'distribut':770C,1605C 'dummi':1581C 'ember':2A,55B,85B,101C,109C,161C,177C,237C,358C,387C,453C,664C,674C,704C,887C,934C,969C,1143C,1178C,1246C,1286C,1566C,1614C,1654C,1904C,2076C 'ember-addon':1285C 'ember-c':236C,357C,1653C 'ember-cli-build.js':1570C,1631C,1640C 'ember-cli.com':87B 'ember-community-slackin.herokuapp.com':251C 'emberaddon':1651C,1712C 'emberaddons.com':599C,607C 'embercommunity.slack.com':234C,246C,247C 'emphas':618C 'end':948C 'engin':736C 'enjoy':30B,58B 'ensur':1973C 'entri':1225C 'even':814C 'exampl':1532C,1844C,2008C 'exercis':624C 'exist':452C 'experi':22B 'explain':662C,940C 'extend':1991C 'fair':898C 'fals':1739C 'file':304C,318C,330C,424C,475C,489C,495C,773C,1122C,1129C,1185C,1236C,1258C,1492C,1571C,1607C,1632C,1639C,1717C,1734C,1736C,1760C,1764C,1798C,1804C,1819C,1845C,1891C,1940C,1943C,1960C,1972C,2004C 'filenam':1775C 'first':306C,392C,556C,958C 'follow':505C 'fortun':218C 'found':212C,230C,944C 'foundaiton':2040C 'foundat':928C,1541C,1887C,2012C,2060C,2121C,2129C,2138C 'function':1076C,1078C,1273C,1278C,1290C,1300C,1690C 'funnel':1015C,1088C,1311C,1315C,1339C,1674C,1678C,1726C 'generat':5A,75B,141C,1038C,1174C,1781C,1835C 'generic':1623C 'getcssfilenam':1272C 'getplugin':1372C,1432C 'git':761C,971C 'git@gitlab.com':972C 'github.com':1151C 'github.com/ember-cli/ember-cli/blob/master/addon_hooks.md':1150C 'gitlab.com':912C,915C,993C,1063C,1642C,1868C,1872C,1876C,1880C,2072C 'gitlab.com/pixelhandler/xyz-foundation':914C 'gitlab.com/pixelhandler/xyz-foundation/blob/master/app/templates/application.hbs':2071C 'gitlab.com/pixelhandler/xyz-foundation/blob/master/package.json#l50':992C 'gitlab.com/pixelhandler/xyz-styles':911C 'gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/classes.css':1879C 'gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/colors.css':1871C 'gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/elements.css':1875C 'gitlab.com/pixelhandler/xyz-styles/blob/master/app/styles/xyz-styles.css':1867C 'gitlab.com/pixelhandler/xyz-styles/blob/master/blueprints/xyz-styles/index.js':1062C 'gitlab.com/pixelhandler/xyz-styles/blob/master/ember-cli-build.js':1641C 'global':1068C,1262C,1647C 'go':536C 'goal':97C 'great':766C 'group':733C 'grow':794C 'handl':528C,1907C 'hard':207C 'help':231C,242C 'hook':1118C,1147C,1188C,1211C,1213C,1406C,1454C,1487C,1511C 'hope':190C 'howev':338C 'import':511C,546C,1028C,1113C,1139C,1242C,1388C,1505C,1672C,1815C,1822C,1849C,1949C 'improv':19B,32B 'includ':369C,456C,1210C,1289C,1341C,1453C,1467C,1480C,1510C,1579C,1728C 'index.html':1971C 'index.js':1121C,1184C,1638C,1759C 'inlin':1354C,1738C 'input':1770C 'inputfil':1344C,1348C,1360C 'inputtre':1337C,1359C 'insid':479C,1776C 'instal':853C,963C,970C,1000C,1006C,1010C,1029C,1040C,1046C 'instead':593C 'interest':1475C 'introduc':2082C 'isaddon':1277C 'issu':354C 'javascript':46B,61B,201C 'jshint':1065C,1259C,1644C 'keyword':1280C,1283C 'keywords.indexof':1284C 'kill':614C,686C 'kit':466C 'last':1394C,1699C 'learn':1140C 'less':17B,35B,90B,575C 'lesscss.org':91B 'librari':202C,634C,646C,709C,806C,818C,1611C,1625C 'like':398C,463C,811C,850C,1838C 'line':578C 'link':351C,1534C 'list':698C 'load':780C,1909C,1945C,1965C 'look':447C 'm':136C,866C 'magic':381C,397C,501C 'main':1803C 'make':310C 'mayb':581C 'merg':327C,1018C,1094C,1321C 'mergetre':1317C,1366C 'method':1433C 'modern':60B,823C,833C,1199C,1832C 'modul':47B,296C,606C,1069C,1156C,1264C,1390C,1397C,1399C,1411C,1416C,1443C,1649C,1695C,1702C,1704C 'module.exports':1070C,1267C,1689C 'move':150C,984C 'mysteri':532C 'name':1081C,1085C,1091C,1098C,1104C,1110C,1268C,1799C,1841C,2046C,2056C 'need':241C,961C,1058C 'need-help':240C 'new':414C,1338C,1711C,1725C 'next':4A,74B,140C,1173C,1780C,1834C 'nice':503C,1627C 'node':1066C,1260C,1301C,1305C,1364C,1365C,1367C,1371C,1645C 'normalizeentitynam':1075C 'notic':1628C 'npm':295C,605C,752C,1005C,1034C,1045C,1155C 'obvious':554C 'occur':1457C 'oh':559C 'ok':496C,867C,1039C 'older':1560C 'one':159C,830C 'option':1392C,1401C,1437C,1693C,1697C,1706C,1715C 'options.plugins':1737C 'order':1050C,1910C,1963C 'output':996C,1772C 'outputfil':1347C,1361C 'own':619C,869C 'packag':1001C,1011C,1030C,1041C,1048C 'package.json':982C 'part':953C 'path':1307C,1309C,1686C,1688C 'path.join':1331C,1721C 'pattern':450C 'perhap':524C,683C,829C 'pipelin':53B,198C,671C,895C,1424C 'pixelhandler.com':2125C,2134C,2143C 'pixelhandler.com/uploads/xyz-foundation-app.jpg)':2124C 'pixelhandler.com/uploads/xyz-foundation-css.jpg)':2133C 'pixelhandler.com/uploads/xyz-styles-vendor-css.jpg)':2142C 'pixelhandler/xyz-styles.git':973C 'place':473C,1158C 'plagu':402C 'platform':739C 'plugin':120C,1135C,1350C,1362C,1694C,1812C,1827C,1850C,1855C 'point':638C,1226C,1473C 'post':349C 'postcss':8A,84B,88B,105C,119C,134C,170C,293C,567C,649C,685C,826C,930C,1022C,1024C,1027C,1101C,1106C,1112C,1131C,1328C,1381C,1387C,1410C,1442C,1665C,1671C,1684C,1785C,1814C,1825C 'postcss-cssnext':1023C,1105C,1380C,1664C,1824C 'postcss-import':1026C,1111C,1386C,1670C,1813C 'postcss.org':89B 'postcssopt':1714C 'potenti':1613C 'primari':461C 'procces':1450C 'proccess':890C 'process':106C,181C,288C,383C,566C,648C,681C,847C,903C,931C,1127C,1168C,1197C,1494C,1502C,1556C,1806C 'provid':38B,827C,1187C,1202C 'publish':748C 'put':261C,283C 'question':253C 'ran':172C 're':873C 'read':610C 'recip':1575C,1587C,1745C,1809C 'red':2038C,2057C,2078C,2107C 'redefin':1989C 'remov':798C,844C 'repositori':762C,909C,1533C 'requir':1124C,1263C,1308C,1312C,1318C,1325C,1375C,1379C,1385C,1648C,1652C,1659C,1663C,1669C,1675C,1681C,1687C 'respons':632C,652C 'result':976C 'return':1079C,1274C,1282C,1304C,1370C,1389C,1740C 'root':432C 'sass':15B,37B,92B 'sass-lang.com':93B 'satisfi':138C 'screenshot':2123C,2132C,2141C 'see':907C,1536C,1842C 'seem':441C 'select':118C,627C 'sens':311C 'set':721C,2102C 'setup':407C,1435C,1754C,1795C 'share':657C,718C,729C,1554C 'ship':66B 'sign':243C,248C 'similar':1635C,1890C 'simpl':899C 'simpli':421C,656C 'sinc':2098C 'singl':160C 'snag':175C 'solut':411C,462C,573C,589C,659C,679C,878C,942C 'someon':344C 'sourcemap':1353C,1363C,1402C,1707C 'standard':840C 'start':945C 'still':165C 'stori':951C 'strategi':1750C 'strict':1266C 'structur':1892C 'style':77B,152C,263C,284C,298C,373C,418C,427C,458C,516C,535C,538C,712C,723C,730C,782C,800C,809C,920C,968C,986C,1009C,1074C,1162C,1250C,1256C,1271C,1330C,1335C,1340C,1503C,1525C,1547C,1557C,1610C,1720C,1723C,1724C,1727C,1733C,1789C,1899C,1924C,1966C,1978C,1987C,1994C,2017C,2028C,2033C,2050C,2091C,2140C 'stylesheet':25B,550C,858C,1230C,2131C 'surpis':277C 'surround':382C 'syntax':126C,143C,1176C,1201C,1783C,1837C 'target':1083C,1089C,1096C,1102C,1108C,1114C,1768C 'templat':2063C 'test':1583C 'text':2095C,2104C,2116C 'thing':471C 'this._super.included':1292C 'this.addpackagestoproject':1080C 'this.getcssfilename':1298C,1345C 'this.getplugins':1351C 'this.isaddon':1295C,1303C 'this.name':1275C,1333C 'this.project.nodemodulespath':1332C 'this.project.pkg.keywords':1281C 'though':1208C 'thought':205C,393C,558C 'thread':360C 'titl':613C,2094C 'tldr':906C,1537C 'today':69B,78B,128C,147C,825C,837C 'tool':1003C,1032C,1043C 'transpil':45B 'tree':1019C,1095C,1322C 'treeforvendor':1299C,1405C,1486C 'tri':268C,272C 'trivial':217C 'true':1067C,1261C,1355C,1403C,1646C,1708C 'turn':879C 'two':1472C 'ui':465C 'understood':885C 'unravel':530C 'upcom':124C 'url':758C,778C,790C 'use':14B,42B,54B,59B,139C,169C,183C,193C,269C,422C,587C,695C,702C,756C,822C,1130C,1181C,1218C,1265C,1430C,1484C,1506C,1565C,1590C,1598C,1620C,1747C,1784C,1830C,1847C,1852C,1888C,2069C 'util':115C,923C,1165C,1172C,1408C,1762C,1810C 'var':1279C,1306C,1310C,1316C,1323C,1329C,1336C,1343C,1346C,1349C,1352C,1356C,1373C,1377C,1383C,1650C,1657C,1661C,1667C,1673C,1679C,1685C,1692C,1709C,1716C,1719C,1730C,1840C 'variabl':1857C,1865C 'various':155C,714C,802C 've':13B 'vendor':515C,522C,1238C,1249C,1297C,1735C,1976C,1993C,2087C,2100C,2139C 'vendor.css':1235C,1959C 'vendor/xyz-styles.css':1498C 'version':812C,998C,1396C,1701C 'via':1004C,1033C,1044C 'vs':274C 'want':166C,700C,746C,754C,796C,820C,1521C,1552C 'web':27B,67B 'welcom':2074C 'well':378C,438C,571C 'went':362C 'wish':697C 'with':1997C 'within':425C,672C,737C,1203C,1508C 'without':1526C 'work':187C,435C,502C,741C,864C,957C,1055C 'would':325C,764C 'write':73B,643C,836C 'written':1496C 'www.emberaddons.com':608C 'www.mikeperham.com':690C 'www.mikeperham.com/2016/02/09/kill-your-dependencies/':689C 'xyx':1886C 'xyx-found':1885C 'xyz':919C,927C,1008C,1073C,1161C,1255C,1270C,1540C,1546C,1788C,1898C,2011C,2027C,2120C,2128C,2137C 'xyz-found':926C,1539C,2010C,2127C,2136C 'xyz-foundation-app':2119C 'xyz-foundation.css':1941C 'xyz-styl':918C,1007C,1072C,1160C,1254C,1269C,1545C,1787C,1897C,2026C 'xyz-styles.css':1718C,1765C,1800C 'year':11B,365C 'yes':82B 'yet':596C,644C,1568C	published	pixelhandler
70	\n**To manage developers you need to find them first. What attracts quality people and talent worth giving your best for?**\n\nThat is a loaded question, it depends on the individual. Typically I hear “I want to work with smart people.” I do to. The reality is, as managers we need to surround ourselves with people we can sharpen and who sharpen us. Be honest about your team’s skill and what a values you expect a candidate to bring to your team. Developer’s values vary: flexible schedules, autonomy, working on ambitious products, modern technology, low technical debt, etc. Just ask, it’s ok to have a variety of personalities who team up to build great software, it’s about respecting one another’s values.\n\n**Now that you have a team, how do you keep them engaged, motivated and interested in working with your organization?**\n\nWhat keeps their interest? Is it the technology stack? Or, work-life balance? How about owning a piece of the business? Contributing to open source projects? Twenty percent time? Training opportunities? It varies, do your best to meet individual needs and provide a path for growth that fits the expectations of your team. Don’t shut down dreams by refusing to make goals a reality. Go to bat for your team, get them what they need - so that they can focus on work that matters.\n\n**As a manager, are you meeting the expectations of your development team?**\n\nWhat do they expect from you? Trust. No micro-managing. A good manager lets the rubbish roll up instead of flow down.  Move obstacles and barriers that prevent your team from focusing on their best effort. Flexibility. Support for work-life balance that - Just Works™.  Create time to focus on objectives, avoid meetings and keep communication channels open. Provide an opportunity to learn, enjoy life, refresh and recharge, to go to conferences and support local software user groups. Communications should have a frequency that works for the individual. Don’t over-do or under-do what matters to your team. I call this servant leadership. My objective as a manager is to provide the necessary support, whatever it may be, so that my team can shine and take pride in the product of their investment of time, thought, labor and sweat – ultimately shipping valuable software products for users to enjoy.\n\n**Do you know what developers expect from work, from the business?**\n\nHow about a challenge to tackle? A finish line to cross. People to collaborate with, an excellent project manager or business owner. A roadmap that inspires great work. And of course, time away from work! “All work and no play makes Jack a dull boy” –Jack, The Shining. Maybe, work from home. For some, work at work; away from home. For others, a flexible schedule that affords putting family first. Many developers would really like to work for a remote friendly organization. Work is for work and quitting time is for play. It’s fine to mix it up a bit; but remember the company is not your family (aside from a family business that is).\n\n**So you’re a manager of developer happiness, what should you do?**\n\nAct as a servant, a leader, help your team do their best work. Lend a hand when you are asked, get out of the way when you recognize you're not helping anything. Ask good questions about code, be involved in peer reviews. Set standards and practices that reflect the values of your team and organization’s needs. Put people first, before policies/protocols. Filter out the bull, run the interference your team needs so they can focus on development. Remind your team to go home; the work will be there tomorrow. Question your assumptions and the assumptions of others – in a positive way. Ask about what is best for the team, the company, and the individual. At times all three are not in harmony, find a workable compromise. Take responsibility. If necessary deploy, do the QA work, write CLI tools, write documentation, release notes or create diagrams for systems information. Be a coach, show stakeholders how to work with a development team, how to motivate them. Communicate the value your team brings to the business. Have an opinion, and welcome the opinions of others. Be who you are and respect others for being who they are. When push comes to shove, fight on behalf of your team. Show up and flip tables when it’s the right thing to do – when the benefit outweighs the cost, for everyone. You are the leader, act like it. Have a life outside work, but make work fun too. And, have a sense of humor, you will need it. Expect great days and horrible days – both will pass, keep a steady and positive attitude about a plan forward, regardless.\n\n**What about process?**\n\nHow will your team succeed at getting things done? Do only what works! Experiment and learn along the way. Tools and process should not get in the way, choose wisely. Provide guidelines on how and what your team should prefer, based on team values. For example, a code standards document or style guide helps establish a bar you can raise when needed. Layer work that is dependent, for example only two of these three will likely succeed when in flight concurrently: 1) UI/UX design 2) API contracts 3) Feature development. Working on two of these at a time works to move toward a solution but all three in flight together invites chaos and likely failure to meet goals. Favor process that has proven to be successful elsewhere. Don’t re-invent process for the sake of bespoke ideas. To codify how your team will focus on what is important… adopt successful process that can blend with the footprint of your organization. Pick naming conventions that can work; conventions do not have to be perfect. Perhaps use “git flow” or simply borrow the parts that work for your group. Use Scrum / Agile practices that people recognize, so that you do not have to explain “how“ your team get things done. In order for your team to deliver results that matter, surface actionable work - which brings value when you ship it. And, avoid working on features that are not well defined. Define done.\n\n**What about the size of your team?**\n\nPrefer a small team, or many small teams if you work in a large organization. This affords leading by example, so you can still write quality code as a manager. It also limits collisions of code and incongruent methodologies from hijacking the work. Align strengths, front-end, API, style wizardry, software design and automated testing chops too. TDD that stuff together or plan a perfect system - various strengths can sharpen the team. Let people do what they do best.\n\n**There are some things a manager should avoid.**\n\nOnly do what you can succeed at, based on your resources. Don’t become the project manager or product owner, focus on developing successful and shippable solutions. “Real artists ship” -Jobs. Don’t get mixed up in company politics, delivering results carries weight and should be the leverage you need when you need to play your cards. Don’t work on the stories that challenge your team, let them enjoy a challenge and come up with a win. Don’t go dark, embrace interruption, help move obstacles for your team. Avoid saying “yes” to anything that is not already groomed, actionable and committed to work on. No means no. An untimely yes means no to what you already said yes to. It takes a lot of “no” to get the best “yes”. Avoid being selfish, we all can be. The team has to succeed, period. Don’t be a jerk, people have feelings, empathy goes a long way. Don’t cave in to pressure for late hours and work through the weekend. You set the example, work smart, not hard and long. Which only results in starting more fires and a fosters a culture that rewards and recognizes people for putting out fires - instead of a culture which avoids starting fires and which focuses on adding value to your product or business. Long/extra hours are a distraction that drips poison into quality software.\n\n**You’re a manger of developer happiness, how does a manager sharpen oneself?**\n\nSurround yourself with other leaders, at your company or in the software community, both if you’re so fortunate. Take time to have conversations with other leaders. Talk about what makes you tick and listen to the experience of other leaders. Seek mentorship in all areas of you’re life, they seem to blend a bit anyway. Becoming a better leader at home leaks into being a better leader at work and vice-versa. Be helpful where you can, others will recognize that and return the favor, “pay it forward”. Treat others as you would like to be treated, it takes practice. Reflect the best character traits that you’ve seen modeled by mentors or your former managers. Volunteer to get involved with a local software user group, or online development community. Solve other people’s bugs, give back where you can.\n\n**Don’t miss this… what must a manger get right?**\n\nSay “Thank you.” It matters, people deserve a kind word, especially when they give their best. Recognize valuable contributions. And, have a plan forward, when the tech debt is high, roadmap is steep, the backlog is thick, or you have no clue what’s next. It takes a plan to maintain forward momentum. Maintain and display a positive attitude, “Attitude reflects leadership” (Remember the Titans). Listen. When in doubt, listen some more. Celebrate finishing well. Learn from the past, success and failure both provide valuable lessons. Succeed and fail transparently. Balance work and life commitments for everyone on your team, including yourself. Help others give their best effort, “Yes you can” motivates others, tell yourself that too. Challenge others to grow, provide specific and reachable goals. Do the hard things, you’ll recognize them when they come - and they will come. Don’t be a coward. Set the temperature for your team, like a thermostat, not a thermometer only reading a value. Respond to change instead of reacting to it. Be a leader both at work and outside the workplace, it takes effort. Elevate others, provide a blueprint for growth and provide the experience that is valuable anywhere, and also provide a reason for your teammates to stick around.\n\nThere are many stories I could tell of how good managers have taken time to coach me, they have invested their experience and knowledge in me; and helped me to become better at my craft. They stepped in when I was down and propped me up toward success - by believing in me and challenging me. Mentors and business coaches have challenged me personally to be my best. I still tell myself, “you can do better,” because the race is not over yet. Also, I’ve worked with some managers who were so obnoxious I could just puke. I learned to move forward when I must. If all fails, be a manager of one, and start over again. Ahead, there are battles to win, competitors to face, and most importantly a team at your side - to make work and life more interesting. Do what you can for the people who look to you for leadership and remain teachable, surround yourself and your team with the best people you can mobilize, and build great software. Users everywhere are depending on it, they need it - we all do.	## Help Your Team Do Their Best Work\n\nA few observations on managing web developers, and oneself… I spent the past twelve years building web applications. Among the managers I’ve had the privilege to work with, some have exercised great leadership and others only spew rubbish; both types have made an impression on me. In this article, I will discuss what attracts developers and keeps them, what expectations developers have from management, what a development manager should focus on and what to avoid, process, team size, how to stay sharp, and what a manager must get right to be successful at helping others do their best work.	managing-developer-happiness	Managing Developer Happiness	2016-09-08	2016-09-08 07:23:18.88015	2016-09-08 14:31:13.109051	1	'1':1006C '2':1009C '3':1012C 'act':647C,879C 'action':1146C,1362C 'ad':1477C 'adopt':1075C 'afford':585C,1190C 'agil':1116C 'ahead':1987C 'align':1217C 'along':941C 'alreadi':1360C,1379C 'also':1205C,1860C,1952C 'ambiti':202C 'among':29B 'anoth':233C 'anyth':679C,1356C 'anyway':1564C 'anywher':1858C 'api':1010C,1222C 'applic':28B 'area':1553C 'around':1869C 'articl':60B 'artist':1290C 'asid':628C 'ask':211C,666C,680C,750C 'assumpt':740C,743C 'attitud':916C,1719C,1720C 'attract':65B,121C 'autom':1228C 'autonomi':199C 'avoid':86B,407C,1156C,1261C,1352C,1394C,1470C 'away':551C,576C 'back':1647C 'backlog':1695C 'balanc':269C,397C,1751C 'bar':981C 'barrier':380C 'base':965C,1269C 'bat':324C 'battl':1990C 'becom':1275C,1565C,1900C 'behalf':850C 'believ':1919C 'benefit':869C 'bespok':1062C 'best':9B,109B,129C,292C,389C,658C,754C,1253C,1392C,1613C,1676C,1767C,1936C,2034C 'better':1567C,1575C,1901C,1944C 'bit':619C,1563C 'blend':1080C,1561C 'blueprint':1848C 'borrow':1106C 'boy':563C 'bring':189C,818C,1149C 'bug':1645C 'build':26B,225C,2040C 'bull':713C 'busi':277C,518C,539C,632C,821C,1483C,1927C 'call':459C 'candid':187C 'card':1318C 'carri':1303C 'cave':1422C 'celebr':1733C 'challeng':522C,1326C,1333C,1778C,1923C,1930C 'chang':1825C 'channel':412C 'chao':1036C 'charact':1614C 'choos':953C 'chop':1230C 'cli':785C 'clue':1702C 'coach':799C,1885C,1928C 'code':684C,972C,1200C,1209C 'codifi':1065C 'collabor':532C 'collis':1207C 'come':845C,1335C,1797C,1801C 'commit':1364C,1755C 'communic':411C,434C,813C 'communiti':1520C,1640C 'compani':623C,759C,1299C,1515C 'competitor':1993C 'compromis':774C 'concurr':1005C 'confer':427C 'contract':1011C 'contribut':278C,1679C 'convent':1089C,1093C 'convers':1531C 'cost':872C 'could':1875C,1964C 'cours':549C 'coward':1806C 'craft':1904C 'creat':401C,792C 'cross':529C 'cultur':1455C,1468C 'dark':1343C 'day':904C,907C 'debt':208C,1688C 'defin':1164C,1165C 'deliv':1141C,1301C 'depend':137C,991C,2046C 'deploy':779C 'deserv':1667C 'design':1008C,1226C 'develop':2A,17B,66B,72B,78B,113C,193C,352C,512C,590C,641C,725C,807C,1014C,1284C,1500C,1639C 'diagram':793C 'discuss':63B 'display':1716C 'distract':1488C 'document':788C,974C 'done':933C,1134C,1166C 'doubt':1729C 'dream':314C 'drip':1490C 'dull':562C 'effort':390C,1768C,1843C 'elev':1844C 'elsewher':1051C 'embrac':1344C 'empathi':1415C 'end':1221C 'engag':247C 'enjoy':419C,507C,1331C 'especi':1671C 'establish':979C 'etc':209C 'everyon':874C,1757C 'everywher':2044C 'exampl':970C,993C,1193C,1437C 'excel':535C 'exercis':42B 'expect':71B,185C,306C,349C,357C,513C,902C 'experi':938C,1545C,1854C,1891C 'explain':1128C 'face':1995C 'fail':1749C,1977C 'failur':1039C,1742C 'famili':587C,627C,631C 'favor':1043C,1595C 'featur':1013C,1159C 'feel':1414C 'fight':848C 'filter':710C 'find':117C,771C 'fine':613C 'finish':526C,1734C 'fire':1450C,1464C,1472C 'first':119C,588C,707C 'fit':304C 'flexibl':197C,391C,582C 'flight':1004C,1033C 'flip':857C 'flow':375C,1103C 'focus':81B,337C,386C,404C,723C,1070C,1282C,1475C 'footprint':1083C 'former':1625C 'fortun':1526C 'forward':920C,1598C,1684C,1712C,1971C 'foster':1453C 'frequenc':438C 'friend':599C 'front':1220C 'front-end':1219C 'fun':890C 'get':99B,328C,667C,931C,949C,1132C,1295C,1390C,1629C,1659C 'git':1102C 'give':127C,1646C,1674C,1765C 'go':322C,425C,730C,1342C 'goal':319C,1042C,1786C 'goe':1416C 'good':366C,681C,1879C 'great':43B,226C,545C,903C,2041C 'groom':1361C 'group':433C,1113C,1636C 'grow':1781C 'growth':302C,1850C 'guid':977C 'guidelin':956C 'hand':662C 'happi':3A,642C,1501C 'hard':1441C,1789C 'harmoni':770C 'hear':143C 'help':4B,105B,653C,678C,978C,1346C,1584C,1763C,1897C 'high':1690C 'hijack':1214C 'home':570C,578C,731C,1570C 'honest':174C 'horribl':906C 'hour':1428C,1485C 'humor':897C 'idea':1063C 'import':1074C,1998C 'impress':55B 'includ':1761C 'incongru':1211C 'individu':140C,295C,443C,762C 'inform':796C 'inspir':544C 'instead':373C,1465C,1826C 'interest':250C,259C,2010C 'interfer':716C 'interrupt':1345C 'invent':1056C 'invest':492C,1889C 'invit':1035C 'involv':686C,1630C 'jack':560C,564C 'jerk':1411C 'job':1292C 'keep':68B,245C,257C,410C,911C 'kind':1669C 'know':510C 'knowledg':1893C 'labor':496C 'larg':1187C 'late':1427C 'layer':987C 'lead':1191C 'leader':652C,878C,1512C,1534C,1548C,1568C,1576C,1833C 'leadership':44B,462C,1722C,2023C 'leak':1571C 'learn':418C,940C,1736C,1968C 'lend':660C 'lesson':1746C 'let':368C,1247C,1329C 'leverag':1309C 'life':268C,396C,420C,884C,1557C,1754C,2008C 'like':593C,880C,1000C,1038C,1604C,1813C 'limit':1206C 'line':527C 'listen':1542C,1726C,1730C 'll':1792C 'load':134C 'local':430C,1633C 'long':1418C,1443C 'long/extra':1484C 'look':2019C 'lot':1386C 'low':206C 'made':53B 'maintain':1711C,1714C 'make':318C,559C,888C,1538C,2005C 'manag':1A,15B,31B,75B,79B,97B,112C,158C,344C,364C,367C,467C,537C,639C,1203C,1259C,1278C,1505C,1626C,1880C,1958C,1980C 'manger':1498C,1658C 'mani':589C,1179C,1872C 'matter':341C,454C,1144C,1665C 'may':476C 'mayb':567C 'mean':1369C,1374C 'meet':294C,347C,408C,1041C 'mentor':1622C,1925C 'mentorship':1550C 'methodolog':1212C 'micro':363C 'micro-manag':362C 'miss':1653C 'mix':615C,1296C 'mobil':2038C 'model':1620C 'modern':204C 'momentum':1713C 'motiv':248C,811C,1772C 'move':377C,1025C,1347C,1970C 'must':98B,1656C,1974C 'name':1088C 'necessari':472C,778C 'need':115C,160C,296C,332C,704C,719C,900C,986C,1311C,1314C,2050C 'next':1705C 'note':790C 'object':406C,464C 'obnoxi':1962C 'observ':13B 'obstacl':378C,1348C 'ok':214C 'one':232C,1982C 'oneself':19B,1507C 'onlin':1638C 'open':280C,413C 'opinion':824C,828C 'opportun':287C,416C 'order':1136C 'organ':255C,600C,702C,1086C,1188C 'other':46B,106B,580C,745C,830C,837C,1588C,1600C,1764C,1773C,1779C,1845C 'outsid':885C,1838C 'outweigh':870C 'over-do':446C 'own':272C 'owner':540C,1281C 'part':1108C 'pass':910C 'past':23B,1739C 'path':300C 'pay':1596C 'peer':688C 'peopl':123C,150C,165C,530C,706C,1119C,1248C,1412C,1460C,1643C,1666C,2017C,2035C 'percent':284C 'perfect':1099C,1239C 'perhap':1100C 'period':1406C 'person':220C,1932C 'pick':1087C 'piec':274C 'plan':919C,1237C,1683C,1709C 'play':558C,610C,1316C 'poison':1491C 'policies/protocols':709C 'polit':1300C 'posit':748C,915C,1718C 'practic':693C,1117C,1610C 'prefer':964C,1174C 'pressur':1425C 'prevent':382C 'pride':486C 'privileg':36B 'process':87B,924C,946C,1044C,1057C,1077C 'product':203C,489C,503C,1280C,1481C 'project':282C,536C,1277C 'prop':1913C 'proven':1047C 'provid':298C,414C,470C,955C,1744C,1782C,1846C,1852C,1861C 'puke':1966C 'push':844C 'put':586C,705C,1462C 'qa':782C 'qualiti':122C,1199C,1493C 'question':135C,682C,738C 'quit':606C 'race':1947C 'rais':984C 're':637C,676C,1055C,1496C,1524C,1556C 're-inv':1054C 'reachabl':1785C 'react':1828C 'read':1820C 'real':1289C 'realiti':155C,321C 'realli':592C 'reason':1863C 'recharg':423C 'recogn':674C,1120C,1459C,1590C,1677C,1793C 'reflect':695C,1611C,1721C 'refresh':421C 'refus':316C 'regardless':921C 'releas':789C 'remain':2025C 'rememb':621C,1723C 'remind':726C 'remot':598C 'resourc':1272C 'respect':231C,836C 'respond':1823C 'respons':776C 'result':1142C,1302C,1446C 'return':1593C 'review':689C 'reward':1457C 'right':100B,863C,1660C 'roadmap':542C,1691C 'roll':371C 'rubbish':49B,370C 'run':714C 'said':1380C 'sake':1060C 'say':1353C,1661C 'schedul':198C,583C 'scrum':1115C 'seek':1549C 'seem':1559C 'seen':1619C 'selfish':1396C 'sens':895C 'servant':461C,650C 'set':690C,1435C,1807C 'sharp':93B 'sharpen':168C,171C,1244C,1506C 'shine':483C,566C 'ship':500C,1153C,1291C 'shippabl':1287C 'shove':847C 'show':800C,854C 'shut':312C 'side':2003C 'simpli':1105C 'size':89B,1170C 'skill':179C 'small':1176C,1180C 'smart':149C,1439C 'softwar':227C,431C,502C,1225C,1494C,1519C,1634C,2042C 'solut':1028C,1288C 'solv':1641C 'sourc':281C 'specif':1783C 'spent':21B 'spew':48B 'stack':264C 'stakehold':801C 'standard':691C,973C 'start':1448C,1471C,1984C 'stay':92B 'steadi':913C 'steep':1693C 'step':1906C 'stick':1868C 'still':1197C,1938C 'stori':1324C,1873C 'strength':1218C,1242C 'stuff':1234C 'style':976C,1223C 'succeed':929C,1001C,1267C,1405C,1747C 'success':103B,1050C,1076C,1285C,1740C,1917C 'support':392C,429C,473C 'surfac':1145C 'surround':162C,1508C,2027C 'sweat':498C 'system':795C,1240C 'tabl':858C 'tackl':524C 'take':485C,775C,1384C,1527C,1609C,1707C,1842C 'taken':1882C 'talent':125C 'talk':1535C 'tdd':1232C 'teachabl':2026C 'team':6B,88B,177C,192C,222C,241C,309C,327C,353C,384C,457C,481C,655C,700C,718C,728C,757C,808C,817C,853C,928C,962C,967C,1068C,1131C,1139C,1173C,1177C,1181C,1246C,1328C,1351C,1402C,1760C,1812C,2000C,2031C 'teammat':1866C 'tech':1687C 'technic':207C 'technolog':205C,263C 'tell':1774C,1876C,1939C 'temperatur':1809C 'test':1229C 'thank':1662C 'thermomet':1818C 'thermostat':1815C 'thick':1697C 'thing':864C,932C,1133C,1257C,1790C 'thought':495C 'three':766C,998C,1031C 'tick':1540C 'time':285C,402C,494C,550C,607C,764C,1022C,1528C,1883C 'titan':1725C 'togeth':1034C,1235C 'tomorrow':737C 'tool':786C,944C 'toward':1026C,1916C 'train':286C 'trait':1615C 'transpar':1750C 'treat':1599C,1607C 'trust':360C 'twelv':24B 'twenti':283C 'two':995C,1017C 'type':51B 'typic':141C 'ui/ux':1007C 'ultim':499C 'under-do':450C 'untim':1372C 'us':172C 'use':1101C,1114C 'user':432C,505C,1635C,2043C 'valu':183C,195C,235C,697C,815C,968C,1150C,1478C,1822C 'valuabl':501C,1678C,1745C,1857C 'vari':196C,289C 'varieti':218C 'various':1241C 've':33B,1618C,1954C 'versa':1582C 'vice':1581C 'vice-versa':1580C 'volunt':1627C 'want':145C 'way':671C,749C,943C,952C,1419C 'web':16B,27B 'weekend':1433C 'weight':1304C 'welcom':826C 'well':1163C,1735C 'whatev':474C 'win':1339C,1992C 'wise':954C 'wizardri':1224C 'word':1670C 'work':10B,38B,110B,147C,200C,252C,267C,339C,395C,400C,440C,515C,546C,553C,555C,568C,573C,575C,595C,601C,604C,659C,733C,783C,804C,886C,889C,937C,988C,1015C,1023C,1092C,1110C,1147C,1157C,1184C,1216C,1321C,1366C,1430C,1438C,1578C,1752C,1836C,1955C,2006C 'work-lif':266C,394C 'workabl':773C 'workplac':1840C 'worth':126C 'would':591C,1603C 'write':784C,787C,1198C 'year':25B 'yes':1354C,1373C,1381C,1393C,1769C 'yet':1951C	published	pixelhandler
28	<!-- Working example at : [code.html-src.com/621429](http://code.html-\nsrc.com/621429/) be sure to view your browser console. -->\n \n    \n    <!doctype html>\n    <html lang="en">\n    <head>\n        <meta charset="utf-8"/>\n        <title>Event Pooling, or perhaps Pub/Sub</title>\n        <script type="text/javascript" charset="utf-8" src="http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js"></script>\n    </head>\n    <body>\n    <strong>Who is this?</strong>\n    <form action="#" method="get" accept-charset="utf-8" id="whoisit">\n        <p><label for="name">name</label> <input type="text" name="name" value="" id="name">\n        </p>\n        <p><label for="email">email</label> <input type="email" name="email" value="" id="email">\n        </p>\n        <p><input type="submit" value="Continue &rarr;" id="submit"></p>\n    </form>\n    </body>\n    <script type="text/javascript" charset="utf-8" src="script.js"></script>\n    </html>\n    \n    // Event pooling script\n    (function($) { // $ is jQuery \n    \n        var eventpooling = function() {\n            // broadcast events on elements\n            $('#name').bind('blur', function(event) {\n                $(document).trigger('NAME_CHANGED',event.target);\n            });\n            $('#email').bind('blur', function(event) {\n                $(document).trigger('EMAIL_CHANGED',event.target);\n            });\n            $('#submit').bind('click', function(event) {\n                $(document).trigger('SUBMIT_CLICKED',event);\n            });\n    \n            // Pool events on document\n            $(document).bind('NAME_CHANGED EMAIL_CHANGED SUBMIT_CLICKED', function(event) {\n                //Handler(s)\n                $.log(event.type);\n            })\n            .bind('NAME_CHANGED', function(event, obj) {\n                //Handler(s)\n                nameChangedHandler(event, obj);\n            })\n            .bind('EMAIL_CHANGED', function(event, obj) {\n                //Handler(s)\n                emailChangedHandler(event, obj);\n            })\n            .bind('SUBMIT_CLICKED', function(event) {\n                //Handler(s)\n                alert("form valid? "+submitClickHandler(event));\n            });\n    \n            // properties\n            var IS_NAME_VALID, IS_EMAIL_VALID;\n    \n            // Common methods\n            function responder(str) {\n                var response = "Are you really named: ";\n                return response + str;\n            }\n            function readyToSubmit() {\n                var ready = (IS_NAME_VALID === true && IS_EMAIL_VALID === true) || false;\n                if (ready === true) {\n                    $('#submit').removeAttr('disabled');\n                }\n                return ready;\n            }\n    \n            // validation methods\n            function validater(event,obj) {\n                $.log('validating: '+ event.type);\n                var valid = false;\n                var $obj = $(obj);\n                $obj.str = $obj.val();\n                $.log('value: '+ $obj.str);\n                if (event.type == 'NAME_CHANGED') {\n                    valid = notEmpty($obj.str);\n                    IS_NAME_VALID = valid;\n                }\n                if (event.type == 'EMAIL_CHANGED') {\n                    if (notEmpty($obj.str) && validEmail($obj.str)) {\n                        valid = true;\n                        IS_EMAIL_VALID = valid;\n                    } \n                }\n                $.log('valid field: '+ valid);\n                return readyToSubmit();\n            }\n            function notEmpty(str) {\n                if (str!=='') {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n            function validEmail(elmValue){\n               var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n               return emailPattern.test(elmValue);\n            }\n    \n            // Event handlers\n            function submitClickHandler(event) {\n                validater(event);\n                return readyToSubmit();\n            }\n            function nameChangedHandler(event, obj) {\n                var name = $(obj).val();\n                $.log(responder(name));\n                validater(event,obj);\n            }\n            function emailChangedHandler(event, obj) {\n                var email = $(obj).val();\n                alert('please confirm your email: '+ email);\n                validater(event,obj);\n            }\n            // initialize behavior\n            var init = (function(){\n                $('#submit').attr('disabled', 'disabled');\n            })();\n            return init;\n        };\n        \n        // debugging methods\n        $.fn.debug = function() {\n            return this.each(function(){\n                alert(this);\n            });\n        };\n        $.log = function(message) {\n            if(window.console) {\n                 console.debug(message);\n            } else {\n                 alert(message);\n            }\n        };\n        \n        // doc ready\n        $(function() {\n            try {\n                eventpooling();\n            } catch(oops) {\n                $.log(oops);\n            }\n        });\n        \n    })(jQuery);\n	Example of using custom events in jQuery for event pooling. Elements broadcast\n(trigger) events and the document listens (binds) responding with calls to\nhandlers based on. So, the methods to handle the events are loosely coupled\nwith the UI elements and their behaviors. similar to other bind and trigger\ntype of pub/sub (observer pattern).	event-pooling-example-using-jquery	Event Pooling Example Using jQuery	2010-11-06	2015-05-07 17:03:21.395528	2015-05-07 17:03:21.395528	1	'/handler':127C,137C,148C,158C '2':289C '4':290C '9':279C,284C 'a-za-z':285C 'a-za-z0':275C,280C 'alert':160C,325C,352C,362C 'attr':340C 'base':30B 'behavior':48B,335C 'bind':24B,52B,84C,94C,104C,118C,131C,142C,153C 'blur':85C,95C 'broadcast':17B,79C 'call':27B 'catch':369C 'chang':91C,101C,120C,122C,133C,144C,231C,242C 'click':105C,111C,124C,155C 'common':173C 'confirm':327C 'console.debug':359C 'coupl':41B 'custom':9B 'debug':345C 'disabl':205C,341C,342C 'doc':364C 'document':22B,88C,98C,108C,116C,117C 'element':16B,45B,82C 'elmvalu':272C,293C 'els':267C,361C 'email':69C,93C,100C,121C,143C,171C,196C,241C,251C,322C,329C,330C 'emailchangedhandl':150C,318C 'emailpattern':274C 'emailpattern.test':292C 'event':1A,10B,14B,19B,38B,60C,70C,80C,87C,97C,107C,112C,114C,126C,135C,140C,146C,151C,157C,164C,212C,294C,298C,300C,305C,315C,319C,332C 'event.target':92C,102C 'event.type':130C,216C,229C,240C 'eventpool':77C,368C 'exampl':3A,6B 'fals':199C,219C,269C 'field':256C 'fn.debug':347C 'form':161C 'function':73C,78C,86C,96C,106C,125C,134C,145C,156C,175C,187C,210C,260C,270C,296C,303C,317C,338C,348C,351C,355C,366C 'handl':36B 'handler':29B,295C 'init':337C,344C 'initi':334C 'jqueri':5A,12B,75C,373C 'listen':23B 'log':129C,214C,225C,254C,311C,354C,371C 'loos':40B 'messag':356C,360C,363C 'method':34B,174C,209C,346C 'name':68C,83C,90C,119C,132C,168C,183C,192C,230C,236C,308C,313C 'namechangedhandl':139C,304C 'notempti':233C,244C,261C 'obj':136C,141C,147C,152C,213C,221C,222C,306C,309C,316C,320C,323C,333C 'obj.str':223C,227C,234C,245C,247C 'obj.val':224C 'observ':58B 'oop':370C,372C 'pattern':59B 'perhap':63C 'pleas':326C 'pool':2A,15B,61C,71C,113C 'properti':165C 'pub/sub':57B,64C 'readi':190C,201C,207C,365C 'readytosubmit':188C,259C,302C 'realli':182C 'removeattr':204C 'respond':25B,176C,312C 'respons':179C,185C 'return':184C,206C,258C,265C,268C,291C,301C,343C,349C 'script':72C 'similar':49B 'str':177C,186C,262C,264C 'submit':103C,110C,123C,154C,203C,339C 'submitclickhandl':163C,297C 'this.each':350C 'tri':367C 'trigger':18B,54B,89C,99C,109C 'true':194C,198C,202C,249C,266C 'type':55B 'ui':44B 'use':4A,8B 'val':310C,324C 'valid':162C,169C,172C,193C,197C,208C,215C,218C,232C,237C,238C,248C,252C,253C,255C,257C 'validat':211C,299C,314C,331C 'validemail':246C,271C 'valu':226C 'var':76C,166C,178C,189C,217C,220C,273C,307C,321C,336C 'window.console':358C 'z':288C 'z0':278C,283C 'za':277C,282C,287C	published	pixelhandler
71	Before I get into the details working somewhere between bliss and distress. it’s worth mentioning some motivations for working with a remote developer. Some markets are saturated and it’s difficult to find local talent. At times, teams are seeking to hire senior talent and looking for ways to make it more attractive for developers to make change. In some cases, a project is short term; and hiring a contractor or consultant is the best way to help a project take flight (we’ll build the airplane in the air). Other times, its more strategic, why invest capital in brick and mortar, in headquarters, when you can put cash into infrastructure and teams? For developers, the motivation may be to make up for lost time and stay closer to home; or, to make time for travel. There are a wide range of motivations why companies and their employees decide to work remotely.\n\nI’ll start with a tale of… when it fails. Simply put… no one at the company is really convinced that they will benefit from the learning it takes to work with a remote team member. Or a remote developer has no real interest in being a team player. It’s more of a compromise… “This is a talented person, how could we pass him/her up?” Or, “We can figure out how to work with a remote employee. How hard can it be?” Alternatively, “We already work with contractors in this or that location, and that works fine.” It starts like so… “We’d like to extend you an offer that I think you can’t refuse, we are happy to work with you remotely and although we don’t have any employees who work 100% remote we’ve had success working with contractors. We can build on that.” Here is the error, an employee is not a contractor, there isn’t a fixed date as a finish line, nor is there motivation from the business to gain an expected outcome like there is with a consultancy. If the business thinks it’s ok to treat the remote employee like an offshore developer, it just won’t last. Not only will it fail fast, the work may not even matter. I worked at one company and for the first 3 months another developer basically threw away all the code I contributed toward browser compatibility (for their beta product). What a waste of effort and resources. In this scenario the business does not posses conviction about the value they gain from learning how to work with a distributed team, it’s more of an experiment. There’s no real skin in the game. When you recognize this, it’s time to make a change, do it gracefully and swiftly.  For this (solo) remote developer on a team, the experience is dominantly characterized by distress. In this scenario, there is nothing healthy for either the business nor the “second class” employee, known as the remote developer on a team of in-house developers.\n\nPlease note that there is a huge difference between “working from home” as a privilege and “working remote” as a lifestyle. Because a team has a flexible schedule that does not mean it can maintain success with a distributed team. If one team member is distributed everyone needs to know how to collaborate or the work suffers. In-house team members blame the remote developer and don’t include the remote team member in discussions about the project, or design of the product, etc. Having a remote employee means finding a way to make that employee a “first class” employee vs. a “second class” one. The result of treating remote employees as first class is that the organization benefits from the investment in learning how to work with one or more remote team members.\n\nThere is another scenario when… it half works. Some in the company like the benefit of having remote workers; however, they see remote work as a privilege. Based on this perception they reserve some aspects of working together for only during in-person exchanges. This is closer to working with a flexible schedule than to removing remotely as a lifestyle. The business has made a compromise; for what ever reason, maybe desperation. It is normal to plan for remote workers to have some face time with the team. But in this case, the business sees work from home as a privilege and incapacitates potential learning and advantages gained by working with a distributed team. Many conversations are saved for in-person exchanges instead of embracing successful practices of distributed teams, e.g. asynchronous communications. The in-house staff find ways to insist on synchronous communications. Since that can rarely happen, communications are extremely limited. The result is mismatched expectations and failure to work effectively toward common goals. Working remotely requires solid communication on both ends; and partial effort, does not lead to success, you get out what you put in. Sooner or later in this scenario, the remote employee gets burned, or becomes the scapegoat.\n\nA third, and somewhat more honest approach is …trying to learn how to add remote workers to a local team.  This happens when… some at the company realize there are benefits from learning how to change their current work patterns by the addition of remote workers. It is ok to not to have it all figured out – both onsite and offsite parties understand that the rewards are deferred – until there is a change that takes place, which makes it possible to reap the benefits from a new way of working together.  This is still somewhat experimental; but for all parties, it affords growth and discovery of new patterns for success. The circumstances around when to begin this experiment may not matter as much as having skin in the game. Both employee and employer gain from this investment of time and labor toward expanding a team beyond their current geographic limitations. By hiring a remote employee who has experience in both succeeding and failing when growing a distributed team, the company can side-step some pitfalls of figuring this out for the first time. The in-house team and collaborators will need to learn new habits; and find ways to include others that are remote. Open communications and making time for in-person team events, e.g. a week in the office each quarter, a few lunch events or off-site activities can help provide course correction along the way. As long as everyone stays engaged in this effort, eventually the remote employee is just a normal employee who only comes in on occasion for social or strategic meetings.\n\nThe final scenario is… when it just works. This can be blissful for remote workers and company in-house staff as well. Many at the company have confidence in the reaping the benefits from working with remote workers. Stakeholders, in-house, and remote team members (whether located primarily on- or off-site) all have found a way to operate and communicate effectively and successfully. Location is not a factor which limits communication and collaboration. Teamwork is typically successful when someone in upper management / or in a position of leadership and influence fully embraces the practices that support working with a distributed team. When planing meetings, there is always an online meeting option, and call-in phone number as a back up plan. Teams use online tools to collaborate. One quote is, “if it didn’t happen online, it didn’t happen”. Artifacts necessary to communicate scope of work or specifications for features (or systems) are readily sharable using online tools. Communications are most often asynchronous, The chat rooms are used by both on- and off-site team members. Everyone is included in conversions and when not possible, those who were out of the loop are filled in with the necessary details to be successful within their team. This does not happen by accident, but instead by intention.\n\nThe choice between working with remote vs. in-house developers is not a business decision that makes or breaks a company. Though it does seem to be a question many ask, should we consider hiring remote developers? I would say that is not the right question at all. Business decisions that impact how well people succeed at working together or how quickly they fail at working together are comprised of a wider set of choices regarding how the business interfaces with it’s workforce. What do we gain from learning how to communicate and ship features for our product while working as a distributed team? That, is a much better question to ask.\n\nOnce a team embraces a distributed workforce, fully or partially remote with some or none on-site, there are valuable lessons to learn. Communication is important, it takes as least two. Foster communication and open collaboration; succeed and fail openly. Asynchronous communication is the way to encourage collaboration. Interruption is not. There is a time and place for synchronous communications; but that should be limited to when it’s altogether necessary and agreed upon by all parties. A good VOIP phone; or a plain old cell phone with a good service plan works fine. Slack has a decent call feature. Not every meeting needs to include video (or face-to-face) interactions. Just make sure you keep communication open and timely. Choose your tools for process and collaboration wisely; the tools should not be the subject of your pain points. For online meetings have a backup plan, perhaps the primary tool will be an online meeting and the backup may be a conference (call-in) phone number. Decide this in advance of the meeting start time. Chat apps work great; and help teams connect and collaborate. Reach out for help; pair program with team members. When working remotely, avoid isolation. Explore the surrounding areas, or travel. Rent a shared work space as needed. Keep yourself motivated. When working from home, be careful to plan your work hours and plan your life away from work too. Choose and communicate working hours. Draw a boundary for yourself between life and work. Be an effective communicator and set reasonable expectations. Avoid distractions, find a time management system that works for you, perhaps use the Pomodoro Technique®. Focus and flow facilitate great work, protect that.  Show up and dress for work, wherever that is. Choosing where to work affords who has the privilege of inturruption. Working at home can mean that loved ones are close by; don’t shut them out, agree on a time to connect. And give them some hugs too.\n\nOne final suggestion is… know your limits. Sometimes an experiment fails, find a way to make lemonade from the pile of lemons you were sold. If working as a remote employee isn’t working, try contracting. If working as a fully distributed team is going bonkers, rent an office space and move toward flexible hours. Learn not only from your own mistakes but also from the mistakes of others. Perhaps hire contractors instead of employees when you decide to expand your team beyond the walls of your office. A consultant, worth her/his rate, will make the team they work with shine; by transferring her/his knowledge and experience as each opportunity presents itself. If you fail – don’t give up, try something new.	Over the past four years I’ve worked remotely as a software developer. There are obvious benefits and drawbacks from the choice to live and work well beyond the reach of the traditional office space, say downtown. I would like to share the various levels of success and failures I’ve recognized through my experiences as a remote employee. I’ll recount a few scenarios and describe, from my perspective… when it doesn’t work, when it half works, when trying to make it work, and when it just works.	working-remote-somewhere-between-bliss-and-distress	Working Remote, Somewhere Between Bliss & Distress	2016-09-27	2016-09-27 06:40:32.093374	2016-09-28 18:04:22.208925	1	'100':385C '3':479C 'accid':1432C 'activ':1177C 'add':957C 'addit':986C 'advanc':1724C 'advantag':844C 'afford':1045C,1848C 'agre':1624C,1871C 'air':187C 'airplan':184C 'along':1183C 'alreadi':335C 'also':1946C 'altern':333C 'although':376C 'altogeth':1621C 'alway':1325C 'anoth':481C,739C 'app':1731C 'approach':950C 'area':1757C 'around':1056C 'artifact':1360C 'ask':1468C,1550C 'aspect':771C 'asynchron':870C,1383C,1592C 'attract':150C 'avoid':1752C,1811C 'away':485C,1785C 'back':1338C 'backup':1698C,1711C 'base':764C 'basic':483C 'becom':941C 'begin':1059C 'benefit':23B,273C,721C,751C,974C,1027C,1248C 'best':172C 'beta':496C 'better':1547C 'beyond':34B,1089C,1965C 'blame':664C 'bliss':5A,106C,1226C 'bonker':1928C 'boundari':1796C 'break':1456C 'brick':197C 'browser':492C 'build':182C,396C 'burn':939C 'busi':425C,439C,509C,583C,799C,831C,1451C,1486C,1516C 'call':1332C,1650C,1717C 'call-in':1331C,1716C 'capit':195C 'care':1775C 'case':158C,829C 'cash':206C 'cell':1637C 'chang':155C,552C,979C,1016C 'character':570C 'chat':1385C,1730C 'choic':28B,1438C,1512C 'choos':1674C,1789C,1844C 'circumst':1055C 'class':587C,701C,706C,716C 'close':1864C 'closer':225C,784C 'code':488C 'collabor':654C,1134C,1291C,1346C,1587C,1599C,1680C,1739C 'come':1206C 'common':904C 'communic':871C,883C,889C,910C,1151C,1278C,1289C,1363C,1379C,1530C,1575C,1584C,1593C,1611C,1670C,1791C,1806C 'compani':242C,266C,474C,748C,970C,1113C,1231C,1241C,1458C 'compat':493C 'compris':1506C 'compromis':304C,803C 'confer':1715C 'confid':1243C 'connect':1737C,1876C 'consid':1471C 'consult':169C,436C,1972C 'contract':1918C 'contractor':167C,338C,393C,408C,1954C 'contribut':490C 'convers':853C,1402C 'convict':513C 'convinc':269C 'correct':1182C 'could':311C 'cours':1181C 'current':981C,1091C 'd':353C 'date':414C 'decent':1649C 'decid':246C,1721C,1960C 'decis':1452C,1487C 'defer':1011C 'describ':73B 'design':682C 'desper':809C 'detail':102C,1420C 'develop':19B,120C,152C,212C,289C,452C,482C,562C,593C,601C,667C,1447C,1474C 'didn':1352C,1357C 'differ':609C 'difficult':128C 'discoveri':1048C 'discuss':677C 'distract':1812C 'distress':6A,108C,572C 'distribut':526C,640C,647C,850C,867C,1110C,1318C,1541C,1556C,1924C 'doesn':79B 'domin':569C 'downtown':43B 'draw':1794C 'drawback':25B 'dress':1838C 'e.g':869C,1161C 'effect':902C,1279C,1805C 'effort':502C,916C,1194C 'either':581C 'embrac':863C,1310C,1554C 'employ':1076C 'employe':65B,245C,327C,382C,404C,448C,588C,690C,698C,702C,713C,937C,1074C,1098C,1198C,1203C,1913C,1957C 'encourag':1598C 'end':913C 'engag':1191C 'error':402C 'etc':686C 'even':468C 'event':1160C,1172C 'eventu':1195C 'ever':806C 'everi':1653C 'everyon':648C,1189C,1398C 'exchang':781C,860C 'expand':1086C,1962C 'expect':429C,897C,1810C 'experi':61B,533C,567C,1061C,1101C,1892C,1989C 'experiment':1039C 'explor':1754C 'extend':356C 'extrem':891C 'face':821C,1661C,1663C 'face-to-fac':1660C 'facilit':1830C 'factor':1286C 'fail':259C,462C,1106C,1501C,1590C,1893C,1997C 'failur':55B,899C 'fast':463C 'featur':1370C,1533C,1651C 'figur':319C,999C,1121C 'fill':1415C 'final':1216C,1884C 'find':130C,692C,877C,1142C,1813C,1894C 'fine':347C,1645C 'finish':417C 'first':478C,700C,715C,1126C 'fix':413C 'flexibl':628C,789C,1936C 'flight':179C 'flow':1829C 'focus':1827C 'foster':1583C 'found':1272C 'four':10B 'fulli':1309C,1558C,1923C 'gain':427C,518C,845C,1077C,1525C 'game':541C,1072C 'geograph':1092C 'get':99C,923C,938C 'give':1878C,2000C 'go':1927C 'goal':905C 'good':1630C,1641C 'grace':555C 'great':1733C,1831C 'grow':1108C 'growth':1046C 'habit':1140C 'half':84B,743C 'happen':888C,965C,1354C,1359C,1430C 'happi':369C 'hard':329C 'headquart':201C 'healthi':579C 'help':175C,1179C,1735C,1743C 'her/his':1974C,1986C 'him/her':314C 'hire':139C,165C,1095C,1472C,1953C 'home':227C,613C,835C,1773C,1857C 'honest':949C 'hour':1780C,1793C,1937C 'hous':600C,661C,875C,1131C,1234C,1257C,1446C 'howev':756C 'hug':1881C 'huge':608C 'impact':1489C 'import':1577C 'in-hous':598C,659C,873C,1129C,1232C,1255C,1444C 'in-person':778C,857C,1156C 'incapacit':840C 'includ':671C,1145C,1400C,1657C 'influenc':1308C 'infrastructur':208C 'insist':880C 'instead':861C,1434C,1955C 'intent':1436C 'interact':1664C 'interest':293C 'interfac':1517C 'interrupt':1600C 'inturrupt':1854C 'invest':194C,724C,1080C 'isn':410C,1914C 'isol':1753C 'keep':1669C,1767C 'know':651C,1887C 'knowledg':1987C 'known':589C 'labor':1084C 'last':457C 'later':931C 'lead':919C 'leadership':1306C 'learn':276C,520C,726C,842C,954C,976C,1138C,1527C,1574C,1938C 'least':1581C 'lemon':1904C 'lemonad':1899C 'lesson':1572C 'level':51B 'life':1784C,1800C 'lifestyl':622C,797C 'like':46B,350C,354C,431C,449C,749C 'limit':892C,1093C,1288C,1616C,1889C 'line':418C 'live':30B 'll':67B,181C,251C 'local':131C,962C 'locat':343C,1263C,1282C 'long':1187C 'look':143C 'loop':1413C 'lost':221C 'love':1861C 'lunch':1171C 'made':801C 'maintain':636C 'make':89B,147C,154C,218C,230C,550C,696C,1021C,1153C,1454C,1666C,1898C,1977C 'manag':1300C,1816C 'mani':852C,1238C,1467C 'market':122C 'matter':469C,1064C 'may':215C,466C,1062C,1712C 'mayb':808C 'mean':633C,691C,1859C 'meet':1214C,1322C,1328C,1654C,1695C,1708C,1727C 'member':285C,645C,663C,675C,736C,1261C,1397C,1748C 'mention':112C 'mismatch':896C 'mistak':1944C,1949C 'month':480C 'mortar':199C 'motiv':114C,214C,240C,422C,1769C 'move':1934C 'much':1066C,1546C 'necessari':1361C,1419C,1622C 'need':649C,1136C,1655C,1766C 'new':1030C,1050C,1139C,2004C 'none':1565C 'normal':812C,1202C 'note':603C 'noth':578C 'number':1335C,1720C 'obvious':22B 'occas':1209C 'off-sit':1174C,1267C,1393C 'offer':359C 'offic':40B,1166C,1931C,1970C 'offshor':451C 'offsit':1004C 'often':1382C 'ok':443C,992C 'old':1636C 'on-sit':1566C 'one':263C,473C,643C,707C,731C,1347C,1862C,1883C 'onlin':1327C,1343C,1355C,1377C,1694C,1707C 'onsit':1002C 'open':1150C,1586C,1591C,1671C 'oper':1276C 'opportun':1992C 'option':1329C 'organ':720C 'other':1146C,1951C 'outcom':430C 'pain':1691C 'pair':1744C 'parti':1005C,1043C,1628C 'partial':915C,1560C 'pass':313C 'past':9B 'pattern':983C,1051C 'peopl':1492C 'percept':767C 'perhap':1700C,1822C,1952C 'person':309C,780C,859C,1158C 'perspect':76B 'phone':1334C,1632C,1638C,1719C 'pile':1902C 'pitfal':1119C 'place':1019C,1608C 'plain':1635C 'plan':814C,1340C,1643C,1699C,1777C,1782C 'plane':1321C 'player':298C 'pleas':602C 'point':1692C 'pomodoro':1825C 'posit':1304C 'poss':512C 'possibl':1023C,1406C 'potenti':841C 'practic':865C,1312C 'present':1993C 'primari':1702C 'primarili':1264C 'privileg':616C,763C,838C,1852C 'process':1678C 'product':497C,685C,1536C 'program':1745C 'project':160C,177C,680C 'protect':1833C 'provid':1180C 'put':205C,261C,927C 'quarter':1168C 'question':1466C,1483C,1548C 'quick':1499C 'quot':1348C 'rang':238C 'rare':887C 'rate':1975C 'reach':36B,1740C 'readili':1374C 'real':292C,537C 'realiz':971C 'realli':268C 'reap':1025C,1246C 'reason':807C,1809C 'recogn':58B,544C 'recount':68B 'refus':366C 'regard':1513C 'remot':2A,15B,64B,119C,249C,283C,288C,326C,374C,386C,447C,561C,592C,619C,666C,673C,689C,712C,734C,754C,759C,794C,816C,907C,936C,958C,988C,1097C,1149C,1197C,1228C,1252C,1259C,1442C,1473C,1561C,1751C,1912C 'remov':793C 'rent':1760C,1929C 'requir':908C 'reserv':769C 'resourc':504C 'result':709C,894C 'reward':1009C 'right':1482C 'room':1386C 'satur':124C 'save':855C 'say':42B,1477C 'scapegoat':943C 'scenario':71B,507C,575C,740C,934C,1217C 'schedul':629C,790C 'scope':1364C 'second':586C,705C 'see':758C,832C 'seek':137C 'seem':1462C 'senior':140C 'servic':1642C 'set':1510C,1808C 'sharabl':1375C 'share':48B,1762C 'shine':1983C 'ship':1532C 'short':162C 'show':1835C 'shut':1868C 'side':1116C 'side-step':1115C 'simpli':260C 'sinc':884C 'site':1176C,1269C,1395C,1568C 'skin':538C,1069C 'slack':1646C 'social':1211C 'softwar':18B 'sold':1907C 'solid':909C 'solo':560C 'someon':1297C 'someth':2003C 'sometim':1890C 'somewhat':947C,1038C 'somewher':3A,104C 'sooner':929C 'space':41B,1764C,1932C 'specif':1368C 'staff':876C,1235C 'stakehold':1254C 'start':252C,349C,1728C 'stay':224C,1190C 'step':1117C 'still':1037C 'strateg':192C,1213C 'subject':1688C 'succeed':1104C,1493C,1588C 'success':53B,390C,637C,864C,921C,1053C,1281C,1295C,1423C 'suffer':658C 'suggest':1885C 'support':1314C 'sure':1667C 'surround':1756C 'swift':557C 'synchron':882C,1610C 'system':1372C,1817C 'take':178C,278C,1018C,1579C 'tale':255C 'talent':132C,141C,308C 'team':135C,210C,284C,297C,527C,565C,596C,625C,641C,644C,662C,674C,735C,825C,851C,868C,963C,1088C,1111C,1132C,1159C,1260C,1319C,1341C,1396C,1426C,1542C,1553C,1736C,1747C,1925C,1964C,1979C 'teamwork':1292C 'techniqu':1826C 'term':163C 'think':362C,440C 'third':945C 'though':1459C 'threw':484C 'time':134C,189C,222C,231C,548C,822C,1082C,1127C,1154C,1606C,1673C,1729C,1815C,1874C 'togeth':774C,1034C,1496C,1504C 'tool':1344C,1378C,1676C,1683C,1703C 'toward':491C,903C,1085C,1935C 'tradit':39B 'transfer':1985C 'travel':233C,1759C 'treat':445C,711C 'tri':87B,952C,1917C,2002C 'two':1582C 'typic':1294C 'understand':1006C 'upon':1625C 'upper':1299C 'use':1342C,1376C,1388C,1823C 'valu':516C 'valuabl':1571C 'various':50B 've':13B,57B,388C 'video':1658C 'voip':1631C 'vs':703C,1443C 'wall':1967C 'wast':500C 'way':145C,173C,694C,878C,1031C,1143C,1185C,1274C,1596C,1896C 'week':1163C 'well':33B,1237C,1491C 'wherev':1841C 'whether':1262C 'wide':237C 'wider':1509C 'wise':1681C 'within':1424C 'won':455C 'work':1A,14B,32B,81B,85B,91B,96B,103C,116C,248C,280C,323C,336C,346C,371C,384C,391C,465C,471C,523C,611C,618C,657C,729C,744C,760C,773C,786C,833C,847C,901C,906C,982C,1033C,1222C,1250C,1315C,1366C,1440C,1495C,1503C,1538C,1644C,1732C,1750C,1763C,1771C,1779C,1787C,1792C,1802C,1819C,1832C,1840C,1847C,1855C,1909C,1916C,1920C,1981C 'worker':755C,817C,959C,989C,1229C,1253C 'workforc':1521C,1557C 'worth':111C,1973C 'would':45B,1476C 'year':11B	published	pixelhandler
60	### _Internet Marketing Report and Social Media Highlights Newsletter…\n\n#### **'Bill's Internet Marketing Report' **\n\n**- **_An ongoing theme in my newsletter. I will publish strategies and topics relating to the happenings I experience in the race of marketing, publishing and selling on the web._\n\nThis month's topic is linkbait. One of the best ways to increase search engine\noptimization performance is improving your rankings by growing your list of\ninbound links to your Web site. This is one strategy that takes persistence\nand pays off over time. Without a strong link building strategy it can be very\ndifficult to gain higher rankings in the search engine results pages (SERPs),\nespecially for competitive keywords or search phrases. The goal is to be\nnumber one on the first page of your favorite search engine using a phase that\nis searched for very often by your desired audience. The linkbait that I am\ncurrently offering is a free website theme for bloggers.\n\nThis month I released downloadable file as blog theme for photo enthusiasts in\norder to gain more inbound links to my personal blog. My site is managed using\nWordPress, one of the most widely used open source Web applications for online\npublishing. The WordPress site has a large community with a high volume of\nonline traffic, of which a large segment of users desire to customize their\nown blog with a custom design, free of charge!\n\nBecause I enjoy the benefit of the contributions made by this online\ncommunity, I finally took the opportunity to give back, by offering _Shoot\nIt!_ a free photo blog theme. This professional web design should prove to be\na favorite among photography enthusiasts and professionals alike. Within a\ncouple days of uploading the _Shoot It! _theme to my blog, I noticed ten\ndownloads have taken place. I believe the numbers will grow even faster once\nthe theme is listed on the WordPress theme site.\n\nAs a demonstration site, I launched a pro photo tips blog, _Take Better Photos\nNow_, with content provided by a very seasoned photographer with a passion for\nsharing tips to help people take better photos. Michael Kitada plans to\npublish tips for photography enthusiasts and this will benefit his photography\nbusiness as well by providing inbound traffic to his main Web site. His new\nblog using this photography theme already has about 100 unique visitors with\nthe first couple weeks while creating the Web site design. I anticipate that\nthe volume of links will be begin to grow from the promotion of this free\noffer and also from the links created by bloggers using the free theme.\n\n_Sites referenced:_\n\n[http://takebetterphotosnow.com](http://takebetterphotosnow.com)\n\n#### **'Highlights in Social Media' **\n\n**- **_Second theme with a focus on building your personal brand using online networking. The Internet is bringing people together and making connections for personal and professional development. Being involved socially online is a way to build new relationships with like-minded individuals._\n\nLast month, my wife and I attended a meetup in Irvine on the topic of internet\nmarketing. We both were able to learn new information and meet others involved\nin selling and promoting on the Internet. This came about by visiting\nmeetup.com and searching for internet marketing. This is the second time that\nI have searched online with the intention of learning something new, then\nfollowed up by meeting a group of like-mined people (offline and in person)\nwho share their knowledge openly among the community. Some time ago, I wanted\nto learn about podcasting (broadcasting audio using electronic media); then\nended up at a very open convention, podcamp, where I was able to ask seasoned\nveterans specific questions about new media publishing - giving me a kickstart\nwith my own podcast. Both of these experiences proved to be great networking\nevents as well.\n\nI recently became a fan another very popular social media Web site,\ntwitter.com, which works the opposite of email. You choose who you want to\nfollow (allow to speak, or tweet, with you) rather that filter out the\nmessages you want to block. On a Saturday afternoon, you may find very\ninfluential people online sharing breaking news like Microsoft (MSFT) backing\nout of their offer to buy Yahoo (YHOO). The news appears between highlights of\nsomeone bragging about a great meal or fun with friends. Twitter (micro\nblogging) is fun. At times, I will read a short comment (currently twitter\nonly allows up to 140 characters per micro message) then I'll hear the story\non the evening news and think to myself, wow, publishing has really changed.\nFor example, on May 3rd, I first heard about this MSFT/YHOO story on twitter;\nthen later, on May 4th, I see the story published on the New York Times Web\nsite. The internet is bringing conversations together among like minded\nindividuals who naturally attract an audience with similar interests and\nspeeds faster that ever before.\n\n_Sites referenced: _\n\n[http://www.meetup.com/](http://www.meetup.com/)_\n\n_[http://twitter.com/pixelhandler](http://twitter.com/pixelhandler) [http://ww\nw.nytimes.com/2008/05/04/technology/04soft.html?_r=3&hp&oref=slogin&oref=slogi\nn&oref=slogin](http://www.nytimes.com/2008/05/04/technology/04soft.html?_r=3&h\np&oref=slogin&oref=slogin&oref=slogin )\n\n_Found on the PodSafeMusicNetwork: _ **Get Three Coffins Ready** is a Denver\nbased Instrumental Surf-Rock band. Listen the track titled, _Action!_ - at the\nend of the broadcast!	_Well, it's about time!_ I finally committed myself to personal branding and\nsharing both professional topics and personal insights/news via an email\nnewsletter. This mailing is managed by an online database for easy opt-in and\nout-out choices. I am sending you this message since we have been in contact\neither professionally or personally (friends and family included).	internet-marketing-report-and-social-media-highlights-newsletter-may-08	Internet Marketing Report and Social Media Highlights Newsletter - May '08	2008-05-05	2015-05-07 17:03:21.553572	2015-05-07 17:03:21.553572	1	'/2008/05/04/technology/04soft.html?_r=3&h':904C '/2008/05/04/technology/04soft.html?_r=3&hp&oref=slogin&oref=slogi':898C '/](http://www.meetup.com/)_':891C '/pixelhandler](http://twitter.com/pixelhandler)':894C '08':10A '100':463C '140':808C '3rd':836C '4th':850C 'abl':579C,673C 'action':933C 'afternoon':750C 'ago':649C 'alik':352C 'allow':730C,805C 'alreadi':460C 'also':497C 'among':347C,644C,869C 'anoth':709C 'anticip':478C 'appear':775C 'applic':269C 'ask':675C 'attend':565C 'attract':875C 'audienc':216C,877C 'audio':657C 'back':327C,764C 'band':928C 'base':923C 'becam':706C 'begin':486C 'believ':374C 'benefit':311C,438C 'best':124C 'better':403C,424C 'bill':81C 'block':746C 'blog':238C,253C,299C,335C,365C,401C,455C,791C 'blogger':230C,503C 'brag':780C 'brand':22B,525C 'break':759C 'bring':532C,866C 'broadcast':656C,939C 'build':163C,522C,551C 'busi':441C 'buy':770C 'came':596C 'chang':831C 'charact':809C 'charg':306C 'choic':52B 'choos':724C 'coffin':918C 'comment':801C 'commit':18B 'communiti':279C,319C,646C 'competit':183C 'connect':537C 'contact':64B 'content':407C 'contribut':314C 'convent':668C 'convers':867C 'coupl':355C,469C 'creat':472C,501C 'current':222C,802C 'custom':296C,302C 'databas':42B 'day':356C 'demonstr':393C 'denver':922C 'design':303C,340C,476C 'desir':215C,294C 'develop':542C 'difficult':169C 'download':235C,369C 'easi':44B 'either':65B 'electron':659C 'email':33B,722C 'end':662C,936C 'engin':129C,177C,203C 'enjoy':309C 'enthusiast':242C,349C,434C 'especi':181C 'even':379C,821C 'event':701C 'ever':885C 'exampl':833C 'experi':103C,695C 'famili':71B 'fan':708C 'faster':380C,883C 'favorit':201C,346C 'file':236C 'filter':739C 'final':17B,321C 'find':753C 'first':197C,468C,838C 'focus':520C 'follow':624C,729C 'found':912C 'free':226C,304C,333C,494C,506C 'friend':69B,788C 'fun':786C,793C 'gain':171C,246C 'get':916C 'give':326C,684C 'goal':189C 'great':699C,783C 'group':629C 'grow':137C,378C,488C 'happen':101C 'hear':816C 'heard':839C 'help':421C 'high':282C 'higher':172C 'highlight':7A,79C,512C,777C 'improv':133C 'inbound':141C,248C,446C 'includ':72B 'increas':127C 'individu':872C 'individuals._':558C 'influenti':755C 'inform':583C 'insights/news':30B 'instrument':924C 'intent':618C 'interest':880C 'internet':1A,73C,83C,530C,574C,594C,604C,864C 'involv':544C,587C 'irvin':569C 'keyword':184C 'kickstart':687C 'kitada':427C 'knowledg':642C 'larg':278C,290C 'last':559C 'later':847C 'launch':396C 'learn':581C,620C,653C 'like':556C,632C,761C,870C 'like-min':631C 'like-mind':555C 'link':142C,162C,249C,483C,500C 'linkbait':120C,218C 'list':139C,385C 'listen':929C 'll':815C 'made':315C 'mail':36B 'main':450C 'make':536C 'manag':38B,257C 'market':2A,74C,84C,108C,575C,605C 'may':9A,752C,835C,849C 'meal':784C 'media':6A,78C,515C,660C,682C,713C 'meet':585C,627C 'meetup':567C 'meetup.com':600C 'messag':58B,742C,812C 'michael':426C 'micro':790C,811C 'microsoft':762C 'mind':557C,871C 'mine':633C 'month':116C,232C,560C 'msft':763C 'msft/yhoo':842C 'n':899C 'natur':874C 'network':528C,700C 'new':454C,552C,582C,622C,681C,858C 'news':760C,774C,822C 'newslett':8A,34B,80C,91C 'notic':367C 'number':193C,376C 'offer':223C,329C,495C,768C 'offlin':635C 'often':212C 'one':121C,149C,194C,260C 'ongo':87C 'onlin':41B,271C,285C,318C,527C,546C,615C,757C 'open':266C,643C,667C 'opportun':324C 'opposit':720C 'opt':46B 'opt-in':45B 'optim':130C 'order':244C 'oref':900C,906C,908C,910C 'other':586C 'out-out':49B 'p':905C 'page':179C,198C 'passion':416C 'pay':155C 'peopl':422C,533C,634C,756C 'per':810C 'perform':131C 'persist':153C 'person':21B,29B,68B,252C,524C,539C,638C 'phase':206C 'photo':241C,334C,399C,404C,425C 'photograph':413C 'photographi':348C,433C,440C,458C 'phrase':187C 'place':372C 'plan':428C 'podcamp':669C 'podcast':655C,691C 'podsafemusicnetwork':915C 'popular':711C 'pro':398C 'profession':26B,66B,338C,351C,541C 'promot':491C,591C 'prove':342C,696C 'provid':408C,445C 'publish':94C,109C,272C,430C,683C,828C,855C 'question':679C 'race':106C 'rank':135C,173C 'rather':737C 'read':798C 'readi':919C 'realli':830C 'recent':705C 'referenc':509C,888C 'relat':98C 'relationship':553C 'releas':234C 'report':3A,75C,85C 'result':178C 'rock':927C 'saturday':749C 'search':128C,176C,186C,202C,209C,602C,614C 'season':412C,676C 'second':516C,609C 'see':852C 'segment':291C 'sell':111C,589C 'send':55B 'serp':180C 'share':24B,418C,640C,758C 'shoot':330C,360C 'short':800C 'similar':879C 'sinc':59B 'site':146C,255C,275C,390C,394C,452C,475C,508C,715C,862C,887C 'slogin':901C,907C,909C,911C 'social':5A,77C,514C,545C,712C 'someon':779C 'someth':621C 'sourc':267C 'speak':732C 'specif':678C 'speed':882C 'stori':818C,843C,854C 'strategi':95C,150C,164C 'strong':161C 'surf':926C 'surf-rock':925C 'take':152C,402C,423C 'takebetterphotosnow.com':510C,511C 'taken':371C 'ten':368C 'theme':88C,228C,239C,336C,362C,383C,389C,459C,507C,517C 'think':824C 'three':917C 'time':15B,158C,610C,648C,795C,860C 'tip':400C,419C,431C 'titl':932C 'togeth':534C,868C 'took':322C 'topic':27B,97C,118C,572C 'track':931C 'traffic':286C,447C 'tweet':734C 'twitter':789C,803C,845C 'twitter.com':716C,893C 'twitter.com/pixelhandler](http://twitter.com/pixelhandler)':892C 'uniqu':464C 'upload':358C 'use':204C,258C,265C,456C,504C,526C,658C 'user':293C 'veteran':677C 'via':31B 'visit':599C 'visitor':465C 'volum':283C,481C 'w.nytimes.com':897C 'w.nytimes.com/2008/05/04/technology/04soft.html?_r=3&hp&oref=slogin&oref=slogi':896C 'want':651C,727C,744C 'way':125C,549C 'web':145C,268C,339C,451C,474C,714C,861C 'web._':114C 'websit':227C 'week':470C 'well':11B,443C,703C 'wide':264C 'wife':562C 'within':353C 'without':159C 'wordpress':259C,274C,388C 'work':718C 'wow':827C 'ww':895C 'www.meetup.com':890C 'www.meetup.com/](http://www.meetup.com/)_':889C 'www.nytimes.com':903C 'www.nytimes.com/2008/05/04/technology/04soft.html?_r=3&h':902C 'yahoo':771C 'yhoo':772C 'york':859C	published	pixelhandler
1	## Lightning-Approach Workflow\nThis approach is the default setup when using ember-cli-deploy and uses a Redis\nstore for the versions of your index.html file that you deploy. This strategy allows\nfor (pre)viewing any deployed version using an URL parameter.\n\nFor the application's asset files (CSS, JavaScript, images, etc) this workflow pushes\nthem to an S3 bucket.\n\nBelow is the documentation and includes a diagram of the approach:\n\n* See [Documentation][lightning docs]\n\n[lightning docs]: https://github.com/ember-cli/ember-cli-deploy#lightning-approach-workflow\n\n## Deploy an App with ember-cli-deploy\n\n[How to use]…\n\n    ember deploy --environment production\n    ember deploy:list --environment production\n\nPick a version to deploy\n\n    ember deploy:activate --revision chat-app:XXXXXX --environment production\n\nYou can preview a version using the `index_key` parameter, like so\n<http://chat.pixelhandler.com/?index_key=cde6f62> where the parameter represents a\ncommit hash that has been deployed (but may not be activated yet).\n\n[How to use]: https://github.com/ember-cli/ember-cli-deploy#how-to-use\n\n\n## Firebase\n\nCreate your own firebase account, [signup here](https://www.firebase.com/signup/).\nThen your app will have a real-time backend. In your [app config] use your account url:\n\n* Mine is: `https://pixelhandler.firebaseio.com/`\n* I set the above URL in the config/environment.js file of my Ember app\n\n[app config]: https://github.com/Ember-SC/ember-cli-screencast/blob/master/config/environment.js#L9\n\n### Security & Rules\n\nIn your Firebase Application Dashboard, setup the rules for your data. The collection\nthat the application uses is `messages`.\n\n    {\n      "rules": {\n        ".read": true,\n        ".write":false,\n        "messages":{\n          ".read": true,\n          ".write": true,\n          ".indexOn": "timestamp"\n        }\n      }\n    }\n\n## Setup an Ubuntu box with DigitalOcean\n\n[DigitalOcean] has excellent guides on using their hosting service. See this guide\nwhich details the setup of an Ubuntu box:\n\n* Guide: [Initial Server Setup](https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-14-04)\n\n\n## Install Node.js\n\nI recommend using [NVM], Node Version Managager, to install versions of Node.js\n\n* See [NVM]\n* Use [forever] to continuously run a Node.js app\n\n[NVM]: https://github.com/creationix/nvm\n[Node.js]: https://nodejs.org/\n[forever]: https://github.com/foreverjs/forever\n\n## Install Nginx\n\n* Guide: [how-to-install](https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-14-04-lts)\n\nYou may need to edit your [nginx] config file or perhaps view the logs…\n\n[nginx]: http://nginx.org/en/\n\n### Config\n\n    sudo vim /etc/nginx/nginx.conf\n\n### Logs\n\n    tail -f /var/log/nginx/access.log\n    sudo tail -f /var/log/nginx/error.log\n\n### Restart\n\n    sudo service nginx restart\n\n\n## Install Redis\n\n* Guide: [how-to-install](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-redis)\n\nSee the [Redis] downloads page for the current version:\n\n* <http://redis.io/download>\n\n### Post Install Setup\n\nSetup your redis server with a script…\n\n    cd /usr/local/src/redis-3.0.0/utils\n    sudo ./install_server.sh\n\nI used port 6379 which setups up a config file at /etc/redis/6379.conf\n\n### Config\n\nBind your IP address for the server your app runs on, mine is on `107.170.232.223`.\n\n    vim /etc/redis/6379.conf\n\n    bind 107.170.232.223 127.0.0.1\n    requirepass yoursecretkeyshouldbeverylongyouknowredisisfastright\n\nNotice in the config file that you are encouraged to use a long passwords\n\n### Connecting\n\nI'm using an environment variable for my redis password\n\n    redis-cli -h pixelhandler.com -p 6379 -a $REDIS_SECRET\n\nOr locally on the Ubuntu box:\n\n    redis-cli -h 127.0.0.1 -p 6379\n\nThen enter the `AUTH` command followed by your secret key\n\n### Start/Stop\n\n    sudo service redis_6379 start\n    sudo service redis_6379 stop\n\n### Show the keys\n\nOnce you deploy a version you can connect then list the keys that are stored:\n\n    keys *\n\n### Install Git\n\nIf not already installed setup your box to use [git]:\n\n* Guide: [how-to-install](https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04)\n\n[git]: http://git-scm.com\n\n\n## AWS S3 Bucket\n\nI created a bucket named `chat-app` to host the application assets: the `app` JS & CSS as well ass the contents of the `public` directory of the client application.\n\n* My Endpoint: chat-app.s3-website-us-east-1.amazonaws.com\n\n### Bucket Policy\n\nI used the policy generator tool in AWS to setup a bucket policy for any\nWeb visitor to read the assets in the bucket for the chat-app:\n\n    {\n      "Version": "2012-10-17",\n      "Statement": [\n        {\n          "Sid": "AllowPublicRead",\n          "Action": [\n            "s3:GetObject"\n          ],\n          "Effect": "Allow",\n          "Resource": "arn:aws:s3:::chat-app/*",\n          "Principal": {\n            "AWS": "*"\n          }\n        }\n      ]\n    }\n\nI tested an upload of a simple index.html file to be sure the setup works, which will\nget clobbered by the deployment anyway. The index.html file that gets pushed to the\nbucket will not be used to serve the website.\n\n### Bucket User\n\nThis is a good tutorial on configuring your S3 bucket for deploying\nassets for your Ember application:\n\n* Example setup: [deploy to s3](http://kerrygallagher.co.uk/deploying-an-ember-cli-application-to-amazon-s3/)\n\nYou'll need to setup an user that can write to your bucket, use the AWS console tools\nto create new user for your S3 bucket:\n\n* IAM policy, services -> IAM -> Create New Users\n  * [AWS users]\n\nYou'll need to copy the access key and secret access key to use in your deployment\nconfig for pushing assets to your S3 bucket.\n\nUser's *Inline Policy* for the bucket, notice that the bucket name is the same as\nmy app name:\n\n    {\n      "Statement": [\n        {\n          "Action": "s3:*",\n          "Effect": "Allow",\n          "Resource": [\n            "arn:aws:s3:::chat-app",\n            "arn:aws:s3:::chat-app/*"\n          ]\n        }\n      ]\n    }\n\n### Environment Variables\n\nThe chat app's deployment script will use environment variables for:\n\n* `AWS_ACCESS_KEY`, `AWS_SECRET_ACCESS_KEY`\n* See [AWS users] for your user's access keys\n\n[AWS users]: https://console.aws.amazon.com/iam/home#users\n\n\n## Chat App\n\n* Running at <http://chat.pixelhandler.com/>\n* Source for server app: [ember-lightning](https://github.com/Ember-SC/ember-lightning)\n* Source for client app: [ember-cli-screencast](https://github.com/Ember-SC/ember-cli-screencast)\n\nServer app needs config setup in an `app.json` file, copy the [app.example.json]\non your box.\n\n[app.example.json]: https://github.com/Ember-SC/ember-lightning/blob/master/app.example.json\n\nClient app is using environment variables in the config/deploy.js file, I created a dot file that I source when running the `ember deploy` command. See deploy section above, which lists out the deployment commands.\n\nClone the example app and install the dependencies:\n\n    git clone git@github.com:Ember-SC/ember-cli-screencast.git ./chat-app-client\n    cd chat-app-client\n    npm install\n    bower install\n\nTry out `ember server` locally and visit <http://localhost:4200>\n\nIf the app works get ready to deploy to your production box.\n\nFirst setup your server with Node.js & Redis to try out your first deployment with\nember-cli-deploy. The following section explains the hosting setup for your\nproduction server…\n\n### Vhost Setup\n\nUsing nginx I setup a proxy to the port that the node application will run on.\n\n* See: [host multiple node.js apps](https://www.digitalocean.com/community/tutorials/how-to-host-multiple-node-js-applications-on-a-single-vps-with-nginx-forever-and-crontab)\n\n#### DNS\n\nI used Amazon's Route 53 product for my DNS. So I added a subdomain on\nmy hosted zone:\n\n    chat.pixelhandler.com.\n    A\n    107.170.232.223\n\n#### Serve up the Index.html page\n\nWhen using ember-cli-deploy-redis, versions of your app will have a key that\nis a combination of your app name and the commit hash of the release.\nYour Redis DB will store the various deployed versions of your index page.\n\nSee [ember-cli-deploy adapters](https://github.com/ember-cli/ember-cli-deploy#existing-custom-adapters) for existing index adapters\n\nI setup a `www` directory in my home user, then used git to clone the\nexample [ember-lightning] app which connects to redis and serves up the\n[index.html page in a node.js app][index.js]. The app also accepts an URL\nquery parameter to get the version of the index.html to send back to the browser.\n\nSee: [ember-lightning][ember-lightning fork]\n\n    cd ~/www/\n    git clone https://github.com/Ember-SC/ember-lightning ./chat-app-server\n    cd ./chat-app-server\n\n[ember-lightning fork]: https://github.com/Ember-SC/ember-lightning\n[index.js]: https://github.com/Ember-SC/ember-lightning/blob/master/index.js\n\nRun with forever…\n\n    nvm use 0.12.2\n    npm install\n    forever start -c "node --harmony" -o ~/www/chat-app-server/out.log -e ~/www/chat-app-server/err.log --spinSleepTime 10000 --minUptime 10000 ~/www/chat-app-server/index.js >> ~/www/chat-app-server/out.log 2>&1\n\n#### Nginx config for the chat-app\n\nCreate a conf file for your vhost, e.g. `/etc/nginx/conf.d/chat.pixelhandler.com.conf`\n\nThis uses a proxy pass to the IP and port that the node.js app runs on. I'm running\non port 8787.\n\n    server {\n      listen 80;\n\n      server_name chat.pixelhandler.com;\n\n      location / {\n        proxy_pass http://107.170.232.223:8787;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n      }\n    }\n\nRestart nginx\n\n    sudo service nginx restart\n\n\n## Recap\n\nI used an Ubuntu box to deploy a client Web applicaiton that uses Firebase as a\nbackend. These notes provide an exercise in learning to deploy an Ember.js\napplication built with Ember CLI.\n\n* See the [screencast] on building the chat-app by [Sara Robinson] of [Firebase]\n* My [fork of the source code][chat app fork]\n* The server app the renders the current version and allows previewing\n  other deployed versions: [ember-lightning fork]\n\n[screencast]: https://www.firebase.com/blog/2015-03-13-ember-cli-in-9-minutes.html\n[chat app fork]: https://github.com/Ember-SC/ember-cli-screencast\n\nI chose a Node.js app to serve up the index.html page in anticipation of\nthe [FastBoot] addon to render an [Ember.js] app on the server.\n\n[FastBoot]: https://github.com/tildeio/ember-cli-fastboot#ember-fastboot\n[Ember.js]: http://emberjs.com\n\nConsider using my referal link to sign up for [DigitalOcean] and try out\nember-cli-deploy yourself.\n\nSome alternatives to setting up your own box are:\n\n* <http://redistogo.com>\n* <https://www.heroku.com/>\n\nSo if you what to chat about this article visit [chat.pixelhandler.com].\n\n[chat.pixelhandler.com]: http://chat.pixelhandler.com\n[DigitalOcean]: https://www.digitalocean.com/?refcode=906d4e66b348\n[Ember CLI]: http://www.ember-cli.com\n[ember-cli-deploy]: https://github.com/ember-cli/ember-cli-deploy\n[Firebase]: https://www.firebase.com\n[Redis]: http://redis.io\n[Sara Robinson]: https://github.com/sararob	The notes below demonstrate how to setup a chat application, built with [Ember CLI], that uses a backend service from [Firebase]. The example walks through the setup and\ndeployment steps for pushing a client application to an Ubuntu box hosted on\n[DigitalOcean]. [Node.js] will be used to serve up the `index.html` file that is\nstored as the _current_ version in a [Redis] database.\n\nIn this practical example I'll borrow an [Ember.js] application created with\nEmber CLI by [Sara Robinson] of [Firebase]\n\n* See [ember-cli-deploy] this will cover the "Lightning-Approach Workflow"\n\n[DigitalOcean]: https://www.digitalocean.com/?refcode=906d4e66b348\n[Ember CLI]: http://www.ember-cli.com\n[Ember.js]: http://emberjs.com\n[ember-cli-deploy]: https://github.com/ember-cli/ember-cli-deploy\n[Firebase]: https://www.firebase.com\n[Node.js]: https://nodejs.org/\n[Redis]: http://redis.io\n[Sara Robinson]: https://github.com/sararob	practical-deploy-an-ember-app-with-ember-cli-deploy-on-digitalocean	Practical: Deploy an Ember App with ember-cli-deploy	2015-04-25	2015-05-07 17:03:21.210599	2015-12-29 05:22:38.257906	1	'-10':733C '-17':734C '/?index_key=cde6f62':264C '/?refcode=906d4e66b348':109B,1565C '/blog/2015-03-13-ember-cli-in-9-minutes.html':1482C '/chat-app-client':1044C '/chat-app-server':1285C,1287C '/community/tutorials/how-to-host-multiple-node-js-applications-on-a-single-vps-with-nginx-forever-and-crontab)':1129C '/community/tutorials/how-to-install-and-use-redis)':492C '/community/tutorials/how-to-install-git-on-ubuntu-14-04)':661C '/community/tutorials/how-to-install-nginx-on-ubuntu-14-04-lts)':447C '/community/tutorials/initial-server-setup-with-ubuntu-14-04)':403C '/creationix/nvm':431C '/deploying-an-ember-cli-application-to-amazon-s3/)':818C '/download':504C '/ember-cli-screencast.git':1043C '/ember-cli/ember-cli-deploy':121B,1575C '/ember-cli/ember-cli-deploy#existing-custom-adapters)':1209C '/ember-cli/ember-cli-deploy#how-to-use':287C '/ember-cli/ember-cli-deploy#lightning-approach-workflow':214C '/ember-sc/ember-cli-screencast':1488C '/ember-sc/ember-cli-screencast)':975C '/ember-sc/ember-cli-screencast/blob/master/config/environment.js#l9':337C '/ember-sc/ember-lightning':1284C,1294C '/ember-sc/ember-lightning)':964C '/ember-sc/ember-lightning/blob/master/app.example.json':994C '/ember-sc/ember-lightning/blob/master/index.js':1298C '/en/':465C '/etc/nginx/conf.d/chat.pixelhandler.com.conf':1339C '/etc/nginx/nginx.conf':469C '/etc/redis/6379.conf':530C,548C '/foreverjs/forever':437C '/iam/home#users':949C '/install_server.sh':518C '/sararob':132B,1584C '/signup/).':298C '/tildeio/ember-cli-fastboot#ember-fastboot':1517C '/usr/local/src/redis-3.0.0/utils':516C '/var/log/nginx/access.log':473C '/var/log/nginx/error.log':477C '/www':1279C '/www/chat-app-server/err.log':1315C '/www/chat-app-server/index.js':1320C '/www/chat-app-server/out.log':1313C,1321C '0.12.2':1304C '1':1323C '1.1':1376C '10000':1317C,1319C '107.170.232.223':546C,550C,1152C,1371C '127.0.0.1':551C,599C '2':1322C '2012':732C '4200':1062C '53':1136C '6379':522C,585C,601C,616C,621C '80':1364C '8787':1361C,1372C 'accept':1252C 'access':860C,864C,930C,934C,943C 'account':293C,315C 'action':738C,899C 'activ':242C,280C 'ad':1143C 'adapt':1206C,1213C 'addon':1505C 'address':535C 'allow':166C,742C,902C,1470C 'allowpublicread':737C 'alreadi':646C 'also':1251C 'altern':1539C 'amazon':1133C 'anticip':1501C 'anyway':774C 'app':5A,217C,246C,301C,311C,332C,333C,427C,540C,674C,681C,730C,749C,896C,909C,915C,920C,951C,958C,968C,977C,996C,1032C,1048C,1065C,1126C,1168C,1179C,1233C,1247C,1250C,1330C,1353C,1446C,1459C,1463C,1484C,1493C,1510C 'app.example.json':987C,991C 'app.json':983C 'applic':20B,45B,83B,179C,343C,355C,678C,696C,810C,1118C,1433C 'applicaiton':1415C 'approach':104B,135C,138C,205C 'arn':744C,904C,910C 'articl':1557C 'ass':686C 'asset':181C,679C,722C,806C,874C 'auth':605C 'aw':664C,709C,745C,751C,834C,852C,905C,911C,929C,932C,937C,945C 'back':1266C 'backend':28B,308C,1421C 'bind':532C,549C 'borrow':80B 'bower':1052C 'box':49B,374C,396C,594C,650C,990C,1074C,1409C,1545C 'browser':1269C 'bucket':194C,666C,670C,700C,713C,725C,783C,792C,803C,831C,844C,878C,885C,889C 'build':1442C 'built':21B,1434C 'bypass':1395C 'c':1309C 'cach':1394C 'cd':515C,1045C,1278C,1286C 'chat':19B,245C,673C,729C,748C,908C,914C,919C,950C,1047C,1329C,1445C,1458C,1483C,1554C 'chat-app':244C,672C,728C,747C,907C,913C,1328C,1444C 'chat-app-cli':1046C 'chat-app.s3-website-us-east-1.amazonaws.com':699C 'chat.pixelhandler.com':263C,954C,1150C,1367C,1559C,1560C,1561C 'chat.pixelhandler.com/?index_key=cde6f62':262C 'chose':1490C 'cli':9A,24B,87B,96B,111B,117B,147C,221C,581C,597C,971C,1091C,1162C,1204C,1437C,1535C,1567C,1571C 'client':44B,695C,967C,995C,1049C,1413C 'clobber':770C 'clone':1029C,1038C,1227C,1281C 'code':1457C 'collect':352C 'combin':1176C 'command':606C,1018C,1028C 'commit':270C,1183C 'conf':1333C 'config':312C,334C,455C,466C,527C,531C,557C,871C,979C,1325C 'config/deploy.js':1003C 'config/environment.js':327C 'configur':800C 'connect':568C,633C,1235C,1386C 'consid':1520C 'consol':835C 'console.aws.amazon.com':948C 'console.aws.amazon.com/iam/home#users':947C 'content':688C 'continu':423C 'copi':858C,985C 'cover':100B 'creat':84B,289C,668C,838C,849C,1006C,1331C 'css':183C,683C 'current':68B,500C,1467C 'dashboard':344C 'data':350C 'databas':73B 'db':1190C 'default':141C 'demonstr':14B 'depend':1036C 'deploy':2A,10A,39B,97B,118B,148C,163C,171C,215C,222C,227C,231C,239C,241C,275C,628C,773C,805C,813C,870C,922C,1017C,1020C,1027C,1070C,1087C,1092C,1163C,1195C,1205C,1411C,1430C,1473C,1536C,1572C 'detail':390C 'diagram':202C 'digitalocean':52B,106B,376C,377C,1529C,1562C 'directori':692C,1218C 'dns':1130C,1140C 'doc':209C,211C 'document':198C,207C 'dot':1008C 'download':496C 'e':1314C 'e.g':1338C 'edit':452C 'effect':741C,901C 'ember':4A,8A,23B,86B,95B,110B,116B,146C,220C,226C,230C,240C,331C,809C,960C,970C,1016C,1041C,1056C,1090C,1161C,1203C,1231C,1272C,1275C,1289C,1436C,1476C,1534C,1566C,1570C 'ember-cli-deploy':7A,94B,115B,145C,219C,1089C,1202C,1533C,1569C 'ember-cli-deploy-redi':1160C 'ember-cli-screencast':969C 'ember-lightn':959C,1230C,1271C,1274C,1288C,1475C 'ember-sc':1040C 'ember.js':82B,113B,1432C,1509C,1518C 'emberjs.com':114B,1519C 'encourag':562C 'endpoint':698C 'enter':603C 'environ':228C,233C,248C,573C,916C,926C,999C 'etc':186C 'exampl':33B,77B,811C,1031C,1229C 'excel':379C 'exercis':1426C 'exist':1211C 'explain':1096C 'f':472C,476C 'fals':363C 'fastboot':1504C,1514C 'file':62B,160C,182C,328C,456C,528C,558C,760C,777C,984C,1004C,1009C,1334C 'firebas':31B,92B,122B,288C,292C,342C,1418C,1451C,1576C 'first':1075C,1086C 'follow':607C,1094C 'forev':421C,434C,1301C,1307C 'fork':1277C,1291C,1453C,1460C,1478C,1485C 'generat':706C 'get':769C,779C,1067C,1258C 'getobject':740C 'git':643C,653C,662C,1037C,1225C,1280C 'git-scm.com':663C 'git@github.com':1039C 'github.com':120B,131B,213C,286C,336C,430C,436C,963C,974C,993C,1208C,1283C,1293C,1297C,1487C,1516C,1574C,1583C 'github.com/creationix/nvm':429C 'github.com/ember-cli/ember-cli-deploy':119B,1573C 'github.com/ember-cli/ember-cli-deploy#existing-custom-adapters)':1207C 'github.com/ember-cli/ember-cli-deploy#how-to-use':285C 'github.com/ember-cli/ember-cli-deploy#lightning-approach-workflow':212C 'github.com/ember-sc/ember-cli-screencast':1486C 'github.com/ember-sc/ember-cli-screencast)':973C 'github.com/ember-sc/ember-cli-screencast/blob/master/config/environment.js#l9':335C 'github.com/ember-sc/ember-lightning':1282C,1292C 'github.com/ember-sc/ember-lightning)':962C 'github.com/ember-sc/ember-lightning/blob/master/app.example.json':992C 'github.com/ember-sc/ember-lightning/blob/master/index.js':1296C 'github.com/foreverjs/forever':435C 'github.com/sararob':130B,1582C 'github.com/tildeio/ember-cli-fastboot#ember-fastboot':1515C 'good':797C 'guid':380C,388C,397C,440C,485C,654C 'h':582C,598C 'harmoni':1311C 'hash':271C,1184C 'header':1379C,1385C,1390C 'home':1221C 'host':50B,384C,676C,1098C,1123C,1148C,1391C,1392C 'how-to-instal':441C,486C,655C 'http':1374C,1381C,1396C 'iam':845C,848C 'imag':185C 'includ':200C 'index':257C,1199C,1212C 'index.html':61B,159C,759C,776C,1156C,1242C,1263C,1498C 'index.js':1248C,1295C 'indexon':369C 'initi':398C 'inlin':881C 'instal':404C,414C,438C,444C,483C,489C,506C,642C,647C,658C,1034C,1051C,1053C,1306C 'ip':534C,1347C 'javascript':184C 'js':682C 'kerrygallagher.co.uk':817C 'kerrygallagher.co.uk/deploying-an-ember-cli-application-to-amazon-s3/)':816C 'key':258C,611C,625C,637C,641C,861C,865C,931C,935C,944C,1172C 'learn':1428C 'lightn':103B,134C,208C,210C,961C,1232C,1273C,1276C,1290C,1477C 'lightning-approach':102B,133C 'like':260C 'link':1524C 'list':232C,635C,1024C 'listen':1363C 'll':79B,820C,855C 'local':590C,1058C 'localhost':1061C 'locat':1368C 'log':461C,470C 'long':566C 'm':570C,1357C 'managag':412C 'may':277C,449C 'messag':358C,364C 'mine':317C,543C 'minuptim':1318C 'multipl':1124C 'name':671C,890C,897C,1180C,1366C 'need':450C,821C,856C,978C 'new':839C,850C 'nginx':439C,454C,462C,481C,1107C,1324C,1399C,1402C 'nginx.org':464C 'nginx.org/en/':463C 'node':410C,1117C,1310C 'node.js':53B,124B,405C,417C,426C,432C,1080C,1125C,1246C,1352C,1492C 'nodejs.org':125B,433C 'note':12B,1423C 'notic':554C,886C 'npm':1050C,1305C 'nvm':409C,419C,428C,1302C 'o':1312C 'p':584C,600C 'page':497C,1157C,1200C,1243C,1499C 'paramet':176C,259C,267C,1256C 'pass':1344C,1370C 'password':567C,578C 'perhap':458C 'pick':235C 'pixelhandler.com':583C 'pixelhandler.firebaseio.com':319C 'polici':701C,705C,714C,846C,882C 'port':521C,1114C,1349C,1360C 'post':505C 'practic':1A,76B 'pre':168C 'preview':252C,1471C 'princip':750C 'product':229C,234C,249C,1073C,1102C,1137C 'provid':1424C 'proxi':1111C,1343C,1369C,1373C,1377C,1383C,1388C,1393C 'public':691C 'push':42B,189C,780C,873C 'queri':1255C 'read':360C,365C,720C 'readi':1068C 'real':306C 'real-tim':305C 'recap':1404C 'recommend':407C 'redi':72B,126B,152C,484C,495C,510C,577C,580C,587C,596C,615C,620C,1081C,1164C,1189C,1237C,1578C 'redis-c':579C,595C 'redis.io':127B,503C,1579C 'redis.io/download':502C 'redistogo.com':1547C 'refer':1523C 'releas':1187C 'render':1465C,1507C 'repres':268C 'requirepass':552C 'resourc':743C,903C 'restart':478C,482C,1398C,1403C 'revis':243C 'robinson':90B,129B,1449C,1581C 'rout':1135C 'rule':339C,347C,359C 'run':424C,541C,952C,1014C,1120C,1299C,1354C,1358C 's3':193C,665C,739C,746C,802C,815C,843C,877C,900C,906C,912C 'sara':89B,128B,1448C,1580C 'sc':1042C 'screencast':972C,1440C,1479C 'script':514C,923C 'secret':588C,610C,863C,933C 'section':1021C,1095C 'secur':338C 'see':93B,206C,386C,418C,493C,936C,1019C,1122C,1201C,1270C,1438C 'send':1265C 'serv':58B,789C,1153C,1239C,1495C 'server':399C,511C,538C,957C,976C,1057C,1078C,1103C,1362C,1365C,1462C,1513C 'servic':29B,385C,480C,614C,619C,847C,1401C 'set':321C,1378C,1384C,1389C,1541C 'setup':17B,37B,142C,345C,371C,392C,400C,507C,508C,524C,648C,711C,765C,812C,823C,980C,1076C,1099C,1105C,1109C,1215C 'show':623C 'sid':736C 'sign':1526C 'signup':294C 'simpl':758C 'sourc':955C,965C,1012C,1456C 'spinsleeptim':1316C 'start':617C,1308C 'start/stop':612C 'statement':735C,898C 'step':40B 'stop':622C 'store':65B,153C,640C,1192C 'strategi':165C 'subdomain':1145C 'sudo':467C,474C,479C,517C,613C,618C,1400C 'sure':763C 'tail':471C,475C 'test':753C 'time':307C 'timestamp':370C 'tool':707C,836C 'tri':1054C,1083C,1531C 'true':361C,366C,368C 'tutori':798C 'ubuntu':48B,373C,395C,593C,1408C 'upgrad':1380C,1382C,1387C,1397C 'upload':755C 'url':175C,316C,324C,1254C 'use':26B,56B,144C,150C,173C,225C,255C,284C,313C,356C,382C,408C,420C,520C,564C,571C,652C,703C,787C,832C,867C,925C,998C,1106C,1132C,1159C,1224C,1303C,1341C,1406C,1417C,1521C 'user':793C,825C,840C,851C,853C,879C,938C,941C,946C,1222C 'variabl':574C,917C,927C,1000C 'various':1194C 'version':69B,156C,172C,237C,254C,411C,415C,501C,630C,731C,1165C,1196C,1260C,1375C,1468C,1474C 'vhost':1104C,1337C 'view':169C,459C 'vim':468C,547C 'visit':1060C,1558C 'visitor':718C 'walk':34B 'web':717C,1414C 'websit':791C 'well':685C 'work':766C,1066C 'workflow':105B,136C,188C 'write':362C,367C,828C 'www':1217C 'www.digitalocean.com':108B,402C,446C,491C,660C,1128C,1564C 'www.digitalocean.com/?refcode=906d4e66b348':107B,1563C 'www.digitalocean.com/community/tutorials/how-to-host-multiple-node-js-applications-on-a-single-vps-with-nginx-forever-and-crontab)':1127C 'www.digitalocean.com/community/tutorials/how-to-install-and-use-redis)':490C 'www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04)':659C 'www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-14-04-lts)':445C 'www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-14-04)':401C 'www.ember-cli.com':112B,1568C 'www.firebase.com':123B,297C,1481C,1577C 'www.firebase.com/blog/2015-03-13-ember-cli-in-9-minutes.html':1480C 'www.firebase.com/signup/).':296C 'www.heroku.com':1548C 'xxxxxx':247C 'yet':281C 'yoursecretkeyshouldbeverylongyouknowredisisfastright':553C 'zone':1149C	published	pixelhandler
61	**Search**:\n\n### [What is SEO process ?](http://www.linkedin.com/answers/technology/web-development/TCH_WDD/199145-17077367?browseIdx=4&sik=1207550620415&goback=%2Eama)\n\n_Asked by C.R. in [Web\nDevelopment](http://www.linkedin.com/answers/browse/technology/web-\ndevelopment/TCH_WDD?goback=%2Eama), [Graphic\nDesign](http://www.linkedin.com/answers/browse/marketing-sales/graphic-\ndesign/MAR_GRD?goback=%2Eama)_\n\n#### Answer:\n\n"Targeting keywords and testing your results in search engines then testing\nhow real people respond to your listings in search results. Success is when a\nsearcher is looking for just what you offer and your listings in the search\nengine results page (SERPs) are relevant and the best answer to the reason\nthey started searching anyway. When your prospect finds you and stops\nsearching that is SEO at its best."\n\n###  [As an SEO client, what kinds of stats do you track? What kinds of information would you like to be able to track?](http://www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/MAR_ADP_INM/203869-2821834?browseIdx=8&sik=1207550620415&goback=%2Eama)\n\n_Asked by H.H in [Internet Marketing](http://www.linkedin.com/answers/browse\n/marketing-sales/advertising-promotion/internet-\nmarketing/MAR_ADP_INM?goback=%2Eama)_\n\n#### Answer:\n\n"SEO is a tool to reach business goals and a part of a bigger plan within an\ninternet marketing strategy. The important metrics would be directly related\nto your business goal, creating leads or converting browsers into customers,\nthen turning them into repeat customers. I track the results in SERPs for my\ntargeted keywords and watch the analytics for the landing pages with the\nappropriate calls to action to reach my goals. I also use analytics to monitor\nmy goal funnels."\n\n**Ecommerce:**\n\n###  [What % of all page views are product detail pages in ecommerce sites?](http://www.linkedin.com/answers/technology/e-commerce/TCH_ECM/204425-1612763?browseIdx=0&sik=1207550620415&goback=%2Eama)\n\n_Asked by M.J. in [E-Commerce](http://www.linkedin.com/answers/browse/techno\nlogy/e-commerce/TCH_ECM?goback=%2Eama)_\n\n#### Answer:\n\n"I just read a book titled, Web Design for ROI. The authors run an agency,\nClosed Loop Marketing (CLM), and do report on ecommerce metrics. The numbers\nmay not be based on the top 1000, but the authors, Lance Loveday and Sandra\nNiehaus, have specialized in ecommerce. I posted an audio review of the book\non my site. The metrics vary based on so many factors, I don't believe an\nindustry breakdown will help you. I would suggest that the home page\npercentage would be more like 50% rather than 15%, and many people report on a\n2-3% conversion rate. In my opinion it doesn't matter so much what the metrics\nare for other sites, it matters that you know the metrics for your site and\nwhat to do about them to improve your conversions."\n\n###  [Which are the web sites which appear to be the most profitable (return on investment)?](http://www.linkedin.com/answers/technology/e-commerce/TCH_ECM/199214-317122?browseIdx=3&sik=1207550620415&goback=%2Eama)\n\n_Asked by A.C. in [E-Commerce](http://www.linkedin.com/answers/browse/technolo\ngy/e-commerce/TCH_ECM?goback=%2Eama)_\n\n#### Answer:\n\n"Any web site that offers an informational product with a high dollar sale for\ne-commerce transactions. For example, a real estate coaching site that offers\nmembership at a premium fee would be a example of a high return on investment\nROI web site."\n\n**Social Media:**\n\n###  [Twitter: How useful is it?](http://www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/MAR_ADP_INM/205031-8169793?browseIdx=1&sik=1207550620415&goback=%2Eama)\n\n_Asked by M.S. in [Internet Marketing](http://www.linkedin.com/answers/browse\n/marketing-sales/advertising-promotion/internet-\nmarketing/MAR_ADP_INM?goback=%2Eama)_\n\n#### Answer:\n\n"I use twitter combined with my WordPress blog to show my tweets on the blog\nand also to announce my posts to the Twitter audience. I've learned that\nmarketing folks tend to go wild with it. I think the best use of twitter would\nbe to have a micro conversation; however twitter often seems more like a\nshoutbox. twitter may be one way to reduce those reply to all email updates\nwhen updating a group of friends about an event or hot subject. also seems\nlike a shameless way to get links, traffic and hopefully some other social\nbookmarking activity."\n\n**Internet marketing:**\n\n###  [10 Million Page Views A Month, Hardly Any Revenue](http://www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/MAR_ADP_INM/205027-4542288?browseIdx=2&sik=1207550620415&goback=%2Eama)\n\n_Asked by P.S. in [Internet Marketing](http://www.linkedin.com/answers/browse\n/marketing-sales/advertising-promotion/internet-\nmarketing/MAR_ADP_INM?goback=%2Eama)_\n\n#### Answer:\n\n"Patrick, you received a lot of great answers so far. I want to suggest\nincluding affilitate links in your email newsletter, like ads for cell phone\nwallpaper, ringtones, etc. Other affiliate links that may generate revenue\nfrom your audience are 'free stuff' links where the visitor completes surveys\nto win. This young audience has more time than money, finding a way to\nmonitize from their time investment in your network, or perhaps from their\nopinions may help the situation."\n\n###  [What Interview Questions Would YOU Ask a Marketing professional?](http://www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/MAR_ADP_INM/203942-3313281?browseIdx=5&sik=1207550620415&goback=%2Eama)\n\n_Asked by R.H. in [Internet Marketing](http://www.linkedin.com/answers/browse\n/marketing-sales/advertising-promotion/internet-\nmarketing/MAR_ADP_INM?goback=%2Eama)_\n\n#### Answer:\n\n" **(1)** What is your passion? **(2)** How well do you understand new media?\n**(3)** What is your experience in creating ROI within my niche market?"\n\n  * [What piece of PPC management software is the best?](http://www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/MAR_ADP_INM/122087-1202503?browseIdx=9&sik=1207550620415&goback=%2Eama)\n\n_Asked by R.D. in [Internet Marketing](http://www.linkedin.com/answers/browse\n/marketing-sales/advertising-promotion/internet-\nmarketing/MAR_ADP_INM?goback=%2Eama)_\n\n#### Answer:\n\n"I am assuming that you are already using Google Analytics in combiniation\nwith AdWords. I use them in addition to other keyword research tools like\nWordTracker.com and WebCEO."\n\n**Business: **\n\n###  [Help with small business start up/internet marketing?](http://www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/MAR_ADP_INM/201168-5850689?browseIdx=6&sik=1207550620415&goback=%2Eama)\n\n_Asked by M.L. in [Internet Marketing](http://www.linkedin.com/answers/browse\n/marketing-sales/advertising-promotion/internet-\nmarketing/MAR_ADP_INM?goback=%2Eama), [Starting\nUp](http://www.linkedin.com/answers/browse/startups-small-businesses/starting-\nup/STR_STP?goback=%2Eama)_\n\n#### Answer:\n\n"Well, I am very impressed with the community responses to your business\nproblem. My experience is that jewelry sells best in person and under good\nlighting conditions, people like to see it on before they buy. Video content\nmay be good to use personal testimonies. Also take advantage of social\nnetworks to create more in person shows. Perhaps an affiliate program would\nhelp with sales; other bloggers could offer your jewelry on their sites and\nearn commissions."\n\n###  [How to find good open source consultants for full time work?](http://www.linkedin.com/answers/technology/information-technology/computer-networking/TCH_ITS_CNW/201872-8886523?browseIdx=7&sik=1207550620415&goback=%2Eama)\n\n_Asked by R.R. in [Computer\nNetworking](http://www.linkedin.com/answers/browse/technology/information-\ntechnology/computer-networking/TCH_ITS_CNW?goback=%2Eama)_\n\n#### Answer:\n\n"Open source developers are community minded. Join the open source communities\nthat you want to find an expert in and join the conversations. Perhaps you can\nfind a meet up of developers at meetup.com to make connections, also posting a\nclassified in facebook.com may generate some interest."\n\n### [How to deduct web development and custom software donations?](http://www.linkedin.com/answers/finance-accounting/accounting/FIN_ACC/205913-13218578?browseIdx=0&sik=1207722607048&goback=%2Eama)\n\n_Asked by D.K. in [Accounting](/answers/browse/finance-\naccounting/accounting/FIN_ACC?goback=%2Eama), [Corporate\nTaxes](/answers/browse/finance-accounting/corporate-\ntaxes/FIN_CTX?goback=%2Eama)_\n\n#### Answer:\n\n"My experience is that creating websites for non-profits is a gift of labor,\nalthough the time is money to you, the IRS doesn't consider the time\ninvestment to your favorite charity as a monetary contribution, and not tax\ndeductible. I would consider limiting your time to what you can freely give\nand be satisfied that you are making a difference! As a web developer I often\nuse opensource or free software (e.g. apache web server on linux); so at times\nit makes sense to pay it forward, just don't go broke doing so."\n\n### Credits\n\n"Finish What We Started" by Headway and can be found\nonline at… http://www.podsafemusicnetwork.com	This week I spent some time getting social with LinkedIn.com I answered a few\nquestions related to my profession. This episode (6) covers the questions in\nshort form with links to the original questions with the linkedin community\nanswers, you will need to log-in at linkedin.com to view the links in this\npost. The audio player above includes the additional explanations to these\nquestions and comments on the answers submitted by the linkedin members. 	answers-for-internet-marketing-seo-business-and-promotion	Answers for Internet Marketing, SEO, Business and Promotion	2008-04-09	2015-05-07 17:03:21.559037	2015-05-07 17:03:21.559037	1	'-3':434C '/answers/browse':218C,568C,697C,802C,853C,906C '/answers/browse/finance-':1088C '/answers/browse/finance-accounting/corporate-':1094C '/answers/browse/marketing-sales/graphic-':109C '/answers/browse/startups-small-businesses/starting-':915C '/answers/browse/techno':330C '/answers/browse/technolo':500C '/answers/browse/technology/information-':1019C '/answers/browse/technology/web-':101C '/answers/finance-accounting/accounting/fin_acc/205913-13218578?browseidx=0&sik=1207722607048&goback=%2eama)':1082C '/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/122087-1202503?browseidx=9&sik=1207550620415&goback=%2eama)':844C '/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/201168-5850689?browseidx=6&sik=1207550620415&goback=%2eama)':897C '/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/203869-2821834?browseidx=8&sik=1207550620415&goback=%2eama)':209C '/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/203942-3313281?browseidx=5&sik=1207550620415&goback=%2eama)':793C '/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/205027-4542288?browseidx=2&sik=1207550620415&goback=%2eama)':688C '/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/205031-8169793?browseidx=1&sik=1207550620415&goback=%2eama)':559C '/answers/technology/e-commerce/tch_ecm/199214-317122?browseidx=3&sik=1207550620415&goback=%2eama)':490C '/answers/technology/e-commerce/tch_ecm/204425-1612763?browseidx=0&sik=1207550620415&goback=%2eama)':320C '/answers/technology/information-technology/computer-networking/tch_its_cnw/201872-8886523?browseidx=7&sik=1207550620415&goback=%2eama)':1010C '/answers/technology/web-development/tch_wdd/199145-17077367?browseidx=4&sik=1207550620415&goback=%2eama)':92C '/marketing-sales/advertising-promotion/internet-':219C,569C,698C,803C,854C,907C '1':808C '10':677C '1000':369C '15':426C '2':433C,813C '2eama':104C,112C,222C,333C,503C,572C,701C,806C,857C,910C,918C,1022C,1091C,1097C '3':821C '50':423C '6':30B 'a.c':493C 'abl':204C 'account':1087C 'accounting/accounting/fin_acc':1089C 'action':291C 'activ':674C 'ad':725C 'addit':70B,877C 'advantag':967C 'adword':872C 'affili':733C,979C 'affilit':718C 'agenc':349C 'alreadi':865C 'also':297C,590C,658C,965C,1061C 'although':1114C 'analyt':281C,299C,868C 'announc':592C 'answer':1A,20B,47B,79B,113C,162C,223C,334C,504C,573C,702C,710C,807C,858C,919C,1023C,1098C 'anyway':169C 'apach':1174C 'appear':479C 'appropri':288C 'ask':93C,210C,321C,491C,560C,689C,787C,794C,845C,898C,1011C,1083C 'assum':861C 'audienc':598C,741C,755C 'audio':65B,385C 'author':346C,372C 'base':365C,396C 'believ':404C 'best':161C,183C,614C,841C,939C 'bigger':237C 'blog':581C,588C 'blogger':986C 'book':339C,389C 'bookmark':673C 'breakdown':407C 'broke':1193C 'browser':259C 'busi':6A,230C,253C,887C,891C,931C 'buy':955C 'c.r':95C 'call':289C 'cell':727C 'chariti':1132C 'classifi':1064C 'client':187C 'clm':353C 'close':350C 'coach':528C 'combin':577C 'combini':870C 'comment':76B 'commerc':327C,497C,521C 'commiss':996C 'communiti':46B,927C,1028C,1034C 'complet':749C 'comput':1015C 'condit':946C 'connect':1060C 'consid':1125C,1143C 'consult':1003C 'content':957C 'contribut':1136C 'convers':435C,472C,624C,1046C 'convert':258C 'corpor':1092C 'could':987C 'cover':31B 'creat':255C,827C,972C,1103C 'credit':1196C 'custom':261C,267C,1077C 'd.k':1085C 'deduct':1073C,1140C 'design':106C,342C 'design/mar_grd':110C 'detail':313C 'develop':98C,1026C,1055C,1075C,1165C 'development/tch_wdd':102C 'differ':1161C 'direct':249C 'doesn':441C,1123C 'dollar':516C 'donat':1079C 'e':326C,496C,520C 'e-commerc':325C,495C,519C 'e.g':1173C 'earn':995C 'ecommerc':305C,316C,358C,381C 'email':644C,722C 'engin':122C,153C 'episod':29B 'estat':527C 'etc':731C 'event':654C 'exampl':524C,540C 'experi':825C,934C,1100C 'expert':1041C 'explan':71B 'facebook.com':1066C 'factor':400C 'far':712C 'favorit':1131C 'fee':536C 'find':173C,761C,999C,1039C,1050C 'finish':1197C 'folk':604C 'form':36B 'forward':1188C 'found':1206C 'free':743C,1171C 'freeli':1151C 'friend':651C 'full':1005C 'funnel':304C 'generat':737C,1068C 'get':15B,665C 'gift':1111C 'give':1152C 'go':607C,1192C 'goal':231C,254C,295C,303C 'goback':103C,111C,221C,332C,502C,571C,700C,805C,856C,909C,917C,1021C,1090C,1096C 'good':944C,960C,1000C 'googl':867C 'graphic':105C 'great':709C 'group':649C 'gy/e-commerce/tch_ecm':501C 'h.h':212C 'hard':683C 'headway':1202C 'help':409C,779C,888C,982C 'high':515C,543C 'home':416C 'hope':669C 'hot':656C 'howev':625C 'import':245C 'impress':924C 'improv':470C 'includ':68B,717C 'industri':406C 'inform':198C,511C 'interest':1070C 'internet':3A,214C,241C,564C,675C,693C,798C,849C,902C 'interview':783C 'invest':487C,546C,769C,1128C 'ir':1122C 'jewelri':937C,990C 'join':1030C,1044C 'keyword':115C,277C,880C 'kind':189C,196C 'know':457C 'labor':1113C 'lanc':373C 'land':284C 'lead':256C 'learn':601C 'light':945C 'like':201C,422C,630C,660C,724C,883C,948C 'limit':1144C 'link':38B,60B,666C,719C,734C,745C 'linkedin':45B,83B 'linkedin.com':18B,56B 'linux':1178C 'list':131C,149C 'log':53B 'log-in':52B 'logy/e-commerce/tch_ecm':331C 'look':141C 'loop':351C 'lot':707C 'loveday':374C 'm.j':323C 'm.l':900C 'm.s':562C 'make':1059C,1159C,1183C 'manag':837C 'mani':399C,428C 'market':4A,215C,242C,352C,565C,603C,676C,694C,789C,799C,832C,850C,894C,903C 'marketing/mar_adp_inm':220C,570C,699C,804C,855C,908C 'matter':443C,454C 'may':362C,634C,736C,778C,958C,1067C 'media':551C,820C 'meet':1052C 'meetup.com':1057C 'member':84B 'membership':532C 'metric':246C,359C,394C,448C,459C 'micro':623C 'million':678C 'mind':1029C 'monetari':1135C 'money':760C,1118C 'monit':765C 'monitor':301C 'month':682C 'much':445C 'need':50B 'network':772C,970C,1016C 'new':819C 'newslett':723C 'nich':831C 'niehaus':377C 'non':1107C 'non-profit':1106C 'number':361C 'offer':146C,509C,531C,988C 'often':627C,1167C 'one':636C 'onlin':1207C 'open':1001C,1024C,1032C 'opensourc':1169C 'opinion':439C,777C 'origin':41B 'p.s':691C 'page':155C,285C,309C,314C,417C,679C 'part':234C 'passion':812C 'patrick':703C 'pay':1186C 'peopl':127C,429C,947C 'percentag':418C 'perhap':774C,977C,1047C 'person':941C,963C,975C 'phone':728C 'piec':834C 'plan':238C 'player':66B 'post':63B,383C,594C,1062C 'ppc':836C 'premium':535C 'problem':932C 'process':89C 'product':312C,512C 'profess':27B 'profession':790C 'profit':484C,1108C 'program':980C 'promot':8A 'prospect':172C 'question':23B,33B,42B,74B,784C 'r.d':847C 'r.h':796C 'r.r':1013C 'rate':436C 'rather':424C 'reach':229C,293C 'read':337C 'real':126C,526C 'reason':165C 'receiv':705C 'reduc':639C 'relat':24B,250C 'relev':158C 'repeat':266C 'repli':641C 'report':356C,430C 'research':881C 'respond':128C 'respons':928C 'result':119C,134C,154C,271C 'return':485C,544C 'revenu':685C,738C 'review':386C 'rington':730C 'roi':344C,547C,828C 'run':347C 'sale':517C,984C 'sandra':376C 'satisfi':1155C 'search':85C,121C,133C,152C,168C,177C 'searcher':139C 'see':950C 'seem':628C,659C 'sell':938C 'sens':1184C 'seo':5A,88C,180C,186C,224C 'serp':156C,273C 'server':1176C 'shameless':662C 'short':35B 'shoutbox':632C 'show':583C,976C 'site':317C,392C,452C,462C,477C,507C,529C,549C,993C 'situat':781C 'small':890C 'social':16B,550C,672C,969C 'softwar':838C,1078C,1172C 'sourc':1002C,1025C,1033C 'special':379C 'spent':12B 'start':167C,892C,911C,1200C 'stat':191C 'stop':176C 'strategi':243C 'stuff':744C 'subject':657C 'submit':80B 'success':135C 'suggest':413C,716C 'survey':750C 'take':966C 'target':114C,276C 'tax':1093C,1139C 'taxes/fin_ctx':1095C 'technology/computer-networking/tch_its_cnw':1020C 'tend':605C 'test':117C,124C 'testimoni':964C 'think':612C 'time':14B,758C,768C,1006C,1116C,1127C,1146C,1181C 'titl':340C 'tool':227C,882C 'top':368C 'track':194C,206C,269C 'traffic':667C 'transact':522C 'turn':263C 'tweet':585C 'twitter':552C,576C,597C,617C,626C,633C 'understand':818C 'up/internet':893C 'up/str_stp':916C 'updat':645C,647C 'use':298C,554C,575C,615C,866C,874C,962C,1168C 'vari':395C 've':600C 'video':956C 'view':58B,310C,680C 'visitor':748C 'wallpap':729C 'want':714C,1037C 'watch':279C 'way':637C,663C,763C 'web':97C,341C,476C,506C,548C,1074C,1164C,1175C 'webceo':886C 'websit':1104C 'week':10B 'well':815C,920C 'wild':608C 'win':752C 'within':239C,829C 'wordpress':580C 'wordtracker.com':884C 'work':1007C 'would':199C,247C,412C,419C,537C,618C,785C,981C,1142C 'www.linkedin.com':91C,100C,108C,208C,217C,319C,329C,489C,499C,558C,567C,687C,696C,792C,801C,843C,852C,896C,905C,914C,1009C,1018C,1081C 'www.linkedin.com/answers/browse':216C,566C,695C,800C,851C,904C 'www.linkedin.com/answers/browse/marketing-sales/graphic-':107C 'www.linkedin.com/answers/browse/startups-small-businesses/starting-':913C 'www.linkedin.com/answers/browse/techno':328C 'www.linkedin.com/answers/browse/technolo':498C 'www.linkedin.com/answers/browse/technology/information-':1017C 'www.linkedin.com/answers/browse/technology/web-':99C 'www.linkedin.com/answers/finance-accounting/accounting/fin_acc/205913-13218578?browseidx=0&sik=1207722607048&goback=%2eama)':1080C 'www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/122087-1202503?browseidx=9&sik=1207550620415&goback=%2eama)':842C 'www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/201168-5850689?browseidx=6&sik=1207550620415&goback=%2eama)':895C 'www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/203869-2821834?browseidx=8&sik=1207550620415&goback=%2eama)':207C 'www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/203942-3313281?browseidx=5&sik=1207550620415&goback=%2eama)':791C 'www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/205027-4542288?browseidx=2&sik=1207550620415&goback=%2eama)':686C 'www.linkedin.com/answers/marketing-sales/advertising-promotion/internet-marketing/mar_adp_inm/205031-8169793?browseidx=1&sik=1207550620415&goback=%2eama)':557C 'www.linkedin.com/answers/technology/e-commerce/tch_ecm/199214-317122?browseidx=3&sik=1207550620415&goback=%2eama)':488C 'www.linkedin.com/answers/technology/e-commerce/tch_ecm/204425-1612763?browseidx=0&sik=1207550620415&goback=%2eama)':318C 'www.linkedin.com/answers/technology/information-technology/computer-networking/tch_its_cnw/201872-8886523?browseidx=7&sik=1207550620415&goback=%2eama)':1008C 'www.linkedin.com/answers/technology/web-development/tch_wdd/199145-17077367?browseidx=4&sik=1207550620415&goback=%2eama)':90C 'www.podsafemusicnetwork.com':1209C 'young':754C	published	pixelhandler
17	Inspired my Robert Martin's 'Bowling Game Kata' (a programmer's exercise) I followed Uncle Bob's presentation of the test-driven development exercise to write a program that scores a bowling game and documented the code written in JavaScript. This tutorial content is not my own but rather an exercise of making the Bowling Game Kata my own practice, so I've borrowed the kata from Uncle Bob along with his class diagrams and ten-pin bowling graphic. The headings in this tutorial from the 'Quick Design Session' through the 'Fifth Test' make up the essence of Uncle Bob's presentation. Thank you [Uncle Bob][unclebob] for putting together an excellent exercise!\n\nNote: The code examples in this tutorial will use `git diff` style indicators, lines with the first character `+`/`-` show an action to add(+) or remove(-) a line of code.\n\n### Test-driven development (TDD)\n\nA software development process that relies on the repetition of a very short development cycle: **first** the developer writes a **failing automated test case** that defines a desired improvement or new function, **then** produces **code to pass that test** and finally refactors the new code to acceptable standards.\n\nSee: [http://en.wikipedia.org/wiki/Test-driven\\_development][TDD]\n\n*“Test-driven development constantly repeats the steps of adding test cases that fail, passing them, and refactoring. Receiving the expected test results at each stage reinforces the programmer’s mental model of the code, boosts confidence and increases productivity.”*\n\n#### The TDD Process\n\n1. Add a test\n2. Run all tests and see if the new one fails\n3. Write some code\n4. Run the automated tests and see them succeed\n5. Refactor code\n6. Repeat\n\nBasically *[Lather, Rinse, Repeat][TDD]*\n\n#### Behavior-driven development (BDD)\n\nSee: Introducing BDD : [http://blog.dannorth.net/introducing-bdd/][BDD]\n\nUse language/terminology that everyone on the project understands; using a pattern (e.g. Given, When, Then.) to test expected behavior.\n\n*“Developers discovered it could do at least some of their documentation for them, so they started to write test methods that were real sentences.”*\n\n#### The benefits of TDD\n\nIn Robert Martin's book, 'The Clean Coder: A Code of Conduct for Professional Programmers', is a chapter on TDD, I found a mind map of the book… <http://www.mindmeister.com/119023034/the-clean-coder-by-robert-c-martin-book-notes> …look for 'development' > 'test driven development' then expand 'benefits'\n\nWith the practice of behavior-driven development (BDD) developers begin by writing the acceptance tests (or perhaps a business analyst does this). Since the acceptance tests are agreed to by both team and client, everyone's definition of 'done' (tested and shipped) is establised before development begins. In Martin's book, he asserts that as professionals we should not introduce any defects into a system. Writing tests is the only way a software engineer can be certain that he/she does no harm, by not shipping defects into a system (aside from malformed UI). Writing tests gives everyone on a team the courage to refactor and clean any messy code. Writing tests as BDD specs provides documentation of how components (modules) of a system work. Writing tests enforces quality in design. Testable code needs to be isolated; the result is modular code that is de-coupled from other modules; likely preventing an unstable mess. Since tests can be automated and become part of a build process… less money may be spent on manual QA cycles. And it is less likely that clients will discover defects in production (client satisfaction). Overall, the BDD discipline should enhance certainty, courage, defect reduction, documentation, and design. \n\n## Training Video\n\n<iframe src="http://player.vimeo.com/video/53048454?badge=0" width="500" height="313" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href="http://vimeo.com/53048454">Bowling Game Kata In JavaScript - Using Mocha (BDD) Test Framework and Yeoman</a> from <a href="http://vimeo.com/user14550887">Bill Heaton</a> on <a href="http://vimeo.com">Vimeo</a>.</p>\n\n## Vagrant Development Environment\n\nVagrant [development environment][vagrant-dev-box] provisioned with shell scripts on a (linux/ubuntu) precise64 box. The first time you execute `vagrant up` the provision scripts will download a linux box "precise64" and install some software needed for a development box. You can edit the provision.sh or scripts in the /bin directory to customize your environment or skip some installations. It may take about 10 minutes to download and install.\n\n```\ncd ~/code/\ngit clone https://github.com/pixelhandler/vagrant-dev-env ./bowlingkata\ncd bowlingkata\ngit submodule init\ngit submodule update\nvagrant up\n```\n\nUpdate your /etc/hosts file, add: `192.168.50.4 precise64` the vagrant/virtual box will use <http://precise64/> or <http://192.168.50.4/> for the www root. You could use any domain you like, the `precise64` apache vhost runs from on the IP address: 192.168.50.4 so `192.168.50.4 precise64.dev` works too, <http://precise64.dev/> may be easier to use in a browser.\n\n## Scoring Bowling\n\n![Complete game][10frames]\n\nThe game consists of 10 frames as shown above.  In each frame the player has two opportunities to knock down 10 pins.  The score for the frame is the total number of pins knocked down, plus bonuses for strikes and spares.\n\nA spare is when the player knocks down all 10 pins in two tries.  The bonus for that frame is the number of pins knocked down by the next roll.  So in frame 3 above, the score is 10 (the total number knocked down) plus a bonus of 5 (the number of pins knocked down on the next roll.)\n\nA strike is when the player knocks down all 10 pins on his first try.  The bonus for that frame is the value of the next two balls rolled.\n\nIn the tenth frame a player who rolls a spare or strike is allowed to roll the extra balls to complete the frame.  However no more than three balls can be rolled in tenth frame.\n\nFor more info see [Ten-pin bowling game Wikipedia article][TenPinBowlingGame] and article for [Instructions on scoring with game examples][scoringinstructions]\n\n[10frames]: https://raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/ten-pins.jpg "Uncle Bob game"\n\n## The Requirements\n\n    +--------------------+\n    | Game               |\n    | ------------------ |\n    | + roll(pins : int) |\n    | + score() : int    |\n    +--------------------+\n\nWrite a class named “Game” that has two methods:  \n* **roll(pins : int)** is called each time the player rolls a ball.  The argument is the number of pins knocked down.  \n* **score() : int** is called only at the very end of the game.  It returns the total score for that game.\n\n\n## Quick Design Session\n\n1. Clearly we need the Game class. ![Game class][des1]\n2. A game has 10 frames.  ![Frame class][des2]\n3. A frame has 1 or two rolls.  ![Roll class][des3]\n4. The tenth frame has two or three rolls. It is different from all the other frames.  ![Tenth frame][des4]\n5. The score function must iterate through all the frames, and calculate all their scores.  ![Score method][des5]\n6. The score for a spare or a strike depends on the frame’s successor  ![Next frame][des6]\n\n[des1]: https://raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/game_class.png "Game class"\n[des2]: https://raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class.png "Frame class"\n[des3]: https://raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/roll_class.png "Roll class"\n[des4]: https://raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/tenth_frame_class.png "Tenth frame"\n[des5]: https://raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class_score.png "Score method"\n[des6]: https://raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class_next.png "Next frame"\n\n\n## Begin\n\n### Create a project in /vagrant/www\n\nIssue some vagrant and yeoman commands to get started\n\n    git checkout -b bowling\n    vagrant ssh\n    git config --global user.name "Your Name"\n    git config --global user.email "me@dom.com"\n    cd /vagrant/www\n    yeoman init\n    # Answer Y/n (make yeoman better), then... n, n, Y (RequireJS), n, N to yeoman.\n    git add .\n    git commit -m "yeoman init"\n    yeoman test\n    yeoman server\n    # see http://precise64.dev:3501/ \n    # stop yeoman server with control-c, `exit` (vagrant ssh); or stay in bowlingkata and use vimvim\n\nNow you should have /vagrant/www/app and vagrant/www/test directories this is where we will write some code in. \n\n*Note:* You do not have to use the vagrant development environment to complete this tutorial (kata); you could just open the test file in your browser to execute the tests and view the mocha report. If you are not using the virtual box / vagrant environment then be sure to modify `/vagrant/www/` to the path to your working directory.\n\nEdit app/scripts/main.js add `app: 'app',` and delete a few lines, all you will need is the `paths` object:\n\n     require.config({\n    -  shim: {\n    -  },\n    -\n       paths: {\n    +    app: 'app',\n         jquery: 'vendor/jquery.min'\n       }\n     });\n    - \n    -require(['app'], function(app) {\n    -  // use app here\n    -  console.log(app);\n    -});\n\nCreate symbolic link for `scripts` in the test directory, to load [require.js][requirejs] and main.js with one script element. I had an issue creating a symbolic link while in the precise64 box (using `vagrant ssh`), so I exited the ssh connection and made the link.\n\n    exit\n    cd www/test/\n    ln -s ../app/scripts/ ./scripts\n    cd ../../ && vagrant ssh\n    cd /vagrant/www/\n\nThe test runner index.html (see below) will use the directory `www/app/scripts` via the symbolic link (see above) to load the application's RequireJS main configuration file and to load the RequireJS library.\n\nEdit file: /test/index.html - use this markup:\n\n    <!doctype html>\n    <head>\n      <meta charset="utf-8">\n      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n      <title>Mocha Spec Runner</title>\n      <link rel="stylesheet" href="lib/mocha/mocha.css">\n    </head>\n    <body>\n      <div id="mocha"></div>\n    \n      <script src="lib/mocha/mocha.js"></script>\n      <script src="lib/chai.js"></script>\n      <script data-main="scripts/main" src="scripts/vendor/require.js"></script>\n    \n      <script>\n        mocha.setup({ui: 'bdd', ignoreLeaks: true});\n        expect = chai.expect;\n        require(['../spec/game.spec'], function () {\n          setTimeout(function () {\n            require(['../runner/mocha']);\n          }, 100);\n        });\n      </script>\n    \n    </body>\n    </html>\n\n\nIt will be very helpful to change the lint task in the (yeoman) generated file, Gruntfile.js, e.g. to ignore the vendor directory (and other subdirectories); also to lint the test directory with the command: `yeoman lint`.\n\n         lint: {\n           files: [\n             'Gruntfile.js',\n    -        'app/scripts/**/*.js',\n    +        'app/scripts/*.js',\n    +        'test/spec/*.js'\n           ]\n\n\n## First Test, A Gutter Game\n\n### Create a unit test in test/spec/game.spec.js\n\n    cd /vagrant/www/test/spec && touch game.spec.js\n    cd /vagrant/www/app/scripts && touch Game.js\n\n### Add a failing test for a gutter game.\n\nAdd code to test/spec/game.spec.js\n\n    +// Bowling Game specs\n    +\n    +describe("Ten-Ping Bowling Kata", function () {\n    +\n    +    describe("Gutter Game", function () {\n    +\n    +        it("should score 0 for a gutter game, all rolls are 0", function () {\n    +            var game = new Game();\n    +        });\n    +\n    +    });\n    +\n    +});\n\n\n### Execute this program and verify that you get an error\n\n    cd /vagrant/www/\n\n#### Run the spec, `yeoman test` should FAIL\n\n    >> Gutter Game - should score 0 for a gutter game, all rolls are 0\n    >> Message: Can't find variable: Game\n\n### Pass the failing test, by adding Game constructor\n\nAdd code in app/scripts/Game.js\n\n    +define('game', function () {\n    +    var Game = function () {};\n    +\n    +    return Game;\n    +});\n\nAdd `game: 'Game'` to requirejs config in app/scripts/main.js\n\n     require.config({\n       paths: {\n         app: 'app',\n    +    game: 'Game',\n         jquery: 'vendor/jquery.min'\n       }\n     });\n\nUpdate spec in test/spec/game.spec.js adding a `require` call for the Game constructor, wrap the entire describe call with...\n\n    +require(['game'], function (Game) {\n    +\n     describe("Ten-Ping Bowling Kata", function () {\n\n…\n\n     });\n    +\n    +});\n\n#### Run the spec, `yeoman test` should PASS\n\n    >> 1 assertions passed (0.01s)\n\nYou can also visit <http://precise64.dev/test/> in your browser; the vagrant provisioning task setup the precise64.dev virtual host for you. The precise64.dev domain renders the files served by apache from the `/vagrant/www` directory, and is accessible to your browser as long as your hosts file has the entry `192.168.50.4 precise64.dev`.\n\n### Continue the specs for a gutter game\n\n#### Add a failing test for a gutter game, and stub roll() and score() methods\n\nAdd an assertion to test/spec/game.spec.js\n\n             it("should score 0 for a gutter game, all rolls are 0", function () {\n    -            var game = new Game();\n    +            var game = new Game(), i = 0;\n    +\n    +            for (i; i < 20; i ++) {\n    +                game.roll(0);\n    +            }\n    +            expect(game.score()).to.equal(0);\n             });\n\nAdd some stub methods in app/scripts/Game.js\n\n     define('game', function () {\n         var Game = function () {};\n     \n    +    Game.prototype.roll = function (pins) {\n    +        if (typeof pins !== 'number') {\n    +            throw new Error("expeced a number");\n    +        }\n    +    };\n    +\n    +    Game.prototype.score = function () {\n    +        return -1;\n    +    };\n    +\n         return Game;\n     });\n\n#### Run the spec, `yeoman test` should FAIL\n\n    >> Gutter Game - should score 0 for a gutter game, all rolls are 0\n    >> Message: expected -1 to equal 0\n    >> Actual: undefined\n    >> Expected: 0\n\n### Pass failing test with code change in app/scripts/Game.js\n\n     define('game', function () {\n    -    var Game = function () {};\n    +    var Game = function () {\n    +        this._score = 0;\n    +    };\n     \n         Game.prototype.roll = function (pins) {\n             if (typeof pins !== 'number') {\n                 throw new Error('Game.role() expects `pins` argument to be a number');\n             }\n    +        this._score += pins;\n         };\n     \n         Game.prototype.score = function () {\n    -        return -1;\n    +        return this._score;\n         };\n     \n         return Game;\n\n#### Run the spec, `yeoman test` should PASS\n\n    >> 1 assertions passed (0.01s)\n\n## Second Test, Game With Every Roll Hitting 1 Pin\n\n### Add new test for scoring a game of all 20 rolls only hitting 1 pin\n\n    +    describe("Score game given all rolls hit only one pin", function () {\n    +\n    +        it("should score 20", function () {\n    +            var game = new Game(), i = 0;\n    +\n    +            for (i; i < 20; i ++) {\n    +                game.roll(1);\n    +            }\n    +            expect(game.score()).to.equal(20);\n    +        });\n    +\n    +    });\n\n#### Run the spec, `yeoman test` should PASS\n\n    >> 2 assertions passed (0.02s)\n\n### Refactor test/spec/game.spec.js to make test more DRY (don't repeat yourself)\n\nEach test instantiates a game object, use a `beforeEach` method; also add a `rollMany` helper function. \n\n     describe("Ten-Ping Bowling Kata", function () {\n     \n    +    function rollMany(rolls, pins) {\n    +        var i = 0;\n    +        for (i; i < rolls; i ++) {\n    +            this.roll(pins);\n    +        }\n    +    }\n    +\n    +    beforeEach(function () {\n    +        this.game = new Game();\n    +    });\n    +\n         describe("Gutter Game", function () {\n     \n             it("should score 0 for a gutter game, all rolls are 0", function () {\n    -            var game = new Game(), i = 0;\n    -\n    -            for (i; i < 20; i ++) {\n    -                game.roll(0);\n    -            }\n    -            expect(game.score()).to.equal(0);\n    +            rollMany.call(this.game, 20, 0);\n    +            expect(this.game.score()).to.equal(0);\n             });\n     \n         });\n\n\n         describe("Score game given all rolls hit only one pin", function () {\n     \n             it("should score 20", function () {\n    -            var game = new Game(), i = 0;\n    -\n    -            for (i; i < 20; i ++) {\n    -                game.roll(1);\n    -            }\n    -            expect(game.score()).to.equal(20);\n    +            rollMany.call(this.game, 20, 1);\n    +            expect(this.game.score()).to.equal(20);\n             });\n     \n         });\n\n#### Run the spec, `yeoman test` should still PASS\n\n    >> 2 assertions passed (0.02s)\n\n## Third Test, Game With One Spare\n\n### Add failing test for a game with one spare\n\n#### Add helper function for rolling a spare\n\n    +    function rollSpare() {\n    +        this.roll(5);\n    +        this.roll(5);\n    +    }\n\n#### Add test for game with the first frame as a spare\n\n    +    describe("Score a game with only a spare", function () {\n    +\n    +        it("should score 20 given the first 3 rolls hit 5 pins", function () {\n    +            rollSpare.call(this.game);\n    +            this.game.roll(5);\n    +            rollMany.call(this.game, 17, 0);\n    +            expect(this.game.score()).to.equal(20);\n    +        });\n    +\n    +    });\n\n#### Run the spec, `yeoman test` should FAIL\n\n    >> Score a game with only a spare - should score 20 given the first 3 rolls hit 5 pins\n    >> Message: expected 15 to equal 20\n    >> Actual: undefined\n    >> Expected: 20\n\nThere is a design error with Game methods: roll() & score() so add some TODOs and *skip* the new test for spare…\n\n### Note incorrect design in app/scripts/Game.js\n\n    +    // TODO design is wrong, responsibilities are missplaced...\n    +\n    +    // TODO roll should not calculate score\n         Game.prototype.roll = function (pins) {\n\n…\n     \n    +    // TODO score is not actually calculating value\n         Game.prototype.score = function () {\n\n### Skip test in test/spec/game.spec.js\n\n    -    describe("Score a game with only a spare", function () {\n    +    describe.skip("Score a game with only a spare", function () {\n\n#### Run the spec, `yeoman test` should PASS (new test was skipped)\n\n    >> 3 assertions passed (0.04s)\n\n### Refactor Game methods, roll() and score(), in app/scripts/Game.js\n\nPass tests for rolling and scoring spares…\n\n     define('game', function () {\n         var Game = function () {\n    -        this._score = 0;\n    +        this._currentRoll = 0;\n    +        this._rolls = [];\n         };\n     \n    -    // TODO design is wrong, responsibilities are missplaced...\n    -\n    -    // TODO roll should not calculate score\n         Game.prototype.roll = function (pins) {\n             if (typeof pins !== 'number') {\n                 throw new Error("expeced a number");\n             }\n    -        this._score += pins;\n    +        this._rolls[this._currentRoll++] = pins;\n         };\n     \n    -    // TODO score is not actually calculating value\n         Game.prototype.score = function () {\n    -        return this._score;\n    +        var score = 0, i = 0, \n    +            rollsToScore = this._rolls.length;\n    +\n    +        for (i; i < rollsToScore; i ++) {\n    +            if (this._isSpare(i)) {\n    +                score += 10 + this._rolls[i + 2];\n    +                i ++;\n    +            } else {\n    +                score += this._rolls[i];\n    +            }\n    +        }\n    +        return score;\n    +    };\n    +\n    +    Game.prototype._isSpare = function (rollIdx) {\n    +        return (this._rolls[rollIdx] + this._rolls[rollIdx + 1] === 10);\n    +    };\n     \n         return Game;\n\n### Enable the skipped test in test/spec/game.spec.js\n\n    -    describe.skip("Score a game with only a spare", function () {\n    +    describe("Score a game with only a spare", function () {\n\n#### Run the spec, `yeoman test` should PASS\n\n    >> 3 assertions passed (0.02s)\n\n## Fourth Test, Game With One Strike\n\n### Add failing test for rolling a strike\n\nAdd helper function for testing a strike in test/spec/game.spec.js\n\n    +    function rollStrike() {\n    +        this.roll(10);\n    +    }\n\nAdd test for scoring with one strike and two following rolls each hitting 4 pins\n\n    +    describe("Score a game with only a strike", function () {\n    +\n    +        it("should score 20 given a strike followed by a two rolls hitting 2 & 3 pins", function () {\n    +            rollStrike.call(this.game);\n    +            this.game.roll(2);\n    +            this.game.roll(3);\n    +            rollMany.call(this.game, 17, 0);\n    +            expect(this.game.score()).to.equal(20);\n    +        });\n    +    };\n\n#### Run the spec, `yeoman test` should FAIL\n\nIf you get a response like:\n\n    >> 0 assertions passed (0s)\n\nIt may be a good idea to lint your code, using `yeoman lint`.\n\n    Linting test/spec/game.spec.js...ERROR\n    [L64:C6] Expected ')' and instead saw ';'.\n\nThe fix needed at line 64 in game.spec.js is:\n\n    -    };\n    +    });\n\n#### Run the spec, `yeoman test` should FAIL\n\n    >> Score a game with only a spare - should score 20 given a strike followed by a two rolls hitting 2 & 3 pins\n    >> Message: expected 15 to equal 20\n    >> Actual: undefined\n    >> Expected: 20\n\n### Pass the failing test with code edits in app/scripts/Game.js\n\nRefactor score method, add code to score a strike  \n\n         Game.prototype.score = function () {\n             var score = 0, i = 0, \n                 rollsToScore = this._rolls.length;\n     \n             for (i; i < rollsToScore; i ++) {\n    -            if (this._isSpare(i)) {\n    +            if (this._isStrike(i)) {\n    +                score += 10 + this._rolls[i + 1] + this._rolls[i + 2];\n    +            } else if (this._isSpare(i)) {\n                     score += 10 + this._rolls[i + 2];\n                     i ++;\n                 } else {\n                     score += this._rolls[i];\n                 }\n             }\n     \n             return score;\n         };\n\nAdd method to check if a roll is a strike\n\n    +    Game.prototype._isStrike = function (rollIdx) {\n    +        return (this._rolls[rollIdx] === 10);\n    +    };\n\n#### Run the spec, `yeoman test` should PASS\n\n    >> 4 assertions passed (0.02s)\n\n## Fifth Test, Perfect Game - All Strikes\n\n### Add test for rolling perfect game of 300 in test/spec/game.spec.js\n\n    +    describe("Score a perfect game of 300 points", function () {\n    +\n    +        it("should score 300 for 12 strikes in a row", function () {\n    +            rollMany.call(this.game, 12, 10);\n    +            expect(this.game.score()).to.equal(300);\n    +        });\n    +\n    +    });\n\n#### Run the spec, `yeoman test` should FAIL\n\n    >> Score a perfect game of 300 points - should score 300 for 12 strikes in a row\n    >> Message: expected NaN to equal 300\n    >> Actual: undefined\n    >> Expected: 300\n\n### Refactor Game object to handle scoring the 10th frame\n\n#### Add method for checking if the game has a bonus roll in the 10th frame\n\n    +    Game.prototype._bonusRoll = function () {\n    +        var hasBonusRoll = false, \n    +            checkRoll = this._rolls.length - 3;\n    +\n    +        if (this._isStrike(checkRoll) || this._isSpare(checkRoll)) {\n    +            hasBonusRoll = true;\n    +        }\n    +\n    +        return (hasBonusRoll) ? checkRoll : null;\n    +    };\n\n#### Update score method to calculate the 10th frame properly\n\n         Game.prototype.score = function () {\n             var score = 0, i = 0, \n    -            rollsToScore = this._rolls.length;\n    +            tenthFrameRoll = this._bonusRoll(),\n    +            rollsToScore = (tenthFrameRoll) ? tenthFrameRoll + 1 : this._rolls.length;\n\n#### Run the spec, `yeoman test` should PASS\n\n    >> 5 assertions passed (0.03s)\n\n### As a sanity check, Add one more test in test/spec/game.spec.js \n\nTest a complete game with all kinds of rolls\n\n    +    describe("Game with all scoring variations including tenth frame", function () {\n    +\n    +        it("should score 110", function () {\n    +            var game = this.game;\n    +\n    +            // frame 1, score: 9\n    +            game.roll(7);\n    +            game.roll(2);\n    +            // frame 2, score: 16\n    +            game.roll(6);\n    +            game.roll(1);\n    +            // frame 3, score: 26 + 3 = 29\n    +            rollSpare.call(game);\n    +            // frame 4, score: 36\n    +            game.roll(3);\n    +            game.roll(4);\n    +            // frame 5, score: 46 + 10 = 56\n    +            rollSpare.call(game);\n    +            // frame 6, score: 66 + 5 + 3 = 74\n    +            rollStrike.call(game);\n    +            // frame 7, score: 82\n    +            game.roll(5);\n    +            game.roll(3);\n    +            // frame 8, score: 87\n    +            game.roll(5);\n    +            game.roll(0);\n    +            // frame 9, score: 95\n    +            game.roll(6);\n    +            game.roll(2);\n    +            // frame 10, score: 105 + 5 = 110\n    +            game.roll(7);\n    +            game.roll(3);\n    +            game.roll(5);\n    +            expect(this.game.score()).to.equal(110);\n    +        });\n    +\n    +    });\n\n#### Run the spec, `yeoman test` should PASS\n\n    >> 6 assertions passed (0.03s)\n\n#### Well that's a wrap from red to green over and over until the requirements are met.\n\n\n## Additional Topics\n\nThe finished test/code is on a [bowling branch][vagrant-dev-box-bowling] of my dev repository.\n\nI added a few branches to my [dev repository][vagrant-dev-box] showing examples of:\n\n* [Testing both the development code and the build][vagrant-dev-box-bowling-rjs]  \n* [Testing with Jasmine instead of Mocha][vagrant-dev-box-bowling-jasmine]  \n* [Reporting code coverage with jscoverage and mocha][vagrant-dev-box-bowling-coverage]\n\n*Note:* See the Makefiles in the above branches (in the www directories) for the commands build, test, report coverage, etc.\n\nBelow is a followup on the tutorial video reviewing branches in the [repo][vagrant-dev-box] showing: the mocha spec changed to jasmine (assertions changed); a build using r.js (RequireJS); generating code coverage reports with mocha; and, asynchronous testing with mocha using the backbone.js boilerplate (scaffold by yeoman) including mocking server with SinonJS:\n\n<video poster="http://pixelhandler.com/uploads/Bowling-Game-Kata-AdditionalTopics.png" width="900" height="600" controls>\n  <source src="http://pixelhandler.com/uploads/Bowling-Game-Kata-AdditionalTopics.m4v" type='video/m4v' />\n</video>\n[Video File](http://pixelhandler.com/uploads/Bowling-Game-Kata-AdditionalTopics.m4v)\n\n## Reference / Links\n\n1. [Uncle Bob's The Bowling Game Kata][TheBowlingGameKata]\n2. [Ten-pin bowling game Wikipedia article][TenPinBowlingGame]\n3. [Instructions on scoring with game examples][scoringinstructions]\n4. [The Basics of Keeping Score][scoringbasics]\n5. [Yeoman.io][yeomansource]\n6. [Mocha Test Framewor][mochasite]\n7. [Chai assertion library][chaibdd]\n8. [RequireJS][requirejs]\n9. [Vagrant dev box][vagrant-dev-box]\n10. [Behavior-Driven Development][BDD]\n11. [Test-Driven Development][TDD]\n\n[BDD]: http://blog.dannorth.net/introducing-bdd/ "Behavior-Driven Development"\n\n[chaibdd]: http://chaijs.com/api/bdd/ "Chai BDD Assertion Library"\n\n[mochasite]: http://visionmedia.github.com/mocha/ "Mocha Test Framework"\n\n[nodejs]: http://nodejs.org/ "Node.js"\n\n[phantomjs]: http://phantomjs.org/ "PhantomJS - headless WebKit w/ JavaScript API"\n\n[requirejs]: http://requirejs.org/docs/requirements.html "RequireJS Library for dependency management and build optimization"\n\n[scoringbasics]: http://slocums.homestead.com/gamescore.html "The Basics of Keeping Score"\n\n[scoringinstructions]: http://www.bowlingindex.com/instruction/scoring.htm "Scoring a bowling game"\n\n[TenPinBowlingGame]: http://en.wikipedia.org/wiki/Ten-pin_bowling "Ten pin bowling game Wikipedia article"\n\n[TheBowlingGameKata]: http://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata "The Bowling Game Kata"\n\n[TDD]: http://en.wikipedia.org/wiki/Test-driven_development "Test-Driven Development"\n\n[testindex]: https://github.com/pixelhandler/vagrant-dev-env/blob/bowling/www/test/index.html "testing index.html file uses symbolic link in test directory to load app code w/ requirejs"\n\n[unclebob]: https://twitter.com/unclebobmartin "Uncle Bob Martin on Twitter"\n\n[vagrant-dev-box]: https://github.com/pixelhandler/vagrant-dev-env "Vagrant Development Environment"\n[vagrant-dev-box-bowling]: https://github.com/pixelhandler/vagrant-dev-env/tree/bowling/www/test "Completed Bowling Game Test using Mocha"\n[vagrant-dev-box-bowling-jasmine]: https://github.com/pixelhandler/vagrant-dev-env/tree/bowling-jasmine/www/test "Completed Bowling Game Test using Jasmine"\n[vagrant-dev-box-bowling-rjs]: https://github.com/pixelhandler/vagrant-dev-env/tree/bowling-rjs/www/test "Testing a build with r.js (RequireJS optimization tool)"\n[vagrant-dev-box-bowling-coverage]: https://github.com/pixelhandler/vagrant-dev-env/blob/bowling-cov/www/Makefile "Code Coverage using Mocha, commands in Makefile"\n\n[yeomansource]: https://github.com/yeoman/yeoman "Yeoman source code"\n\n[yeomansite]: http://yeoman.io/ "Yeoman - set of tools"	About this Tutorial…\n\nThis tutorial was created in an effort to learn more about using new tools like Yeoman and the Mocha test framework using [Node.js][nodejs] that can be executed in a headless browser environment ([phantomjs][phantomjs]), and to assist other engineers in learning the practice of behavior driven development. Basically, this article is a result of following the ['kata' by Uncle Bob][TheBowlingGameKata] to author a simple program in JavaScript that scores a [game of ten-pin bowling][TenPinBowlingGame].\n\nCovered in this tutorial:\n\n1.  Using the [Mocha test framework][mochasite] with behavior-driven development ([BDD][BDD])  \n2.  [Uncle Bob's "Bowling Game" kata][TheBowlingGameKata] in JavaScript\n3.  Quickly setting up your development environment with [Vagrant, VirtualBox][vagrant-dev-box] and [Yeoman][yeomansite] \n3.  First, writing [tests][chaibdd] to describe the expected behaviors which fail  \n4.  Next, writing application code which passes the tests  \n5.  The result: a program that [scores a game of bowling][scoringbasics], and better BDD skills\n\n[nodejs]: http://nodejs.org/ "Node.js"\n[phantomjs]: http://phantomjs.org/ "PhantomJS - headless WebKit w/ JavaScript API"\n[TenPinBowlingGame]: http://en.wikipedia.org/wiki/Ten-pin_bowling "Ten pin bowling game Wikipedia article"\n[TheBowlingGameKata]: http://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata "The Bowling Game Kata"\n[BDD]: http://blog.dannorth.net/introducing-bdd/ "Behavior-Driven Development"\n[chaibdd]: http://chaijs.com/api/bdd/ "Chai BDD Assertion Library"\n[mochasite]: http://visionmedia.github.com/mocha/ "Mocha Test Framework"\n[yeomansite]: http://yeoman.io/ "Yeoman - set of tools"\n[scoringbasics]: http://slocums.homestead.com/gamescore.html "The Basics of Keeping Score"	bowling-game-kata-using-mocha-bdd-test-framework-and-yeoman	Bowling Game Kata Using Mocha (BDD) Test Framework and Yeoman	2012-10-24	2015-05-07 17:03:21.317251	2015-05-07 17:03:21.317251	1	'-1':2018C,2043C,2093C '/..':1611C '/119023034/the-clean-coder-by-robert-c-martin-book-notes':614C '/api/bdd/':215B,3477C '/app/scripts':1608C '/articles.unclebob.thebowlinggamekata':199B,3542C '/bin':899C '/bowlingkata':926C '/code':920C '/docs/requirements.html':3503C '/etc/hosts':939C '/gamescore.html':236B,3515C '/instruction/scoring.htm':3524C '/introducing-bdd/':207B,3469C '/introducing-bdd/][bdd]':536C '/mocha/':223B,3485C '/pixelhandler/vagrant-dev-env':925C,3589C '/pixelhandler/vagrant-dev-env/blob/bowling-cov/www/makefile':3647C '/pixelhandler/vagrant-dev-env/blob/bowling/www/test/index.html':3558C '/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class.png':1342C '/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class_next.png':1366C '/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class_score.png':1360C '/pixelhandler/vagrant-dev-env/bowling/www/app/images/game_class.png':1336C '/pixelhandler/vagrant-dev-env/bowling/www/app/images/roll_class.png':1348C '/pixelhandler/vagrant-dev-env/bowling/www/app/images/ten-pins.jpg':1182C '/pixelhandler/vagrant-dev-env/bowling/www/app/images/tenth_frame_class.png':1354C '/pixelhandler/vagrant-dev-env/tree/bowling-jasmine/www/test':3615C '/pixelhandler/vagrant-dev-env/tree/bowling-rjs/www/test':3630C '/pixelhandler/vagrant-dev-env/tree/bowling/www/test':3600C '/scripts':1609C '/test/':1885C '/test/index.html':1650C '/unclebobmartin':3577C '/uploads/bowling-game-kata-additionaltopics.m4v)':3394C '/vagrant/www':1374C,1402C,1516C,1615C,1775C,1911C '/vagrant/www/app':1453C '/vagrant/www/app/scripts':1718C '/vagrant/www/test/spec':1714C '/wiki/ten-pin_bowling':189B,3532C '/wiki/test-driven':442C '/wiki/test-driven_development':3550C '/yeoman/yeoman':3658C '0':1750C,1758C,1787C,1795C,1959C,1967C,1978C,1985C,1989C,2032C,2040C,2046C,2050C,2069C,2155C,2219C,2239C,2247C,2254C,2261C,2265C,2269C,2273C,2295C,2396C,2547C,2549C,2595C,2597C,2745C,2763C,2859C,2861C,3063C,3065C,3188C '0.01':1877C,2108C '0.02':2177C,2326C,2667C,2927C '0.03':3085C,3223C '0.04':2523C '0s':2766C '1':97B,488C,1247C,1270C,1874C,2105C,2117C,2132C,2162C,2302C,2310C,2629C,2879C,3073C,3125C,3139C,3397C '10':913C,997C,1013C,1043C,1072C,1102C,1261C,2609C,2630C,2694C,2876C,2888C,2916C,2968C,3160C,3198C,3454C '105':3200C '10frames':992C,1179C '10th':3013C,3028C,3056C '11':3460C '110':3119C,3202C,3212C '12':2959C,2967C,2991C '15':2428C,2829C '16':3135C '17':2395C,2744C '192.168.50.4':942C,951C,973C,975C,1928C '2':111B,492C,1257C,2174C,2323C,2612C,2732C,2739C,2824C,2882C,2891C,3131C,3133C,3196C,3406C '20':1982C,2128C,2148C,2159C,2166C,2258C,2268C,2288C,2299C,2306C,2309C,2314C,2379C,2400C,2417C,2431C,2435C,2722C,2749C,2814C,2832C,2836C '26':3143C '29':3145C '3':121B,138B,503C,1067C,1266C,2383C,2421C,2520C,2664C,2733C,2741C,2825C,3038C,3141C,3144C,3153C,3169C,3180C,3206C,3415C '300':2942C,2951C,2957C,2972C,2985C,2989C,3001C,3005C '36':3151C '4':150B,507C,1277C,2708C,2924C,3149C,3155C,3423C '46':3159C '5':159B,516C,1082C,1297C,2353C,2355C,2386C,2392C,2424C,3082C,3157C,3168C,3178C,3186C,3201C,3208C,3430C '56':3161C '6':519C,1315C,3137C,3165C,3194C,3220C,3433C '64':2794C '66':3167C '7':3129C,3174C,3204C,3438C '74':3170C '8':3182C,3443C '82':3176C '87':3184C '9':3127C,3190C,3446C '95':3192C 'accept':437C,638C,649C 'access':1915C 'action':377C 'actual':2047C,2432C,2482C,2586C,2833C,3002C 'ad':454C,1807C,1842C,3262C 'add':379C,489C,941C,1420C,1526C,1721C,1729C,1810C,1822C,1937C,1951C,1990C,2119C,2201C,2334C,2343C,2356C,2447C,2675C,2682C,2695C,2849C,2899C,2935C,3015C,3091C 'addit':3242C 'address':972C 'agre':652C 'allow':1135C 'along':312C 'also':1682C,1881C,2200C 'analyst':644C 'answer':1405C 'apach':965C,1908C 'api':185B,3499C 'app':1527C,1528C,1545C,1546C,1550C,1552C,1554C,1557C,1832C,1833C,3570C 'app/scripts':1696C,1698C 'app/scripts/game.js':1813C,1995C,2058C,2461C,2532C,2845C 'app/scripts/main.js':1525C,1829C 'applic':153B,1636C 'argument':1216C,2083C 'articl':64B,195B,1167C,1170C,3413C,3538C 'asid':714C 'assert':218B,677C,1875C,1953C,2106C,2175C,2324C,2521C,2665C,2764C,2925C,3083C,3221C,3360C,3440C,3480C 'assist':51B 'asynchron':3374C 'author':77B 'autom':412C,510C,783C 'b':1386C 'backbone.js':3380C 'ball':1120C,1140C,1150C,1214C 'basic':62B,238B,521C,3425C,3517C 'bdd':6A,109B,110B,173B,204B,217B,530C,533C,632C,737C,816C,836C,3459C,3466C,3479C 'becom':785C 'beforeeach':2198C,2227C 'begin':634C,671C,1369C 'behavior':59B,106B,147B,209B,527C,555C,629C,3456C,3471C 'behavior-driven':105B,208B,526C,628C,3455C,3470C 'benefit':581C,623C 'better':172B,1409C 'bill':842C 'blog.dannorth.net':206B,535C,3468C 'blog.dannorth.net/introducing-bdd/':205B,3467C 'blog.dannorth.net/introducing-bdd/][bdd]':534C 'bob':74B,113B,257C,311C,343C,349C,1184C,3399C,3579C 'boilerpl':3381C 'bonus':1029C,1049C,1080C,1109C,3024C 'bonusrol':3031C 'book':588C,611C,675C 'boost':480C 'borrow':306C 'bowl':1A,91B,115B,169B,192B,201B,247C,274C,297C,321C,829C,989C,1164C,1387C,1733C,1740C,1864C,2210C,3250C,3256C,3289C,3301C,3314C,3402C,3410C,3527C,3535C,3544C,3597C,3602C,3611C,3617C,3626C,3643C 'bowlingkata':928C,1445C 'box':134B,855C,864C,879C,889C,946C,1508C,1589C,3255C,3273C,3288C,3300C,3313C,3352C,3449C,3453C,3586C,3596C,3610C,3625C,3642C 'branch':3251C,3265C,3323C,3345C 'browser':45B,987C,1491C,1888C,1918C 'build':789C,3284C,3331C,3363C,3510C,3633C 'busi':643C 'butunclebob.com':198B,3541C 'butunclebob.com/articles.unclebob.thebowlinggamekata':197B,3540C 'c':1438C 'c6':2784C 'calcul':1308C,2473C,2483C,2562C,2587C,3054C 'call':1207C,1227C,1845C,1854C 'case':414C,456C 'cd':919C,927C,1401C,1604C,1610C,1614C,1713C,1717C,1774C 'certain':701C 'certainti':820C 'chai':216B,3439C,3478C 'chaibdd':142B,212B,3442C,3474C 'chaijs.com':214B,3476C 'chaijs.com/api/bdd/':213B,3475C 'chang':1663C,2056C,3357C,3361C 'chapter':601C 'charact':374C 'check':2902C,3018C,3090C 'checkout':1385C 'checkrol':3036C,3041C,3043C,3048C 'class':315C,1196C,1253C,1255C,1264C,1275C,1338C,1344C,1350C 'clean':590C,730C 'clear':1248C 'client':658C,806C,812C 'clone':922C 'code':154B,279C,359C,385C,425C,435C,479C,506C,518C,593C,733C,756C,765C,1464C,1730C,1811C,2055C,2776C,2842C,2850C,3281C,3304C,3368C,3571C,3648C,3661C 'coder':591C 'command':1380C,1690C,3330C,3652C 'commit':1422C 'complet':990C,1142C,1478C,3099C,3601C,3616C 'compon':743C 'conduct':595C 'confid':481C 'config':1391C,1397C,1827C 'configur':1640C 'connect':1598C 'consist':995C 'console.log':1556C 'constant':449C 'constructor':1809C,1849C 'content':285C 'continu':1930C 'control':1437C 'control-c':1436C 'could':559C,957C,1483C 'coupl':770C 'courag':726C,821C 'cover':93B 'coverag':3305C,3315C,3334C,3369C,3644C,3649C 'creat':17B,1370C,1558C,1581C,1707C 'custom':902C 'cycl':405C,799C 'de':769C 'de-coupl':768C 'defect':686C,710C,809C,822C 'defin':416C,1814C,1996C,2059C,2540C 'definit':661C 'delet':1530C 'depend':1324C,3507C 'des1':1256C,1333C 'des2':1265C,1339C 'des3':1276C,1345C 'des4':1296C,1351C 'des5':1314C,1357C 'des6':1332C,1363C 'describ':144B,1736C,1743C,1853C,1860C,2134C,2206C,2232C,2274C,2367C,2491C,2648C,2710C,2945C,3106C 'describe.skip':2500C,2639C 'design':331C,754C,826C,1245C,2439C,2459C,2463C,2552C 'desir':418C 'dev':133B,854C,3254C,3259C,3268C,3272C,3287C,3299C,3312C,3351C,3448C,3452C,3585C,3595C,3609C,3624C,3641C 'develop':61B,108B,126B,211B,265C,389C,393C,404C,408C,443C,448C,529C,556C,617C,620C,631C,633C,670C,847C,850C,888C,1475C,3280C,3458C,3464C,3473C,3554C,3591C 'diagram':316C 'diff':367C 'differ':1288C 'directori':900C,1456C,1523C,1566C,1625C,1678C,1687C,1912C,3327C,3567C 'disciplin':817C 'discov':557C,808C 'document':277C,566C,740C,824C 'domain':960C,1902C 'done':663C 'download':876C,916C 'dri':2185C 'driven':60B,107B,210B,264C,388C,447C,528C,619C,630C,3457C,3463C,3472C,3553C 'e.g':548C,1673C 'easier':982C 'edit':892C,1524C,1648C,2843C 'effort':20B 'element':1576C 'els':2614C,2883C,2893C 'en.wikipedia.org':188B,441C,3531C,3549C 'en.wikipedia.org/wiki/ten-pin_bowling':187B,3530C 'en.wikipedia.org/wiki/test-driven':440C 'en.wikipedia.org/wiki/test-driven_development':3548C 'enabl':2633C 'end':1232C 'enforc':751C 'engin':53B,698C 'enhanc':819C 'entir':1852C 'entri':1927C 'environ':46B,127B,848C,851C,904C,1476C,1510C,3592C 'equal':2045C,2430C,2831C,3000C 'error':1773C,2011C,2079C,2440C,2573C,2782C 'essenc':340C 'establis':668C 'etc':3335C 'everi':2114C 'everyon':540C,659C,721C 'exampl':360C,1177C,3275C,3421C 'excel':355C 'execut':41B,869C,1493C,1764C 'exercis':253C,266C,293C,356C 'exit':1439C,1595C,1603C 'expand':622C 'expec':2012C,2574C 'expect':146B,465C,554C,1986C,2042C,2049C,2081C,2163C,2262C,2270C,2303C,2311C,2397C,2427C,2434C,2746C,2785C,2828C,2835C,2969C,2997C,3004C,3209C 'extra':1139C 'fail':149B,411C,458C,502C,1723C,1782C,1804C,1939C,2027C,2052C,2335C,2407C,2676C,2756C,2804C,2839C,2979C 'fals':3035C 'fifth':335C,2929C 'file':940C,1488C,1641C,1649C,1671C,1694C,1905C,1924C,3391C,3561C 'final':431C 'find':1799C 'finish':3245C 'first':139B,373C,406C,866C,1106C,1702C,2362C,2382C,2420C 'fix':2790C 'follow':69B,255C,2704C,2726C,2818C 'followup':3339C 'found':605C 'fourth':2669C 'frame':998C,1004C,1019C,1052C,1066C,1112C,1125C,1144C,1156C,1262C,1263C,1268C,1280C,1293C,1295C,1306C,1327C,1331C,1343C,1356C,1368C,2363C,3014C,3029C,3057C,3114C,3124C,3132C,3140C,3148C,3156C,3164C,3173C,3181C,3189C,3197C 'framewor':3436C 'framework':8A,34B,102B,226B,838C,3488C 'function':422C,1300C,1551C,1742C,1746C,1759C,1816C,1819C,1858C,1866C,1968C,1998C,2001C,2003C,2016C,2061C,2064C,2067C,2071C,2091C,2144C,2149C,2205C,2212C,2213C,2228C,2235C,2248C,2284C,2289C,2345C,2350C,2375C,2388C,2476C,2486C,2499C,2508C,2542C,2545C,2565C,2590C,2622C,2647C,2656C,2684C,2691C,2718C,2735C,2856C,2911C,2953C,2964C,3032C,3060C,3115C,3120C 'game':2A,86B,116B,167B,193B,202B,248C,275C,298C,830C,991C,994C,1165C,1176C,1185C,1188C,1198C,1235C,1243C,1252C,1254C,1259C,1337C,1706C,1728C,1734C,1745C,1754C,1761C,1763C,1784C,1791C,1801C,1808C,1815C,1818C,1821C,1823C,1824C,1834C,1835C,1848C,1857C,1859C,1936C,1944C,1963C,1970C,1972C,1974C,1976C,1997C,2000C,2020C,2029C,2036C,2060C,2063C,2066C,2097C,2112C,2125C,2136C,2151C,2153C,2194C,2231C,2234C,2243C,2250C,2252C,2276C,2291C,2293C,2330C,2339C,2359C,2370C,2410C,2442C,2494C,2503C,2526C,2541C,2544C,2632C,2642C,2651C,2671C,2713C,2807C,2932C,2940C,2949C,2983C,3007C,3021C,3100C,3107C,3122C,3147C,3163C,3172C,3403C,3411C,3420C,3528C,3536C,3545C,3603C,3618C 'game.js':1720C 'game.prototype':2620C,2909C,3030C 'game.prototype.roll':2002C,2070C,2475C,2564C 'game.prototype.score':2015C,2090C,2485C,2589C,2855C,3059C 'game.role':2080C 'game.roll':1984C,2161C,2260C,2301C,3128C,3130C,3136C,3138C,3152C,3154C,3177C,3179C,3185C,3187C,3193C,3195C,3203C,3205C,3207C 'game.score':1987C,2164C,2263C,2304C 'game.spec.js':1716C,2796C 'generat':1670C,3367C 'get':1382C,1771C,2759C 'git':366C,921C,929C,932C,1384C,1390C,1396C,1419C,1421C 'github.com':924C,3557C,3588C,3599C,3614C,3629C,3646C,3657C 'github.com/pixelhandler/vagrant-dev-env':923C,3587C 'github.com/pixelhandler/vagrant-dev-env/blob/bowling-cov/www/makefile':3645C 'github.com/pixelhandler/vagrant-dev-env/blob/bowling/www/test/index.html':3556C 'github.com/pixelhandler/vagrant-dev-env/tree/bowling-jasmine/www/test':3613C 'github.com/pixelhandler/vagrant-dev-env/tree/bowling-rjs/www/test':3628C 'github.com/pixelhandler/vagrant-dev-env/tree/bowling/www/test':3598C 'github.com/yeoman/yeoman':3656C 'give':720C 'given':549C,2137C,2277C,2380C,2418C,2723C,2815C 'global':1392C,1398C 'good':2771C 'graphic':322C 'green':3233C 'gruntfile.js':1672C,1695C 'gutter':1705C,1727C,1744C,1753C,1783C,1790C,1935C,1943C,1962C,2028C,2035C,2233C,2242C 'handl':3010C 'harm':706C 'hasbonusrol':3034C,3044C,3047C 'he/she':703C 'head':324C 'headless':44B,181B,3495C 'heaton':843C 'help':1661C 'helper':2204C,2344C,2683C 'hit':2116C,2131C,2140C,2280C,2385C,2423C,2707C,2731C,2823C 'host':1897C,1923C 'howev':1145C 'idea':2772C 'ignor':1675C 'improv':419C 'includ':3112C,3385C 'incorrect':2458C 'increas':483C 'index.html':1619C,3560C 'indic':369C 'info':1159C 'init':931C,1404C,1425C 'inspir':242C 'instal':882C,908C,918C 'instanti':2192C 'instead':2787C,3294C 'instruct':1172C,3416C 'int':1191C,1193C,1205C,1225C 'introduc':532C,684C 'ip':971C 'isol':760C 'isspar':2621C 'isstrik':2910C 'issu':1375C,1580C 'iter':1302C 'jasmin':3293C,3302C,3359C,3612C,3621C 'javascript':82B,120B,184B,282C,833C,3498C 'jqueri':1547C,1836C 'js':1697C,1699C,1701C 'jscoverag':3307C 'kata':3A,71B,117B,203B,249C,299C,308C,831C,1481C,1741C,1865C,2211C,3404C,3546C 'keep':240B,3427C,3519C 'kind':3103C 'knock':1011C,1026C,1040C,1058C,1076C,1087C,1099C,1222C 'l64':2783C 'language/terminology':538C 'lather':522C 'learn':22B,55B 'least':562C 'less':791C,803C 'librari':219B,1647C,3441C,3481C,3505C 'like':28B,774C,804C,962C,2762C 'line':370C,383C,1533C,2793C 'link':1560C,1584C,1602C,1630C,3396C,3564C 'lint':1665C,1684C,1692C,1693C,2774C,2779C,2780C 'linux':878C 'linux/ubuntu':862C 'ln':1606C 'load':1568C,1634C,1644C,3569C 'long':1920C 'look':615C 'm':1423C 'made':1600C 'main':1639C 'main.js':1572C 'make':295C,337C,1407C,2182C 'makefil':3319C,3654C 'malform':716C 'manag':3508C 'manual':797C 'map':608C 'markup':1653C 'martin':245C,586C,673C,3580C 'may':793C,910C,980C,2768C 'me@dom.com':1400C 'mental':475C 'mess':778C 'messag':1796C,2041C,2426C,2827C,2996C 'messi':732C 'met':3241C 'method':575C,1202C,1313C,1362C,1950C,1993C,2199C,2443C,2527C,2848C,2900C,3016C,3052C 'mind':607C 'minut':914C 'missplac':2468C,2557C 'mocha':5A,32B,100B,224B,835C,1499C,1654C,3296C,3309C,3355C,3372C,3377C,3434C,3486C,3606C,3651C 'mochasit':103B,220B,3437C,3482C 'mock':3386C 'model':476C 'modifi':1515C 'modul':744C,773C 'modular':764C 'money':792C 'must':1301C 'n':1411C,1412C,1415C,1416C 'name':1197C,1395C 'nan':2998C 'need':757C,885C,1250C,1537C,2791C 'new':26B,421C,434C,500C,1762C,1971C,1975C,2010C,2078C,2120C,2152C,2230C,2251C,2292C,2453C,2516C,2572C 'next':151B,1062C,1091C,1118C,1330C,1367C 'node.js':36B,177B,3491C 'nodej':37B,175B,3489C 'nodejs.org':176B,3490C 'note':357C,1466C,2457C,3316C 'null':3049C 'number':1023C,1055C,1075C,1084C,1219C,2008C,2014C,2076C,2087C,2570C,2576C 'object':1541C,2195C,3008C 'one':501C,1574C,2142C,2282C,2332C,2341C,2673C,2700C,3092C 'open':1485C 'opportun':1009C 'optim':3511C,3637C 'overal':814C 'part':786C 'pass':156B,427C,459C,1802C,1873C,1876C,2051C,2104C,2107C,2173C,2176C,2322C,2325C,2515C,2522C,2533C,2663C,2666C,2765C,2837C,2923C,2926C,3081C,3084C,3219C,3222C 'path':1519C,1540C,1544C,1831C 'pattern':547C 'perfect':2931C,2939C,2948C,2982C 'perhap':641C 'phantomj':47B,48B,178B,180B,3492C,3494C 'phantomjs.org':179B,3493C 'pin':90B,191B,320C,1014C,1025C,1044C,1057C,1086C,1103C,1163C,1190C,1204C,1221C,2004C,2007C,2072C,2075C,2082C,2089C,2118C,2133C,2143C,2216C,2226C,2283C,2387C,2425C,2477C,2566C,2569C,2578C,2581C,2709C,2734C,2826C,3409C,3534C 'ping':1739C,1863C,2209C 'pixelhandler.com':3393C 'pixelhandler.com/uploads/bowling-game-kata-additionaltopics.m4v)':3392C 'player':1006C,1039C,1098C,1127C,1211C 'plus':1028C,1078C 'point':2952C,2986C 'practic':57B,302C,626C 'precise64':863C,880C,943C,949C,964C,1588C 'precise64.dev':976C,979C,1884C,1895C,1901C,1929C 'precise64.dev/test/':1883C 'precise64.dev:3501':1431C 'present':259C,345C 'prevent':775C 'process':394C,487C,790C 'produc':424C 'product':484C,811C 'profession':597C,680C 'program':80B,163B,270C,1766C 'programm':251C,473C,598C 'project':543C,1372C 'proper':3058C 'provid':739C 'provis':856C,873C,1891C 'provision.sh':894C 'put':352C 'qa':798C 'qualiti':752C 'quick':122B,330C,1244C 'r.js':3365C,3635C 'rather':291C 'raw.github.com':1181C,1335C,1341C,1347C,1353C,1359C,1365C 'raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class.png':1340C 'raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class_next.png':1364C 'raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/frame_class_score.png':1358C 'raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/game_class.png':1334C 'raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/roll_class.png':1346C 'raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/ten-pins.jpg':1180C 'raw.github.com/pixelhandler/vagrant-dev-env/bowling/www/app/images/tenth_frame_class.png':1352C 'real':578C 'receiv':463C 'red':3231C 'reduct':823C 'refactor':432C,462C,517C,728C,2179C,2525C,2846C,3006C 'refer':3395C 'reinforc':471C 'reli':396C 'remov':381C 'render':1903C 'repeat':450C,520C,524C,2188C 'repetit':399C 'repo':3348C 'report':1500C,3303C,3333C,3370C 'repositori':3260C,3269C 'requir':1187C,1549C,1844C,1856C,3239C 'require.config':1542C,1830C 'require.js':1569C 'requirej':1414C,1570C,1638C,1646C,1826C,3366C,3444C,3445C,3500C,3504C,3573C,3636C 'requirejs.org':3502C 'requirejs.org/docs/requirements.html':3501C 'respons':2466C,2555C,2761C 'result':67B,161B,467C,762C 'return':1237C,1820C,2017C,2019C,2092C,2094C,2096C,2591C,2618C,2624C,2631C,2897C,2913C,3046C 'review':3344C 'rins':523C 'rjs':3290C,3627C 'robert':244C,585C 'roll':1063C,1092C,1121C,1129C,1137C,1153C,1189C,1203C,1212C,1273C,1274C,1285C,1349C,1756C,1793C,1947C,1965C,2038C,2115C,2129C,2139C,2215C,2223C,2245C,2279C,2347C,2384C,2422C,2444C,2470C,2528C,2536C,2559C,2679C,2705C,2730C,2822C,2905C,2938C,3025C,3105C 'rollidx':2623C,2626C,2628C,2912C,2915C 'rollmani':2203C,2214C 'rollmany.call':2266C,2307C,2393C,2742C,2965C 'rollspar':2351C 'rollspare.call':2389C,3146C,3162C 'rollstoscor':2598C,2603C,2862C,2867C,3066C,3070C 'rollstrik':2692C 'rollstrike.call':2736C,3171C 'root':955C 'row':2963C,2995C 'run':493C,508C,967C,1776C,1867C,2021C,2098C,2167C,2315C,2401C,2509C,2657C,2750C,2798C,2917C,2973C,3075C,3213C 'runner':1618C,1656C 'saniti':3089C 'satisfact':813C 'saw':2788C 'scaffold':3382C 'score':84B,165B,241B,272C,988C,1016C,1070C,1174C,1192C,1224C,1240C,1299C,1311C,1312C,1317C,1361C,1749C,1786C,1949C,1958C,2031C,2123C,2135C,2147C,2238C,2275C,2287C,2368C,2378C,2408C,2416C,2445C,2474C,2479C,2492C,2501C,2530C,2538C,2563C,2583C,2594C,2608C,2615C,2619C,2640C,2649C,2698C,2711C,2721C,2805C,2813C,2847C,2852C,2858C,2875C,2887C,2894C,2898C,2946C,2956C,2980C,2988C,3011C,3051C,3062C,3110C,3118C,3126C,3134C,3142C,3150C,3158C,3166C,3175C,3183C,3191C,3199C,3418C,3428C,3520C,3525C 'scoringbas':170B,233B,3429C,3512C 'scoringinstruct':1178C,3422C,3521C 'script':859C,874C,896C,1562C,1575C 'second':2110C 'see':439C,497C,513C,531C,1160C,1430C,1620C,1631C,3317C 'sentenc':579C 'serv':1906C 'server':1429C,1434C,3387C 'session':332C,1246C 'set':123B,230B,3665C 'setup':1893C 'shell':858C 'shim':1543C 'ship':666C,709C 'short':403C 'show':375C,3274C,3353C 'shown':1000C 'simpl':79B 'sinc':647C,779C 'sinonj':3389C 'skill':174B 'skip':906C,2451C,2487C,2519C,2635C 'slocums.homestead.com':235B,3514C 'slocums.homestead.com/gamescore.html':234B,3513C 'softwar':392C,697C,884C 'sourc':3660C 'spare':1033C,1035C,1131C,1320C,2333C,2342C,2349C,2366C,2374C,2414C,2456C,2498C,2507C,2539C,2646C,2655C,2811C 'spec':738C,1655C,1735C,1778C,1839C,1869C,1932C,2023C,2100C,2169C,2317C,2403C,2511C,2659C,2752C,2800C,2919C,2975C,3077C,3215C,3356C 'spent':795C 'ssh':1389C,1441C,1592C,1597C,1613C 'stage':470C 'standard':438C 'start':571C,1383C 'stay':1443C 'step':452C 'still':2321C 'stop':1432C 'strike':1031C,1094C,1133C,1323C,2674C,2681C,2688C,2701C,2717C,2725C,2817C,2854C,2908C,2934C,2960C,2992C 'stub':1946C,1992C 'style':368C 'subdirectori':1681C 'submodul':930C,933C 'succeed':515C 'successor':1329C 'sure':1513C 'symbol':1559C,1583C,1629C,3563C 'system':689C,713C,747C 'take':911C 'task':1666C,1892C 'tdd':390C,444C,486C,525C,583C,603C,3465C,3547C 'team':656C,724C 'ten':89B,190B,319C,1162C,1738C,1862C,2208C,3408C,3533C 'ten-p':1737C,1861C,2207C 'ten-pin':88B,318C,1161C,3407C 'tenpinbowlinggam':92B,186B,1168C,3414C,3529C 'tenth':1124C,1155C,1279C,1294C,1355C,3113C 'tenthframerol':3068C,3071C,3072C 'test':7A,33B,101B,141B,158B,225B,263C,336C,387C,413C,429C,446C,455C,466C,491C,495C,511C,553C,574C,618C,639C,650C,664C,691C,719C,735C,750C,780C,837C,1427C,1487C,1495C,1565C,1617C,1686C,1703C,1710C,1724C,1780C,1805C,1871C,1940C,2025C,2053C,2102C,2111C,2121C,2171C,2183C,2191C,2319C,2329C,2336C,2357C,2405C,2454C,2488C,2513C,2517C,2534C,2636C,2661C,2670C,2677C,2686C,2696C,2754C,2802C,2840C,2921C,2930C,2936C,2977C,3079C,3094C,3097C,3217C,3277C,3291C,3332C,3375C,3435C,3462C,3487C,3552C,3559C,3566C,3604C,3619C,3631C 'test-driven':262C,386C,445C,3461C,3551C 'test/code':3246C 'test/spec':1700C 'test/spec/game.spec.js':1712C,1732C,1841C,1955C,2180C,2490C,2638C,2690C,2781C,2944C,3096C 'testabl':755C 'testindex':3555C 'thank':346C 'thebowlinggamekata':75B,118B,196B,3405C,3539C 'third':2328C 'this._bonusroll':3069C 'this._currentroll':2548C,2580C 'this._isspare':2606C,2870C,2885C,3042C 'this._isstrike':2873C,3040C 'this._rolls':2550C,2579C,2610C,2616C,2625C,2627C,2877C,2880C,2889C,2895C,2914C 'this._rolls.length':2599C,2863C,3037C,3067C,3074C 'this._score':2068C,2088C,2095C,2546C,2577C,2592C 'this.game':2229C,2267C,2308C,2390C,2394C,2737C,2743C,2966C,3123C 'this.game.roll':2391C,2738C,2740C 'this.game.score':2271C,2312C,2398C,2747C,2970C,3210C 'this.roll':2225C,2352C,2354C,2693C 'three':1149C,1284C 'throw':2009C,2077C,2571C 'time':867C,1209C 'to.equal':1988C,2165C,2264C,2272C,2305C,2313C,2399C,2748C,2971C,3211C 'todo':2449C,2462C,2469C,2478C,2551C,2558C,2582C 'togeth':353C 'tool':27B,232B,3638C,3667C 'topic':3243C 'total':1022C,1074C,1239C 'touch':1715C,1719C 'train':827C 'tri':1047C,1107C 'true':3045C 'tutori':13B,15B,96B,284C,327C,363C,1480C,3342C 'twitter':3582C 'twitter.com':3576C 'twitter.com/unclebobmartin':3575C 'two':1008C,1046C,1119C,1201C,1272C,1282C,2703C,2729C,2821C 'typeof':2006C,2074C,2568C 'ui':717C 'uncl':73B,112B,256C,310C,342C,348C,1183C,3398C,3578C 'unclebob':350C,3574C 'undefin':2048C,2433C,2834C,3003C 'understand':544C 'unit':1709C 'unstabl':777C 'updat':934C,937C,1838C,3050C 'use':4A,25B,35B,98B,365C,537C,545C,834C,948C,958C,984C,1447C,1472C,1505C,1553C,1590C,1623C,1651C,2196C,2777C,3364C,3378C,3562C,3605C,3620C,3650C 'user.email':1399C 'user.name':1393C 'vagrant':129B,132B,846C,849C,853C,870C,935C,1377C,1388C,1440C,1474C,1509C,1591C,1612C,1890C,3253C,3271C,3286C,3298C,3311C,3350C,3447C,3451C,3584C,3590C,3594C,3608C,3623C,3640C 'vagrant-dev-box':131B,852C,3270C,3349C,3450C,3583C 'vagrant-dev-box-bowl':3252C,3593C 'vagrant-dev-box-bowling-coverag':3310C,3639C 'vagrant-dev-box-bowling-jasmin':3297C,3607C 'vagrant-dev-box-bowling-rj':3285C,3622C 'vagrant/virtual':945C 'vagrant/www/test':1455C 'valu':1115C,2484C,2588C 'var':1760C,1817C,1969C,1973C,1999C,2062C,2065C,2150C,2217C,2249C,2290C,2543C,2593C,2857C,3033C,3061C,3121C 'variabl':1800C 'variat':3111C 've':305C 'vendor':1677C 'vendor/jquery.min':1548C,1837C 'verifi':1768C 'vhost':966C 'via':1627C 'video':828C,3343C,3390C 'view':1497C 'vimeo':845C 'vimvim':1448C 'virtual':1507C,1896C 'virtualbox':130B 'visionmedia.github.com':222B,3484C 'visionmedia.github.com/mocha/':221B,3483C 'visit':1882C 'w':183B,3497C,3572C 'way':695C 'webkit':182B,3496C 'well':3225C 'wikipedia':194B,1166C,3412C,3537C 'work':748C,977C,1522C 'wrap':1850C,3229C 'write':140B,152B,268C,409C,504C,573C,636C,690C,718C,734C,749C,1194C,1462C 'written':280C 'wrong':2465C,2554C 'www':954C,3326C 'www.bowlingindex.com':3523C 'www.bowlingindex.com/instruction/scoring.htm':3522C 'www.mindmeister.com':613C 'www.mindmeister.com/119023034/the-clean-coder-by-robert-c-martin-book-notes':612C 'www/app/scripts':1626C 'www/test':1605C 'y':1413C 'y/n':1406C 'yeoman':10A,29B,136B,229B,840C,1379C,1403C,1408C,1418C,1424C,1426C,1428C,1433C,1669C,1691C,1779C,1870C,2024C,2101C,2170C,2318C,2404C,2512C,2660C,2753C,2778C,2801C,2920C,2976C,3078C,3216C,3384C,3659C,3664C 'yeoman.io':228B,3431C,3663C 'yeomansit':137B,227B,3662C 'yeomansourc':3432C,3655C	published	pixelhandler
62	Here is my situation, I am working on an eCommerce site with over 4,000 unique\nvisitors each month but the checkout rate seems fairly low, and the analytics\nshow a large percentage of potential customers exiting the checkout process at\nthe confirm stage. Also, a large volume of visitors landing on the home page\nbounce without entering in to key areas of the site and responding to my calls\nto action (buying product or completing a form).\n\n**The major shift for me will be creating a larger return on investment for my search engine optimization and marketing efforts by creating a larger percentage of goal conversions with my current volume of web site traffic.**\n\nThis will have a lasting and recurring benefit since a small decrease in\nbounces and abandoned goal funnels will generate a higher percentage of growth\nwithout buying more traffic. This process of conversion optimization has the\nbiggest band for my buck (or sweat) and helps with growing conversions with my\ncurrent pay-per-click campaigns. Also, the strategies presented will help me\ncommunicate more effectively with my audience. The book inspired me to apply a\nconversion optimization beginning at my check-put pages, working my way back\nto the home page. After adding a secondary goal on my detail pages I noticed\nan increase in online sales. This optimization process creates results!	_Book Review:_ [Web Design for ROI by Lance Loveday & Sandra Niehaus](http://www.amazon.com/gp/product/0321489829?ie=UTF8&tag=pixhanradintm-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0321489829)\n\nEach year I find one or two books that really stand out. This book, _Web\nDesign for ROI_, changed the way I look at current eCommerce projects and\nhelped me identify better strategies for building web sites. This 10 minute\nreview highlights the key points in the book that helped me learn the process\nfor **‘conversion optimization’** – converting my site visitors into\ncustomers.	conversion-optimization-by-strategic-design	Conversion Optimization by Strategic Design	2008-03-26	2015-05-07 17:03:21.565186	2015-05-07 17:03:21.565186	1	'/gp/product/0321489829?ie=utf8&tag=pixhanradintm-20&linkcode=as2&camp=1789&creative=9325&creativeasin=0321489829)':19B '000':97C '10':58B '4':96C 'abandon':213C 'action':154C 'ad':292C 'also':127C,254C 'analyt':111C 'appli':272C 'area':144C 'audienc':266C 'back':286C 'band':235C 'begin':276C 'benefit':205C 'better':51B 'biggest':234C 'book':6B,27B,33B,67B,268C 'bounc':138C,211C 'buck':238C 'build':54B 'buy':155C,224C 'call':152C 'campaign':253C 'chang':38B 'check':280C 'check-put':279C 'checkout':104C,121C 'click':252C 'communic':261C 'complet':158C 'confirm':125C 'convers':1A,75B,189C,230C,245C,274C 'convert':77B 'creat':168C,183C,310C 'current':44B,192C,248C 'custom':82B,118C 'decreas':209C 'design':5A,9B,35B 'detail':298C 'ecommerc':45B,92C 'effect':263C 'effort':181C 'engin':177C 'enter':140C 'exit':119C 'fair':107C 'find':23B 'form':160C 'funnel':215C 'generat':217C 'goal':188C,214C,295C 'grow':244C 'growth':222C 'help':48B,69B,242C,259C 'higher':219C 'highlight':61B 'home':136C,289C 'identifi':50B 'increas':303C 'inspir':269C 'invest':173C 'key':63B,143C 'lanc':13B 'land':133C 'larg':114C,129C 'larger':170C,185C 'last':202C 'learn':71B 'look':42B 'loveday':14B 'low':108C 'major':162C 'market':180C 'minut':59B 'month':101C 'niehaus':16B 'notic':301C 'one':24B 'onlin':305C 'optim':2A,76B,178C,231C,275C,308C 'page':137C,282C,290C,299C 'pay':250C 'pay-per-click':249C 'per':251C 'percentag':115C,186C,220C 'point':64B 'potenti':117C 'present':257C 'process':73B,122C,228C,309C 'product':156C 'project':46B 'put':281C 'rate':105C 'realli':29B 'recur':204C 'respond':149C 'result':311C 'return':171C 'review':7B,60B 'roi':11B,37B 'sale':306C 'sandra':15B 'search':176C 'secondari':294C 'seem':106C 'shift':163C 'show':112C 'sinc':206C 'site':56B,79B,93C,147C,196C 'situat':86C 'small':208C 'stage':126C 'stand':30B 'strateg':4A 'strategi':52B,256C 'sweat':240C 'traffic':197C,226C 'two':26B 'uniqu':98C 'visitor':80B,99C,132C 'volum':130C,193C 'way':40B,285C 'web':8B,34B,55B,195C 'without':139C,223C 'work':89C,283C 'www.amazon.com':18B 'www.amazon.com/gp/product/0321489829?ie=utf8&tag=pixhanradintm-20&linkcode=as2&camp=1789&creative=9325&creativeasin=0321489829)':17B 'year':21B	published	pixelhandler
6	For more info on Handlebars and HTMLbars see:\n* [Compiling Templates in Ember v1.10.0]\n* [Feature-by-Feature Review]\n\n[Compiling Templates in Ember v1.10.0]: http://emberjs.com/blog/2015/02/05/compiling-templates-in-1-10-0.html\n[Feature-by-Feature Review]: http://colintoh.com/blog/htmlbars "HTMLBars - A Feature-by-Feature Review"\n\n## Using the renderTemplate hook to mark, measure and report metrics\n\nIn an Ember application, there are various hooks between [routing] a request and drawing HTML on the DOM. The [renderTemplate] hook is the most desireable hook to utilize for marking, measuring and reporting the performance metrics captured while presenting HTML to users. The `renderTemplate` hook is called after the `model` hooks and `setupController` hook compose your data for your template bindings. Combined with the [run-loop], specifically the [schedule] for `afterRender` the `renderTemplate` hook can mark the *beginning* of the work to render a template and, in the `afterRender` queue, mark the *completion* of the work. (`Ember.run.queues` lists the queues that are scheduled by the run loop: `["sync", "actions", "routerTransitions", "render", "afterRender", "destroy"]`)\n\n[routing]: http://emberjs.com/guides/routing/\n[renderTemplate]: http://emberjs.com/api/classes/Ember.Route.html#method_renderTemplate\n[run-loop]: http://emberjs.com/guides/understanding-ember/run-loop/\n[schedule]: http://emberjs.com/api/classes/Ember.run.html#method_schedule\n\n## Mark, Measure and Report User Timing Metrics\n\nI created a utility with an interface to [mark][performancemark], [measure][performancemeasure] and report measurements taken with the [User Timing] API. I did use a polyfill for browsers that do not implement the [performance] specifications.\n\n[User Timing]: http://www.w3.org/TR/user-timing\n[performancemark]: http://www.w3.org/TR/user-timing/#performancemark\n[performancemeasure]: http://www.w3.org/TR/user-timing/#performancemeasure\n[performance]: http://www.w3.org/standards/techs/performance#w3c_all\n\nI used the mixin below in various routes, e.g. Index, Application, Post etc. to collect and measure the statistics for reporting on the timings that an Ember application renders HTML.\n\n    import Ember from 'ember';\n    import config from '../config/environment';\n    import { mark, measure, report } from '../utils/metrics';\n\n    export default Ember.Mixin.create({\n\n      measurementName: Ember.required,\n\n      reportUserTimings: true,\n\n      renderTemplate(controller, model) {\n        var beginName = 'mark_begin_rendering_' + this.measurementName;\n        var endName = 'mark_end_rendering_' + this.measurementName;\n        if (config.APP.REPORT_METRICS) {\n          mark(beginName);\n          Ember.run.scheduleOnce('afterRender', this, function() {\n            mark(endName);\n            measure(this.measurementName, beginName, endName);\n            if (this.reportUserTimings) {\n              report();\n            }\n          });\n        }\n        return this._super(controller, model);\n      }\n\n    });\n\n## Utility Module for Metrics Collection and Reporting\n\nThis mixin wraps the `window.performance` methods and provides functions for reporting the measurements using an XHR request and [Google Analytics to report User Timings].\n\nWhat is amazing about the performance measurements is that the API uses high-resolution timing with sub-millisecond resolution.\n\n[Google Analytics to report User Timings]: https://developers.google.com/analytics/devguides/collection/analyticsjs/user-timings\n\n\n    /*jshint unused:false*/\n    import Ember from 'ember';\n    import config from '../config/environment';\n\n    export function mark(name) {\n      if (!window.performance || !window.performance.mark ) { return; }\n      window.performance.mark(name);\n    }\n\n    export function measure(name, begin, end) {\n      if (!window.performance || !window.performance.measure ) { return; }\n      window.performance.measure(name, begin, end);\n    }\n\n    export function appReady() {\n      return measureEntry('app_ready');\n    }\n\n    export function appUnload() {\n      return measureEntry('app_unload');\n    }\n\n    export function pageView() {\n      return measureEntry('page_view');\n    }\n\n    function measureEntry(name) {\n      if (!window.performance || !window.performance.getEntriesByName ) { return; }\n      var markName = name + '_now';\n      mark(markName);\n      if (window.performance.timing) {\n        measure(name, 'navigationStart', markName);\n      } else {\n        measure(name, markName, markName);\n      }\n    }\n\n    export function report() {\n      if (!window.performance || !window.performance.getEntriesByType ) { return; }\n      window.setTimeout(function() {\n        send(window.performance.getEntriesByType('measure'));\n        clear();\n      }, 1000);\n    }\n\n    function send(measurements) {\n      var measurement;\n      for (var i = 0; i < measurements.length; ++i) {\n        measurement = measurements[i];\n        post(measurement);\n        gaTrackTiming(measurement);\n      }\n    }\n\n    export function post(measurement) {\n      var payload = createMetric(measurement);\n      return Ember.$.ajax({\n        type: 'POST',\n        url: endpointUri('metrics'),\n        contentType: 'application/json; charset=utf-8',\n        data: JSON.stringify({ metrics: payload }),\n        dataType: 'json'\n      });\n    }\n\n    function gaTrackTiming(measurement) {\n      if (typeof window.ga !== 'function') { return; }\n      window.ga('send', {\n        'hitType': 'timing',\n        'timingCategory': 'user_timing',\n        'timingVar': measurement.name,\n        'timingValue': measurement.duration,\n        'timingLabel': measurement.emberVersion,\n        'page': measurement.pathname\n      });\n    }\n\n    function createMetric(measurement) {\n      return {\n        date: Date.now(),\n        name: measurement.name,\n        pathname: location.pathname,\n        startTime: Math.round(measurement.startTime),\n        duration: Number(Math.round(measurement.duration + 'e3') + 'e-3'), // round to thousandths\n        visitor: window.localStorage.getItem('visitor'),\n        screenWidth: window.screen.width,\n        screenHeight: window.screen.height,\n        screenColorDepth: window.screen.colorDepth,\n        screenPixelDepth: window.screen.pixelDepth,\n        screenOrientation: (window.screen.orientation) ? window.screen.orientation.type : null,\n        blogVersion: config.APP.version,\n        emberVersion: Ember.VERSION,\n        adapterType: (config.APP.USE_SOCKET_ADAPTER) ? 'SOCKET' : 'JSONAPI'\n      };\n    }\n\n    function endpointUri(resource) {\n      var host = config.APP.API_HOST;\n      var path = config.APP.API_PATH;\n      var uri = (path) ? host + '/' + path : host;\n      return uri + '/' + resource;\n    }\n\n    function clear() {\n      window.performance.clearMarks();\n      window.performance.clearMeasures();\n    }\n\n### Learn more about User Timing API to Measure Performance\n\n* [W3C Web Performance](http://www.w3.org/TR/#tr_Web_Performance)\n* [Performance Mark Method](http://www.w3.org/TR/user-timing/#dom-performance-mark)\n* [Performance Measure Method](http://www.w3.org/TR/user-timing/#dom-performance-measure)\n* [HTML5Rocks: User Timing API](http://www.html5rocks.com/en/tutorials/webperformance/usertiming/)\n* [Caniuse Performance](http://caniuse.com/#search=performance)\n* [High Resolution Time](http://www.w3.org/TR/hr-time/)\n\n## Reporting the metrics\n\nAt first I decided to add a */metrics* endpoint to my API, then later realized that Google Analytics can collect and report on User Timing measurements as well (I'm using both). I prefer the data in my own database, I can create very specific queries to search the userAgent string to compare measurements for mobile, iPad, iPhone, etc.\n\nIn addition to collecting measurements for rendering templates I collected metrics on finding data (via an adapter). The metrics I report on are named `app_ready`, `application_view`, `index_view`, `post_view`, `page_view`, `app_unload`, `archive_view`, and `find_posts`.\n\n*An Example Metric Resource:*\n\n    {\n      adapterType: 'SOCKET',\n      blogVersion: '3.3.8.fa3fbaf8',\n      date: '2015-02-08T06:29:17.368Z',\n      duration: 113.35,\n      emberVersion: '1.10.0',\n      id: '1a9864a2-4011-49d8-9233-fa76d26e9040',\n      name: 'post_view',\n      pathname: '/posts/refreshed-my-blog-with-express-and-emberjs',\n      screenColorDepth: 24,\n      screenHeight: 900,\n      screenOrientation: 'landscape-primary',\n      screenPixelDepth: 24,\n      screenWidth: 1440,\n      startTime: 391,\n      userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) .... Safari/537.36',\n      visit: '22d5d2b0be4067ac3af57f4b14fcbb4b4d89fe34b1eeeaab910c259e7b9c55aa',\n      visitor: 'c56f439e-646b-4f6a-b91b-5c119e21efba'\n    }\n\nI created endpoints on my API for */metrics/impressions* and */metrics/durations* that accept queries that use regular expression matching to search for data based on the object properties of the metrics. For example I can search the pathname, userAgent and emberVersion when reporting on the metrics data.\n\nMore info on these endpoints:\n\n* [discuss.emberjs : Collecting performance metrics]\n* [Metrics API Endpoints]\n\n[Metrics API Endpoints]: https://github.com/pixelhandler/blog/tree/master/server#metrics-api-endpoints\n[discuss.emberjs : Collecting performance metrics]: http://discuss.emberjs.com/t/collecting-performance-metrics-using-rendertemplate-hook-and-user-timing-api/7270/1 "Collecting performance metrics using renderTemplate hook and User Timing API"\n\n## Metrics: Rendering with HTMLBars vs Handlebars\n\nI consider the fact that the user only needs a single full screen at a time. So my app loads records in chunks when the user scrolls to the end. I'm not as interested in how well a large table of a thousand records performs; I don't think that users will enjoy waiting for the data anyway. But, for those interested in that kind of pain… I created a page on my site that has 1,000 metrics records, a long list. I collect metrics on rendering that metrics table as well. I'm not convinced that this metric really matters to users. Maybe, if I had a complex data visualization that had a 1,000 data points it would matter. Well, then I'd likely use a data vizualization library (like D3) to render the data instead. So, I'm not convinced that rendering a long list is really of any value to any user. Whether that (long list) measurement is relevant as metric for comparing a template library, my vote is thumbs down.\n\nI am convinced that measuring the perceived performance of web application matters to my users. I think that with these measurements, I can identify trends and make some informed assumptions about how these metrics apply to other Ember applications I work on.\n\nBelow are some measurements I took, I gave about a week of web traffic to both template library solutions. I measured the timings for rendering views in my app running both a) Ember.js v1.8.1 with Handlebars v1.3 and b) Ember v1.10.0 and HTMLBars (the initial release).\n\nI was able to collect a good sized data set, so that the average (speed) durations are good comparison between various facets of the metrics data, e.g. emberVersion and userAgent. I can report on the average of all user agents, or on a specfic type of userAgent. Since the timings are measured after data is fetched and the application is ready, I am confident that the metrics captured do reflect the timings that actual users experience.\n\n### A few comparisons (Ember.js v1.10.0 and v1.8.1)\n\nThe measurements below highlight some gains and losses as a result of the upgrade from Handlebars to HTMLbars in my application…\n\n#### All userAgents, desktop and mobile\n\nIndex (home) page in v1.8.1  \n\n    //Ember v1.8.1\n    {\n      average: 154.41764912280703,\n      durations: 114,\n      fastest: 5,\n      pathname: "/",\n      slowest: 914\n    }\n\nIndex (home) page in v1.10.0  \n\n    // Ember v1.10.0\n    {\n      average: 244.7352818181818,\n      durations: 220,\n      fastest: 5,\n      pathname: "/",\n      slowest: 1854.635\n    }\n\nThe most visited (post) page in v1.8.1\n\n/metrics/durations?name=post_view&pathname=mongoose&emberVersion=1.8\n\n    // Ember v1.8.1\n    {\n      average: 251.42101618705053,\n      durations: 1668,\n      fastest: 8,\n      pathname: "/posts/develop-a-restful-api-using-nodejs-with-express-and-mongoose",\n      slowest: 3696\n    }\n\nThe most visited (post) page in v1.10.0\n\n/metrics/durations?name=post_view&pathname=mongoose&emberVersion=1.10\n\n    // Ember v1.10.0\n    {\n      average: 232.02967880485514,\n      durations: 2142,\n      fastest: 8,\n      pathname: "/posts/develop-a-restful-api-using-nodejs-with-express-and-mongoose",\n      slowest: 5726\n    }\n\nLong list (1,000 metrics) in v1.10.0, in Chrome\n\n/api/metrics/durations?name=metrics_table&emberVersion=1.10&userAgent=Chrome\n\n    // Ember Version 1.10.0\n    {\n      average: 690.5488399999999,\n      durations: 25,\n      fastest: 427.563,\n      pathname: "/metrics",\n      slowest: 1142.15\n    }\n\nLong list (1,000 metrics) in v1.8.1, in Chrome\n\n/metrics/durations?name=metrics_table&emberVersion=1.8&userAgent=Chrome\n\n    // Ember Version 1.8.1\n    {\n      average: 682.4195625,\n      durations: 16,\n      fastest: 457.012,\n      pathname: "/metrics",\n      slowest: 991.684\n    }\n\n#### On Mobile\n\nIndex (home) page in v1.10.0, on Mobile\n\n/metrics/durations?name=index_view&emberVersion=1.10&userAgent=Mobile\n\n    // Ember Version 1.10.0\n    {\n      average: 580.4696976744186,\n      durations: 43,\n      fastest: 160,\n      pathname: "/",\n      slowest: 1490\n    }\n\nIndex (home) page in v1.8.1, on Mobile\n\n/metrics/durations?name=index_view&emberVersion=1.8&userAgent=Mobile\n\n    // Ember Version 1.8.1\n    {\n      average: 515.881875,\n      durations: 8,\n      fastest: 330,\n      pathname: "/",\n      slowest: 914\n    }\n\nLong list (1,000 metrics) in v1.8.1, on Mobile\n\n/metrics/durations?name=metrics_table&emberVersion=1.8&userAgent=Mobile\n\n    // Ember Version 1.8.1\n    {\n      average: 2179.4,\n      durations: 10,\n      fastest: 871,\n      pathname: "/metrics",\n      slowest: 5380\n    }\n\nLong list (1,000 metrics) in v1.10.0, on Mobile\n\n/metrics/durations?name=metrics_table&emberVersion=1.10&userAgent=Mobile\n\n    // Ember Version 1.10.0\n    {\n      average: 1617.4285714285713,\n      durations: 7,\n      fastest: 1014,\n      pathname: "/metrics",\n      slowest: 2285\n    }\n\n## What I learned about my Performance in my Ember app\n\nI have not read "How not to lie with statistics, The correct way to summarize benchmark results". So, the measurements I've taken at this point, are only an exploration of a data set that is not normalized.\n\nFrom jayconrod.com… "The geometric mean is intended for averaging ratios (normalized data)" … "Don't bother summarizing raw data without normalizing it."\n\nSo, I can't make any conclusions at this point, I can only ask more questions. For example, how do I normalize the data I've that I've captured and calculate the geometric means?\n\n**UPDATE: 3/8/15** I've calculated my findings in a new post: [How Much Faster is HTMLBars Than Handlebars?](/posts/how-much-faster-is-htmlbars-than-handlebars)\n\n*Regarding the upgrade from Handlebars to HTMLbars…*\n\n* Looking at the average speed of rendering the home page did not seem to show a performance gain, but the data set is not normalized\n* The same can be said for the speed of rendering the templates on my post pages\n* Though I don't believe that rendering a long list doesn't matter to my users, after experimenting with a long list I did notice notice any big gains in performance looking at the fastest rendering times in the data I collected\n\nHowever what appears to be good news, is that the fastest speeds did improve, and even more so on mobile.\n\n*On Mobile…*\n\nIt appears that…\n\n* I may expect a 25% - 50% gain in performance for the fastest time to render.\n*The performance gains my users will benefit from (after the upgrade) are limited to the users who have newer mobile devices*\n\nThanks to the hard work of the Ember.js contributors and core team its my expectation that users browsing my site should see a boost in performance. \n\nSince I found these measurements valuable, I'll continue to collect them and review as I try out various beta versions of Ember.js. Recently another release of the 1.11.0 series was released, so I'll give it a try soon.\n\n_Once I discover how to normalize the metrics and calculate a proper geometric mean then I can draw some more definitive summaries about the measurements._\n\nAt this point, I am very satisfied to have these metrics available from a production build, on a production server from a wide set of users, I get around 10,000 unique users and 30,000 pageviews per month on my blog app. This is not huge, but does provide some good insight into trends I can expect from previous, current and future releases of Ember.\n\nI gave a talk on this topic, here are [my presentation notes](https://gist.github.com/pixelhandler/f01a1703721d31de0de1) \n	As the release of [Ember.js] v1.10.0 approached, I became curious about how to measure the speed of rendering templates in an Ember application. I wanted to capture the differences in rendering speed between Ember.js v1.8.1 with [Handlebars] v1.3 and Ember.js v1.10.0 with [HTMLBars]. The Handlebars template library uses string concatenation to assemble templates and render HTML. The next generation template library HTMLBars is built on top of Handlebars; instead of compiling strings, HTMLBars creates document fragments with DOM constructors, e.g. the [HTMLElement] interface.\n\n[Ember.js]: http://emberjs.com\n[Handlebars]: http://handlebarsjs.com\n[HTMLBars]: https://github.com/tildeio/htmlbars\n[HTMLElement]: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement	measuring-performance-with-user-timing-api-in-an-ember-application	Measuring Performance with User Timing API, in an Ember Application	2015-03-01	2015-05-07 17:03:21.245136	2015-12-27 07:06:44.703258	1	'-02':891C '-08':892C '-3':679C '-4011':903C '-49':904C '-8':630C '-9233':906C '/#search=performance)':770C '/analytics/devguides/collection/analyticsjs/user-timings':496C '/api/classes/ember.route.html#method_rendertemplate':278C '/api/classes/ember.run.html#method_schedule':288C '/api/metrics/durations':1503C '/blog/2015/02/05/compiling-templates-in-1-10-0.html':131C '/blog/htmlbars':139C '/config/environment':385C,507C '/ember':1413C '/en-us/docs/web/api/htmlelement':105B '/en/tutorials/webperformance/usertiming/)':765C '/guides/routing/':274C '/guides/understanding-ember/run-loop/':284C '/metrics':787C,1521C,1551C,1637C,1667C '/metrics/durations':956C,1447C,1474C,1533C,1563C,1590C,1619C,1649C '/metrics/impressions':954C '/pixelhandler/blog/tree/master/server#metrics-api-endpoints':1010C '/pixelhandler/f01a1703721d31de0de1)':2115C '/posts/develop-a-restful-api-using-nodejs-with-express-and-mongoose':1464C,1491C '/posts/how-much-faster-is-htmlbars-than-handlebars':1792C '/posts/refreshed-my-blog-with-express-and-emberjs':912C '/standards/techs/performance#w3c_all':347C '/t/collecting-performance-metrics-using-rendertemplate-hook-and-user-timing-api/7270/1':1017C '/tildeio/htmlbars':101B '/tr/#tr_web_performance)':746C '/tr/hr-time/)':776C '/tr/user-timing':335C '/tr/user-timing/#dom-performance-mark)':752C '/tr/user-timing/#dom-performance-measure)':758C '/tr/user-timing/#performancemark':339C '/tr/user-timing/#performancemeasure':343C '/utils/metrics':391C '0':599C '000':1112C,1151C,1497C,1527C,1613C,1643C,2065C,2070C '1':1111C,1150C,1496C,1526C,1612C,1642C '1.10':1481C,1508C,1568C,1654C '1.10.0':900C,1513C,1573C,1659C '1.11.0':1998C '1.8':1454C,1538C,1595C,1624C '1.8.1':1543C,1600C,1629C '10':934C,935C,1633C,2064C '1000':590C '1014':1665C '113.35':898C '114':1418C '1142.15':1523C '1440':924C '1490':1582C '154.41764912280703':1416C '16':1547C '160':1579C '1617.4285714285713':1661C '1668':1460C '17.368':895C '1854.635':1439C '1a9864a2':902C '2':936C '2015':890C '2142':1487C '2179.4':1631C '220':1434C '2285':1669C '22d5d2b0be4067ac3af57f4b14fcbb4b4d89fe34b1eeeaab910c259e7b9c55aa':939C '232.02967880485514':1485C '24':914C,922C '244.7352818181818':1432C '25':1517C,1912C '251.42101618705053':1458C '29':894C '3.3.8':887C '3/8/15':1775C '30':2069C '330':1606C '3696':1466C '391':926C '427.563':1519C '43':1577C '457.012':1549C '4f6a':944C '5':1420C,1436C '50':1913C '515.881875':1602C '5380':1639C '5726':1493C '580.4696976744186':1575C '5c119e21efba':946C '646b':943C '682.4195625':1545C '690.5488399999999':1515C '7':1663C '8':1462C,1489C,1604C '871':1635C '900':916C '914':1423C,1609C '991.684':1553C 'abl':1301C 'accept':958C 'action':266C 'actual':1372C 'adapt':705C,855C 'adaptertyp':702C,884C 'add':785C 'addit':840C 'afterrend':228C,246C,269C,420C 'agent':1338C 'ajax':620C 'amaz':469C 'analyt':462C,489C,797C 'anoth':1994C 'anyway':1092C 'api':6A,316C,477C,737C,762C,791C,952C,1003C,1006C,1027C 'app':537C,544C,863C,873C,1052C,1281C,1679C,2077C 'appear':1885C,1906C 'appli':1245C 'applic':10A,33B,160C,358C,375C,865C,1221C,1249C,1357C,1402C 'application/json':627C 'appreadi':534C 'approach':17B 'appunload':541C 'archiv':875C 'around':2063C 'ask':1752C 'assembl':62B 'assumpt':1240C 'avail':2046C 'averag':1312C,1334C,1415C,1431C,1457C,1484C,1514C,1544C,1574C,1601C,1630C,1660C,1726C,1803C 'b':1291C 'b91b':945C 'base':969C 'becam':19B 'begin':235C,405C,522C,530C 'beginnam':403C,418C,427C 'believ':1845C 'benchmark':1695C 'benefit':1929C 'beta':1989C 'big':1868C 'bind':217C 'blog':2076C 'blogvers':698C,886C 'boost':1967C 'bother':1732C 'brows':1961C 'browser':323C 'build':2050C 'built':74B 'c56f439e':942C 'c56f439e-646b-4f6a-b91b-5c119e21efba':941C 'calcul':1770C,1778C,2019C 'call':203C 'canius':766C 'caniuse.com':769C 'caniuse.com/#search=performance)':768C 'captur':37B,193C,1366C,1768C 'charset':628C 'chrome':1502C,1510C,1532C,1540C 'chunk':1056C 'clear':589C,729C 'colintoh.com':138C 'colintoh.com/blog/htmlbars':137C 'collect':362C,440C,799C,842C,848C,999C,1012C,1018C,1119C,1303C,1882C,1980C 'combin':218C 'compar':832C,1202C 'comparison':1317C,1377C 'compil':81B,114C,124C 'complet':250C 'complex':1144C 'compos':211C 'concaten':60B 'conclus':1745C 'confid':1362C 'config':383C,505C 'config.app.api':713C,717C 'config.app.report':415C 'config.app.use':703C 'config.app.version':699C 'consid':1035C 'constructor':89B 'contenttyp':626C 'continu':1978C 'contributor':1952C 'control':400C,434C 'convinc':1131C,1178C,1213C 'core':1954C 'correct':1691C 'creat':84B,297C,822C,948C,1103C 'createmetr':616C,661C 'curious':20B 'current':2095C 'd':1160C 'd3':1168C 'd8':905C 'data':213C,631C,815C,852C,968C,992C,1091C,1145C,1152C,1164C,1172C,1307C,1324C,1352C,1712C,1729C,1735C,1762C,1820C,1880C 'databas':819C 'datatyp':635C 'date':664C,889C 'date.now':665C 'decid':783C 'default':393C 'definit':2030C 'desir':181C 'desktop':1405C 'destroy':270C 'developer.mozilla.org':104B 'developer.mozilla.org/en-us/docs/web/api/htmlelement':103B 'developers.google.com':495C 'developers.google.com/analytics/devguides/collection/analyticsjs/user-timings':494C 'devic':1943C 'differ':39B 'discov':2012C 'discuss.emberjs':998C,1011C 'discuss.emberjs.com':1016C 'discuss.emberjs.com/t/collecting-performance-metrics-using-rendertemplate-hook-and-user-timing-api/7270/1':1015C 'document':85B 'doesn':1851C 'dom':88B,174C 'draw':170C,2027C 'durat':673C,897C,1314C,1417C,1433C,1459C,1486C,1516C,1546C,1576C,1603C,1632C,1662C 'e':678C 'e.g':90B,356C,1325C 'e3':677C 'els':572C 'ember':9A,32B,117C,127C,159C,374C,379C,381C,501C,503C,619C,1248C,1292C,1429C,1455C,1482C,1511C,1541C,1571C,1598C,1627C,1657C,1678C,2100C 'ember.js':15B,44B,50B,94B,1285C,1378C,1951C,1992C 'ember.mixin.create':394C 'ember.required':396C 'ember.run.queues':254C 'ember.run.scheduleonce':419C 'ember.version':701C 'emberjs.com':95B,130C,273C,277C,283C,287C 'emberjs.com/api/classes/ember.route.html#method_rendertemplate':276C 'emberjs.com/api/classes/ember.run.html#method_schedule':286C 'emberjs.com/blog/2015/02/05/compiling-templates-in-1-10-0.html':129C 'emberjs.com/guides/routing/':272C 'emberjs.com/guides/understanding-ember/run-loop/':282C 'embervers':700C,899C,986C,1326C,1453C,1480C,1507C,1537C,1567C,1594C,1623C,1653C 'end':411C,523C,531C,1063C 'endnam':409C,424C,428C 'endpoint':788C,949C,997C,1004C,1007C 'endpointuri':624C,709C 'enjoy':1087C 'etc':360C,838C 'even':1898C 'exampl':881C,978C,1756C 'expect':1910C,1958C,2092C 'experi':1374C,1858C 'explor':1709C 'export':392C,508C,518C,532C,539C,546C,577C,610C 'express':963C 'fa3fbaf8':888C 'fa76d26e9040':907C 'facet':1320C 'fact':1037C 'fals':499C 'faster':1787C 'fastest':1419C,1435C,1461C,1488C,1518C,1548C,1578C,1605C,1634C,1664C,1875C,1893C,1919C 'featur':120C,122C,133C,135C,143C,145C 'feature-by-featur':119C,132C,142C 'fetch':1354C 'find':851C,878C,1780C 'first':781C 'found':1972C 'fragment':86B 'full':1045C 'function':422C,451C,509C,519C,533C,540C,547C,553C,578C,585C,591C,611C,637C,643C,660C,708C,728C 'futur':2097C 'gain':1387C,1817C,1869C,1914C,1925C 'gatracktim':608C,638C 'gave':1260C,2102C 'generat':69B 'geometr':1721C,1772C,2022C 'get':2062C 'gist.github.com':2114C 'gist.github.com/pixelhandler/f01a1703721d31de0de1)':2113C 'github.com':100B,1009C 'github.com/pixelhandler/blog/tree/master/server#metrics-api-endpoints':1008C 'github.com/tildeio/htmlbars':99B 'give':2005C 'good':1305C,1316C,1888C,2086C 'googl':461C,488C,796C 'handlebar':47B,55B,78B,96B,110C,1033C,1288C,1397C,1791C,1797C 'handlebarsjs.com':97B 'hard':1947C 'high':480C,771C 'high-resolut':479C 'highlight':1385C 'hittyp':647C 'home':1409C,1425C,1557C,1584C,1808C 'hook':150C,164C,177C,182C,201C,207C,210C,231C,1023C 'host':712C,714C,722C,724C 'howev':1883C 'html':66B,171C,196C,377C 'html5rocks':759C 'htmlbar':53B,72B,83B,98B,112C,140C,1031C,1295C,1399C,1789C,1799C 'htmlelement':92B,102B 'huge':2081C 'id':901C 'identifi':1234C 'implement':327C 'import':378C,382C,386C,500C,504C 'improv':1896C 'index':357C,867C,1408C,1424C,1556C,1565C,1583C,1592C 'info':108C,994C 'inform':1239C 'initi':1297C 'insight':2087C 'instead':79B,1173C 'intel':930C 'intend':1724C 'interest':1068C,1096C 'interfac':93B,302C 'ipad':836C 'iphon':837C 'jayconrod.com':1719C 'jshint':497C 'json':636C 'json.stringify':632C 'jsonapi':707C 'kind':1099C 'landscap':919C 'landscape-primari':918C 'larg':1073C 'later':793C 'learn':732C,1672C 'librari':57B,71B,1166C,1205C,1270C 'lie':1687C 'like':1161C,1167C 'limit':1935C 'list':255C,1117C,1183C,1195C,1495C,1525C,1611C,1641C,1850C,1862C 'll':1977C,2004C 'load':1053C 'location.pathname':669C 'long':1116C,1182C,1194C,1494C,1524C,1610C,1640C,1849C,1861C 'look':1800C,1872C 'loop':223C,264C,281C 'loss':1389C 'm':809C,1065C,1129C,1176C 'mac':931C 'macintosh':929C 'make':1237C,1743C 'mark':152C,186C,233C,248C,289C,304C,387C,404C,410C,417C,423C,510C,564C,748C 'marknam':561C,565C,571C,575C,576C 'match':964C 'math.round':671C,675C 'matter':1136C,1156C,1222C,1853C 'may':1909C 'mayb':1139C 'mean':1722C,1773C,2023C 'measur':1A,24B,153C,187C,290C,306C,310C,364C,388C,425C,455C,473C,520C,568C,573C,588C,593C,595C,603C,604C,607C,609C,613C,617C,639C,662C,739C,754C,805C,833C,843C,1196C,1215C,1231C,1256C,1273C,1350C,1383C,1699C,1974C 'measureentri':536C,543C,550C,554C 'measurement.duration':655C,676C 'measurement.emberversion':657C 'measurement.name':653C,667C 'measurement.pathname':659C 'measurement.starttime':672C 'measurementnam':395C 'measurements._':2034C 'measurements.length':601C 'method':448C,749C,755C 'metric':156C,192C,295C,416C,439C,625C,633C,779C,849C,857C,882C,976C,991C,1001C,1002C,1005C,1014C,1020C,1028C,1113C,1120C,1124C,1134C,1200C,1244C,1323C,1365C,1498C,1505C,1528C,1535C,1614C,1621C,1644C,1651C,2017C,2045C 'millisecond':486C 'mixin':351C,444C 'mobil':835C,1407C,1555C,1562C,1570C,1589C,1597C,1618C,1626C,1648C,1656C,1902C,1904C,1942C 'model':206C,401C,435C 'modul':437C 'mongoos':1452C,1479C 'month':2073C 'mozilla/5.0':928C 'much':1786C 'name':511C,517C,521C,529C,555C,562C,569C,574C,666C,862C,908C,1448C,1475C,1504C,1534C,1564C,1591C,1620C,1650C 'navigationstart':570C 'need':1042C 'new':1783C 'newer':1941C 'news':1889C 'next':68B 'normal':1717C,1728C,1737C,1760C,1824C,2015C 'note':2112C 'notic':1865C,1866C 'null':697C 'number':674C 'object':972C 'os':932C 'page':551C,658C,871C,1105C,1410C,1426C,1444C,1471C,1558C,1585C,1809C,1840C 'pageview':548C,2071C 'pain':1101C 'path':716C,718C,721C,723C 'pathnam':668C,911C,983C,1421C,1437C,1451C,1463C,1478C,1490C,1520C,1550C,1580C,1607C,1636C,1666C 'payload':615C,634C 'per':2072C 'perceiv':1217C 'perform':2A,191C,329C,344C,472C,740C,743C,747C,753C,767C,1000C,1013C,1019C,1079C,1218C,1675C,1816C,1871C,1916C,1924C,1969C 'performancemark':305C,336C 'performancemeasur':307C,340C 'point':1153C,1705C,1748C,2037C 'polyfil':321C 'post':359C,606C,612C,622C,869C,879C,909C,1443C,1449C,1470C,1476C,1784C,1839C 'prefer':813C 'present':195C,2111C 'previous':2094C 'primari':920C 'product':2049C,2053C 'proper':2021C 'properti':973C 'provid':450C,2084C 'queri':825C,959C 'question':1754C 'queue':247C,257C 'ratio':1727C 'raw':1734C 'read':1683C 'readi':538C,864C,1359C 'realiz':794C 'realli':1135C,1185C 'recent':1993C 'record':1054C,1078C,1114C 'reflect':1368C 'regard':1793C 'regular':962C 'releas':13B,1298C,1995C,2001C,2098C 'relev':1198C 'render':28B,41B,65B,240C,268C,376C,406C,412C,845C,1029C,1122C,1170C,1180C,1277C,1806C,1834C,1847C,1876C,1922C 'rendertempl':149C,176C,200C,230C,275C,399C,1022C 'report':155C,189C,292C,309C,368C,389C,431C,442C,453C,464C,491C,579C,777C,801C,859C,988C,1331C 'reportusertim':397C 'request':168C,459C 'resolut':481C,487C,772C 'resourc':710C,727C,883C 'result':1392C,1696C 'return':432C,515C,527C,535C,542C,549C,559C,583C,618C,644C,663C,725C 'review':123C,136C,146C,1983C 'round':680C 'rout':166C,271C,355C 'routertransit':267C 'run':222C,263C,280C,1282C 'run-loop':221C,279C 'safari/537.36':937C 'said':1829C 'satisfi':2041C 'schedul':226C,260C,285C 'screen':1046C 'screencolordepth':690C,913C 'screenheight':688C,915C 'screenorient':694C,917C 'screenpixeldepth':692C,921C 'screenwidth':686C,923C 'scroll':1060C 'search':827C,966C,981C 'see':113C,1965C 'seem':1812C 'send':586C,592C,646C 'seri':1999C 'server':2054C 'set':1308C,1713C,1821C,2058C 'setupcontrol':209C 'show':1814C 'sinc':1346C,1970C 'singl':1044C 'site':1108C,1963C 'size':1306C 'slowest':1422C,1438C,1465C,1492C,1522C,1552C,1581C,1608C,1638C,1668C 'socket':704C,706C,885C 'solut':1271C 'soon':2009C 'specfic':1342C 'specif':224C,330C,824C 'speed':26B,42B,1313C,1804C,1832C,1894C 'starttim':670C,925C 'statist':366C,1689C 'string':59B,82B,830C 'sub':485C 'sub-millisecond':484C 'summar':1694C,1733C 'summari':2031C 'sync':265C 't06':893C 'tabl':1074C,1125C,1506C,1536C,1622C,1652C 'taken':311C,1702C 'talk':2104C 'team':1955C 'templat':29B,56B,63B,70B,115C,125C,216C,242C,846C,1204C,1269C,1836C 'thank':1944C 'think':1083C,1227C 'this._super':433C 'this.measurementname':407C,413C,426C 'this.reportusertimings':430C 'though':1841C 'thousand':1077C 'thousandth':682C 'thumb':1209C 'time':5A,294C,315C,332C,371C,466C,482C,493C,648C,651C,736C,761C,773C,804C,1026C,1049C,1275C,1348C,1370C,1877C,1920C 'timingcategori':649C 'timinglabel':656C 'timingvalu':654C 'timingvar':652C 'took':1258C 'top':76B 'topic':2107C 'traffic':1266C 'trend':1235C,2089C 'tri':1986C,2008C 'true':398C 'type':621C,1343C 'typeof':641C 'uniqu':2066C 'unload':545C,874C 'unus':498C 'updat':1774C 'upgrad':1395C,1795C,1933C 'uri':720C,726C 'url':623C 'use':58B,147C,319C,349C,456C,478C,810C,961C,1021C,1162C 'user':4A,198C,293C,314C,331C,465C,492C,650C,735C,760C,803C,1025C,1040C,1059C,1085C,1138C,1191C,1225C,1337C,1373C,1856C,1927C,1938C,1960C,2060C,2067C 'userag':829C,927C,984C,1328C,1345C,1404C,1509C,1539C,1569C,1596C,1625C,1655C 'utf':629C 'util':184C,299C,436C 'v1.10.0':16B,51B,118C,128C,1293C,1379C,1428C,1430C,1473C,1483C,1500C,1560C,1646C 'v1.3':48B,1289C 'v1.8.1':45B,1286C,1381C,1412C,1414C,1446C,1456C,1530C,1587C,1616C 'valu':1188C 'valuabl':1975C 'var':402C,408C,560C,594C,597C,614C,711C,715C,719C 'various':163C,354C,1319C,1988C 've':1701C,1764C,1767C,1777C 'version':1512C,1542C,1572C,1599C,1628C,1658C,1990C 'via':853C 'view':552C,866C,868C,870C,872C,876C,910C,1278C,1450C,1477C,1566C,1593C 'visit':938C,1442C,1469C 'visitor':683C,685C,940C 'visual':1146C 'vizual':1165C 'vote':1207C 'vs':1032C 'w3c':741C 'wait':1088C 'want':35B 'way':1692C 'web':742C,1220C,1265C 'week':1263C 'well':807C,1071C,1127C,1157C 'whether':1192C 'wide':2057C 'window.ga':642C,645C 'window.localstorage.getitem':684C 'window.performance':447C,513C,525C,557C,581C 'window.performance.clearmarks':730C 'window.performance.clearmeasures':731C 'window.performance.getentriesbyname':558C 'window.performance.getentriesbytype':582C,587C 'window.performance.mark':514C,516C 'window.performance.measure':526C,528C 'window.performance.timing':567C 'window.screen.colordepth':691C 'window.screen.height':689C 'window.screen.orientation':695C 'window.screen.orientation.type':696C 'window.screen.pixeldepth':693C 'window.screen.width':687C 'window.settimeout':584C 'without':1736C 'work':238C,253C,1251C,1948C 'would':1155C 'wrap':445C 'www.html5rocks.com':764C 'www.html5rocks.com/en/tutorials/webperformance/usertiming/)':763C 'www.w3.org':334C,338C,342C,346C,745C,751C,757C,775C 'www.w3.org/standards/techs/performance#w3c_all':345C 'www.w3.org/tr/#tr_web_performance)':744C 'www.w3.org/tr/hr-time/)':774C 'www.w3.org/tr/user-timing':333C 'www.w3.org/tr/user-timing/#dom-performance-mark)':750C 'www.w3.org/tr/user-timing/#dom-performance-measure)':756C 'www.w3.org/tr/user-timing/#performancemark':337C 'www.w3.org/tr/user-timing/#performancemeasure':341C 'x':933C 'xhr':458C 'z':896C	published	pixelhandler
9	Following the release of Orbit.js, [Ember Orbit] was announced at the [Wicked Good Ember] conference. Again, I became excited about using smaller JSON Patch payloads (media type "application/json-patch+json"), see [RFC 6902]. I started a new branch and decided to support a REST source first; then later tackle a WebSocket source. I am a fan of the [JSON API] specification which does include [patch support]. Once I had a JSONAPISource working with Ember Orbit on my branch I updated my SocketSource prototype (class) to follow the JSONAPISource prototype so they could share the same serializer. Also if the client's browser doesn't support a WebSocket or perhaps in the case my socket server gets wacky the application can initialize with the JSONAPISource instead of the SocketSource prototype as the connected source to the application's MemorySource.\n[Dan Gebhardt]: https://twitter.com/dgeb\n[Ember.js]: http://emberjs.com/\n[Ember Orbit]: https://github.com/orbitjs/ember-orbit\n[Orbit.js]: https://github.com/orbitjs/orbit.js\n[blog repository]: https://github.com/pixelhandler/blog\n[Ember SC talk]: https://gist.github.com/pixelhandler/5389c72c82d26fae8fb1\n[Wicked Good Ember]: http://wickedgoodember.com/dan-gebhardt\n[RFC 6455]: http://tools.ietf.org/html/rfc6455\n[JSON API]: http://jsonapi.org/\n[patch support]: http://jsonapi.org/format/#patch\n\n## A Few Reasons to use WebSockets\n\n**Push support** in a browser application can be used to provide real-time updates site visitors. Waiting for a client's next request or page refresh to provide updates works great when you expect frequent reloads. However, when an application is shipped as a single page (an Ember.js application) push support is attractive.\n\n* Web Sockets (TCP)\n  * Potentially closer to real-time interations compared to REST\n  * Ships with All modern (popular) browsers, see [caniuse.com/#search=Socket][caniuse-Socket]\n  * Gets around CORS\n\n* Smaller payloads (partial representation of a resource)\n  * [JSONPatch][RFC 6902], [jsonpatch.com]\n\n* Connecting multiple storage adapters\n  * Memory <-> localStorage <-> Web Socket (remote db)\n\n* High availability (in a distributed computing system)\n  * Weak consistency with higher availability\n  * Choose liveness (eventually there) over Safety (always right)\n\n[caniuse-Socket]: http://caniuse.com/#search=Socket\n[RFC 6902]: https://tools.ietf.org/html/rfc6902\n[jsonpatch.com]: http://jsonpatch.com\n[RFC 6455]: http://tools.ietf.org/html/rfc6455\n\n## JSON Patch\n\nSee: [jsonpatch.com] ...\n\n\n### Simple example\n\nThe original document:\n\n    {\n      "baz": "qux",\n      "foo": "bar"\n    }\n\nThe patch:\n\n    [\n      { "op": "replace", "path": "/baz", "value": "boo" },\n      { "op": "add", "path": "/hello, "value": ["world"] },\n      { "op": "remove, "path": "/foo}\n    ]\n\nThe result:\n\n    {\n       "baz": "boo",\n       "hello": ["world"]\n    }\n\n### Operations\n\n*Add, Remove, Replace, Copy, Copy, Test*\n\n#### Add\n\n    {"op": "add", "path": "/biscuits/1", "value": {"name": "Ginger Nut"}}\n\nAdds a value to an object or inserts it into an array. In the case of an array the value is inserted before the given index. The - character can be used instead of an index to insert at the end of an array.\n\n#### Remove\n\n    {"op": "remove", "path": "/biscuits"}\n\nRemoves a value from an object or array.\n\n#### Replace\n\n    {"op": "replace", "path": "/biscuits/0/name", "value": "Chocolate Digestive"}\n\nReplaces a value, equivalent to a “remove” followed by an “add”.\n\n\n### JSON Patch payloads used by this blog app\n\nAn add operation...\n\n\n    {"op":"add","path":"/posts/-","value":{"id":"a4d213d6-5595-4686-9817-169a7eddbda1","slug":"test","title":"test title","date":"2014-10-29","excerpt":"test excerpt text","body":"test body text","links":{"author":null}}}\n\n    {"path":"/posts/a4d213d6-5595-4686-9817-169a7eddbda1/links/author","op":"add","value":"5c9b62ec-1569-448b-912a-97e6d62f493e"}\n\n    {"path":"/authors/5c9b62ec-1569-448b-912a-97e6d62f493e/links/posts/-","op":"add","value":"a4d213d6-5595-4686-9817-169a7eddbda1"}\n\nA delete operation...\n\n\n    {"op":"remove","path":"/posts/341207e0-cfd9-4d3a-a5ab-d2268ab2e472/links/author"}\n\n    {"op":"remove","path":"/authors/5c9b62ec-1569-448b-912a-97e6d62f493e/links/posts/341207e0-cfd9-4d3a-a5ab-d2268ab2e472"}\n\n    {"op":"remove","path":"/posts/341207e0-cfd9-4d3a-a5ab-d2268ab2e472"}\n\n_Compare with the JSON API payloads_\n\n* http://pixelhandler.com/api/posts?limit=1\n* http://pixelhandler.com/api/authors?limit=1\n\n\n## [Orbit.js]\n\nLet's take a look at the [ember-orbit-example] [demo app](http://localhost:9000).\n\n[orbitjs/orbit.js]: https://github.com/orbitjs/orbit.js\n[ember-orbit-example]: https://github.com/dgeb/ember-orbit-example\n\nWatch Dan give an intoduction to Orbit.js. (YouTube video from the Jan '14 Boston Ember Meetup)\n\n* [Introduction to Orbit.js by Dan Gebhardt](https://www.youtube.com/watch?v=IAwk_mF-dWo)\n* [introducing Orbit.js slides](https://speakerdeck.com/dgeb/introducing-orbit-dot-js)\n\n### How Orbit works\n\n* Orbit requires that every data source support one or more common interfaces. These interfaces define how data can be both accessed and transformed.\n* The methods for accessing and transforming data return promises.\n* Multiple data sources can be involved in a single action\n\n**Orbit.js uses JSON / JSONPatch by default.**\n\n* Sends partial data\n* Uses multiple stores\n\n### Orbit interfaces:\n\n1. Requestable\n   * for managing requests for data via methods such as `find`, `create`, `update` and `destroy`\n1. Transformable\n   * Keep data sources in sync through low level transformations (using JSON PATCH spec)\n   * `transform` is the method your data source (prototype) object needs to implement\n\n#### Requestable\n\nEvents associated with an action:\n\n* `assistFind`, `rescueFind`, `didFind`, `didNotFind`\n\n#### Transformable\n\nA single method, `transform`, which can be used to change the contents of a source.\n\n    {op: 'add', path: 'planet/1', value: {__id: 1, name: 'Jupiter', classification: 'gas giant'}\n    {op: 'replace', path: 'planet/1/name', value: 'Earth'}\n    {op: 'remove', path: 'planet/1'}\n\n### TransformConnector\n\nA TransformConnector watches a transformable source and propagates any transforms to a transformable target.\n\nEach connector is "one way", so bi-directional synchronization between sources requires the creation of two connectors.\n\n\n### RequestConnector\n\nA RequestConnector observes requests made to a primary source and allows a secondary source to either "assist" or "rescue" those requests.\n\nThe mode of a RequestConnector can be either "rescue" or "assist" ("rescue" is the default).\n\n### Document\n\nDocument is a complete implementation of the JSON PATCH spec detailed in RFC 6902.\n\nIt can be manipulated via a transform method that accepts an operation, or with methods `add`, `remove`, `replace`, `move`, `copy` and `test`.\n\nData at a particular path can be retrieved from a `Document` with `retrieve()`.\n\n## [Ember Orbit]\n\n"A library that integrates Orbit.js with Ember.js to provide flexibility and control in your application's data layer" \n\n* Video: [Building Autonomous Web Applications with Ember and Orbit]\n\n[Building Autonomous Web Applications with Ember and Orbit]: https://www.youtube.com/watch?v=omc4pnXv1Ds\n\nThis project uses [ember-cli], to the modules below use ES6 syntax, see the [ES6 draft].\n\n[ember-cli]: http://www.ember-cli.com/\n[ES6 draft]: https://people.mozilla.org/~jorendorff/es6-draft.html\n\n### Initializer\n\nConfigure Ember-Orbit with an application initializer that sets up Orbit and registers a "main" store and schema to be available in routes and controllers.\n\n[initializers/ember-orbit.js]\n\n\n    import Orbit from 'orbit';\n    import EO from 'ember-orbit';\n    import JSONAPISource from 'orbit-common/jsonapi-source';\n    import ApplicationSerializer from '../serializers/application';\n    import SocketSource from '../adapters/socket-source';\n    import Ember from 'ember';\n    import config from '../config/environment';\n\n    Orbit.Promise = Orbit.Promise || Ember.RSVP.Promise;\n\n    function jsonApiStore() {\n      Orbit.ajax = Ember.$.ajax;\n      return EO.Store.extend({\n        orbitSourceClass: JSONAPISource,\n        orbitSourceOptions: {\n          host: config.APP.API_HOST,\n          namespace: config.APP.API_PATH,\n          SerializerClass: ApplicationSerializer,\n          usePatch: true,\n        }\n      });\n    }\n\n    function socketStore() {\n      return EO.Store.extend({\n        orbitSourceClass: SocketSource,\n        orbitSourceOptions: {\n          host: config.APP.SOCKET_URL,\n          SerializerClass: ApplicationSerializer,\n          usePatch: true,\n        }\n      });\n    }\n\n    var Schema = EO.Schema.extend({\n      idField: 'id',\n\n      init: function (options) {\n        this._super(options);\n        this._schema.meta = Ember.Map.create();\n      }\n    });\n\n    export default {\n      name: 'ember-orbit',\n      after: 'socket',\n\n      initialize: function(container, application) {\n        application.register('schema:main', Schema);\n        application.register('store:main', EO.Store);\n        if (notPrerenderService() && canUseSocket(container)) {\n          application.register('store:secondary', socketStore());\n        } else {\n          application.register('store:secondary', jsonApiStore());\n        }\n        connectSources(container);\n\n        application.inject('controller', 'store', 'store:main');\n        application.inject('route', 'store', 'store:main');\n      }\n    };\n\n    function notPrerenderService() {\n      return window.navigator.userAgent.match(/Prerender/) === null;\n    }\n\n    function canUseSocket(container) {\n      return window.WebSocket && container.lookup('socket:main');\n    }\n\n    function connectSources(container) {\n      var primarySource = container.lookup('store:main').orbitSource;\n      var secondarySource = container.lookup('store:secondary').orbitSource;\n      // Connect (using default blocking strategy)\n      setupConnectors(primarySource, secondarySource);\n    }\n\n    function setupConnectors(primary, secondary/*, local*/) {\n      new Orbit.TransformConnector(primary, secondary);\n      new Orbit.TransformConnector(secondary, primary);\n      primary.on('assistFind', secondary.find);\n    }\n\n[initializers/ember-orbit.js]: https://github.com/pixelhandler/blog/blob/master/client/app/initializers/ember-orbit.js\n\n### Sources\n\n"Source are very thin wrappers over Orbit sources"\n\n[adapters/socket-source.js]\n\n\n    import Ember from 'ember';\n    import Orbit from 'orbit';\n    import OC from 'orbit-common';\n    import SocketService from '../services/socket';\n    import JSONAPISource from 'orbit-common/jsonapi-source';\n\n    Orbit.Promise = Orbit.Promise || Ember.RSVP.Promise;\n\n    var SocketSource = JSONAPISource.extend({\n\n      init: function (schema, options) {\n        Orbit.assert('SocketSource requires SocketService be defined', SocketService);\n        Orbit.assert('SocketSource requires Orbit.Promise be defined', Orbit.Promise);\n        Orbit.assert('SocketSource only supports usePatch option', this.usePatch);\n        this._socket = SocketService.create();\n        this.initSerializer(schema, options);\n        // not calling super, instead calling template/abstract prototype init method\n        return OC.Source.prototype.init.apply(this, arguments);\n      },\n\n      initSerializer: function (schema, options) {\n        // See JSONAPISource\n        this.SerializerClass = options.SerializerClass || this.SerializerClass;\n        if (this.SerializerClass && this.SerializerClass.wrappedFunction) {\n          this.SerializerClass = this.SerializerClass.wrappedFunction;\n        }\n        this.serializer = new this.SerializerClass(schema);\n      },\n\n      // using JSONPatch via WebSocket\n      usePatch: true,\n\n      // Requestable interface implementation\n\n      _find: function(type, id) {\n        if (id && (typeof id === 'number' || typeof id === 'string')) {\n          return this._findOne(type, id);\n        } else {\n          return this._findQuery(type, id);\n        }\n      },\n\n      _findLink: function() {\n        console.error('TODO, SocketSource#_findLink not supported yet');\n      },\n\n      // Requestable Internals\n\n      _findOne: function (type, id) {\n        var query = this._queryFactory(type, { id: id });\n\n        return this._remoteFind('find', type, query);\n      },\n\n      _findMany: function () {\n        throw new Error('SocketSource#_findMany not supported');\n      },\n\n      _findQuery: function (type, query) {\n        query = this._queryFactory(type, query);\n\n        return this._remoteFind('findQuery', type, query);\n      },\n\n      _remoteFind: function (channel, type, query) {\n        var root = pluralize(type);\n        var id = query.id;\n        query = JSON.stringify(query);\n\n        // handle promise resolution serially, pass off return to next then handler\n        var records;\n        return new Orbit.Promise(function doFind(resolve, reject) {\n          this._socket.emit(channel, query, function didFind(raw) {\n            if (raw.errors || !raw[root]) {\n              reject(raw.errors);\n            } else {\n              resolve(raw);\n            }\n          });\n        }.bind(this))\n        .then(function doProcess(raw) {\n          return this.deserialize(type, id, raw);\n        }.bind(this))\n        .then(function (data) {\n          records = data;\n          return this.settleTransforms();\n        }.bind(this))\n        .then(function () {\n          // finally send back the records\n          return records;\n        })\n        .catch(function onError(error) {\n          console.error('SocketSource#_remoteFind Error w/ query: ' + query);\n          console.error(error);\n        });\n      },\n\n      _queryFactory: function (type, query) {\n        query = query || {};\n        query.resource = query.resource || pluralize(type);\n\n        var attrs = Ember.String.w('limit offset sortBy order resource withFields');\n        attrs.forEach(function (attr) {\n          query[attr] = query[attr] || Ember.get(this, attr);\n        }.bind(this));\n\n        return query;\n      },\n\n      // Transformable Internals\n\n      _transformAdd: function (operation) {\n        var type = operation.path[0];\n        var id = operation.path[1];\n        var remoteOp = {\n          op: 'add',\n          path: '/' + pluralize(type) + '/-',\n          value: this.serializer.serializeRecord(type, operation.value)\n        };\n        return this._remotePatch(type, id, remoteOp);\n      },\n\n      _transformReplace: function (operation) {\n        var type = operation.path[0];\n        operation.path[0] = pluralize(type);\n        var id = operation.path[1];\n        var remoteOp = {\n          op: 'replace',\n          path: '/' + operation.path.join('/'),\n          value: this.serializer.serializeRecord(type, operation.value)\n        };\n        return this._remotePatch(type, id, remoteOp);\n      },\n\n      _transformRemove: function (operation) {\n        var type = operation.path[0];\n        operation.path[0] = pluralize(type);\n        var id = operation.path[1];\n        var path = '/' + operation.path.join('/');\n        var remoteOp = { op: 'remove', path: path };\n        return this._remotePatch(type, id, remoteOp);\n      },\n\n      _transformUpdateAttribute: function (operation) {\n        var type = operation.path[0];\n        operation.path[0] = pluralize(type);\n        var id = operation.path[1];\n        var remoteOp = {\n          op: 'replace',\n          path: '/' + operation.path.join('/'), // includes attr in path\n          value: operation.value\n        };\n        return this._remotePatch(type, id, remoteOp);\n      },\n\n      _transformAddLink: function (operation) {\n        var type = operation.path[0];\n        operation.path[0] = pluralize(type);\n        var id = operation.path[1];\n        var link = operation.path[3];\n        var linkId = operation.path[4] || operation.value;\n        var linkDef = this.schema.models[type].links[link];\n        var path;\n        if (linkDef.type === 'hasMany') {\n          operation.path.pop();\n          path = '/' + operation.path.join('/').replace(/__rel/, 'links') + '/-';\n        } else if (linkDef.type === 'hasOne') {\n          path = '/' + operation.path.join('/').replace(/__rel/, 'links');\n        }\n        var remoteOp = { path: path, op: 'add', value: linkId };\n        return this._remotePatch(type, id, remoteOp);\n      },\n\n      _transformRemoveLink: function (operation) {\n        var type = operation.path[0];\n        operation.path[0] = pluralize(type);\n        var id = operation.path[1];\n        var path = '/' + operation.path.join('/').replace(/__rel/, 'links');\n        var remoteOp = { op: 'remove', path: path };\n        return this._remotePatch(type, id, remoteOp);\n      },\n\n      _transformReplaceLink: function (operation) {\n        console.error('TODO, SocketSource#_transformReplaceLink not supported yet');\n      },\n\n      _remotePatch: function (type, id, remoteOp) {\n        var records;\n        // handle promise resolution serially, pass off return to next then handler\n        return new Orbit.Promise(function doPatch(resolve, reject) {\n          this._socket.emit('patch', JSON.stringify(remoteOp), function didPatch(raw) {\n            if (raw && raw.errors) {\n              reject(raw.errors);\n            } else {\n              resolve(raw); // doesn't matter what raw is, socket called back w/o errors\n            }\n          });\n        }.bind(this))\n        .then(function doProcess(raw) {\n          if (raw && Array.isArray(raw)) {\n            return this.deserialize(type, id, raw[0]);\n          }\n          return null;\n        }.bind(this))\n        .then(function (data) {\n          records = data;\n          return this.settleTransforms();\n        }.bind(this))\n        .then(function () {\n          // finally send back the records\n          return records;\n        })\n        .catch(function onError(error) {\n          console.error(error);\n          var e = "SocketSource#_remotePatch Error w/ op: %@, path: %@";\n          throw new Error(e.fmt(remoteOp.op, remoteOp.path));\n        });\n      }\n\n    });\n\n    // TODO use Ember.Inflector https://github.com/stefanpenner/ember-inflector.git\n    var pluralize = function (name) {\n      return name + 's';\n    };\n    // borrowed from 'orbit/lib/objects'\n    var isObject = function(obj) {\n      return obj !== null && typeof obj === 'object';\n    };\n\n    export default SocketSource;\n\n[adapters/socket-source.js]: https://github.com/pixelhandler/blog/blob/master/client/app/adapters/socket-source.js\n\n\n### Stores\n\n"Stores extend sources and are also repositories for models. All of the data in a store is maintained in its internal source."\n\nBelow are a few examples of how I use the application store in a Route:\n\nCustom query for posts\n\n\n    model: function () {\n      var query = { offset: this.get('offset'), limit: this.get('limit') };\n      return this.store.find('post', query);\n    },\n\nList of posts\n\n\n    model: function () {\n      return this.store.find('post');\n    },\n\nA specific post by id\n\n\n    model: function (params) {\n      return this.store.find('post', params.edit_id);\n    },\n\nA post route that can find a post from the store's memory or ask the secondary source (adapter) for the resource\n\n\n    model: function (params) {\n      return new Ember.RSVP.Promise(function (resolve, reject) {\n        var found = this.store.filter('post', function (post) {\n          return post.get('slug') === params.post_slug;\n        });\n        if (found.get('length') > 0) {\n          resolve(found[0]);\n        } else {\n          this.store.find('post', params.post_slug).then(\n            function (post) {\n              resolve(post);\n            },\n            function (error) {\n              reject(error);\n            }\n          );\n        }\n      }.bind(this));\n    },\n\n#### Push Support\n\nRoutes can use a mixin for push support for real-time update to connected clients.\n\n[mixins/push-support.js]\n\n\n    import Ember from 'ember';\n\n    export default Ember.Mixin.create({\n\n      beforeModel: function () {\n        this.socketSanityCheck();\n        return this._super();\n      },\n\n      socketSanityCheck: function () {\n        // Sanity check, is socket working? check output browser console.\n        var socket = this.socket;\n        socket.on('hello', function (data) {\n          console.log(data);\n          socket.emit('talk-to-me', 'I like talking.', function (msg) {\n            console.log('back talk', msg);\n          });\n        });\n      },\n\n      // Template methods...\n\n      onDidPatch: Ember.required,\n\n      patchRecord: function (operation) {\n        this._patchRecord(operation);\n      },\n\n      addLink: Ember.K,\n      replaceLink: Ember.K,\n      removeLink: Ember.K,\n      addRecord: Ember.K,\n      updateAttribute: Ember.K,\n      deleteRecord: Ember.K,\n\n      // Use in template methods...\n\n      _patchRecord: function (operation) {\n        operation = (typeof operation === 'string') ? JSON.parse(operation) : operation;\n        if (!operation.op || !operation.path) {\n          console.error('Push error! Invalid patch operation.');\n          return;\n        }\n        if (operation.path.match('/links/') !== null) {\n          if (operation.op === 'add') {\n            Ember.run.later(this, 'addLink', operation, this._delay);\n          } else if (operation.op === 'replace') {\n            Ember.run.next(this, 'replaceLink', operation);\n          } else if (operation.op === 'remove') {\n            Ember.run.next(this, 'removeLink', operation);\n          }\n        } else {\n          if (operation.op === 'add') {\n            Ember.run.next(this, 'addRecord', operation);\n          } else if (operation.op === 'replace') {\n            Ember.run.next(this, 'updateAttribute', operation);\n          } else if (operation.op === 'remove') {\n            Ember.run.next(this, 'deleteRecord', operation);\n          }\n        }\n      },\n\n      _addLink: function(operation) {\n        var model = this._retrieveModel(operation);\n        if (model) {\n          var type = operation.path.split('/links/')[1];\n          var relation = this.store.retrieve(type, { primaryId: operation.value });\n          if (relation) {\n            model.addLink(type, relation);\n          }\n        }\n      },\n\n      _replaceLink: function(operation) {\n        console.error('TODO replaceLink not supported yet', operation);\n      },\n\n      _removeLink: function(operation) {\n        var model = this._retrieveModel(operation);\n        if (model) {\n          var path = operation.path.split('/links/')[1].split('/');\n          var type = path[0];\n          var id = path[1];\n          var relation = null;\n          if (id) {\n            relation = this.store.retrieve(type, { primaryId: id });\n          }\n          model.removeLink(type, relation);\n        }\n      },\n\n      _addRecord: function (operation) {\n        var type = this._extractType(operation);\n        var id = operation.value.id;\n        var model = this.store.retrieve(type, { primaryId: id });\n        if (!model) {\n          this.store.add(type, operation.value);\n          this.store.then(function() {\n            model = this.store.retrieve(type, { primaryId: id });\n            var name = this.get('routeName');\n            var collection = this.modelFor(name);\n            if (collection && !collection.contains(model)) {\n              collection.insertAt(0, model);\n              this.controllerFor(name).set('model', collection);\n            }\n          }.bind(this));\n        }\n      },\n\n      _updateAttribute: function(operation) {\n        var type = this._extractType(operation);\n        if (!type) {\n          return;\n        }\n        var typeKey = this.store.schema._schema.pluralize(type);\n        var path = operation.path.split('/' + typeKey + '/')[1];\n        var id, attribute;\n        if (path.indexOf('/') !== -1) {\n          path = path.split('/');\n          id = path[0];\n          attribute = path[1];\n        }\n        var model = this.store.retrieve(type, {primaryId: id});\n        if (model && attribute) {\n          model.set(attribute, operation.value);\n        }\n      },\n\n      _deleteRecord: function (operation) {\n        var model = this._retrieveModel(operation);\n        if (model) {\n          var name = this.get('routeName');\n          var collection = this.modelFor(name);\n          if (collection) {\n            collection.removeObject(model);\n          }\n          var controller = this.controllerFor(name);\n          if (controller) {\n            controller.removeObject(model);\n          }\n          if (model.constructor.typeKey) {\n            var type = model.constructor.typeKey;\n            var id = model.get('primaryId');\n            Ember.run.later(this.store, 'remove', type, id, this._delay);\n          }\n        }\n      },\n\n      _extractType: function (operation) {\n        var path = operation.path.split('/');\n        var type = this.store.schema._schema.singularize(path[1]);\n        if (!this.store.schema._schema.models[type]) {\n          console.error('Cannot extract type', path);\n        }\n        return type;\n      },\n\n      _retrieveModel: function (operation) {\n        var path = operation.path.split('/');\n        var type = this.store.schema._schema.singularize(path[1]);\n        var id = path[2];\n        return this.store.retrieve(type, { primaryId: id });\n      },\n\n      _delay: 1000\n\n    });\n\n[mixins/push-support.js]: https://github.com/pixelhandler/blog/blob/master/client/app/mixins/push-support.js\n\n\n### Routes using the push support mixin\n\n[routes/application.js]\n\n\n    import Ember from 'ember';\n    import PushSupport from '../mixins/push-support';\n    import config from '../config/environment';\n\n    var ApplicationRoute = Ember.Route.extend(PushSupport, {\n\n      model: function () {\n        return this.store.find('post');\n      },\n\n      /* some code not included here */\n\n      // Push support...\n\n      onDidPatch: function () {\n        this.socket.on('didPatch', this.patchRecord.bind(this));\n      }.on('init'),\n\n      addLink: function (operation) {\n        this._addLink(operation);\n      },\n\n      removeLink: function (operation) {\n        this._removeLink(operation);\n      },\n\n      addRecord: function (operation) {\n        this._addRecord(operation);\n      },\n\n      updateAttribute: function (operation) {\n        this._updateAttribute(operation);\n      },\n\n      deleteRecord: function (operation) {\n        this._deleteRecord(operation);\n      },\n\n      /* some code not included here */\n\n    });\n\n    function lookupSocket(container) {\n      if (!window.WebSocket) {\n        return false;\n      }\n      return container.lookup('socket:main');\n    }\n\n    /* some code not included here */\n\n    export default ApplicationRoute;\n\n[routes/application.js]: https://github.com/pixelhandler/blog/blob/master/client/app/routes/application.js\n\n\n[routes/index.js]\n\n\n    import Ember from 'ember';\n    import RecordChunksMixin from '../mixins/record-chunks';\n    import ResetScroll from '../mixins/reset-scroll';\n    import PushSupport from '../mixins/push-support';\n\n    export default Ember.Route.extend(ResetScroll, RecordChunksMixin, PushSupport, {\n\n      /* some code not included here */\n\n      model: function () {\n        var posts = this.modelFor('application');\n        if (this.get('offset') < posts.get('length')) {\n          return posts;\n        } else {\n          var query = this.buildQuery();\n          return this.store.find('post', query);\n        }\n      },\n\n      // Push support...\n\n      onDidPatch: function () {\n        this.socket.on('didPatch', this.patchRecord.bind(this));\n      }.on('init'),\n\n      addRecord: function (operation) {\n        if (operation.path.split('/')[1] === 'posts') {\n          var posts = this.model();\n          var controller = this.controllerFor(this.get('routeName'));\n          if (typeof posts.then === 'function') {\n            posts.then(function (_posts) {\n              controller.set('model', _posts);\n            });\n          } else {\n            controller.set('model', posts);\n          }\n        }\n      },\n\n      deleteRecord: function (operation) {\n        if (operation.path.split('/')[1] === 'posts') {\n          this._deleteRecord(operation);\n        }\n      }\n\n      /* some code not included here */\n\n    });\n\n[routes/index.js]: https://github.com/pixelhandler/blog/blob/master/client/app/routes/index.js\n\n\n\n## [Socket.IO]\n\nThe push support is provided by an adapter on the server which uses [Socket.IO] and interacts directly with a document storage database.\n\n[server/lib/socket_adapter.js]\n\n\n    /**\n      @module app\n      @submodule socket_adapter\n\n      db adapter using Socket.io\n    **/\n\n    var db = require('./rethinkdb_adapter');\n    var debug = require('debug')('socket_adapter');\n    var config = require('../config')();\n\n    /**\n      Exports setup function\n\n      @param {Object} express server\n      @return {Object} `io` socket.io instance\n    **/\n    module.exports = function(server, sessionMiddleware) {\n\n      // options: https://github.com/Automattic/engine.io#methods-1\n      var options = {\n        'transports': ['websocket', 'polling'],\n        'cookie': 'connect.sid'\n      };\n\n      var io = require('socket.io')(server, options);\n\n      io.use(function(socket, next) {\n        sessionMiddleware(socket.request, socket.request.res, next);\n      });\n\n      io.on('connection', function (socket) {\n        // Simple sanity check for client to confirm socket is working\n        socket.emit('hello', { hello: 'world' });\n        socket.on('talk-to-me', function (data, cb) {\n          cb(data);\n        });\n\n        socket.on('isLoggedIn', function (callback) {\n          var user = socket.request.session.user;\n          if (!!user) { debug('isLogggedIn', user); }\n          callback(!!user);\n        });\n\n        socket.on('login', function (credentials, callback) {\n          credentials = JSON.parse(credentials);\n          if (!credentials) {\n            return callback(false);\n          }\n          var uname = credentials.username;\n          var pword = credentials.password;\n          var session = socket.request.session;\n          if (uname === config.admin.username && pword === config.admin.password) {\n            session.user = uname;\n            debug('login: %s', session.user);\n            session.save();\n            callback(true);\n          }\n        });\n\n        socket.on('logout', function (callback) {\n          socket.request.session = null;\n          callback(true);\n        });\n\n        socket.on('findQuery', findQuery);\n\n        socket.on('find', find);\n\n        socket.on('patch', function (operation, callback) {\n          if (!socket.request.session.user) {\n            debug('patch tried without user session');\n            return callback(JSON.stringify({errors: ["Login Required"]}));\n          }\n          var _callback = function (error, payload) {\n            if (error) {\n              debug('Patch Error!', error);\n              callback({errors: error});\n            } else {\n              payload = payload || JSON.stringify({code: 204});\n              callback(payload);\n              debug('didPatch...', operation, payload);\n              socket.broadcast.emit('didPatch', operation);\n            }\n          };\n          patch(operation, _callback);\n        });\n\n        socket.on('disconnect', function () {\n          io.emit('error', 'User disconnected');\n        });\n      });\n\n      return io;\n    };\n\n    /**\n      findQuery - uses query to find resources\n\n      @param {String} JSON strigified query object `resource` property is required\n      @param {Function} callback\n      @private\n    **/\n    function findQuery(query, callback) {\n      debug('findQuery...', query);\n      if (typeof query === 'string') {\n        query = JSON.parse(query);\n      }\n      var resource = query.resource;\n      delete query.resource;\n      var _cb = callback;\n      db.findQuery(resource, query, function (err, payload) {\n        if (err) {\n          debug(err);\n          payload = { errors: { code: 500, error: 'Server failure' } };\n        }\n        _cb(payload);\n      });\n    }\n\n    /**\n      find - uses query to find resources by id or slug\n\n      @param {String} JSON strigified query object requires `resource`, `id` properties\n      @param {Function} callback\n      @private\n    **/\n    function find(query, callback) {\n      debug('find...', query);\n      if (typeof query === 'string') {\n        query = JSON.parse(query);\n      }\n      var resource = query.resource;\n      delete query.resource;\n      var id = query.id;\n      delete query.id;\n      var _cb = callback;\n      var errorPayload = { errors: { code: 500, error: 'Server failure' } };\n      db.find(resource, id, function (err, payload) {\n        if (err) {\n          _cb(errorPayload);\n        } else {\n          if (payload[resource] !== null) {\n            _cb(payload);\n          } else {\n            db.findBySlug(resource, id, function (err, payload) {\n              if (err) {\n                _cb(errorPayload);\n              } else {\n                if (payload[resource] !== null) {\n                  _cb(payload);\n                } else {\n                  _cb({ errors: { code: 404, error: 'Not Found' } });\n                }\n              }\n            });\n          }\n        }\n      });\n    }\n\n    function patch(operation, callback) {\n      debug('patch...', operation);\n      if (typeof operation === 'string') {\n        operation = JSON.parse(operation);\n      }\n      var path = operation.path.split('/');\n      var type = path[1];\n      var id = path[2];\n      var prop = path[3]; // REVIEW support sub-path?\n      if (prop === 'links') {\n        var link = path[4];\n        patchLinks(type, id, link, operation, callback);\n      } else if (operation.op === 'replace') {\n        var payload = {};\n        payload[prop] = operation.value;\n        db.updateRecord(type, id, payload, callback);\n      } else if (operation.op === 'remove') {\n        db.deleteRecord(type, id, callback);\n      } if (operation.op === 'add') {\n        db.createRecord(type, operation.value, callback);\n      }\n    }\n\n    function patchLinks(type, id, linkName, operation, callback) {\n      debug('patchLinks...', type, id, linkName, operation);\n      find({resource: type, id: id}, function (record) {\n        if (!record || record && record.errors) {\n          var errors = (record) ? record.errors : [];\n          debug('Error finding resource for patchLinks action', errors);\n          callback(errors);\n        } else {\n          var path = operation.path.split(linkName);\n          path = (path) ? path[1] : null;\n          var value = operation.value;\n          var op = operation.op;\n          var payload = record[type];\n          payload.links = payload.links || {};\n          payload.links[linkName] = payload.links[linkName] || [];\n          if (op === 'add' && path.match(/\\-$/) !== null && value) {\n            payload.links[linkName].push(value);\n          } else if (value && op === 'add' || op === 'replace') {\n            payload.links[linkName] = value;\n          } else if (op === 'remove') {\n            var linkId = path.split('/');\n            if (linkId.length > 1) {\n              linkId = linkId[1];\n              var idx = payload.links[linkName].indexOf(linkId);\n              payload.links[linkName].splice(idx, 1);\n            } else {\n              payload.links[linkName] = null;\n            }\n          }\n          db.updateRecord(type, id, {links: payload.links}, callback);\n        }\n      });\n    }\n\n    // TODO Use Ember.Inflector or other Inflector?\n    function singularize(name) {\n      return name.slice(0, name.length - 1);\n    }\n\n    function pluralize(name) {\n      return name + 's';\n    }\n\n[Socket.IO]: http://socket.io/\n[server/lib/socket_adapter.js]: https://github.com/pixelhandler/blog/blob/master/server/lib/socket_adapter.js\n	**UPDATE 6/28/15:** This post is not up-to-date with the current release of Ember Orbit. Inspired from my experience using Ember Orbit I ended up writing the Ember JSONAPI Resources (Ember CLI) Addon which implements the JSON API 1.0 Specification.\n\nIn early 2014 [Dan Gebhardt] announced [Orbit.js] and I was thrilled abou the potential of connecting multiple data sources using the JSON Patch format to an [Ember.js] application. So, I made an attempt to use Orbit.js to create a Socket Source to use with this site, see the [blog repository]. After building a proof of concept with my blog app, I gave a presentation with a demo, see my [Ember SC talk]. There was quite a bit of interest in using smaller and more precise payloads when speaking JSON between server and browser applications.\n\nMost often developers build an application utilizing REST and on occasion we may build with WebSockets, so the concept is appealing. Adding push support to a single page application (SPA) can provide real-time data synchronization for mulitiple clients, why use both REST and WebSockets? Most modern browser's now support WebSockets, [RFC 6455], and this site's target audience uses modern browsers it seemed right to experiment with the code base for this application.\n\n[Dan Gebhardt]: https://twitter.com/dgeb\n[Ember.js]: http://emberjs.com/\n[Ember Orbit]: https://github.com/orbitjs/ember-orbit\n[Orbit.js]: https://github.com/orbitjs/orbit.js\n[blog repository]: https://github.com/pixelhandler/blog\n[Ember SC talk]: https://gist.github.com/pixelhandler/5389c72c82d26fae8fb1\n[Wicked Good Ember]: http://wickedgoodember.com/dan-gebhardt\n[RFC 6455]: http://tools.ietf.org/html/rfc6455\n[JSON API]: http://jsonapi.org/\n[patch support]: http://jsonapi.org/format/#patch	real-time-data-in-an-emberjs-application-with-websockets	Real-time Data for an Ember.js Application using WebSockets	2014-08-20	2015-05-07 17:03:21.262143	2015-12-27 06:53:48.26159	1	'-1':2549C '-10':755C '-1569':774C '-169':746C,789C '-29':756C '-448':775C '-4686':744C,787C '-5595':743C,786C '-9817':745C,788C '/#search=socket':584C '/#search=socket][caniuse-socket]':534C '/__rel':1891C,1900C,1934C '/adapters/socket-source':1264C '/api/authors?limit=1':817C '/api/posts?limit=1':814C '/authors/5c9b62ec-1569-448b-912a-97e6d62f493e/links/posts':781C '/authors/5c9b62ec-1569-448b-912a-97e6d62f493e/links/posts/341207e0-cfd9-4d3a-a5ab-d2268ab2e472':801C '/automattic/engine.io#methods-1':2932C '/baz':615C '/biscuits':697C '/biscuits/0/name':710C '/biscuits/1':645C '/config':2912C '/config/environment':1272C,2682C '/dan-gebhardt':255B,438C '/dgeb':227B,410C '/dgeb/ember-orbit-example':844C '/dgeb/introducing-orbit-dot-js)':875C '/foo':627C '/format/#patch':268B,451C '/hello':621C '/html/rfc6455':260B,443C,596C '/html/rfc6902':589C '/jsonapi-source':1256C,1458C '/links':2353C,2415C,2450C '/mixins/push-support':2678C,2776C '/mixins/record-chunks':2768C '/mixins/reset-scroll':2772C '/orbitjs/ember-orbit':234B,417C '/orbitjs/orbit.js':238B,421C,837C '/pixelhandler/5389c72c82d26fae8fb1':249B,432C '/pixelhandler/blog':243B,426C '/pixelhandler/blog/blob/master/client/app/adapters/socket-source.js':2098C '/pixelhandler/blog/blob/master/client/app/initializers/ember-orbit.js':1423C '/pixelhandler/blog/blob/master/client/app/mixins/push-support.js':2663C '/pixelhandler/blog/blob/master/client/app/routes/application.js':2759C '/pixelhandler/blog/blob/master/client/app/routes/index.js':2865C '/pixelhandler/blog/blob/master/server/lib/socket_adapter.js':3488C '/posts':739C '/posts/341207e0-cfd9-4d3a-a5ab-d2268ab2e472':805C '/posts/341207e0-cfd9-4d3a-a5ab-d2268ab2e472/links/author':797C '/posts/a4d213d6-5595-4686-9817-169a7eddbda1/links/author':769C '/prerender':1371C '/rethinkdb_adapter':2902C '/serializers/application':1260C '/services/socket':1451C '/stefanpenner/ember-inflector.git':2071C '/watch?v=iawk_mf-dwo)':869C '/watch?v=omc4pnxv1ds':1185C '/~jorendorff/es6-draft.html':1211C '0':1740C,1767C,1769C,1797C,1799C,1826C,1828C,1858C,1860C,1921C,1923C,2023C,2221C,2224C,2456C,2515C,2554C,3474C '1':935C,951C,1010C,1744C,1775C,1805C,1834C,1866C,1929C,2416C,2451C,2460C,2543C,2557C,2625C,2648C,2824C,2853C,3289C,3391C,3438C,3441C,3452C,3476C '1.0':51B '1000':2659C '14':857C '2':2652C,3293C '2014':55B,754C '204':3084C '3':1870C,3297C '4':1874C,3309C '404':3265C '500':3161C,3222C '5c9b62ec':773C '6/28/15':12B '6455':201B,257B,440C,593C '6902':300C,547C,586C,1110C '9000':833C '912a':778C '97e6d62f493e':779C 'a4d213d6':742C,785C 'a7eddbda1':747C,790C 'abou':64B 'accept':1120C 'access':899C,905C 'action':920C,983C,3379C 'ad':168B 'adapt':552C,2194C,2874C,2894C,2896C,2908C 'adapters/socket-source.js':1433C,2095C 'add':619C,635C,641C,643C,650C,724C,734C,737C,771C,783C,1005C,1126C,1748C,1907C,2357C,2382C,3340C,3411C,3423C 'addlink':2315C,2360C,2403C,2707C 'addon':45B 'addrecord':2321C,2385C,2474C,2717C,2819C 'ajax':1280C 'allow':1070C 'also':364C,2105C 'alway':577C 'announc':58B,277C 'api':50B,262B,327C,445C,810C 'app':112B,732C,831C,2891C 'appeal':167B 'applic':8A,80B,146B,152B,175B,222B,386C,403C,463C,498C,507C,1162C,1170C,1178C,1219C,1333C,2132C,2793C 'application.inject':1357C,1362C 'application.register':1334C,1338C,1346C,1351C 'application/json-patch':296C 'applicationrout':2684C,2755C 'applicationseri':1258C,1293C,1307C 'argument':1507C 'around':536C 'array':661C,667C,692C,705C 'array.isarray':2016C 'ask':2190C 'assist':1076C,1091C 'assistfind':984C,1418C 'associ':980C 'attempt':85B 'attr':1709C,1720C,1722C,1724C,1727C,1842C 'attract':511C 'attribut':2546C,2555C,2566C,2568C 'attrs.foreach':1718C 'audienc':207B 'author':766C 'autonom':1168C,1176C 'avail':560C,570C,1234C 'b':777C 'b-912a-97e6d62f493e':776C 'back':1680C,2005C,2041C,2303C 'bar':609C 'base':219B 'baz':606C,630C 'becam':286C 'beforemodel':2267C 'bi':1048C 'bi-direct':1047C 'bind':1654C,1665C,1674C,1728C,2008C,2026C,2035C,2239C,2522C 'bit':129B 'block':1399C 'blog':101B,111B,239B,422C,731C 'bodi':761C,763C 'boo':617C,631C 'borrow':2079C 'boston':858C 'branch':305C,345C 'browser':145B,195B,210B,369C,462C,530C,2281C 'build':104B,150B,160B,1167C,1175C 'call':1496C,1499C,2004C 'callback':2985C,2994C,3000C,3007C,3030C,3035C,3038C,3050C,3060C,3066C,3076C,3085C,3096C,3124C,3129C,3147C,3189C,3194C,3217C,3272C,3315C,3329C,3337C,3344C,3351C,3381C,3462C 'canius':580C 'caniuse-socket':579C 'caniuse.com':533C,583C 'caniuse.com/#search=socket':582C 'caniuse.com/#search=socket][caniuse-socket]':532C 'cannot':2631C 'canusesocket':1344C,1374C 'case':379C,664C 'catch':1685C,2046C 'cb':2979C,2980C,3146C,3165C,3216C,3234C,3241C,3252C,3259C,3262C 'chang':998C 'channel':1606C,1640C 'charact':677C 'check':2275C,2279C,2960C 'chocol':712C 'choos':571C 'class':351C 'classif':1013C 'cli':44B,1191C,1205C 'client':186B,367C,478C,2258C,2962C 'closer':516C 'code':218B,2693C,2733C,2749C,2784C,2858C,3083C,3160C,3221C,3264C 'collect':2507C,2511C,2521C,2584C,2588C 'collection.contains':2512C 'collection.insertat':2514C 'collection.removeobject':2589C 'common':889C,1255C,1447C,1457C 'compar':522C,806C 'complet':1100C 'comput':564C 'concept':108B,165B 'confer':283C 'config':1270C,2680C,2910C 'config.admin.password':3022C 'config.admin.username':3020C 'config.app.api':1287C,1290C 'config.app.socket':1304C 'configur':1213C 'confirm':2964C 'connect':68B,399C,549C,1396C,2257C,2955C 'connect.sid':2939C 'connector':1042C,1058C 'connectsourc':1355C,1382C 'consist':567C 'consol':2282C 'console.error':1558C,1689C,1696C,1950C,2050C,2344C,2431C,2630C 'console.log':2290C,2302C 'contain':1332C,1345C,1356C,1375C,1383C,2739C 'container.lookup':1378C,1386C,1392C,2745C 'content':1000C 'control':1159C,1238C,1358C,2592C,2596C,2830C 'controller.removeobject':2597C 'controller.set':2841C,2845C 'cooki':2938C 'copi':638C,639C,1130C 'cor':537C 'could':359C 'creat':90B,947C 'creation':1055C 'credenti':2999C,3001C,3003C,3005C 'credentials.password':3014C 'credentials.username':3011C 'current':23B 'custom':2137C 'dan':56B,223B,406C,846C,865C 'data':4A,70B,182B,883C,895C,908C,912C,929C,941C,954C,971C,1133C,1164C,1669C,1671C,2030C,2032C,2112C,2289C,2291C,2978C,2981C 'databas':2888C 'date':20B,753C 'db':558C,2895C,2900C 'db.createrecord':3341C 'db.deleterecord':3334C 'db.find':3226C 'db.findbyslug':3244C 'db.findquery':3148C 'db.updaterecord':3325C,3457C 'debug':2904C,2906C,2991C,3025C,3053C,3072C,3087C,3130C,3156C,3195C,3273C,3352C,3373C 'decid':307C 'default':926C,1095C,1323C,1398C,2093C,2265C,2754C,2778C 'defin':893C,1474C,1481C 'delay':2658C 'delet':792C,3143C,3208C,3213C 'deleterecord':2325C,2401C,2570C,2727C,2848C 'demo':119B,830C 'destroy':950C 'detail':1107C 'develop':149B 'didfind':986C,1643C 'didnotfind':987C 'didpatch':1987C,2702C,2814C,3088C,3092C 'digest':713C 'direct':1049C,2883C 'disconnect':3098C,3103C 'distribut':563C 'document':605C,1096C,1097C,1143C,2886C 'doesn':370C,1997C 'dofind':1636C 'dopatch':1979C 'doprocess':1658C,2012C 'draft':1202C,1208C 'e':2053C 'e.fmt':2063C 'earli':54B 'earth':1021C 'either':1075C,1088C 'els':1350C,1551C,1651C,1893C,1994C,2225C,2363C,2371C,2379C,2387C,2395C,2801C,2844C,3079C,3236C,3243C,3254C,3261C,3316C,3330C,3383C,3419C,3429C,3453C 'ember':26B,33B,40B,43B,122B,230B,244B,252B,274C,282C,341C,413C,427C,435C,827C,839C,859C,1146C,1172C,1180C,1190C,1204C,1215C,1248C,1266C,1268C,1279C,1326C,1435C,1437C,2261C,2263C,2672C,2674C,2762C,2764C 'ember-c':1189C,1203C 'ember-orbit':1214C,1247C,1325C 'ember-orbit-exampl':826C,838C 'ember.get':1725C 'ember.inflector':2068C,3465C 'ember.js':7A,79B,228B,411C,506C,1154C 'ember.k':2316C,2318C,2320C,2322C,2324C,2326C 'ember.map.create':1321C 'ember.mixin.create':2266C 'ember.required':2309C 'ember.route.extend':2685C,2779C 'ember.rsvp.promise':1275C,1461C,2203C 'ember.run.later':2358C,2608C 'ember.run.next':2367C,2375C,2383C,2391C,2399C 'ember.string':1710C 'emberjs.com':229B,412C 'end':36B,689C 'eo':1245C 'eo.schema.extend':1312C 'eo.store':1341C 'eo.store.extend':1282C,1299C 'equival':717C 'err':3152C,3155C,3157C,3230C,3233C,3248C,3251C 'error':1586C,1688C,1692C,1697C,2007C,2049C,2051C,2056C,2062C,2236C,2238C,2346C,3062C,3068C,3071C,3074C,3075C,3077C,3078C,3101C,3159C,3162C,3220C,3223C,3263C,3266C,3370C,3374C,3380C,3382C 'errorpayload':3219C,3235C,3253C 'es6':1197C,1201C,1207C 'event':979C 'eventu':573C 'everi':882C 'exampl':602C,829C,841C,2126C 'excerpt':757C,759C 'excit':287C 'expect':492C 'experi':31B,215B 'export':1322C,2092C,2264C,2753C,2777C,2913C 'express':2918C 'extend':2101C 'extract':2632C 'extracttyp':2614C 'failur':3164C,3225C 'fals':2743C,3008C 'fan':323C 'final':1678C,2039C 'find':946C,1535C,1579C,2181C,3044C,3045C,3110C,3167C,3171C,3192C,3196C,3358C,3375C 'findlink':1556C,1561C 'findmani':1582C,1588C 'findon':1567C 'findqueri':1591C,1601C,3041C,3042C,3106C,3127C,3131C 'first':313C 'flexibl':1157C 'follow':269C,353C,721C 'foo':608C 'format':76B 'found':2208C,2223C,3268C 'found.get':2219C 'frequent':493C 'function':1276C,1296C,1316C,1331C,1367C,1373C,1381C,1404C,1466C,1509C,1536C,1557C,1568C,1583C,1592C,1605C,1635C,1642C,1657C,1668C,1677C,1686C,1699C,1719C,1735C,1762C,1792C,1821C,1853C,1916C,1948C,1958C,1978C,1986C,2011C,2029C,2038C,2047C,2074C,2084C,2142C,2159C,2169C,2199C,2204C,2211C,2231C,2235C,2268C,2273C,2288C,2300C,2311C,2332C,2404C,2429C,2439C,2475C,2496C,2525C,2571C,2615C,2638C,2688C,2700C,2708C,2713C,2718C,2723C,2728C,2737C,2789C,2812C,2820C,2837C,2839C,2849C,2915C,2926C,2947C,2956C,2977C,2984C,2998C,3034C,3048C,3067C,3099C,3123C,3126C,3151C,3188C,3191C,3229C,3247C,3269C,3345C,3363C,3469C,3477C 'gas':1014C 'gave':114B 'gebhardt':57B,224B,407C,866C 'get':383C,535C 'giant':1015C 'ginger':648C 'gist.github.com':248B,431C 'gist.github.com/pixelhandler/5389c72c82d26fae8fb1':247B,430C 'github.com':233B,237B,242B,416C,420C,425C,836C,843C,1422C,2070C,2097C,2662C,2758C,2864C,2931C,3487C 'github.com/automattic/engine.io#methods-1':2930C 'github.com/dgeb/ember-orbit-example':842C 'github.com/orbitjs/ember-orbit':232B,415C 'github.com/orbitjs/orbit.js':236B,419C,835C 'github.com/pixelhandler/blog':241B,424C 'github.com/pixelhandler/blog/blob/master/client/app/adapters/socket-source.js':2096C 'github.com/pixelhandler/blog/blob/master/client/app/initializers/ember-orbit.js':1421C 'github.com/pixelhandler/blog/blob/master/client/app/mixins/push-support.js':2661C 'github.com/pixelhandler/blog/blob/master/client/app/routes/application.js':2757C 'github.com/pixelhandler/blog/blob/master/client/app/routes/index.js':2863C 'github.com/pixelhandler/blog/blob/master/server/lib/socket_adapter.js':3486C 'github.com/stefanpenner/ember-inflector.git':2069C 'give':847C 'given':674C 'good':251B,281C,434C 'great':489C 'handl':1619C,1964C 'handler':1629C,1974C 'hasmani':1886C 'hason':1896C 'hello':632C,2287C,2969C,2970C 'high':559C 'higher':569C 'host':1286C,1288C,1303C 'howev':495C 'id':741C,1009C,1314C,1538C,1540C,1542C,1545C,1550C,1555C,1570C,1575C,1576C,1614C,1663C,1742C,1759C,1773C,1789C,1803C,1818C,1832C,1850C,1864C,1913C,1927C,1945C,1960C,2021C,2167C,2175C,2458C,2465C,2470C,2482C,2489C,2501C,2545C,2552C,2563C,2605C,2612C,2650C,2657C,3174C,3185C,3211C,3228C,3246C,3291C,3312C,3327C,3336C,3348C,3355C,3361C,3362C,3459C 'idfield':1313C 'idx':3443C,3451C 'implement':47B,977C,1101C,1534C 'import':1240C,1244C,1250C,1257C,1261C,1265C,1269C,1434C,1438C,1442C,1448C,1452C,2260C,2671C,2675C,2679C,2761C,2765C,2769C,2773C 'includ':331C,1841C,2695C,2735C,2751C,2786C,2860C 'index':675C,684C 'indexof':3446C 'inflector':3468C 'init':1315C,1465C,1502C,2706C,2818C 'initi':388C,1212C,1220C,1330C 'initializers/ember-orbit.js':1239C,1420C 'initseri':1508C 'insert':657C,671C,686C 'inspir':28B 'instanc':2924C 'instead':392C,681C,1498C 'integr':1151C 'inter':521C 'interact':2882C 'interest':131B 'interfac':890C,892C,934C,1533C 'intern':1566C,1733C,2120C 'intoduct':849C 'introduc':870C 'introduct':861C 'invalid':2347C 'involv':916C 'io':2922C,2941C,3105C 'io.emit':3100C 'io.on':2954C 'io.use':2946C 'isloggedin':2983C 'islogggedin':2992C 'isobject':2083C 'jan':856C 'json':49B,74B,141B,261B,291C,297C,326C,444C,597C,725C,809C,923C,963C,1104C,3114C,3179C 'json.parse':2338C,3002C,3138C,3203C,3281C 'json.stringify':1617C,1984C,3061C,3082C 'jsonapi':41B 'jsonapi.org':263B,267B,446C,450C 'jsonapi.org/format/#patch':266B,449C 'jsonapisourc':338C,355C,391C,1251C,1284C,1453C,1513C 'jsonapisource.extend':1464C 'jsonapistor':1277C,1354C 'jsonpatch':545C,924C,1527C 'jsonpatch.com':548C,590C,591C,600C 'jupit':1012C 'keep':953C 'later':315C 'layer':1165C 'length':2220C,2798C 'let':819C 'level':960C 'librari':1149C 'like':2298C 'limit':1712C,2148C,2150C 'link':765C,1868C,1880C,1881C,1892C,1901C,1935C,3305C,3307C,3313C,3460C 'linkdef':1877C 'linkdef.type':1885C,1895C 'linkid':1872C,1909C,3434C,3439C,3440C,3447C 'linkid.length':3437C 'linknam':3349C,3356C,3387C,3406C,3408C,3416C,3427C,3445C,3449C,3455C 'list':2155C 'live':572C 'local':1408C 'localhost':832C 'localstorag':554C 'login':2997C,3026C,3063C 'logout':3033C 'look':823C 'lookupsocket':2738C 'low':959C 'made':83B,1064C 'main':1228C,1336C,1340C,1361C,1366C,1380C,1388C,2747C 'maintain':2117C 'manag':938C 'manipul':1114C 'matter':1999C 'may':159B 'media':294C 'meetup':860C 'memori':553C,2188C 'memorysourc':405C 'method':903C,943C,969C,991C,1118C,1125C,1503C,2307C,2330C 'mixin':2247C,2669C 'mixins/push-support.js':2259C,2660C 'mode':1082C 'model':2108C,2141C,2158C,2168C,2198C,2407C,2411C,2442C,2446C,2485C,2491C,2497C,2513C,2516C,2520C,2559C,2565C,2574C,2578C,2590C,2598C,2687C,2788C,2842C,2846C 'model.addlink':2425C 'model.constructor.typekey':2600C,2603C 'model.get':2606C 'model.removelink':2471C 'model.set':2567C 'modern':194B,209B,528C 'modul':1194C,2890C 'module.exports':2925C 'move':1129C 'msg':2301C,2305C 'mulitipl':185B 'multipl':69B,550C,911C,931C 'name':647C,1011C,1324C,2075C,2077C,2503C,2509C,2518C,2580C,2586C,2594C,3471C,3479C,3481C 'name.length':3475C 'name.slice':3473C 'namespac':1289C 'need':975C 'new':304C,1409C,1413C,1523C,1585C,1633C,1976C,2061C,2202C 'next':480C,1627C,1972C,2949C,2953C 'notprerenderservic':1343C,1368C 'null':767C,1372C,2025C,2088C,2354C,2463C,3037C,3240C,3258C,3392C,3413C,3456C 'number':1543C 'nut':649C 'obj':2085C,2087C,2090C 'object':655C,703C,974C,2091C,2917C,2921C,3117C,3182C 'observ':1062C 'oc':1443C 'oc.source.prototype.init.apply':1505C 'occas':157B 'offset':1713C,2145C,2147C,2796C 'often':148B 'ondidpatch':2308C,2699C,2811C 'one':886C,1044C 'onerror':1687C,2048C 'op':612C,618C,624C,642C,694C,707C,736C,770C,782C,794C,798C,802C,1004C,1016C,1022C,1747C,1778C,1811C,1837C,1906C,1938C,2058C,3397C,3410C,3422C,3424C,3431C 'oper':634C,735C,793C,1122C,1736C,1763C,1793C,1822C,1854C,1917C,1949C,2312C,2314C,2333C,2334C,2336C,2339C,2340C,2349C,2361C,2370C,2378C,2386C,2394C,2402C,2405C,2409C,2430C,2437C,2440C,2444C,2476C,2480C,2526C,2530C,2572C,2576C,2616C,2639C,2709C,2711C,2714C,2716C,2719C,2721C,2724C,2726C,2729C,2731C,2821C,2850C,2856C,3049C,3089C,3093C,3095C,3271C,3275C,3278C,3280C,3282C,3314C,3350C,3357C 'operation.op':2342C,2356C,2365C,2373C,2381C,2389C,2397C,3318C,3332C,3339C,3398C 'operation.path':1739C,1743C,1766C,1768C,1774C,1796C,1798C,1804C,1825C,1827C,1833C,1857C,1859C,1865C,1869C,1873C,1920C,1922C,1928C,2343C 'operation.path.join':1781C,1808C,1840C,1889C,1898C,1932C 'operation.path.match':2352C 'operation.path.pop':1887C 'operation.path.split':2414C,2449C,2541C,2619C,2642C,2823C,2852C,3285C,3386C 'operation.value':1755C,1785C,1846C,1875C,2422C,2494C,2569C,3324C,3343C,3395C 'operation.value.id':2483C 'option':1317C,1319C,1468C,1488C,1494C,1511C,2929C,2934C,2945C 'options.serializerclass':1515C 'orbit':27B,34B,231B,275C,342C,414C,828C,840C,877C,879C,933C,1147C,1174C,1182C,1216C,1224C,1241C,1243C,1249C,1254C,1327C,1431C,1439C,1441C,1446C,1456C 'orbit-common':1253C,1445C,1455C 'orbit.ajax':1278C 'orbit.assert':1469C,1476C,1483C 'orbit.js':59B,88B,235B,273C,418C,818C,851C,863C,871C,921C,1152C 'orbit.promise':1273C,1274C,1459C,1460C,1479C,1482C,1634C,1977C 'orbit.transformconnector':1410C,1414C 'orbit/lib/objects':2081C 'orbitjs/orbit.js':834C 'orbitsourc':1389C,1395C 'orbitsourceclass':1283C,1300C 'orbitsourceopt':1285C,1302C 'order':1715C 'origin':604C 'output':2280C 'page':174B,483C,504C 'param':2170C,2200C,2916C,3112C,3122C,3177C,3187C 'params.edit':2174C 'params.post':2216C,2228C 'partial':540C,928C 'particular':1136C 'pass':1623C,1968C 'patch':75B,264B,292C,332C,447C,598C,611C,726C,964C,1105C,1983C,2348C,3047C,3054C,3073C,3094C,3270C,3274C 'patchlink':3310C,3346C,3353C,3378C 'patchrecord':2310C,2331C 'path':614C,620C,626C,644C,696C,709C,738C,768C,780C,796C,800C,804C,1006C,1018C,1024C,1137C,1291C,1749C,1780C,1807C,1813C,1814C,1839C,1844C,1883C,1888C,1897C,1904C,1905C,1931C,1940C,1941C,2059C,2448C,2455C,2459C,2540C,2550C,2553C,2556C,2618C,2624C,2634C,2641C,2647C,2651C,3284C,3288C,3292C,3296C,3302C,3308C,3385C,3388C,3389C,3390C 'path.indexof':2548C 'path.match':3412C 'path.split':2551C,3435C 'payload':138B,293C,539C,727C,811C,3069C,3080C,3081C,3086C,3090C,3153C,3158C,3166C,3231C,3238C,3242C,3249C,3256C,3260C,3321C,3322C,3328C,3400C 'payload.links':3403C,3404C,3405C,3407C,3415C,3426C,3444C,3448C,3454C,3461C 'people.mozilla.org':1210C 'people.mozilla.org/~jorendorff/es6-draft.html':1209C 'perhap':376C 'pixelhandler.com':813C,816C 'pixelhandler.com/api/authors?limit=1':815C 'pixelhandler.com/api/posts?limit=1':812C 'planet/1':1007C,1025C 'planet/1/name':1019C 'plural':1611C,1706C,1750C,1770C,1800C,1829C,1861C,1924C,2073C,3478C 'poll':2937C 'popular':529C 'post':14B,2140C,2153C,2157C,2162C,2165C,2173C,2177C,2183C,2210C,2212C,2227C,2232C,2234C,2691C,2791C,2800C,2807C,2825C,2827C,2840C,2843C,2847C,2854C 'post.get':2214C 'posts.get':2797C 'posts.then':2836C,2838C 'potenti':66B,515C 'precis':137B 'present':116B 'primari':1067C,1406C,1411C,1416C 'primary.on':1417C 'primaryid':2421C,2469C,2488C,2500C,2562C,2607C,2656C 'primarysourc':1385C,1402C 'privat':3125C,3190C 'project':1187C 'promis':910C,1620C,1965C 'proof':106B 'prop':3295C,3304C,3323C 'propag':1034C 'properti':3119C,3186C 'prototyp':350C,356C,396C,973C,1501C 'provid':178B,468C,486C,1156C,2871C 'push':169B,458C,508C,2241C,2249C,2345C,2667C,2697C,2809C,2868C,3417C 'pushsupport':2676C,2686C,2774C,2782C 'pword':3013C,3021C 'queri':1572C,1581C,1594C,1595C,1598C,1603C,1608C,1616C,1618C,1641C,1694C,1695C,1701C,1702C,1703C,1721C,1723C,1731C,2138C,2144C,2154C,2803C,2808C,3108C,3116C,3128C,3132C,3135C,3137C,3139C,3150C,3169C,3181C,3193C,3197C,3200C,3202C,3204C 'query.id':1615C,3212C,3214C 'query.resource':1704C,1705C,3142C,3144C,3207C,3209C 'queryfactori':1698C 'quit':127B 'qux':607C 'raw':1644C,1647C,1653C,1659C,1664C,1988C,1990C,1996C,2001C,2013C,2015C,2017C,2022C 'raw.errors':1646C,1650C,1991C,1993C 'real':2A,180B,470C,519C,2253C 'real-tim':1A,179B,469C,518C,2252C 'reason':454C 'record':1631C,1670C,1682C,1684C,1963C,2031C,2043C,2045C,3364C,3366C,3367C,3371C,3401C 'record.errors':3368C,3372C 'recordchunksmixin':2766C,2781C 'refresh':484C 'regist':1226C 'reject':1638C,1649C,1981C,1992C,2206C,2237C 'relat':2418C,2424C,2427C,2462C,2466C,2473C 'releas':24B,271C 'reload':494C 'remot':557C 'remotefind':1604C,1691C 'remoteop':1746C,1760C,1777C,1790C,1810C,1819C,1836C,1851C,1903C,1914C,1937C,1946C,1961C,1985C 'remoteop.op':2064C 'remoteop.path':2065C 'remotepatch':1957C,2055C 'remov':625C,636C,693C,695C,698C,720C,795C,799C,803C,1023C,1127C,1812C,1939C,2374C,2398C,2610C,3333C,3432C 'removelink':2319C,2377C,2438C,2712C 'replac':613C,637C,706C,708C,714C,1017C,1128C,1779C,1838C,1890C,1899C,1933C,2366C,2390C,3319C,3425C 'replacelink':2317C,2369C,2428C,2433C 'repositori':102B,240B,423C,2106C 'represent':541C 'request':481C,936C,939C,978C,1063C,1080C,1532C,1565C 'requestconnector':1059C,1061C,1085C 'requir':880C,1053C,1471C,1478C,2901C,2905C,2911C,2942C,3064C,3121C,3183C 'rescu':1078C,1089C,1092C 'rescuefind':985C 'resetscrol':2770C,2780C 'resolut':1621C,1966C 'resolv':1637C,1652C,1980C,1995C,2205C,2222C,2233C 'resourc':42B,544C,1716C,2197C,3111C,3118C,3141C,3149C,3172C,3184C,3206C,3227C,3239C,3245C,3257C,3359C,3376C 'rest':154B,190B,311C,524C 'result':629C 'retriev':1140C,1145C 'retrievemodel':2637C 'return':909C,1281C,1298C,1369C,1376C,1504C,1547C,1552C,1577C,1599C,1625C,1632C,1660C,1672C,1683C,1730C,1756C,1786C,1815C,1847C,1910C,1942C,1970C,1975C,2018C,2024C,2033C,2044C,2076C,2086C,2151C,2160C,2171C,2201C,2213C,2270C,2350C,2533C,2635C,2653C,2689C,2742C,2744C,2799C,2805C,2920C,3006C,3059C,3104C,3472C,3480C 'review':3298C 'rfc':200B,256B,299C,439C,546C,585C,592C,1109C 'right':213B,578C 'root':1610C,1648C 'rout':1236C,1363C,2136C,2178C,2243C,2664C 'routenam':2505C,2582C,2833C 'routes/application.js':2670C,2756C 'routes/index.js':2760C,2862C 'safeti':576C 'saniti':2274C,2959C 'sc':123B,245B,428C 'schema':1231C,1311C,1335C,1337C,1467C,1493C,1510C,1525C 'schema.models':2628C 'schema.pluralize':2537C 'schema.singularize':2623C,2646C 'secondari':1072C,1348C,1353C,1394C,1407C,1412C,1415C,2192C 'secondary.find':1419C 'secondarysourc':1391C,1403C 'see':99B,120B,298C,531C,599C,1199C,1512C 'seem':212B 'send':927C,1679C,2040C 'serial':363C,1622C,1967C 'serializerclass':1292C,1306C 'server':143B,382C,2877C,2919C,2927C,2944C,3163C,3224C 'server/lib/socket_adapter.js':2889C,3485C 'session':3016C,3058C 'session.save':3029C 'session.user':3023C,3028C 'sessionmiddlewar':2928C,2950C 'set':1222C,2519C 'setup':2914C 'setupconnector':1401C,1405C 'share':360C 'ship':500C,525C 'simpl':601C,2958C 'singl':173B,503C,919C,990C 'singular':3470C 'site':98B,204B,473C 'slide':872C 'slug':748C,2215C,2217C,2229C,3176C 'smaller':134B,290C,538C 'socket':92B,381C,513C,556C,581C,1329C,1379C,2003C,2277C,2284C,2746C,2893C,2907C,2948C,2957C,2965C 'socket.broadcast.emit':3091C 'socket.emit':2292C,2968C 'socket.io':2866C,2880C,2898C,2923C,2943C,3483C,3484C 'socket.on':2286C,2972C,2982C,2996C,3032C,3040C,3043C,3046C,3097C 'socket.request':2951C 'socket.request.res':2952C 'socket.request.session':3017C,3036C 'socket.request.session.user':2988C,3052C 'socketsanitycheck':2272C 'socketservic':1449C,1472C,1475C 'socketservice.create':1491C 'socketsourc':349C,395C,1262C,1301C,1463C,1470C,1477C,1484C,1560C,1587C,1690C,1952C,2054C,2094C 'socketstor':1297C,1349C 'sortbi':1714C 'sourc':71B,93B,312C,319C,400C,884C,913C,955C,972C,1003C,1032C,1052C,1068C,1073C,1424C,1425C,1432C,2102C,2121C,2193C 'spa':176B 'speak':140B 'speakerdeck.com':874C 'speakerdeck.com/dgeb/introducing-orbit-dot-js)':873C 'spec':965C,1106C 'specif':52B,328C,2164C 'splice':3450C 'split':2452C 'start':302C 'storag':551C,2887C 'store':932C,1229C,1339C,1347C,1352C,1359C,1360C,1364C,1365C,1387C,1393C,2099C,2100C,2115C,2133C,2186C 'strategi':1400C 'strigifi':3115C,3180C 'string':1546C,2337C,3113C,3136C,3178C,3201C,3279C 'sub':3301C 'sub-path':3300C 'submodul':2892C 'super':1497C 'support':170B,198B,265B,309C,333C,372C,448C,459C,509C,885C,1486C,1563C,1590C,1955C,2242C,2250C,2435C,2668C,2698C,2810C,2869C,3299C 'sync':957C 'synchron':183B,1050C 'syntax':1198C 'system':565C 'tackl':316C 'take':821C 'talk':124B,246B,429C,2294C,2299C,2304C,2974C 'talk-to-m':2293C,2973C 'target':206B,1040C 'tcp':514C 'templat':2306C,2329C 'template/abstract':1500C 'test':640C,749C,751C,758C,762C,1132C 'text':760C,764C 'thin':1428C 'this._addlink':2710C 'this._addrecord':2720C 'this._delay':2362C,2613C 'this._deleterecord':2730C,2855C 'this._extracttype':2479C,2529C 'this._findone':1548C 'this._findquery':1553C 'this._patchrecord':2313C 'this._queryfactory':1573C,1596C 'this._remotefind':1578C,1600C 'this._remotepatch':1757C,1787C,1816C,1848C,1911C,1943C 'this._removelink':2715C 'this._retrievemodel':2408C,2443C,2575C 'this._schema.meta':1320C 'this._socket':1490C 'this._socket.emit':1639C,1982C 'this._super':1318C,2271C 'this._updateattribute':2725C 'this.buildquery':2804C 'this.controllerfor':2517C,2593C,2831C 'this.deserialize':1661C,2019C 'this.get':2146C,2149C,2504C,2581C,2795C,2832C 'this.initserializer':1492C 'this.model':2828C 'this.modelfor':2508C,2585C,2792C 'this.patchrecord.bind':2703C,2815C 'this.schema.models':1878C 'this.serializer':1522C 'this.serializer.serializerecord':1753C,1783C 'this.serializerclass':1514C,1516C,1518C,1520C,1524C 'this.serializerclass.wrappedfunction':1519C,1521C 'this.settletransforms':1673C,2034C 'this.socket':2285C 'this.socket.on':2701C,2813C 'this.socketsanitycheck':2269C 'this.store':2609C 'this.store.add':2492C 'this.store.filter':2209C 'this.store.find':2152C,2161C,2172C,2226C,2690C,2806C 'this.store.retrieve':2419C,2467C,2486C,2498C,2560C,2654C 'this.store.schema':2536C,2622C,2627C,2645C 'this.store.then':2495C 'this.usepatch':1489C 'thrill':63B 'throw':1584C,2060C 'time':3A,181B,471C,520C,2254C 'titl':750C,752C 'todo':1559C,1951C,2066C,2432C,3463C 'tools.ietf.org':259B,442C,588C,595C 'tools.ietf.org/html/rfc6455':258B,441C,594C 'tools.ietf.org/html/rfc6902':587C 'transform':901C,907C,952C,961C,966C,988C,992C,1031C,1036C,1039C,1117C,1732C 'transformadd':1734C 'transformaddlink':1852C 'transformconnector':1026C,1028C 'transformremov':1791C 'transformremovelink':1915C 'transformreplac':1761C 'transformreplacelink':1947C,1953C 'transformupdateattribut':1820C 'transport':2935C 'tri':3055C 'true':1295C,1309C,1531C,3031C,3039C 'twitter.com':226B,409C 'twitter.com/dgeb':225B,408C 'two':1057C 'type':295C,1537C,1549C,1554C,1569C,1574C,1580C,1593C,1597C,1602C,1607C,1612C,1662C,1700C,1707C,1738C,1751C,1754C,1758C,1765C,1771C,1784C,1788C,1795C,1801C,1817C,1824C,1830C,1849C,1856C,1862C,1879C,1912C,1919C,1925C,1944C,1959C,2020C,2413C,2420C,2426C,2454C,2468C,2472C,2478C,2487C,2493C,2499C,2528C,2532C,2538C,2561C,2602C,2611C,2621C,2629C,2633C,2636C,2644C,2655C,3287C,3311C,3326C,3335C,3342C,3347C,3354C,3360C,3402C,3458C 'typekey':2535C,2542C 'typeof':1541C,1544C,2089C,2335C,2835C,3134C,3199C,3277C 'unam':3010C,3019C,3024C 'up-to-d':17B 'updat':11B,347C,472C,487C,948C,2255C 'updateattribut':2323C,2393C,2524C,2722C 'url':1305C 'use':9A,32B,72B,87B,95B,133B,188B,208B,289C,456C,466C,680C,728C,922C,930C,962C,996C,1188C,1196C,1397C,1526C,2067C,2130C,2245C,2327C,2665C,2879C,2897C,3107C,3168C,3464C 'usepatch':1294C,1308C,1487C,1530C 'user':2987C,2990C,2993C,2995C,3057C,3102C 'util':153B 'valu':616C,622C,646C,652C,669C,700C,711C,716C,740C,772C,784C,1008C,1020C,1752C,1782C,1845C,1908C,3394C,3414C,3418C,3421C,3428C 'var':1310C,1384C,1390C,1462C,1571C,1609C,1613C,1630C,1708C,1737C,1741C,1745C,1764C,1772C,1776C,1794C,1802C,1806C,1809C,1823C,1831C,1835C,1855C,1863C,1867C,1871C,1876C,1882C,1902C,1918C,1926C,1930C,1936C,1962C,2052C,2072C,2082C,2143C,2207C,2283C,2406C,2412C,2417C,2441C,2447C,2453C,2457C,2461C,2477C,2481C,2484C,2502C,2506C,2527C,2534C,2539C,2544C,2558C,2573C,2579C,2583C,2591C,2601C,2604C,2617C,2620C,2640C,2643C,2649C,2683C,2790C,2802C,2826C,2829C,2899C,2903C,2909C,2933C,2940C,2986C,3009C,3012C,3015C,3065C,3140C,3145C,3205C,3210C,3215C,3218C,3283C,3286C,3290C,3294C,3306C,3320C,3369C,3384C,3393C,3396C,3399C,3433C,3442C 'via':942C,1115C,1528C 'video':853C,1166C 'visitor':474C 'w':1693C,1711C,2057C 'w/o':2006C 'wacki':384C 'wait':475C 'watch':845C,1029C 'way':1045C 'weak':566C 'web':512C,555C,1169C,1177C 'websocket':10A,162B,192B,199B,318C,374C,457C,1529C,2936C 'wick':250B,280C,433C 'wickedgoodember.com':254B,437C 'wickedgoodember.com/dan-gebhardt':253B,436C 'window.navigator.useragent.match':1370C 'window.websocket':1377C,2741C 'withfield':1717C 'without':3056C 'work':339C,488C,878C,2278C,2967C 'world':623C,633C,2971C 'wrapper':1429C 'write':38B 'www.ember-cli.com':1206C 'www.youtube.com':868C,1184C 'www.youtube.com/watch?v=iawk_mf-dwo)':867C 'www.youtube.com/watch?v=omc4pnxv1ds':1183C 'yet':1564C,1956C,2436C 'youtub':852C	published	pixelhandler
12	I always like to have a personal project to experiment with new technologies and also to\nsharpen my skills as a software developer. I felt it was time to build a site using \n[Node.js][node.js], so I used [Express] to communicate JSON to the client application.\nI chose [RethinkDB] as it stores data in JSON docs, and I can backup the data in JSON too. Finally for the client application I chose [Ember.js]; I've been using Ember for about a\nyear and dig building JavaScript applications with the libraries Ember provides.\n\nI still host the client application with Amazon S3, but needed to add an API server. I have\na friend that is very happly with [DigitalOcean] so I figured it was time to try them out.\nBut first I had to build something.\n\nI started off with tooling I found useful for writing a library of extensions for Ember Data.\nFor build tools I used [Brunch] and wrote a few shell scripts in Bash and Node. I begin by\nSetting up api endpoints for the blog posts and writing an adapter for RethinkDB. I wrote (request) tests with [mocha], using [supertest] / [superagent]. Feeling very confident that\nthe API was doing it's CRUD work I moved on to the client application.\n\nFor testing the client app I used [QUnit] with integration test helpers from the [Ember Test]\npackage that is included with Ember.js. Rather than mock the data, I figured hackers don't\nmock; so I went ahead with actual full stack integration testing. I wrote some JSON and a\nshell script to seed the database. Eventually I used that same module of JSON docs on both the client and server test suites to assert/expect that the desired functionality with the\ndata was achieved. With the tests passing for the API writing (request) driven integration\ntests for the client worked out smoothly using the Ember test helpers. \n\nAfter a few iterations on the client and server It was great to execute the automated tests\nand know what broke and what needed rework. I choose not to focus on writing unit tests as\nthis is a blog app and I'm mostly using the objects that Ember provides. Both Express and\nEmber.js have good test coverage for the APIs the libraries support. (At least I think so.)\n\nI have to say that I was very pleased with the choices of libaries, frameworks for this\nproject; as well as being very happy with the hosting choices as well. DigitalOcean had\ngreat how-to articles for using Ubuntu, the IRC chat rooms for RethinkDB, Ember.js are\nvery helpful. It was a nice surprise that with RethinkDB I could dump JSON right out of the\ndatabase.\n\nHere are links to the repositories I used to build this blog site:\n\n* [ember-app-builder] - my tooling setup\n* [pixelhandler/blog] - the client / server application code, and testing suites\n\nA few things may be **broken** until I finish the migration to the new system:\n\n* Previous links need to be redirected to the new routes\n* The site may never work in IE (just kidding, but I haven't tested it yet)\n\n[ember-app-builder]: https://github.com/pixelhandler/ember-app-builder\n[pixelhandler/blog]: https://github.com/pixelhandler/blog\n[node.js]: http://nodejs.org\n[Express]: http://expressjs.com\n[RethinkDB]: http://www.rethinkdb.com\n[Ember.js]: http://emberjs.com\n[DigitalOcean]: https://digitalocean.com\n[Brunch]: http://brunch.io\n[mocha]: http://visionmedia.github.io/mocha/\n[supertest]: https://github.com/visionmedia/supertest\n[superagent]: https://github.com/visionmedia/superagent\n[QUnit]: https://qunitjs.com\n[Ember Test]: http://emberjs.com/guides/testing/integration/	For the past few weeks I worked on tooling for developing Web applications, written with\nJavaScript, on both the client and the server apps. In addition to using one language \nfor developing the blog application I also wanted to try out CSS3 features like flexbox\nfor layout.\n\nSome of the topics that are important to me include: \n\n* Simplistic 'blog' layout, based on the [Holy Grail Layout]\n* Edit post content using Markdown syntax\n* Admin login to create / edit posts with preview, and delete\n* Layout to fit device well, targeting iPhone, iPad and desktop\n* Load data in chunks, using show more link\n* Use slugs as post id's on client but persist w/ unique ids on server\n* Separate applications for client and server\n* A simple API for managing blog posts persisted in JSON docs\n* End-to-end integtation testing also in JavaScript\n* Using libraries and frameworks that make me happy\n* Simple hosting and deployment\n* Flexibilty to plugin / build whatever I choose in the future\n\nHere is a short summary of my transition from using a blog built with a site generator, \nto building a blog application from the ground up...\n\n[Holy Grail Layout]: http://philipwalton.github.io/solved-by-flexbox/demos/holy-grail/	refreshed-my-blog-with-express-and-emberjs	Refreshed my Blog with Express and Ember.js	2014-03-02	2015-05-07 17:03:21.282601	2015-05-07 17:03:21.282601	1	'/guides/testing/integration/':769C '/mocha/':754C '/pixelhandler/blog':738C '/pixelhandler/ember-app-builder':734C '/solved-by-flexbox/demos/holy-grail/':202B '/visionmedia/superagent':762C '/visionmedia/supertest':758C 'achiev':498C 'actual':454C 'adapt':385C 'add':307C 'addit':33B 'admin':80B 'ahead':452C 'also':44B,146B,217C 'alway':204C 'amazon':302C 'api':131B,309C,376C,402C,505C,582C 'app':31B,420C,561C,673C,730C 'applic':20B,42B,124B,192B,248C,272C,289C,300C,415C,682C 'articl':627C 'assert/expect':489C 'autom':537C 'backup':262C 'base':68B 'bash':368C 'begin':372C 'blog':3A,41B,66B,134B,182B,191B,380C,560C,669C 'broke':542C 'broken':692C 'brunch':360C,749C 'brunch.io':750C 'build':164B,189B,232C,287C,336C,356C,667C 'builder':674C,731C 'built':183B 'chat':633C 'choic':602C,618C 'choos':167B,548C 'chose':250C,274C 'chunk':103B 'client':27B,115B,126B,247C,271C,299C,414C,419C,483C,513C,528C,680C 'code':683C 'communic':243C 'confid':399C 'content':76B 'could':650C 'coverag':579C 'creat':83B 'crud':407C 'css3':49B 'data':101B,255C,264C,354C,442C,496C 'databas':470C,657C 'delet':89B 'deploy':160B 'desir':492C 'desktop':99B 'develop':18B,39B,225C 'devic':93B 'dig':286C 'digitalocean':320C,621C,747C 'digitalocean.com':748C 'doc':139B,258C,479C 'driven':508C 'dump':651C 'edit':74B,84B 'ember':280C,293C,353C,430C,519C,570C,672C,729C,765C 'ember-app-build':671C,728C 'ember.js':7A,275C,437C,575C,637C,745C 'emberjs.com':746C,768C 'emberjs.com/guides/testing/integration/':767C 'end':141B,143B 'end-to-end':140B 'endpoint':377C 'eventu':471C 'execut':535C 'experi':212C 'express':5A,241C,573C,741C 'expressjs.com':742C 'extens':351C 'featur':50B 'feel':397C 'felt':227C 'figur':323C,444C 'final':268C 'finish':695C 'first':332C 'fit':92B 'flexbox':52B 'flexibilti':161B 'focus':551C 'found':344C 'framework':152B,605C 'friend':314C 'full':455C 'function':493C 'futur':170B 'generat':187B 'github.com':733C,737C,757C,761C 'github.com/pixelhandler/blog':736C 'github.com/pixelhandler/ember-app-builder':732C 'github.com/visionmedia/superagent':760C 'github.com/visionmedia/supertest':756C 'good':577C 'grail':72B,198B 'great':533C,623C 'ground':195B 'hacker':445C 'happi':156B,614C 'happli':318C 'haven':723C 'help':640C 'helper':427C,521C 'holi':71B,197B 'host':158B,297C,617C 'how-to':624C 'id':112B,120B 'ie':718C 'import':61B 'includ':64B,435C 'integr':425C,457C,509C 'integt':144B 'ipad':97B 'iphon':96B 'irc':632C 'iter':525C 'javascript':23B,148B,288C 'json':138B,244C,257C,266C,462C,478C,652C 'kid':720C 'know':540C 'languag':37B 'layout':54B,67B,73B,90B,199B 'least':587C 'libari':604C 'librari':150B,292C,349C,584C 'like':51B,205C 'link':107B,660C,703C 'load':100B 'login':81B 'm':564C 'make':154B 'manag':133B 'markdown':78B 'may':690C,714C 'migrat':697C 'mocha':393C,751C 'mock':440C,448C 'modul':476C 'most':565C 'move':410C 'need':305C,545C,704C 'never':715C 'new':214C,700C,710C 'nice':644C 'node':370C 'node.js':236C,237C,739C 'nodejs.org':740C 'object':568C 'one':36B 'packag':432C 'pass':502C 'past':10B 'persist':117B,136B 'person':209C 'philipwalton.github.io':201B 'philipwalton.github.io/solved-by-flexbox/demos/holy-grail/':200B 'pixelhandler/blog':678C,735C 'pleas':599C 'plugin':163B 'post':75B,85B,111B,135B,381C 'preview':87B 'previous':702C 'project':210C,608C 'provid':294C,571C 'qunit':423C,763C 'qunitjs.com':764C 'rather':438C 'redirect':707C 'refresh':1A 'repositori':663C 'request':390C,507C 'rethinkdb':251C,387C,636C,648C,743C 'rework':546C 'right':653C 'room':634C 'rout':711C 's3':303C 'say':594C 'script':366C,466C 'seed':468C 'separ':123B 'server':30B,122B,128B,310C,485C,530C,681C 'set':374C 'setup':677C 'sharpen':219C 'shell':365C,465C 'short':174B 'show':105B 'simpl':130B,157B 'simplist':65B 'site':186B,234C,670C,713C 'skill':221C 'slug':109B 'smooth':516C 'softwar':224C 'someth':337C 'stack':456C 'start':339C 'still':296C 'store':254C 'suit':487C,686C 'summari':175B 'superag':396C,759C 'supertest':395C,755C 'support':585C 'surpris':645C 'syntax':79B 'system':701C 'target':95B 'technolog':215C 'test':145B,391C,417C,426C,431C,458C,486C,501C,510C,520C,538C,555C,578C,685C,725C,766C 'thing':689C 'think':589C 'time':230C,326C 'tool':16B,342C,357C,676C 'topic':58B 'transit':178B 'tri':47B,328C 'ubuntu':630C 'uniqu':119B 'unit':554C 'use':35B,77B,104B,108B,149B,180B,235C,240C,279C,345C,359C,394C,422C,473C,517C,566C,629C,665C 've':277C 'visionmedia.github.io':753C 'visionmedia.github.io/mocha/':752C 'w':118B 'want':45B 'web':19B 'week':12B 'well':94B,610C,620C 'went':451C 'whatev':165B 'work':14B,408C,514C,716C 'write':347C,383C,506C,553C 'written':21B 'wrote':362C,389C,460C 'www.rethinkdb.com':744C 'year':284C 'yet':727C	published	pixelhandler
57	Below are the **sample pages from both CSS frameworks**:\n\n  1. [Demo of 960 pixel Grid (960.gs 12-col & 16-col)](http://pixelhandler.com/css-grid-layout/demo.html)\n  2. [HTML elements](http://pixelhandler.com/css-grid-layout/elements.html)\n  3. [Blueprint Sample Page](http://pixelhandler.com/css-grid-layout/sample.html)\n\n[Download the XHTML & CSS files.](http://pixelhandler.com/css-grid-layout\n/mash-up.zip) _License info : GPL license | MIT license_	I really enjoy the mastery of modern CSS layouts using a grid based on solid\ndesign principles, pre-existing the Web. My two favorite are\n[960.gs](http://960.gs) and [Blueprint](http://www.blueprintcss.org/), so I've\ntaken the elements that I like best about each css framework and mashed them\ntogether into one. 960.gs has both 12-column or 16-column grids ready to go.\nWhile Blueprint has more comprehensive element styles, a 18px baseline grid,\nand a few additional settings (e.g. the "pull" class to break outside the\ngrid). 	mashup-of-two-rockin-css-grids-960gs-and-blueprint	Mashup of Two Rockin' CSS Grids - 960.gs & Blueprint	2008-09-09	2015-05-07 17:03:21.525339	2015-05-07 17:03:21.525339	1	'/),':41B '/css-grid-layout':142C '/css-grid-layout/demo.html)':121C '/css-grid-layout/elements.html)':127C '/css-grid-layout/sample.html)':134C '/mash-up.zip':143C '1':108C '12':65B,115C '16':68B,117C '18px':82B '2':122C '3':128C '960':111C '960.gs':7A,35B,36B,62B,114C 'addit':88B 'base':21B 'baselin':83B 'best':51B 'blueprint':8A,38B,75B,129C 'break':95B 'class':93B 'col':116C,118C 'column':66B,69B 'comprehens':78B 'css':5A,16B,54B,106C,138C 'demo':109C 'design':24B 'download':135C 'e.g':90B 'element':47B,79B,124C 'enjoy':11B 'exist':28B 'favorit':33B 'file':139C 'framework':55B,107C 'go':73B 'gpl':146C 'grid':6A,20B,70B,84B,98B,113C 'html':123C 'info':145C 'layout':17B 'licens':144C,147C,149C 'like':50B 'mash':57B 'mashup':1A 'masteri':13B 'mit':148C 'modern':15B 'one':61B 'outsid':96B 'page':103C,131C 'pixel':112C 'pixelhandler.com':120C,126C,133C,141C 'pixelhandler.com/css-grid-layout':140C 'pixelhandler.com/css-grid-layout/demo.html)':119C 'pixelhandler.com/css-grid-layout/elements.html)':125C 'pixelhandler.com/css-grid-layout/sample.html)':132C 'pre':27B 'pre-exist':26B 'principl':25B 'pull':92B 'readi':71B 'realli':10B 'rockin':4A 'sampl':102C,130C 'set':89B 'solid':23B 'style':80B 'taken':45B 'togeth':59B 'two':3A,32B 'use':18B 've':44B 'web':30B 'www.blueprintcss.org':40B 'www.blueprintcss.org/),':39B 'xhtml':137C	published	pixelhandler
26	### Test-driven development (TDD) :\n\nA software development process that relies on the repetition of a very short\ndevelopment cycle: **first** the developer writes a **failing automated test\ncase** that defines a desired improvement or new function, **then** produces\n**code to pass that test** and finally refactors the new code to acceptable\nstandards.\n\nref: [http://en.wikipedia.org/wiki/Test-\ndriven_development](http://en.wikipedia.org/wiki/Test-driven_development)\n\n### Behavior-driven development (BDD)\n\nIntroducing BDD : [http://blog.dannorth.net/introducing-\nbdd/](http://blog.dannorth.net/introducing-bdd/)\n\n_"…where to start, what to test and what not to test, how much to test in one\ngo, what to call their tests, and how to understand why a test fails."_\n\nBasically use language/terminology that everyone on the project understands;\nusing a pattern (e.g. Given, When, Then.) to test expected behavior.\n\n_"Developers discovered it could do at least some of their documentation for\nthem, so they started to write test methods that were real sentences."_\n\n### This article is about…\n\n  1. Using QUnit with test-driven development (TDD)\n  2. Example: utility method for weekend (only) content\n  3. First, write tests to describe the expected behavior that fail\n  4. Next, code to pass the tests\n  5. **The result**: a short utility function, the test script describes what the code does (behavior), is unit tested, and doubles as documentation for the code.\n\n### TDD Process\n\n  1. Add a test\n  2. Run all tests and see if the new one fails\n  3. Write some code\n  4. Run the automated tests and see them succeed\n  5. Refactor code\n  6. Repeat\n\n_"Test-driven development constantly repeats the steps of adding test cases\nthat fail, passing them, and refactoring. Receiving the expected test results\nat each stage reinforces the programmer's mental model of the code, boosts\nconfidence and increases productivity."_\n\n_- Lather, Rinse, Repeat_\n\n### Maybe the task is worth it…\n\n**From marketForce :** For weekend traffic, the one word difference had a +17.58% RPV Lift (98.01% Confidence) and a +16.15% Conversion Lift (97.53% Confidence) _So, I think it’s worth…_\n\n– this forecasts to an incremental **$XXX,000** in annual revenues.\n\n### Time will only tell…\n\nCould have used…\n\n    \n    \n      var today = new Date(); \n      if (today.getDay() == 0 || today.getDay() == 6) { \n        $('#dr_billingContainer h3:eq(0)').html('XXXX XXXX');\n      }\n    \n\n…Instead chose to make a jQuery plugin that acts as a utility method that can\neasily be reused for other sites\n\n> Javascript is all about behavior. Begin by writing some use cases or stories\nof what users will experience.\n\n### Plugin / utility method :  TODO…\n\n    \n    \n      /**  \n       *  $.fn.isWeekend() plugin to test if browsing on Sat./Sun.\n       *  checks a date object to see if the day is a weekend day, Saturday / Sunday\n       *  requires Date object as argument and jQuery\n       *  dr.isWeekend alias for plugin to use as utility function\n       *  @return true/false\n       */\n    \n\nWhat's Needed? What behavior will we test for?\n\n  * is dr a global variable.\n  * dr.isWeekend() expects argument of object type Date\n  * dr.isWeekend() plugin returns true or false for each day of the week\n\n### QUnit : Start w/ HTML\n\n    \n    \n    <!DoCtYpE html>\n    <html>\n      <head>\n        <!-- QUnit CSS, JS, etc. -->\n      </head>\n      <body>\n        <h1 id="qunit-header">QUnit Tests for ...</h3>\n        <h2 id="qunit-banner"></h2>\n        <div id="qunit-testrunner-toolbar"></div>\n        <h2 id="qunit-userAgent"></h2>\n        <ol id="qunit-tests"></ol>\n        <div id="qunit-fixture">test markup</div>\n      </body>\n    </html>\n    \n\n### What does this look like? Let's see it in action with JSFIDDLE\n\n> Tip: click the 'Result' tab to see test results; then click the test to\nexpand (0, 1, 1) and see the details.\n\n### Setup testing : [JSFIDDLE](http://jsfiddle.net/pixelhandler/NwPD5/)\n\n### Write a test : to fail\n\n    \n    \n      /* namespace */\n      module('namespace check');\n      test('is dr a global variable.',function(){\n          expect(1);\n          ok( window.dr, 'dr namespace is present');\n      });\n    \n\n### Add namespace test :  …fails\n\n### Add some code :\n\n    \n    \n      if (!window.dr) { var dr = {}; } // using dr as namespace\n    \n\n### Code for namesapce :  …passes\n\n### Add some helper code :  in a module\n\n    \n    \n      module("dr.isWeekend() utility fn uses jQuery", {\n        setup: function() {\n          dr.date = new Date();\n          dr.weekdays = [1,2,3,4,5];\n          dr.weekends = [0,6];\n        },\n        teardown: function() {\n          delete dr.date;\n          delete dr.weekdays;\n          delete dr.weekends;\n        }\n      });\n    \n\n### Add a module w/ fixture : to run with each test\n\n### Add a test :  Arrange, Act, Assert\n\n    \n    \n      test("dr.isWeekend() expects argument of object type Date", function(){\n          // Arrange - use setup() for dr.date\n          var testPluginDefault;\n          // Act\n          testPluginDefault = dr.isWeekend();\n          // Assert\n          expect(1);\n          notStrictEqual( testPluginDefault, 'error', "Plugin does not return 'error' comparing with notStrictEqual");\n      });\n    \n\n### Test for plugin / method :  …fails\n\n### Code for plugin :  skeleton\n\n    \n    \n      (function($) {\n    \n      $.fn.isWeekend = function(options) {\n          var defaults = {};\n          opts = $.extend({},defaults, options);\n          // return this.each(function() { \n              // code plugin here ...\n          // });\n      };\n      dr.isWeekend = $.fn.isWeekend;\n    \n      })(jQuery);\n    \n\n### Code for plugin skeleton :  …passes\n\n### Add more to the test :  date object?\n\n    \n    \n      test("dr.isWeekend() expects argument of object type Date", function(){\n          // ...\n          failDate = [];\n          testPluginFalse = dr.isWeekend({ date: failDate });\n          // Assert\n          expect(2);\n          // ...\n          equal( testPluginFalse, 'invalid', "Plugin returns sting 'invalid' if argument is not Date object");\n      });\n    \n\n### Add more to the test :  …fails\n\n### Work it out :\n\n    \n    \n      $.fn.isWeekend = function(options) {\n          var defaults, opts;\n          defaults = { date: new Date() };\n          opts = $.extend({},defaults, options);\n          if (Object.prototype.toString.call(opts.date) === '[object Date]') {\n              opts.dateOk = true;\n          } else {\n              return 'invalid';\n          }\n      };\n    \n\n### Code to :  pass the test\n\n### More testing :\n\n    \n    \n      // Act\n      // ...\n      testPluginTrue = dr.isWeekend({ date: dr.date });\n      // Assert\n      expect(3);\n      // ...\n      notStrictEqual( testPluginTrue, 'invalid', "Plugin does not return 'invalid' comparing with notStrictEqual");\n    \n\n### More testing :  …passes, already :)\n\n### Write some tests for logic\n\n    \n    \n      test("dr.isWeekend() plugin returns true or false for each day of the week", function(){\n          // Arrange - use setup() for dr.date, dr.weekdays, dr.weekends\n          var n, weekday, weekend;\n    \n          // Act\n          n = 0;\n          weekend = $.inArray(n, dr.weekends);\n          n = 1;\n          weekday = $.inArray(n, dr.weekdays);\n    \n          // Assert\n          expect(2);\n          equal(weekend, 0, "testing a weekend value");\n          equal(weekday, 0, "testing a weekday value");\n      });\n    \n\n### Write some tests for logic :  …passes\n\n### Write some test for behavior :\n\n    \n    \n      // Assert\n      expect(11);\n      equal(weekend, 0, "testing a weekend value");\n      equal(weekday, 0, "testing a weekday value");\n      equal(isSunday, true, "Yes, 11/28/2010 is Sunday a weekend" );\n      equal(isMonday, false, "Yes, 11/29/2010 is Monday a weekday" );\n      equal(isTuesday, false, "Yes, Tuesday a weekday" );\n      equal(isWednesday, false, "Yes, Wednesday a weekday" );\n      equal(isThursday, false, "Yes, Thursday a weekday" );\n      equal(isFriday, false, "Yes, Friday a weekday" );\n      equal(isSaturday, true, "Yes, Saturday a weekday" );\n      equal(isTodayAWeekend, true, "Is today a weekend: true if today is a weekend" );\n      equal(isTodayAWeekend, false, "Is today a weekend: false if today is a weekday" );\n    \n\n### Write some test for behavior :  …fails\n\n### Code the expected behavior :\n\n    \n    \n      // ...\n      weekdays = [1,2,3,4,5];\n      weekends = [0,6];\n      if (Object.prototype.toString.call(opts.date) === '[object Date]') {\n          // check if weekend using getDay() -> returns number 0-6 for day of week\n          opts.n = opts.date.getDay();\n          if ( $.inArray(opts.n , weekends) > -1 ) {\n              return true;\n          } else if ( $.inArray(opts.n , weekdays) > -1 ) {\n              return false;\n          }\n          return 'error';\n      } else {\n          return 'invalid';\n      }\n    \n\n### 1 fail  … everyday can't be a weekend :(\n\n### Another example :  input helper text\n\n### Another example :  input helper text\n\n### Links :\n\n  * This code - [(github.com) gist](https://gist.github.com/d379c952af637aeb0e51) | [jsfiddle.net ( append 1/ - 11/ )](http://jsfiddle.net/pixelhandler/NwPD5/)\n  * This presentation Source - [gist](https://gist.github.com/eee65f0f1d3b82b53ed9)\n  * QUnit - [Documentation](http://docs.jquery.com/Qunit) | [Code](https://github.com/jquery/qunit) | [JS](https://github.com/jquery/qunit/raw/master/qunit/qunit.js) | [CSS](https://github.com/jquery/qunit/raw/master/qunit/qunit.css)\n  * Notes - [TDD (wikipedia)](http://en.wikipedia.org/wiki/Test-driven_development) | [BDD (blog.dannorth.net)](http://blog.dannorth.net/introducing-bdd/) | [3-A's ](http://integralpath.blogs.com/thinkingoutloud/2005/09/principles_of_t.html)\n  * Tools - [jslint.com](http://jslint.com/) | [javascriptcompressor.com](http://javascriptcompressor.com/)\n  * Presentation: [Slides](http://skript.co/talks/qunit/)\n	### Who writes tests anyway?\n\n  * jQuery uses QUnit \n\nDocs: [http://docs.jquery.com/Qunit](http://docs.jquery.com/Qunit)\n\nCode: [https://github.com/jquery/qunit](https://github.com/jquery/qunit)\n\n  * QUnit is a powerful, easy-to-use, JavaScript test suite.\n  * It's used by the jQuery project to test its code and plugins but is capable of testing any generic JavaScript code	test-driven-development-tdd-using-javascript-with-qunit	Test-driven Development (TDD) Using Javascript With QUnit	2010-12-02	2015-05-07 17:03:21.382089	2015-05-07 17:03:21.382089	1	'+16.15':376C '+17.58':369C '-1':1059C,1067C '-6':1048C './sun':472C '/)':1153C,1157C '/d379c952af637aeb0e51)':1100C '/eee65f0f1d3b82b53ed9)':1114C '/introducing-':129C '/introducing-bdd/)':133C,1142C '/jquery/qunit)':1123C '/jquery/qunit/raw/master/qunit/qunit.css)':1131C '/jquery/qunit/raw/master/qunit/qunit.js)':1127C '/jquery/qunit](https://github.com/jquery/qunit)':24B '/pixelhandler/nwpd5/)':588C,1107C '/qunit)':1119C '/qunit](http://docs.jquery.com/qunit)':20B '/talks/qunit/)':1162C '/thinkingoutloud/2005/09/principles_of_t.html)':1148C '/wiki/test-':114C '/wiki/test-driven_development)':119C,1137C '0':410C,417C,576C,657C,881C,897C,904C,925C,932C,1033C,1047C '000':393C '1':213C,276C,577C,578C,606C,651C,704C,887C,1027C,1075C,1103C '11':922C,1104C '11/28/2010':941C '11/29/2010':950C '2':222C,280C,652C,772C,894C,1028C '3':230C,291C,653C,833C,1029C,1143C '4':241C,295C,654C,1030C '5':248C,304C,655C,1031C '6':307C,412C,658C,1034C '97.53':379C '98.01':372C 'accept':109C 'act':429C,681C,699C,826C,879C 'action':558C 'ad':318C 'add':277C,613C,617C,632C,667C,677C,749C,786C 'alia':496C 'alreadi':848C 'annual':395C 'anoth':1083C,1088C 'anyway':13B 'append':1102C 'argument':492C,522C,686C,759C,781C 'arrang':680C,692C,868C 'articl':210C 'assert':682C,702C,770C,831C,892C,920C 'autom':84C,298C 'basic':165C 'bdd':124C,126C,130C,1138C 'begin':447C 'behavior':121C,184C,238C,263C,446C,510C,919C,1020C,1025C 'behavior-driven':120C 'billingcontain':414C 'blog.dannorth.net':128C,132C,1139C,1141C 'blog.dannorth.net/introducing-':127C 'blog.dannorth.net/introducing-bdd/)':131C,1140C 'boost':344C 'brows':469C 'call':154C 'capabl':51B 'case':86C,320C,452C 'check':473C,597C,1040C 'chose':422C 'click':562C,571C 'code':21B,46B,57B,97C,107C,243C,261C,273C,294C,306C,343C,619C,628C,635C,721C,738C,744C,819C,1022C,1095C,1120C 'compar':713C,842C 'confid':345C,373C,380C 'constant':313C 'content':229C 'convers':377C 'could':188C,401C 'css':1128C 'cycl':77C 'date':407C,475C,489C,526C,649C,690C,754C,763C,768C,784C,802C,804C,813C,829C,1039C 'day':481C,485C,535C,863C,1050C 'default':730C,733C,799C,801C,807C 'defin':88C 'delet':661C,663C,665C 'describ':235C,258C 'desir':90C 'detail':582C 'develop':4A,61C,65C,76C,80C,116C,123C,185C,220C,312C 'differ':366C 'discov':186C 'doc':17B 'docs.jquery.com':19B,1118C 'docs.jquery.com/qunit)':1117C 'docs.jquery.com/qunit](http://docs.jquery.com/qunit)':18B 'document':195C,270C,1116C 'doubl':268C 'dr':413C,516C,600C,609C,623C,625C 'dr.date':647C,662C,696C,830C,872C 'dr.isweekend':495C,520C,527C,640C,684C,701C,741C,757C,767C,828C,855C 'dr.weekdays':650C,664C,873C,891C 'dr.weekends':656C,666C,874C,885C 'driven':3A,60C,115C,122C,219C,311C 'e.g':177C 'easi':30B 'easili':436C 'easy-to-us':29B 'els':816C,1062C,1072C 'en.wikipedia.org':113C,118C,1136C 'en.wikipedia.org/wiki/test-':112C 'en.wikipedia.org/wiki/test-driven_development)':117C,1135C 'eq':416C 'equal':773C,895C,902C,923C,930C,937C,946C,955C,962C,969C,976C,983C,990C,1003C 'error':707C,712C,1071C 'everyday':1077C 'everyon':169C 'exampl':223C,1084C,1089C 'expand':575C 'expect':183C,237C,329C,521C,605C,685C,703C,758C,771C,832C,893C,921C,1024C 'experi':459C 'extend':732C,806C 'fail':83C,164C,240C,290C,322C,593C,616C,720C,791C,1021C,1076C 'faildat':765C,769C 'fals':532C,860C,948C,957C,964C,971C,978C,1005C,1010C,1069C 'final':103C 'first':78C,231C 'fixtur':671C 'fn':642C 'fn.isweekend':464C,726C,742C,795C 'forecast':388C 'friday':980C 'function':94C,254C,503C,604C,646C,660C,691C,725C,727C,737C,764C,796C,867C 'generic':55B 'getday':1044C 'gist':1097C,1111C 'gist.github.com':1099C,1113C 'gist.github.com/d379c952af637aeb0e51)':1098C 'gist.github.com/eee65f0f1d3b82b53ed9)':1112C 'github.com':23B,1096C,1122C,1126C,1130C 'github.com/jquery/qunit)':1121C 'github.com/jquery/qunit/raw/master/qunit/qunit.css)':1129C 'github.com/jquery/qunit/raw/master/qunit/qunit.js)':1125C 'github.com/jquery/qunit](https://github.com/jquery/qunit)':22B 'given':178C 'global':518C,602C 'go':151C 'h3':415C 'helper':634C,1086C,1091C 'html':418C,542C 'improv':91C 'inarray':883C,889C,1056C,1064C 'increas':347C 'increment':391C 'input':1085C,1090C 'instead':421C 'integralpath.blogs.com':1147C 'integralpath.blogs.com/thinkingoutloud/2005/09/principles_of_t.html)':1146C 'introduc':125C 'invalid':775C,779C,818C,836C,841C,1074C 'isfriday':977C 'ismonday':947C 'issaturday':984C 'issunday':938C 'isthursday':970C 'istodayaweekend':991C,1004C 'istuesday':956C 'iswednesday':963C 'javascript':7A,33B,56B,442C 'javascriptcompressor.com':1154C,1156C 'javascriptcompressor.com/)':1155C 'jqueri':14B,41B,426C,494C,644C,743C 'js':1124C 'jsfiddl':560C,585C 'jsfiddle.net':587C,1101C,1106C 'jsfiddle.net/pixelhandler/nwpd5/)':586C,1105C 'jslint.com':1150C,1152C 'jslint.com/)':1151C 'language/terminology':167C 'lather':349C 'least':191C 'let':553C 'lift':371C,378C 'like':552C 'link':1093C 'logic':853C,913C 'look':551C 'make':424C 'marketforc':359C 'markup':547C 'mayb':352C 'mental':339C 'method':204C,225C,433C,462C,719C 'model':340C 'modul':595C,638C,639C,669C 'monday':952C 'much':146C 'n':876C,880C,884C,886C,890C 'namesapc':630C 'namespac':594C,596C,610C,614C,627C 'need':508C 'new':93C,106C,288C,406C,648C,803C 'next':242C 'note':1132C 'notstrictequ':705C,715C,834C,844C 'number':1046C 'object':476C,490C,524C,688C,755C,761C,785C,812C,1038C 'object.prototype.tostring.call':810C,1036C 'ok':607C 'one':150C,289C,364C 'opt':731C,800C,805C 'option':728C,734C,797C,808C 'opts.date':811C,1037C 'opts.date.getday':1054C 'opts.dateok':814C 'opts.n':1053C,1057C,1065C 'pass':99C,245C,323C,631C,748C,821C,847C,914C 'pattern':176C 'plugin':48B,427C,460C,465C,498C,528C,708C,718C,723C,739C,746C,776C,837C,856C 'power':28B 'present':612C,1109C,1158C 'process':66C,275C 'produc':96C 'product':348C 'programm':337C 'project':42B,172C 'qunit':9A,16B,25B,215C,539C,543C,1115C 'real':207C 'receiv':327C 'ref':111C 'refactor':104C,305C,326C 'reinforc':335C 'reli':68C 'repeat':308C,314C,351C 'repetit':71C 'requir':488C 'result':250C,331C,564C,569C 'return':504C,529C,711C,735C,777C,817C,840C,857C,1045C,1060C,1068C,1070C,1073C 'reus':438C 'revenu':396C 'rins':350C 'rpv':370C 'run':281C,296C,673C 'sat':471C 'saturday':486C,987C 'script':257C 'see':285C,301C,478C,555C,567C,580C 'sentenc':208C 'setup':583C,645C,694C,870C 'short':75C,252C 'site':441C 'skeleton':724C,747C 'skript.co':1161C 'skript.co/talks/qunit/)':1160C 'slide':1159C 'softwar':64C 'sourc':1110C 'stage':334C 'standard':110C 'start':136C,200C,540C 'step':316C 'sting':778C 'stori':454C 'succeed':303C 'suit':35B 'sunday':487C,943C 'tab':565C 'task':354C 'tdd':5A,62C,221C,274C,1133C 'teardown':659C 'tell':400C 'test':2A,12B,34B,44B,53B,59C,85C,101C,139C,144C,148C,156C,163C,182C,203C,218C,233C,247C,256C,266C,279C,283C,299C,310C,319C,330C,467C,513C,544C,546C,568C,573C,584C,591C,598C,615C,676C,679C,683C,716C,753C,756C,790C,823C,825C,846C,851C,854C,898C,905C,911C,917C,926C,933C,1018C 'test-driven':1A,58C,217C,309C 'testplugindefault':698C,700C,706C 'testpluginfals':766C,774C 'testplugintru':827C,835C 'text':1087C,1092C 'think':383C 'this.each':736C 'thursday':973C 'time':397C 'tip':561C 'today':405C,994C,999C,1007C,1012C 'today.getday':409C,411C 'todo':463C 'tool':1149C 'traffic':362C 'true':530C,815C,858C,939C,985C,992C,997C,1061C 'true/false':505C 'tuesday':959C 'type':525C,689C,762C 'understand':160C,173C 'unit':265C 'use':6A,15B,32B,38B,166C,174C,214C,403C,451C,500C,624C,643C,693C,869C,1043C 'user':457C 'util':224C,253C,432C,461C,502C,641C 'valu':901C,908C,929C,936C 'var':404C,622C,697C,729C,798C,875C 'variabl':519C,603C 'w':541C,670C 'wednesday':966C 'week':538C,866C,1052C 'weekday':877C,888C,903C,907C,931C,935C,954C,961C,968C,975C,982C,989C,1015C,1026C,1066C 'weekend':227C,361C,484C,878C,882C,896C,900C,924C,928C,945C,996C,1002C,1009C,1032C,1042C,1058C,1082C 'wikipedia':1134C 'window.dr':608C,621C 'word':365C 'work':792C 'worth':356C,386C 'write':11B,81C,202C,232C,292C,449C,589C,849C,909C,915C,1016C 'xxx':392C 'xxxx':419C,420C 'yes':940C,949C,958C,965C,972C,979C,986C	published	pixelhandler
67	# Project Wars\n\nI worked at an agency on a complex single page application in JavaScript that was a product finder. We built the API so that is was discoverable, parameters came in and choices came out in JSON with URLs for the next available choices or actions. After a few steps, maybe seven or so, the user would have a narrow set of products that met the search criteria and geographic availability. The application loaded JSON files to configure the steps it took to walk the user through the various product finders. The functional spec was in the range of 350 pages, and the project was a MICROSITE. The end result was an order page. There shoppers could begin the purchase process and customize the products' size, to fit the shoppers custom measurements. How did we do this? We used Backbone.js and built all of our application logic on top of it. Just prior to this project I had developed a front-end framework on top of Backbone that did have many similarities to Ember.js. It supported building modular packages with AMD using Require.js. Those were the days of the Wild West, when we rolled our own JavaScript front-end frameworks. Hallelujah, those days are gone. I say, "Good riddance."\n\nJavaScript frameworks provide a way to build; and some will dive into the data layer, while others leave that to the developer. I have to say that, the data side of building single-page (JavaScript) applications is still a lot like that last paragraph, in the Wild West. Building on top of something that mostly works but doesn't answer the direct needs of my application. Basically, building with an alpha/beta library and chasing a solution.\n\n\n## The Awakening\n\nSo after about two years, full-time, of focusing on building applications with Ember.js and doing battle with complex data needs (lots of read/write, multiple users in an app, big data, legacy data, magic data, think of a gem, and simple data)… I am now extremely thirsty for a common specification that works well for applications speaking JSON over HTTP. I'd like a specification, or format, that works really well in a JavaScript application and allows for data services to have the flexibility and freedom to own the data needs entirely. Those data services simply give a representation of resources as the client requests them - as well as provide operations to those resources' attributes, state and relationships via REST. Specifically, I would like the client to have no requirement to duplicate the ORM (Object-relational mapping) or to mimic how the backend maps relations (foreign keys). Ideally, services that provide a solid format for JSON data, are discoverable (provide URLs), and have a pattern for operating on the resources, etc. And of course, without the need to battle over data contracts between client and server (teams).\n\n\n## The Menace\n\nSo back to my history. After building the antithesis of a microsite, I worked on an email application built with Ember. We built an Ember app inside an Ember app for editing an HTML document (email template). We broke down an HTML document and turned it into editable views; then persisted the changed document so that it is ready to merge with data for mail delivery. Ember Data was in its first iteration and had a concept of a transactions, and still needed to define how to work with polymorphic data. The team was an early adopter of Ember.js, pre 1.x. The team fought with bugs in basically alpha software for data persistence but still managed to ship a beta product. Well, it turned out that that the team was not the right fit for me; and I moved on. However, I was able to adopt Ember.js early, before it hit a stable 1.0 release, this made me happy.\n\n\n## Attack at the Agency\n\nNext, I took a position about 300 miles closer to home but still about 60 miles away. I do like working with Ember.js so tried to continue that effort. This was a small team, who previously built apps with SproutCore, the predecessor to Ember.js. The data relationships were complex, the need was for lots of reading and writing, as well as dealing with sparse record collections. There was a pattern of caching related data to be used in a list view by requesting an incomplete representations of a resource (for large lists) and reloading some records to refresh for detail views. We managed the state of resources in both the client and the server. We embedded snippets of data across various documents, managed the relationships of the data on the client, and we wished for id-only records (to deal with the sparse collections). We persisted collections of related records in batches, and disabled editing during the transaction.\n\nThere was the need to overhaul Ember Data and then it happened. The library abandoned transactions and embedded records. We tried to press forward anyway, our data needs did not change, the library changed its feature set. Perhaps the ambition needed to be simplified; we had dreams of a super ambitions data solution. So, we hacked up our feature set on top of the library we chose, Ember Data. We thought that this was the happy path for us.\n\nAlso we tried out a move to Ember Model, perhaps a lightweight solution would be sufficient. JSONPatch became appealing to us, as we fought with data inconsistencies from throwing around complete representations of objects asynchronously for both attribute changes and relationship changes. We spent about six months on a fork of an adapter/serializer combination that fixed the embedded records solution for Ember Data. It was a happy day when that work merged back into Ember Data. A sweet win for us and others who had similar needs for embedding records. Then the contract ended, another transition for me - I really wanted to work closer to home. (I have a big family.)\n\n\n## Big Data Strikes Back\n\nNext, I moved to another early adopter of Ember.js, to work on ambitions applications utilizing big data. The apps consumed a big data set. Some data was input via file uploads, from UI input, and other data was changed/added by another source in the cloud platform - all of the changes require the app to be refreshed. This was another complex data solution using an early version of Ember Data which required a server solution to re-format the data accordingly to the client (data) conventions. Next, we built newer and smaller apps, yet as a collection of tools still ambitions in scope. We abandoned Ember Data for this work and built custom adapters to connect with our data services. With a big set of data… endpoints vary across the platform. Some of our requests require two or more requests to compose the resources in order to hand them off to the client application. We built "thick" client apps that work with many endpoints to capture slices of the large data set.\n\nFrom these examples, I can see why there is not a single solution for everyone's use cases for data persistence. And why anyone working on a common data persistence solution is required to build a complex abstraction to address so many options to communication JSON resources via HTTP.\n\n\n## The Return to the Agency\n\nStrange as it may seem, I actually went back to my old job. A friend opened up his seat making a way toward the flexibility I needed with my family and a stretch goal in my career in accepting a management role. I thought I'd never do that. On the microsite project I had a lead role. During that season I hardly wrote any code and ended up frustrated, the deadlines were nutty and the tech debt was steep. I really do like to build stuff, especially web applications. Now, I'm back in LA. I work remote most of the time and lead a small team. We have a handful of Ember apps that have lived for one or two years. These apps use a core library, so there are many shared components/views/controllers for UI needs, including managing large collections of resources. I am really happy :)\n\nWe still have a lot of work ahead of us. The apps we work on were sort of built in start-up mode. We need automated tests, this will help us stabilize change - and some refactoring. We'd like to move to [Ember CLI] quickly. We now have Ember 2.0-beta to embrace; so basically there are huge shifts that we need to make on our platform. To move to the new "Ember Way" because Ember 1.x is so last year. By the way, if you thought there was such a thing as an Ember Way, I'm sorry to disappoint you there is no such thing. The Web platform is moving fast these days and Ember.js does strive to skate to where the puck is going. So yeah change happens, well it happens a lot, that's the Ember Way. We usually ride canary or beta versions of Ember then when an app ships track to the current release. Over the past few years our apps made it all the way to 1.10. I've seen others that have not made it that far.\n\n[Ember CLI]: http://ember-cli.com\n\n\n## More Movie Puns\n\nI have seen a few big Ember apps frozen (I know what you're thinking, "Let it go"). The freeze was due to loads of features that integrate with lots of data (while making big bets on Ember Data). When Ember Data was revamped the first time, there became too much effort to revamp the entire app and freeze shipping user stories. Perhaps it was just unfortunate timing for the product backlog. Just because the library changed, doesn't mean the business was ready to freeze the backlog while overhauling the app's data persistence solution. (To the product owners it sounds a lot like asking "Do you want to build a snowman?").\n\nMaybe my experience is unique; however, I've heard similar stories where a major refactor had to take place, and was required to continue feature development. That makes sense, when the framework/library changes significantly, upgrades should be planned accordingly. Perhaps that is an early adoption tax, par for the course. Also, every project has an end of life; that's the perspective of the long game. One of my business coaches told me, "You always need an exit strategy". So I try to plan for how an app will end and make trade offs accordingly. At times it's ok not to track the current framework release and at other times that would kill the product.\n\n\n## The Good Bad and the Ugly\n\nExperience teaches me to learn from the good parts… What would my ideal data persistence solution look like? Is there actually one? Or, does the journey always depend on the project requirements? That may be true. Most projects are not done perfectly the first time, maybe the second, or perhaps the third. The Ember Route had three big overhauls and so did the view layer.\n\nOver the past month a few quotes have captured my attention…\n\n“Don't try to be the smartest developer. Instead, be the most tenacious one.  Be the one who doesn't give up until the problem is solved.” –Dana Jones @danabrit  [Jun 4, 2015](https://twitter.com/danabrit/status/606563836007571457)\n\n“Anything worth doing is worth doing poorly until you learn to do it well.” –Zig Ziglar\n\n“Success is when people who don't understand your tool are using it – so you have to plan for that” –@stubbornella [#theMixinJune2015](https://twitter.com/chriseppstein/status/606297381529747456)\n\nAs I have considered the idea of starting from scratch I collected a list of what I think would be needed for my current projects and future work.\n\n## The Bucket List\n\t\nHere's a few things that I imagine would be included in my ideal persistence solution…\n\n- My API server defines the resources for my client application(s) to consume\n- My client application(s) understand & treat resources as first class, having no need to transform the resource to yet another representation\n- Wait, no transformation? Yeah, unless I want to, I do not want to be forced to.\n- Only define my ORM concerns in one place on the server, not two (again on the client)\n- I expect that less code means less bugs (I've seen a lot of bugs in data persistence layers)\n- A thin codebase with nomenclature that is shared with the API format for a resource and it's operations\n- During introspection of the representation of a resource within the client app, the object should have the same structure and nomenclature that the server defines for the resource\n- My client app(s) should define the caching concerns for the requests resource(s) and have the option to honor the cache headers; 304's are fine. HTTP has solved caching already\n- Optionally minimize redundant requests when making a query for a group of related resources\n- Perhaps the caching strategy can be a mixin that works together with the resources which have properties to indicate when they are expired\n- I want a service object that is injected wherever I interact with the resources, and a singleton for each service that has an event bus to communicate with all the resource instances of the same type. For example to make updates as close to real time as possible by PATCHing the resource\n- I want to define the resource's states, some common states will work like `isDirty`\n- I want the resource to know when it has changed and send that event to the service\n- I need a simple way to compute properties from the resource attributes to meet the needs of the client application\n- I want relationships between resources to be defined in a simple way and for the resources to know how to operate on its relations, like adding/removing relations as independent actions, totally separate from persisting the attributes of the resource itself\n- I'd like a store service that is a facade to all the services that are used by the various resources, one point of service to call methods for fetching, crud operations, as well as operations on the resource's relation(s)\n- I'd like each service to house it's own cache for it's type (entity) as well as track any meta data associated with the collection or per request\n- The resources should keep track of their own meta data, relationships and links. The service(s) should not need to construct URLs for all the operations on a resource\n- Oh, and I want URLs to be first class, The API server sends the links that the client should use\n- Perhaps I can abandon XHR and go with [window.fetch](http://davidwalsh.name/fetch)\n\n## Back to the Present\n\nNow let's fast forward to today… Meet [JSON API](http://jsonapi.org), version 1.0 - A new specification. “Your anti-bikeshedding weapon.” Wow, two years of hammering out a specification for representing objects in JSON over HTTP (REST). The spec looks solid, I've taken it for a test drive over the last year - kicking the tires and testing out the spec as it has taken shape. I'm very impressed and happy with this specification. I imagine that it should last for some time, perhaps years to come. Maybe I'll bring my current projects up to the spec and later build out new application servers using a different language but use the same JSON API specification. Sounds promising, doesn't it!\n\nBut wait, aren’t you supposed to use  Ember Data? My suggestion is that you don’t let someone decide for you. Seek a solution that fits the problem domain of your project needs. That might be Ember Data, for me it is not; at lease not at 1.x or 2.x. Maybe the 3rd time will be the charm. What I'm interested in is a simple solution that is written from the ground up to fit the [format of the JSON API 1.0 Specification](http://jsonapi.org/format/), period. So, I can just get straight to work… shipping user stories (doing less bug hunting in the data library).\n\nI've convinced myself to build a persistence solution, even though there is one that has existed for a couple years and has had about 300 contributors, including myself. And even though that solution has hit a (stable) release tag of v1.13, while also tagged for 2.0-beta on the same day. Seriously I'm not bitter or anything, [Ember Data](https://github.com/emberjs/data) is an excellent library. But what I've come to realize is that Ember Data does not provide the solution I am looking for. Ember Data provides a great adapter/serializer pattern to connect any type of data service to your Ember app. Ember Data thinks like an active record ORM; at least in nomenclature; `belongsTo` and `hasMany` remind me that Ember Data <u>needs</u> foreign keys as a primary way to connect relationships vs. URLs. I'm a web guy, I like URLs. URLs are the main selling point and reason I adopted Ember.js in the first place. The [Ember.Router](http://guides.emberjs.com/v1.12.0/routing/) has great URL support from the start.\n\n\n## A Battle Plan Emerges\n\nSo here’s my plan… Do <u>only</u> what the server's specification defines for it's resources, and do <u>only</u> that. To simplify the mental model  for the client(s) that collaborate with the resources via server app(s). To fire the middleman, reduce the abstractions, reduce barriers for developers to ramp up on a project, minimize the code base which is responsible for the data layer. To build a direct path from point A to point B (client/server). I will use a solution that is direct and concise, with a strong set of features, proven solutions, and reserve the freedom add in my needs for caching and acting on state/events that make sense to the application's needs.\n\nActually this is not that hard, [Ember.js] has great primitives for some very advanced behaviors, like the [Ember.PromiseProxyMixin], [Ember.Evented], [Ember.Service] and [Ember.Object] prototypes. It would be hard if I did not have a few years of experience with the framework. With that experience I find a lot of power in using the Ember.js framework. [Dependency injection] is easy, the concept of services are first class, the testing story is excellent now, the [application.container] is my friend I can create factories for my resources and [register] singletons for my services.\n\n[Ember.Object]: http://guides.emberjs.com/v1.12.0/object-model/classes-and-instances/\n[Ember.Evented]: http://emberjs.com/api/classes/Ember.Evented.html\n[Ember.PromiseProxyMixin]: http://emberjs.com/api/classes/Ember.PromiseProxyMixin.html\n[Ember.Service]: http://emberjs.com/api/classes/Ember.Service.html\n[Dependency injection]: http://guides.emberjs.com/v1.12.0/understanding-ember/dependency-injection-and-service-lookup/\n[application.container]: http://emberjs.com/api/classes/Ember.Application.html#property_container\n[register]: http://emberjs.com/api/classes/Ember.Application.html#method_register\n\nSo now I am taking the posture of a Samurai Warrior –  “dying before going into battle.” The warrior enters combat event without fear of death,  acceptance of his own death in advance. I tell myself, “Don't become like water my friend, instead become a dead man walking”.   I will unconditionally commit to success in battle  without worrying about survival. What I am about to describe is my tactical response to adopting the new JSON API specification, from the ground up. Yes, going forward, I will roll my own data persistence library – because I can and it's no longer hard to do. If the project dies so be it.\n\n\n## A Man Can Change His Destiny\n\n“The perfect blossom is a rare thing. You could spend your life looking for one, and it would not be a wasted life.” –Katsumoto (The Last Samurai)\n\nWell I don't believe there is a perfect data persistence solution and won't suggest that I can create a perfect solution either. But, I will pursue it.\n\n\n## The Nitty Gritty\n\nLet's just assume that I could create an elegant solution. How would I do that using Ember.js?\n\nFirst I'd get intimate with the [JSON API format](http://jsonapi.org/format/) Then I'd create a [Resource Object] as my base model prototype in an Ember app. I will begin by building an [Ember CLI addon] for the `Resource` and whatever else I need.\n\n[Resource Object]: http://jsonapi.org/format/#document-resource-objects\n[Ember CLI addon]: http://www.ember-cli.com/#developing-addons-and-blueprints\n\n### A Resource Object\n\nA Resource (or 'model') can resemble the structure of an object as defined by the JSON API 1.0 Specification. The `Resource` prototype creates hashes for: `attributes`, `relationships`, `links`, `meta`, and has attributes: `id` and `type`. The properties and structure of a model created by extending `Resource` closely follow the objects defined by the JSON API specification.\n\nIt would be used like so:\n\n    export default Resource.extend({\n      type: 'post',\n      service: Ember.inject.service('posts'),\n\n      title: attr(),\n      date: attr(),\n      excerpt: attr(),\n      body: attr(),\n      slug: attr(),\n\n      author: hasOne('author'),\n      comments: hasMany('comments')\n    });\n\nI want helpers to `get` and `set` the `attributes`, I'll use an `attr()` helper method to set that up. That method can track changes as properties are set and manage the current/previous attributes so I can know whether the instance has changed attributes. And by injecting a service I can emit events like `attributeChanged` so the service can persist the change in as close to real time as possible.\n\nThe Ember CLI addon can define `generators` so I can scaffold the prototypes for my resources, like the above example. I can just use `ember generate resource entityName`\n\nThe resource can have `addRelationship` and `removeRelationship` methods to compose the relationships that the resource is associated with. The `hasOne` and `hasMany` helpers can setup the computed properties that utilize the [Ember.PromiseProxyMixin] to find the related resource(s) based on the URLs in the resource's [relationships] object which contains [links] object(s)\n\n[relationships]: http://jsonapi.org/format/#document-resource-object-relationships\n[links]: http://jsonapi.org/format/#document-links\n\nThe resource can have an `isCacheExpired` property so that if the service keeps a reference or `cache` of it, the 'staleness' of the data can be found out.\n\nAnd using the `attributes` hash of the `resource` instance I can compute properties from it for using in my templates that are read-only like so:\n\n    export default Resource.extend({\n      type: 'comment',\n      service: Ember.inject.service('comments'),\n\n      body: attr(),\n\n      date: Ember.computed('attributes', {\n        get() {\n          return this.get('attributes.created-at');\n        }\n      }).readOnly(),\n\n      commenter: hasOne('commenter'),\n      post: hasOne('post')\n    });\n\nA new resource may be generated in a route model hook like so:\n\n    model() {\n      return this.container.lookup('model:posts').create({\n        isNew: true,\n        attributes: { date: new Date() }\n      });\n    }\n\nNotice that the `attributes` hash is used to set initial properties. The computed properties created with the `attr()` helper are used as accessors to get/set rather than to create. That's how the resource was represented in JSON from the server anyway, resource attributes belong to the `attributes` object, I'll just keep it like that for the sake of simplicity.\n\nNow that I have a base model or `Resource` with helpers to compose the properties that are meant to be used in the user interface (given to the template) I can setup an `Adapter` to fetch resources from a API server.\n\n\n### An Adapter Object\n\nThis should be a singleton instance for each type of entity (or resource) that can be fetched and/or persisted.\n\nGiven that an Ember.js app may be hosted as a stand-alone client application and may choose to use use a proxy to bring an API server into it's own domain. It's likely that I may need a couple hooks manipulate the URL's in the `relationships` object of a resource - since it's required in a browser to work within the same domain. Unless you really want to use CORs (cross-origin resource sharing).\n\nImagine I have a `ApplicationAdapter` that is already setup to work with my JSON API server, I could use something like this:\n\n    import ApplicationAdapter from './application';\n    import config from '../config/environment';\n\n    export default ApplicationAdapter.extend({\n      type: 'post',\n\n      url: config.APP.API_PATH + '/posts',\n\n      fetchUrl: function(url) {\n        const proxy = config.APP.API_HOST_PROXY;\n        const host = config.APP.API_HOST;\n        if (proxy && host) {\n          url = url.replace(proxy, host);\n        }\n        return url;\n      }\n    });\n\nWell I need to define at least one URL for the service, from there I can use the relationships' links' objects.\n\nPerhaps the methods my `Adapter` needs are: `find`, `findOne`, `findQuery`, `findRelated`, `fetch`, `createResource`, `deleteResource`, `updateResource`, `patchRelationship`, and `cacheResource`. And a couple properties: `type` and `url`. That should make for solid interface to speak JSON over HTTP.\n\nNow that I have an `Adapter` I'll need a `Serializer` object to serialize/deserialize resources, basically I need to make `Resource` instances after I `fetch` and will need to serialize changed attributes to patch the resource to meet my goal of persisting changes as close to real time as possible.\n\n\n### A Serializer Object\n\n\nWell I think since I've followed a solid specification, JSON API, the needs for this prototype will be simple.\n\nPerhaps the interface will include methods to: `deserialize`, `deserializeIncluded`, `deserializeResource`, `deserializeResources`, `serialize`, `serializeChanged`, `serializeResource`.\n\nI may use a private method for how the resources are created perhaps like:\n\n    /**\n      Create a Resource from a JSON API Resource Object\n      See <http://jsonapi.org/format/#document-resource-objects>\n      @private\n      @method _createResourceInstance\n      @param {Object} json\n      @return {Resource} instance\n    */\n    _createResourceInstance(json) {\n      const factoryName = 'model:' + json.type;\n      json.meta = json.meta || {};\n      return this.container.lookupFactory(factoryName).create({\n        'type': json.type,\n        'id': json.id,\n        'attributes': json.attributes,\n        'relationships': json.relationships,\n        'links': json.links,\n        'meta': json.meta\n      });\n    }\n\nLike I said earlier the `Resource` should closely resemble the specification. No need to change it around and confuse things for developers. \n\nWell this may be different that what people are used to, but the JSON API spec is sweet - so going with that. Notice that the properties created with the `attr()` helper are not used during `.create()` all the attributes belong in the `attributes` object, period; that sould be protected, that's how the spec defines attributes.\n\nUsing an initializer, I can register this factory in the application container and inject a singleton instance as dependency into the `Adapter` singleton. Oh, did I mention that I'd register and inject the `Adapter` factory? Yeah these two work in tandem.\n\nPlease be patient my friend, I'll get to all the details about initialization soon. I think I'm still missing a couple pieces, like a strategy for caching.\n\n\n### A Cache Mixin\n\nWell now this is a can of worms. I thought HTTP and browsers already solved this problem. Yes, and now is my opportunity to get out of the business of managing a distributed cache by blindly pushing everything into memory and dancing around that.\n\nManaging a distributed cache requires flexibility. When a client application receives a representation of a `resource` from a server, the client should be able to expire that cached object (in the browser application) based on the server's response headers; or by whatever means the developer chooses.\n\nPerhaps the caching plan for a service is simply creating a `ServiceCacheMixin` that can be easily customized and has some basic defaults. I recall that Akamai defaults to about 7 minutes, or at least when I used it that was our default. How about that, I'll setup a property for the `Resource` prototype with an expires time e.g. `cacheDuration` and a computed boolean for `isCacheExpired`.\n\nThe cache mixin will need a property to hold it's contents, e.g. `cache` and some methods like: `cacheControl`, `cacheData`, `cacheLookup`, `cacheMeta`, `cacheResource`, `cacheUpdate`. \n\nThe `cacheControl` method can track the response headers from the request and mark some timestamps like the server time and the client time, for our simple expire in X minutes approach.\n\nWhy would I want to cache the data in memory anyway? I mentioned that was a solved problem, no?\n\nI want to fetch a resource that `hasMany` other resources and in my template will reference that like `resource.comments` so that the related resources are fetched (asynchronously and on demand). Those related resources may have a common relation, let's call it a *commenter*. For example a *post* has a bunch of *comments*, cause you know it was popular. An there was some dialog so a few people commented a fews times in the discussion. Well I don't want to fetch those same *commenters* over and over do I? I don't mind the option to cache, but also like the option not to. To cache or not to cache that is a question for the server and perhaps the developer. That's where the default expires time comes in handy. As the developer I can set the rules for how long a resource is temporarily cached in memory and when I just want to trust the cache headers and lean on 304 responses.\n\nIf the caching strategy is simply a mixin it's a great hook to do something more advanced like using the `cacheData`, `cacheMeta` and `cacheLookup` to keep offline copies in localStorage if I want to be 'offline ready'.\n\nHum, so now that I have an adapter, a serializer and a cache mixin it seems like that would be a good recipe for a `Service` object to manage the combined solution for data persistence. Perhaps so…\n\n\n### A Service Object\n\nA service for a resource can work to persist an instance of that entity using crud operations with HTTP verbs: CREATE, PATCH, GET, DELETE. The service can be named after the nouns of my JSON API server. For example a post resource (entity) may be requested using GET `/api/v1/posts` or GET `/api/v1/posts/1`. A `service` instance can be a singleton that is registered on my application's container using a pluralized name for the entity, e.g. 'posts'. Again we'll need to use an initializer to put this service into play and may also inject the service at will, for example on the resource prototypes using `Ember.inject.service('posts')` \n\nPerhaps `Service` objects are "evented" to facilitate close to real-time updates.\n\nWhen an `attr` is `set` and the value has changed the resource may emit an event for `attributeChanged` on the resource's `service` object.  The adapter can listen to this event and respond with a call to `updateResource` which in turn sends a PATCH request with only the data for the changed attributes (a payload created by the serializer's `serializeChanged` method).\n\nThat would be a good way for the collaboraters, the fantastic four (adapter, serializer, cache and resources), to form as a `service` to act out the requirements for the application's data persistence needs.\n\nA `PostsService` object may be as simple as this:\n\n    import Adapter from '../adapters/post';\n    import ServiceCache from '../mixins/service-cache';\n\n    Adapter.reopenClass({ isServiceFactory: true });\n\n    export default Adapter.extend(ServiceCache);\n\nWith the injection of this service into the `Resource` instances there is an event bus for these collaborators to work.\n\nNow that these four prototypes have taken shape let's get into the business of dependency injection using an initializer.\n\n\n### The Resource Blueprint\n\nSince I am building an Ember CLI addon for this data persistence solution I can create [blueprints] for all the things.\n\n[blueprints]: http://www.ember-cli.com/#developing-addons-and-blueprints\n\nThe `resource` blueprint is a generator for an initializer, a resource, an adapter, a serializer, and a service - all created by using the command `ember generate resource post`\n\nSo here is what the initializer can look like to set all these objects into motion:\n\n    import Service from '../services/posts';\n    import Model from '../models/post';\n    import Adapter from '../adapters/post';\n    import Serializer from '../serializers/post';\n\n    export function initialize(container, application) {\n      const adapter = 'service:posts-adapter';\n      const serializer = 'service:posts-serializer';\n      const service = 'service:posts';\n      const model = 'model:posts';\n\n      application.register(model, Model, { instantiate: false });\n      application.register(service, Service);\n      application.register(adapter, Adapter);\n      application.register(serializer, Serializer);\n\n      application.inject(model, 'service', service);\n      application.inject('service:store', 'posts', service);\n      application.inject(service, 'serializer', serializer);\n    }\n\n    export default {\n      name: 'posts-service',\n      after: 'store',\n      initialize: initialize\n    };\n\nDid you notice that, this initializer executes after the `store` initializer, but I did not create a store yet. Oops, I sould do that. Developers like having a `store`. \n\n“Let’s put a smile on that face!” -Heath Ledger’s Joker (The Dark Knight)\n\n\n### The Store Service Object\n\nA `store` service can be injected into the routes. This is similar to how [Ember Data] uses a `store`, but the `resource` should be referenced in the plural form (like my API endpoint), easy peasy.\n\n[Ember Data]: https://github.com/emberjs/data\n\nThe interface for a `store` service can be a simple facade for the services created for each `resource` in the application. I can call the `store` method and pass in the `resource` name, e.g. 'post' which interacts with the 'posts' service for my 'post' `resource`.\n\nAn example `route` hook to find all post resources from the `posts` service:\n\n    import Ember from 'ember';\n\n    export default Ember.Route.extend({\n      model() {\n        return this.store.find('post');\n      }\n    });\n\nThis `Store` object is a facade to the various other `Service` objects in the application. Each service will be injected into the to store service. So it can be a service of services. One interface for all my persistance needs.\n\nIn the example above, the store object can pluralize the type, to lookup the resource's service object, i.e. 'service:posts'.\n\nWait, isn't that how Ember's Route#model hook works anyway? Yeah basically, `this.store.find('post', '1')` or I can use a query object: `this.store.find('post', {sort: 'desc', filter: 'blah'})`;\n\nI'm not sure if you think this solution would be a lot of work or not. I would work toward create a solid test suite as well. Perhaps that can be a follow up post - *on testing a data persistence solution.*  Now that Ember CLI makes unit testing simple and easy to embrace testing should be fairly straight forward to achieve. Well in addition to the tests there is a dummy application that can be built as demo; even utilized for my manual testing needs - like using a proxy to a live JSON API server. That's what I would do, test all the things, both automated unit tests and manual using an app.\n\n**(Spoiler alert)** This app is running with a JSON API server and this data persistence solution – so here is your demo and proof of concept.\n\n\n## Take Aways\n\nI recommend getting to know the JSON API 1.0 Spec. I propose that your data persistence solution can be a direct line between your client and server while still utilizing a robust feature set which is inline to accompany the way your application server defines and operates on resources.\n\nWhether you adopt the JSON API 1.0 spec or not… this example (addon) can be a template for creating a data persistence solution for your Ember.js application – which models the domain of your API server without any extra abstraction.\n\nOne of the primary drivers for keeping my data layer thin is this concept **e = mc<sup>2</sup>**, that is **Errors = (More Code)<sup>2</sup>**. I'd like less code and only code that fits my use cases.\n\n#### Start Today\n\nI hope you caught on, in this post I used a verb tense as if I will need to build out this solution. But actually, I already have. Here is a review on [emberobserver.com](http://emberobserver.com/addons/ember-jsonapi-resources)\n\n- [The README](https://github.com/pixelhandler/ember-jsonapi-resources/blob/master/README.md)\n- [Demo App](https://github.com/pixelhandler/jr-test) (this blog is also a demo of using the solutions linked below)\n- [Developer's Guide](https://github.com/pixelhandler/ember-jsonapi-resources/wiki)\n- [Code Documentation](http://pixelhandler.github.io/ember-jsonapi-resources/docs/)\n- [Travis builds](https://travis-ci.org/pixelhandler/ember-jsonapi-resources/builds)\n\n#### JSON API Implementations\n\n- [JSON API implementations](http://jsonapi.org/implementations/)\n- Ember CLI Addon - [Ember JSONAPI Resources](https://github.com/pixelhandler/ember-jsonapi-resources)\n- Ruby gem - [JSONAPI::Resources](https://github.com/cerebris/jsonapi-resources)\n\n[Ember.js]: http://emberjs.com\n	This post fits well within the purpose of this site, my web log. What follows is my personal history (changelog) of battling data persistence in JavaScript applications built using the [Ember.js](http://emberjs.com) framework. [I've Been Everywhere](http://www.lyrics.com/ive-been-everywhere-lyrics-johnny-cash.html), by Johnny Cash, is a song that rings true to my journey to find a data persistence solution that I think fits well within a complex browser application. I'd like a data persistence library that does a great job reading and writing data, as close to real time as possible (without data collisions). A solution that handles data relationships well and makes it simple and painless. With a model prototype (class) that closely mimics the JSON payload and is flexible to live as a complete representation of an object or an incomplete representation. Which uses a JSON format that is discoverable and self documenting. I've tried plain old AJAX with REST, Ember Data, Ember Model, Ember with Orbit.js using a Web Socket source. And on the back end… active model serializers in Rails, rolling out a JSON API with Node.js and supporting [JSONPatch](http://jsonpatch.com). I feel like "I've had my share, man, I've been everywhere". This is a story of my battle with the data layer in the apps I've worked on over the past three years.\n\nLet's roll back the clock to three years ago…	my-battle-with-data-persistence-in-ember-apps	My Battle with Data Persistence in Ember Apps	2015-06-20	2015-06-20 07:13:50.474005	2016-01-18 06:51:19.041037	1	'/#developing-addons-and-blueprints':3620C,5374C '/adapters/post':5295C,5430C '/addons/ember-jsonapi-resources)':6049C '/api/classes/ember.application.html#method_register':3370C '/api/classes/ember.application.html#property_container':3366C '/api/classes/ember.evented.html':3349C '/api/classes/ember.promiseproxymixin.html':3353C '/api/classes/ember.service.html':3357C '/api/v1/posts':5115C '/api/v1/posts/1':5118C '/application':4202C '/cerebris/jsonapi-resources)':6112C '/chriseppstein/status/606297381529747456)':2194C '/config/environment':4206C '/danabrit/status/606563836007571457)':2153C '/ember-jsonapi-resources/docs/)':6082C '/emberjs/data':5584C '/emberjs/data)':3020C '/fetch)':2720C '/format/#document-links':3868C '/format/#document-resource-object-relationships':3864C '/format/#document-resource-objects':3614C,4407C '/format/)':3576C '/format/),':2936C '/implementations/)':6096C '/ive-been-everywhere-lyrics-johnny-cash.html),':48B '/mixins/service-cache':5299C '/models/post':5426C '/pixelhandler/ember-jsonapi-resources)':6105C '/pixelhandler/ember-jsonapi-resources/blob/master/readme.md)':6054C '/pixelhandler/ember-jsonapi-resources/builds)':6087C '/pixelhandler/ember-jsonapi-resources/wiki)':6077C '/pixelhandler/jr-test)':6059C '/posts':4215C '/serializers/post':5434C '/services/posts':5422C '/v1.12.0/object-model/classes-and-instances/':3345C '/v1.12.0/routing/)':3122C '/v1.12.0/understanding-ember/dependency-injection-and-service-lookup/':3362C '1':823C,1691C,2895C,5731C '1.0':877C,2737C,2932C,3641C,5895C,5942C '1.10':1789C '2':2898C,5991C,5997C '2.0':1664C,3003C '2015':2150C '300':893C,2982C '304':2398C,4987C '350':341C '3rd':2902C '4':2149C '60':901C '7':4713C 'abandon':1060C,1344C,2712C 'abl':867C,4660C 'abstract':1449C,3179C,5974C 'accept':1504C,3396C 'accessor':3996C 'accompani':5925C 'accord':1320C,1958C,2014C 'achiev':5806C 'across':1006C,1368C 'act':3242C,5272C 'action':287C,2577C 'activ':179B,3068C 'actual':1472C,2062C,3253C,6037C 'adapt':1353C,4068C,4077C,4262C,4299C,4540C,4553C,5034C,5212C,5261C,5293C,5387C,5428C,5441C,5445C,5469C,5470C 'adapter.extend':5305C 'adapter.reopenclass':5300C 'adapter/serializer':1177C,3050C 'add':3235C 'adding/removing':2573C 'addit':5809C 'addon':3601C,3617C,3783C,5357C,5948C,6099C 'addrelationship':3812C 'address':1451C 'adopt':819C,869C,1246C,1964C,3112C,3442C,5938C 'advanc':3266C,3402C,5006C 'agenc':247C,886C,1465C 'ago':240B 'ahead':1621C 'ajax':159B 'akamai':4709C 'alert':5861C 'allow':609C 'alon':4110C 'alpha':832C 'alpha/beta':524C 'alreadi':2406C,4184C,4606C,6039C 'also':1125C,1970C,3000C,4923C,5159C,6063C 'alway':1994C,2068C 'ambit':1085C,1096C,1252C,1340C 'amd':423C 'and/or':4096C 'anoth':1219C,1244C,1280C,1298C,2274C 'answer':513C 'anti':2743C 'anti-bikeshed':2742C 'antithesi':731C 'anyon':1435C 'anyth':2154C,3015C 'anyway':1070C,4015C,4815C,5726C 'api':188B,264C,2243C,2338C,2699C,2734C,2840C,2931C,3446C,3572C,3640C,3678C,4074C,4124C,4191C,4358C,4401C,4477C,5102C,5576C,5839C,5869C,5894C,5941C,5969C,6089C,6092C 'app':8A,221B,561C,748C,752C,924C,1258C,1292C,1332C,1398C,1580C,1590C,1625C,1769C,1782C,1814C,1863C,1898C,2007C,2358C,2377C,3062C,3171C,3592C,4102C,5859C,5863C,6056C 'appeal':1143C 'applic':35B,76B,253C,314C,387C,489C,519C,544C,588C,607C,740C,1253C,1393C,1555C,2251C,2257C,2547C,2829C,3250C,4112C,4529C,4646C,4669C,5131C,5278C,5439C,5605C,5668C,5817C,5929C,5962C 'application.container':3325C,3363C 'application.inject':5474C,5478C,5483C 'application.register':5460C,5465C,5468C,5471C 'applicationadapt':4181C,4200C 'applicationadapter.extend':4209C 'approach':4804C 'aren':2849C 'around':1154C,4457C,4635C 'ask':1912C 'associ':2653C,3824C 'assum':3549C 'asynchron':1159C,4850C 'attack':883C 'attent':2117C 'attr':3695C,3697C,3699C,3701C,3703C,3723C,3933C,3991C,4492C,5189C 'attribut':647C,1162C,2539C,2583C,3649C,3655C,3718C,3743C,3753C,3900C,3936C,3970C,3977C,4017C,4021C,4325C,4433C,4501C,4505C,4518C,5239C 'attributechang':3764C,5204C 'attributes.created':3940C 'author':3704C,3706C 'autom':1640C,5852C 'avail':284C,312C 'awaken':531C 'away':903C,5886C 'b':3211C 'back':177B,234B,724C,1197C,1239C,1474C,1559C,2721C 'backbon':409C 'backbone.js':381C 'backend':676C 'backlog':1878C,1894C 'bad':2038C 'barrier':3181C 'base':3193C,3586C,3846C,4040C,4670C 'basic':520C,831C,1669C,4309C,4704C,5728C 'batch':1039C 'battl':2A,30B,214B,549C,712C,3131C,3386C,3426C 'becam':1142C,1855C 'becom':3408C,3414C 'begin':359C,3595C 'behavior':3267C 'believ':3518C 'belong':4018C,4502C 'belongsto':3075C 'bet':1842C 'beta':843C,1665C,1762C,3004C 'big':562C,1234C,1236C,1255C,1261C,1362C,1812C,1841C,2099C 'bikeshed':2744C 'bitter':3013C 'blah':5744C 'blind':4628C 'blog':6061C 'blossom':3489C 'blueprint':5349C,5366C,5371C,5377C 'bodi':3700C,3932C 'boolean':4747C 'bring':2816C,4122C 'broke':761C 'browser':75B,4158C,4605C,4668C 'bucket':2224C 'bug':829C,2316C,2323C,2951C 'build':419C,459C,484C,502C,521C,543C,729C,1446C,1551C,1917C,2826C,2962C,3202C,3597C,5353C,6032C,6084C 'built':36B,262C,383C,741C,745C,923C,1328C,1351C,1395C,1632C,5821C 'bunch':4874C 'bus':2468C,5321C 'busi':1888C,1989C,4621C,5340C 'cach':958C,2382C,2396C,2405C,2423C,2640C,3240C,3885C,4589C,4591C,4626C,4640C,4664C,4686C,4751C,4763C,4810C,4921C,4930C,4934C,4971C,4982C,4991C,5039C,5263C 'cachecontrol':4768C,4775C 'cachedata':4769C,5010C 'cachedur':4743C 'cachelookup':4770C,5013C 'cachemeta':4771C,5011C 'cacheresourc':4275C,4772C 'cacheupd':4773C 'call':2614C,4864C,5222C,5608C 'came':271C,275C 'canari':1760C 'captur':1405C,2115C 'career':1502C 'case':1429C,6010C 'cash':51B 'caught':6016C 'caus':4877C 'chang':775C,1076C,1079C,1163C,1166C,1289C,1647C,1745C,1883C,1952C,2520C,3484C,3734C,3752C,3771C,4324C,4336C,4455C,5196C,5238C 'changed/added':1278C 'changelog':28B 'charm':2907C 'chase':527C 'choic':274C,285C 'choos':4115C,4683C 'chose':1112C 'class':120B,2264C,2697C,3317C 'cli':1658C,1802C,3600C,3616C,3782C,5356C,5790C,6098C 'client':636C,658C,717C,997C,1017C,1323C,1392C,1397C,2250C,2256C,2308C,2357C,2376C,2546C,2706C,3162C,4111C,4645C,4657C,4795C,5911C 'client/server':3212C 'clock':236B 'close':94B,122B,2486C,3670C,3774C,4338C,4448C,5181C 'closer':895C,1228C 'cloud':1284C 'coach':1990C 'code':1531C,2313C,3192C,5996C,6002C,6005C,6078C 'codebas':2330C 'collabor':3165C,5324C 'collaborat':5257C 'collect':952C,1031C,1034C,1336C,1607C,2206C,2656C 'collis':102B 'combat':3390C 'combin':1178C,5057C 'come':2812C,3029C,4953C 'command':5398C 'comment':3707C,3709C,3928C,3931C,3943C,3945C,4867C,4876C,4892C,4908C 'commit':3422C 'common':582C,1439C,2505C,4860C 'communic':1456C,2470C 'complet':134B,1155C 'complex':74B,250C,551C,935C,1299C,1448C 'components/views/controllers':1600C 'compos':1381C,3817C,4047C 'comput':2534C,3834C,3908C,3986C,4746C 'concept':799C,3312C,5884C,5988C 'concern':2296C,2383C 'concis':3222C 'config':4204C 'config.app.api':4213C,4221C,4226C 'configur':319C 'confus':4459C 'connect':1355C,3053C,3091C 'consid':2198C 'const':4219C,4224C,4419C,5440C,5446C,5452C,5456C 'construct':2680C 'consum':1259C,2254C 'contain':3857C,4530C,5133C,5438C 'content':4761C 'continu':913C,1943C 'contract':715C,1217C 'contributor':2983C 'convent':1325C 'convinc':2959C 'copi':5017C 'cor':4171C 'core':1593C 'could':358C,3495C,3552C,4194C 'coupl':2976C,4139C,4278C,4583C 'cours':707C,1969C 'creat':3331C,3533C,3553C,3580C,3646C,3666C,3967C,3988C,4002C,4392C,4395C,4428C,4489C,4498C,4693C,5087C,5242C,5365C,5394C,5512C,5599C,5766C,5954C 'createresourc':4270C 'createresourceinst':4410C,4417C 'criteria':309C 'cross':4173C 'cross-origin':4172C 'crud':2618C,5082C 'current':1774C,2024C,2218C,2818C 'current/previous':3742C 'custom':364C,372C,1352C,4700C 'd':78B,594C,1511C,1652C,2589C,2631C,3566C,3579C,4548C,5999C 'dana':2145C 'danabrit':2147C 'danc':4634C 'dark':5539C 'data':4A,31B,64B,81B,92B,101B,107B,163B,217B,466C,481C,552C,563C,565C,567C,574C,611C,622C,626C,690C,714C,785C,790C,813C,835C,932C,960C,1005C,1014C,1053C,1072C,1097C,1114C,1150C,1187C,1200C,1237C,1256C,1262C,1265C,1276C,1300C,1308C,1319C,1324C,1346C,1358C,1365C,1410C,1431C,1440C,1838C,1845C,1848C,1900C,2055C,2325C,2652C,2669C,2856C,2885C,2955C,3017C,3035C,3046C,3057C,3064C,3082C,3199C,3460C,3523C,3892C,4812C,5060C,5235C,5280C,5360C,5560C,5581C,5784C,5873C,5901C,5956C,5983C 'date':3696C,3934C,3971C,3973C 'davidwalsh.name':2719C 'davidwalsh.name/fetch)':2718C 'day':429C,446C,1192C,1730C,3008C 'dead':3416C 'deadlin':1537C 'deal':948C,1027C 'death':3395C,3400C 'debt':1543C 'decid':2866C 'default':3687C,3925C,4208C,4705C,4710C,4725C,4950C,5304C,5488C,5648C 'defin':807C,2245C,2293C,2371C,2380C,2499C,2555C,3146C,3636C,3674C,3785C,4241C,4517C,5931C 'delet':5090C 'deleteresourc':4271C 'deliveri':788C 'demand':4853C 'demo':5823C,5880C,6055C,6065C 'depend':2069C,3307C,3358C,4537C,5342C 'desc':5742C 'describ':3436C 'deseri':4374C 'deserializeinclud':4375C 'deserializeresourc':4376C,4377C 'destini':3486C 'detail':986C,4572C 'develop':400C,474C,1945C,2125C,3183C,4462C,4682C,4945C,4958C,5521C,6072C 'dialog':4887C 'die':3382C,3477C 'differ':2833C,4467C 'direct':515C,3204C,3220C,5907C 'disabl':1041C 'disappoint':1716C 'discover':150B,269C,692C 'discuss':4898C 'distribut':4625C,4639C 'dive':463C 'document':153B,757C,765C,776C,1008C,6079C 'doesn':511C,1884C,2136C,2844C 'domain':2876C,4130C,4164C,5966C 'done':2082C 'dream':1092C 'drive':2773C 'driver':5979C 'due':1828C 'dummi':5816C 'duplic':664C 'e':5989C 'e.g':4742C,4762C,5141C,5618C 'earli':818C,871C,1245C,1304C,1963C 'earlier':4444C 'easi':3310C,5578C,5796C 'easili':4699C 'edit':754C,770C,1042C 'effort':915C,1858C 'either':3537C 'eleg':3555C 'els':3607C 'email':739C,758C 'embed':1002C,1063C,1182C,1213C 'ember':7A,162B,164B,166B,743C,747C,751C,789C,1052C,1113C,1132C,1186C,1199C,1307C,1345C,1579C,1657C,1663C,1687C,1690C,1710C,1755C,1765C,1801C,1813C,1844C,1847C,2095C,2855C,2884C,3016C,3034C,3045C,3061C,3063C,3081C,3591C,3599C,3615C,3781C,3804C,5355C,5399C,5559C,5580C,5644C,5646C,5720C,5789C,6097C,6100C 'ember-cli.com':1803C 'ember.computed':3935C 'ember.evented':3271C,3346C 'ember.inject.service':3692C,3930C,5172C 'ember.js':39B,416C,546C,821C,870C,909C,930C,1248C,1732C,3113C,3259C,3305C,3563C,4101C,5961C,6113C 'ember.object':3274C,3342C 'ember.promiseproxymixin':3270C,3350C,3839C 'ember.route.extend':5649C 'ember.router':3119C 'ember.service':3272C,3354C 'emberjs.com':40B,3348C,3352C,3356C,3365C,3369C,6114C 'emberjs.com/api/classes/ember.application.html#method_register':3368C 'emberjs.com/api/classes/ember.application.html#property_container':3364C 'emberjs.com/api/classes/ember.evented.html':3347C 'emberjs.com/api/classes/ember.promiseproxymixin.html':3351C 'emberjs.com/api/classes/ember.service.html':3355C 'emberobserver.com':6046C,6048C 'emberobserver.com/addons/ember-jsonapi-resources)':6047C 'embrac':1667C,5798C 'emerg':3133C 'emit':3761C,5200C 'end':178B,350C,404C,442C,1218C,1533C,1975C,2009C 'endpoint':1366C,1403C,5577C 'enter':3389C 'entir':624C,1862C 'entiti':2645C,4089C,5080C,5109C,5140C 'entitynam':3807C 'error':5994C 'especi':1553C 'etc':704C 'even':2966C,2987C,5824C 'event':2467C,2524C,3391C,3762C,5178C,5202C,5217C,5320C 'everi':1971C 'everyon':1426C 'everyth':4630C 'everywher':45B,207B 'exampl':1414C,2481C,3799C,4869C,5105C,5166C,5631C,5696C,5947C 'excel':3023C,3322C 'excerpt':3698C 'execut':5503C 'exist':2973C 'exit':1997C 'expect':2310C 'experi':1922C,2042C,3289C,3295C 'expir':2443C,4662C,4740C,4800C,4951C 'export':3686C,3924C,4207C,5303C,5435C,5487C,5647C 'extend':3668C 'extra':5973C 'extrem':578C 'facad':2597C,5595C,5659C 'face':5533C 'facilit':5180C 'factori':3332C,4526C,4554C 'factorynam':4420C,4427C 'fair':5802C 'fals':5464C 'famili':1235C,1495C 'fantast':5259C 'far':1800C 'fast':1728C,2728C 'fear':3393C 'featur':1081C,1104C,1832C,1944C,3228C,5919C 'feel':196B 'fetch':2617C,4070C,4095C,4269C,4318C,4827C,4849C,4905C 'fetchurl':4216C 'few':4894C 'file':317C,1269C 'filter':5743C 'find':62B,3297C,3841C,4265C,5635C 'finder':260C,332C 'findon':4266C 'findqueri':4267C 'findrel':4268C 'fine':2401C 'fire':3174C 'first':794C,1852C,2085C,2263C,2696C,3116C,3316C,3564C 'fit':11B,70B,369C,857C,2873C,2925C,6007C 'fix':1180C 'flexibl':129B,616C,1490C,4642C 'focus':541C 'follow':23B,3671C,4353C,5778C 'forc':2290C 'foreign':679C,3084C 'fork':1174C 'form':5267C,5573C 'format':147B,599C,687C,1317C,2339C,2927C,3573C 'forward':1069C,2729C,3454C,5804C 'fought':827C,1148C 'found':3895C 'four':5260C,5330C 'framework':41B,405C,443C,454C,2025C,3292C,3306C 'framework/library':1951C 'freedom':618C,3234C 'freez':1826C,1865C,1892C 'friend':1480C,3328C,3412C,4565C 'front':403C,441C 'front-end':402C,440C 'frozen':1815C 'frustrat':1535C 'full':538C 'full-tim':537C 'function':334C,4217C,5436C 'futur':2221C 'game':1985C 'gem':571C,6107C 'generat':3786C,3805C,3954C,5380C,5400C 'geograph':311C 'get':2942C,3567C,3714C,3937C,4568C,4617C,5089C,5114C,5117C,5337C,5889C 'get/set':3998C 'github.com':3019C,5583C,6053C,6058C,6076C,6104C,6111C 'github.com/cerebris/jsonapi-resources)':6110C 'github.com/emberjs/data':5582C 'github.com/emberjs/data)':3018C 'github.com/pixelhandler/ember-jsonapi-resources)':6103C 'github.com/pixelhandler/ember-jsonapi-resources/blob/master/readme.md)':6052C 'github.com/pixelhandler/ember-jsonapi-resources/wiki)':6075C 'github.com/pixelhandler/jr-test)':6057C 'give':629C,2138C 'given':4060C,4098C 'go':1742C,1824C,2715C,3384C,3453C,4482C 'goal':1499C,4333C 'gone':448C 'good':451C,2037C,2049C,5048C,5253C 'great':87B,3049C,3124C,3261C,5000C 'gritti':3545C 'ground':2922C,3450C 'group':2417C 'guid':6074C 'guides.emberjs.com':3121C,3344C,3361C 'guides.emberjs.com/v1.12.0/object-model/classes-and-instances/':3343C 'guides.emberjs.com/v1.12.0/routing/)':3120C 'guides.emberjs.com/v1.12.0/understanding-ember/dependency-injection-and-service-lookup/':3360C 'guy':3099C 'hack':1101C 'hallelujah':444C 'hammer':2750C 'hand':1387C,1577C 'handi':4955C 'handl':106B 'happen':1057C,1746C,1749C 'happi':882C,1121C,1191C,1613C,2796C 'hard':1528C,3258C,3279C,3471C 'hash':3647C,3901C,3978C 'hasmani':3077C,3708C,3829C,4831C 'hason':3705C,3827C,3944C,3947C 'header':2397C,4676C,4781C,4983C 'heard':1928C 'heath':5534C 'help':1644C 'helper':3712C,3724C,3830C,3992C,4045C,4493C 'histori':27B,727C 'hit':874C,2992C 'hold':4758C 'home':897C,1230C 'honor':2394C 'hook':3959C,4140C,5001C,5633C,5724C 'hope':6014C 'host':4105C,4222C,4225C,4227C,4230C,4234C 'hous':2636C 'howev':864C,1925C 'html':756C,764C 'http':592C,1460C,2402C,2760C,4293C,4603C,5085C 'huge':1672C 'hum':5027C 'hunt':2952C 'i.e':5712C 'id':1023C,3656C,4431C 'id-on':1022C 'idea':2200C 'ideal':681C,2054C,2239C 'imagin':2233C,2801C,4177C 'implement':6090C,6093C 'import':4199C,4203C,5292C,5296C,5419C,5423C,5427C,5431C,5643C 'impress':2794C 'includ':1604C,2236C,2984C,4371C 'incomplet':141B,971C 'inconsist':1151C 'independ':2576C 'indic':2439C 'initi':3983C,4521C,4574C,5150C,5346C,5383C,5408C,5437C,5495C,5496C,5502C,5507C 'inject':2451C,3308C,3359C,3756C,4532C,4551C,5160C,5309C,5343C,5550C,5673C 'inlin':5923C 'input':1267C,1273C 'insid':749C 'instanc':2475C,3750C,3905C,4084C,4315C,4416C,4535C,5077C,5121C,5316C 'instanti':5463C 'instead':2126C,3413C 'integr':1834C 'interact':2454C,5621C 'interest':2911C 'interfac':4059C,4288C,4369C,5586C,5688C 'intim':3568C 'introspect':2348C 'iscacheexpir':3874C,4749C 'isdirti':2510C 'isn':5716C 'isnew':3968C 'isservicefactori':5301C 'iter':795C 'javascript':34B,255C,439C,453C,488C,606C 'job':88B,1478C 'johnni':50B 'joker':5537C 'jone':2146C 'journey':60B,2067C 'json':125B,146B,187B,278C,316C,590C,689C,1457C,2733C,2758C,2839C,2930C,3445C,3571C,3639C,3677C,4011C,4190C,4291C,4357C,4400C,4413C,4418C,4476C,5101C,5838C,5868C,5893C,5940C,6088C,6091C 'json.attributes':4434C 'json.id':4432C 'json.links':4438C 'json.meta':4423C,4424C,4440C 'json.relationships':4436C 'json.type':4422C,4430C 'jsonapi':6101C,6108C 'jsonapi.org':2735C,2935C,3575C,3613C,3863C,3867C,4406C,6095C 'jsonapi.org/format/#document-links':3866C 'jsonapi.org/format/#document-resource-object-relationships':3862C 'jsonapi.org/format/#document-resource-objects':3612C,4405C 'jsonapi.org/format/)':3574C 'jsonapi.org/format/),':2934C 'jsonapi.org/implementations/)':6094C 'jsonpatch':193B,1141C 'jsonpatch.com':194B 'jun':2148C 'katsumoto':3510C 'keep':2663C,3881C,4026C,5015C,5981C 'key':680C,3085C 'kick':2778C 'kill':2033C 'knight':5540C 'know':1817C,2516C,2565C,3747C,4879C,5891C 'la':1561C 'languag':2834C 'larg':977C,1409C,1606C 'last':496C,1695C,2776C,2805C,3512C 'later':2825C 'layer':218B,467C,2106C,2327C,3200C,5984C 'lead':1522C,1570C 'lean':4985C 'learn':2046C,2163C 'leas':2892C 'least':3072C,4243C,4717C 'leav':470C 'ledger':5535C 'legaci':564C 'less':2312C,2315C,2950C,6001C 'let':231B,1822C,2726C,2864C,3546C,4862C,5335C,5526C 'librari':83B,525C,1059C,1078C,1110C,1594C,1882C,2956C,3024C,3462C 'life':1977C,3498C,3509C 'lightweight':1136C 'like':79B,197B,494C,595C,656C,906C,1549C,1653C,1911C,2059C,2509C,2572C,2590C,2632C,3066C,3101C,3268C,3409C,3684C,3763C,3796C,3922C,3960C,4028C,4133C,4197C,4394C,4441C,4585C,4767C,4789C,4841C,4924C,5007C,5043C,5411C,5522C,5574C,5831C,6000C 'line':5908C 'link':2672C,2703C,3651C,3858C,3865C,4256C,4437C,6070C 'list':966C,978C,2208C,2225C 'listen':5214C 'live':131B,1583C,5837C 'll':2815C,3720C,4024C,4301C,4567C,4730C,5145C 'load':315C,1830C 'localstorag':5019C 'log':21B 'logic':388C 'long':1984C,4966C 'longer':3470C 'look':2058C,2764C,3043C,3499C,5410C 'lookup':5706C 'lot':493C,554C,940C,1618C,1751C,1836C,1910C,2321C,3299C,5757C 'm':1558C,1713C,2792C,2910C,3011C,3096C,4579C,5746C 'made':880C,1783C,1797C 'magic':566C 'mail':787C 'main':3106C 'major':1933C 'make':111B,1485C,1678C,1840C,1947C,2011C,2412C,2483C,3246C,4285C,4313C,5791C 'man':203B,3417C,3482C 'manag':839C,989C,1009C,1506C,1605C,3740C,4623C,4637C,5055C 'mani':413C,1402C,1453C,1598C 'manipul':4141C 'manual':5828C,5856C 'map':670C,677C 'mark':4786C 'may':1469C,2075C,3952C,4103C,4114C,4136C,4382C,4465C,4857C,5110C,5158C,5199C,5286C 'mayb':292C,1920C,2087C,2813C,2900C 'mc':5990C 'mean':1886C,2314C,4680C 'meant':4052C 'measur':373C 'meet':2541C,2732C,4331C 'memori':4632C,4814C,4973C 'menac':722C 'mental':3158C 'mention':4545C,4817C 'merg':783C,1196C 'met':306C 'meta':2651C,2668C,3652C,4439C 'method':2615C,3725C,3731C,3815C,4260C,4372C,4386C,4409C,4766C,4776C,5248C,5611C 'microsit':348C,734C,1517C 'middleman':3176C 'might':2882C 'mile':894C,902C 'mimic':123B,673C 'mind':4917C 'minim':2408C,3190C 'minut':4714C,4803C 'miss':4581C 'mixin':2428C,4592C,4752C,4996C,5040C 'mode':1637C 'model':118B,165B,180B,1133C,3159C,3587C,3627C,3665C,3958C,3962C,3965C,4041C,4421C,5424C,5457C,5458C,5461C,5462C,5475C,5650C,5723C,5964C 'modular':420C 'month':1171C,2110C 'most':508C 'motion':5418C 'move':862C,1130C,1242C,1655C,1683C,1727C 'movi':1805C 'much':1857C 'multipl':557C 'name':5095C,5137C,5489C,5617C 'narrow':301C 'need':516C,553C,623C,710C,805C,937C,1049C,1073C,1086C,1211C,1492C,1603C,1639C,1676C,1995C,2215C,2267C,2529C,2543C,2678C,2880C,3083C,3238C,3252C,3609C,4137C,4239C,4263C,4302C,4311C,4321C,4360C,4453C,4754C,5146C,5282C,5693C,5830C,6030C 'never':1512C 'new':1686C,2739C,2828C,3444C,3950C,3972C 'newer':1329C 'next':283C,887C,1240C,1326C 'nitti':3544C 'node.js':190B 'nomenclatur':2332C,2367C,3074C 'notic':3974C,4485C,5499C 'noun':5098C 'nutti':1539C 'object':138B,668C,1158C,2360C,2448C,2756C,3583C,3611C,3623C,3634C,3673C,3855C,3859C,4022C,4078C,4148C,4257C,4305C,4346C,4403C,4412C,4506C,4665C,5053C,5066C,5176C,5210C,5285C,5416C,5544C,5656C,5665C,5700C,5711C,5738C 'object-rel':667C 'off':2013C 'offlin':5016C,5025C 'oh':2689C,4542C 'ok':2019C 'old':158B,1477C 'one':1585C,1986C,2063C,2131C,2134C,2298C,2609C,2970C,3501C,4244C,5687C,5975C 'oop':5516C 'open':1481C 'oper':643C,700C,2346C,2568C,2619C,2623C,2685C,5083C,5933C 'opportun':4615C 'option':1454C,2392C,2407C,4919C,4926C 'orbit.js':168B 'order':354C,1385C 'origin':4174C 'orm':666C,2295C,3070C 'other':469C,1207C,1793C 'overhaul':1051C,1896C,2100C 'owner':1906C 'packag':421C 'page':252C,342C,355C,487C 'painless':115B 'par':1966C 'paragraph':497C 'param':4411C 'paramet':270C 'part':2050C 'pass':5613C 'past':228B,1778C,2109C 'patch':2493C,4327C,5088C,5230C 'patchrelationship':4273C 'path':1122C,3205C,4214C 'patient':4563C 'pattern':698C,956C,3051C 'payload':126B,5241C 'peasi':5579C 'peopl':2173C,4470C,4891C 'per':2658C 'perfect':2083C,3488C,3522C,3535C 'perhap':1083C,1134C,1869C,1959C,2091C,2421C,2709C,2809C,4258C,4367C,4393C,4684C,4943C,5062C,5174C,5773C 'period':2937C,4507C 'persist':5A,32B,65B,82B,773C,836C,1033C,1432C,1441C,1901C,2056C,2240C,2326C,2581C,2964C,3461C,3524C,3769C,4097C,4335C,5061C,5075C,5281C,5361C,5692C,5785C,5874C,5902C,5957C 'person':26B 'perspect':1981C 'piec':4584C 'pixelhandler.github.io':6081C 'pixelhandler.github.io/ember-jsonapi-resources/docs/)':6080C 'place':1938C,2299C,3117C 'plain':157B 'plan':1957C,2003C,2187C,3132C,3138C,4687C 'platform':1285C,1370C,1681C,1725C 'play':5156C 'pleas':4561C 'plural':5136C,5572C,5702C 'point':2610C,3108C,3207C,3210C 'polymorph':812C 'poor':2160C 'popular':4882C 'posit':891C 'possibl':99B,2491C,3779C,4343C 'post':10B,3690C,3693C,3946C,3948C,3966C,4211C,4871C,5107C,5142C,5173C,5402C,5444C,5450C,5455C,5459C,5481C,5491C,5619C,5624C,5628C,5637C,5641C,5653C,5714C,5730C,5740C,5780C,6020C 'posts-adapt':5443C 'posts-seri':5449C 'posts-servic':5490C 'postsservic':5284C 'postur':3377C 'power':3301C 'pre':822C 'predecessor':928C 'present':2724C 'press':1068C 'previous':922C 'primari':3088C,5978C 'primit':3262C 'prior':394C 'privat':4385C,4408C 'problem':2142C,2875C,4609C,4822C 'process':362C 'product':259C,304C,331C,366C,844C,1877C,1905C,2035C 'project':241C,345C,397C,1518C,1972C,2072C,2079C,2219C,2819C,2879C,3189C,3476C 'promis':2843C 'proof':5882C 'properti':2437C,2535C,3660C,3736C,3835C,3875C,3909C,3984C,3987C,4049C,4279C,4488C,4733C,4756C 'propos':5898C 'protect':4511C 'prototyp':119B,3275C,3588C,3645C,3792C,4363C,4737C,5170C,5331C 'proven':3229C 'provid':455C,642C,684C,693C,3038C,3047C 'proxi':4120C,4220C,4223C,4229C,4233C,5834C 'puck':1740C 'pun':1806C 'purchas':361C 'purpos':15B 'pursu':3541C 'push':4629C 'put':5152C,5528C 'queri':2414C,5737C 'question':4938C 'quick':1659C 'quot':2113C 'rail':183B 'ramp':3185C 'rang':339C 'rare':3492C 'rather':3999C 're':1316C,1820C 're-format':1315C 'read':89B,942C,3920C 'read-on':3919C 'read/write':556C 'readi':781C,1890C,5026C 'readm':6051C 'readon':3942C 'real':96B,2488C,3776C,4340C,5184C 'real-tim':5183C 'realiz':3031C 'realli':602C,1224C,1547C,1612C,4167C 'reason':3110C 'recal':4707C 'receiv':4647C 'recip':5049C 'recommend':5888C 'record':951C,982C,1025C,1037C,1064C,1183C,1214C,3069C 'reduc':3177C,3180C 'redund':2409C 'refactor':1650C,1934C 'refer':3883C,4839C 'referenc':5569C 'refresh':984C,1295C 'regist':3337C,3367C,4524C,4549C,5128C 'relat':669C,678C,959C,1036C,2419C,2571C,2574C,2628C,3843C,4846C,4855C,4861C 'relationship':108B,650C,933C,1011C,1165C,2550C,2670C,3092C,3650C,3819C,3854C,3861C,4147C,4255C,4435C 'releas':878C,1775C,2026C,2995C 'reload':980C 'remind':3078C 'remot':1564C 'removerelationship':3814C 'repres':2755C,4009C 'represent':135B,142B,631C,972C,1156C,2275C,2351C,4649C 'request':637C,969C,1374C,1379C,2386C,2410C,2659C,4784C,5112C,5231C 'requir':662C,1290C,1310C,1375C,1444C,1941C,2073C,4155C,4641C,5275C 'require.js':425C 'resembl':3629C,4449C 'reserv':3232C 'resourc':633C,646C,703C,975C,993C,1383C,1458C,1609C,2247C,2261C,2271C,2342C,2354C,2374C,2387C,2420C,2434C,2457C,2474C,2495C,2501C,2514C,2538C,2552C,2563C,2586C,2608C,2626C,2661C,2688C,3150C,3168C,3335C,3582C,3604C,3610C,3622C,3625C,3644C,3669C,3795C,3806C,3809C,3822C,3844C,3852C,3870C,3904C,3951C,4007C,4016C,4043C,4071C,4091C,4151C,4175C,4308C,4314C,4329C,4390C,4397C,4402C,4415C,4446C,4652C,4736C,4829C,4833C,4847C,4856C,4968C,5071C,5108C,5169C,5198C,5207C,5265C,5315C,5348C,5376C,5385C,5401C,5566C,5602C,5616C,5629C,5638C,5708C,5935C,6102C,6109C 'resource.comments':4842C 'resource.extend':3688C,3926C 'respond':5219C 'respons':3196C,3440C,4675C,4780C,4988C 'rest':161B,652C,2761C 'result':351C 'return':1462C,3938C,3963C,4235C,4414C,4425C,5651C 'revamp':1850C,1860C 'review':6044C 'riddanc':452C 'ride':1759C 'right':856C 'ring':56B 'robust':5918C 'role':1507C,1523C 'roll':184B,233B,436C,3457C 'rout':2096C,3957C,5553C,5632C,5722C 'rubi':6106C 'rule':4963C 'run':5865C 'said':4443C 'sake':4032C 'samurai':3380C,3513C 'say':450C,478C 'scaffold':3790C 'scope':1342C 'scratch':2204C 'search':308C 'season':1526C 'seat':1484C 'second':2089C 'see':1417C,4404C 'seek':2869C 'seem':1470C,5042C 'seen':1792C,1809C,2319C 'self':152B 'sell':3107C 'send':2522C,2701C,5228C 'sens':1948C,3247C 'separ':2579C 'serial':181B,4304C,4323C,4345C,4378C,5036C,5245C,5262C,5389C,5432C,5447C,5451C,5472C,5473C,5485C,5486C 'serialize/deserialize':4307C 'serializechang':4379C,5247C 'serializeresourc':4380C 'serious':3009C 'server':719C,1000C,1312C,2244C,2302C,2370C,2700C,2830C,3143C,3170C,4014C,4075C,4125C,4192C,4655C,4673C,4791C,4941C,5103C,5840C,5870C,5913C,5930C,5970C 'servic':612C,627C,682C,1359C,2447C,2463C,2527C,2593C,2601C,2612C,2634C,2674C,3058C,3314C,3341C,3691C,3758C,3767C,3880C,3929C,4248C,4690C,5052C,5065C,5068C,5092C,5120C,5154C,5162C,5175C,5209C,5270C,5312C,5392C,5420C,5442C,5448C,5453C,5454C,5466C,5467C,5476C,5477C,5479C,5482C,5484C,5492C,5543C,5547C,5590C,5598C,5625C,5642C,5664C,5670C,5678C,5684C,5686C,5710C,5713C 'servicecach':5297C,5306C 'servicecachemixin':4695C 'set':302C,1082C,1105C,1263C,1363C,1411C,3226C,3716C,3727C,3738C,3982C,4961C,5191C,5413C,5920C 'setup':3832C,4066C,4185C,4731C 'seven':293C 'shape':2790C,5334C 'share':202B,1599C,2335C,4176C 'shift':1673C 'ship':841C,1770C,1866C,2946C 'shopper':357C,371C 'side':482C 'signific':1953C 'similar':414C,1210C,1929C,5556C 'simpl':113B,573C,2531C,2558C,2915C,4366C,4799C,5289C,5594C,5794C 'simpli':628C,4692C,4994C 'simplic':4034C 'simplifi':1089C,3156C 'sinc':4152C,4350C,5350C 'singl':251C,486C,1423C 'single-pag':485C 'singleton':2460C,3338C,4083C,4534C,4541C,5125C 'site':18B 'six':1170C 'size':367C 'skate':1736C 'slice':1406C 'slug':3702C 'small':919C,1572C 'smaller':1331C 'smartest':2124C 'smile':5530C 'snippet':1003C 'snowman':1919C 'socket':172B 'softwar':833C 'solid':686C,2765C,4287C,4355C,5768C 'solut':66B,104B,529C,1098C,1137C,1184C,1301C,1313C,1424C,1442C,1902C,2057C,2241C,2871C,2916C,2965C,2990C,3040C,3217C,3230C,3525C,3536C,3556C,5058C,5362C,5753C,5786C,5875C,5903C,5958C,6035C,6069C 'solv':2144C,2404C,4607C,4821C 'someon':2865C 'someth':506C,4196C,5004C 'song':54B 'soon':4575C 'sorri':1714C 'sort':1630C,5741C 'sould':4509C,5518C 'sound':1908C,2842C 'sourc':173B,1281C 'spars':950C,1030C 'speak':589C,4290C 'spec':335C,2763C,2785C,2823C,4478C,4516C,5896C,5943C 'specif':583C,597C,653C,2740C,2753C,2799C,2841C,2933C,3145C,3447C,3642C,3679C,4356C,4451C 'spend':3496C 'spent':1168C 'spoiler':5860C 'sproutcor':926C 'stabil':1646C 'stabl':876C,2994C 'stale':3889C 'stand':4109C 'stand-alon':4108C 'start':1635C,2202C,3129C,6011C 'start-up':1634C 'state':648C,991C,2503C,2506C 'state/events':3244C 'steep':1545C 'step':291C,321C 'still':491C,804C,838C,899C,1339C,1615C,4580C,5915C 'store':2592C,5480C,5494C,5506C,5514C,5525C,5542C,5546C,5563C,5589C,5610C,5655C,5677C,5699C 'stori':211B,1868C,1930C,2948C,3320C 'straight':2943C,5803C 'strang':1466C 'strategi':1998C,2424C,4587C,4992C 'stretch':1498C 'strike':1238C 'strive':1734C 'strong':3225C 'structur':2365C,3631C,3662C 'stubbornella':2190C 'stuff':1552C 'success':2170C,3424C 'suffici':1140C 'suggest':2858C,3529C 'suit':5770C 'super':1095C 'support':192B,418C,3126C 'suppos':2852C 'sure':5748C 'surviv':3430C 'sweet':1202C,4480C 'tactic':3439C 'tag':2996C,3001C 'take':1937C,3375C,5885C 'taken':2768C,2789C,5333C 'tandem':4560C 'tax':1965C 'teach':2043C 'team':720C,815C,826C,852C,920C,1573C 'tech':1542C 'tell':3404C 'templat':759C,3916C,4063C,4837C,5952C 'temporarili':4970C 'tenaci':2130C 'tens':6025C 'test':1641C,2772C,2782C,3319C,5769C,5782C,5793C,5799C,5812C,5829C,5847C,5854C 'themixinjune2015':2191C 'thick':1396C 'thin':2329C,5985C 'thing':1707C,1722C,2230C,3493C,4460C,5370C,5850C 'think':69B,568C,1821C,2212C,3065C,4349C,4577C,5751C 'third':2093C 'thirsti':579C 'this.container.lookup':3964C 'this.container.lookupfactory':4426C 'this.get':3939C 'this.store.find':5652C,5729C,5739C 'though':2967C,2988C 'thought':1116C,1509C,1702C,4602C 'three':229B,238B,2098C 'throw':1153C 'time':97B,539C,1568C,1853C,1874C,2016C,2030C,2086C,2489C,2808C,2903C,3777C,4341C,4741C,4792C,4796C,4895C,4952C,5185C 'timestamp':4788C 'tire':2780C 'titl':3694C 'today':2731C,6012C 'togeth':2431C 'told':1991C 'took':323C,889C 'tool':1338C,2179C 'top':390C,407C,504C,1107C 'total':2578C 'toward':1488C,5765C 'track':1771C,2022C,2649C,2664C,3733C,4778C 'trade':2012C 'transact':802C,1045C,1061C 'transform':2269C,2278C 'transit':1220C 'travi':6083C 'travis-ci.org':6086C 'travis-ci.org/pixelhandler/ember-jsonapi-resources/builds)':6085C 'treat':2260C 'tri':156B,911C,1066C,1127C,2001C,2120C 'true':57B,2077C,3969C,5302C 'trust':4980C 'turn':767C,847C,5227C 'twitter.com':2152C,2193C 'twitter.com/chriseppstein/status/606297381529747456)':2192C 'twitter.com/danabrit/status/606563836007571457)':2151C 'two':535C,1376C,1587C,2304C,2747C,4557C 'type':2479C,2644C,3055C,3658C,3689C,3927C,4087C,4210C,4280C,4429C,5704C 'ugli':2041C 'ui':1272C,1602C 'uncondit':3421C 'understand':2177C,2259C 'unfortun':1873C 'uniqu':1924C 'unit':5792C,5853C 'unless':2280C,4165C 'updat':2484C,5186C 'updateresourc':4272C,5224C 'upgrad':1954C 'upload':1270C 'url':280C,694C,2681C,2693C,3094C,3102C,3103C,3125C,3849C,4143C,4212C,4218C,4231C,4236C,4245C,4282C 'url.replace':4232C 'us':1124C,1145C,1205C,1623C,1645C 'use':37B,144B,169B,380C,424C,963C,1302C,1428C,1591C,2181C,2604C,2708C,2831C,2836C,2854C,3215C,3303C,3562C,3683C,3721C,3803C,3898C,3913C,3980C,3994C,4055C,4117C,4118C,4170C,4195C,4253C,4383C,4472C,4496C,4519C,4720C,5008C,5081C,5113C,5134C,5148C,5171C,5344C,5396C,5561C,5735C,5832C,5857C,6009C,6022C,6067C 'user':297C,327C,558C,1867C,2947C,4058C 'usual':1758C 'util':1254C,3837C,5825C,5916C 'v1.13':2998C 'valu':5194C 'vari':1367C 'various':330C,1007C,2607C,5662C 've':43B,155B,199B,205B,223B,1791C,1927C,2318C,2767C,2958C,3028C,4352C 'verb':5086C,6024C 'version':1305C,1763C,2736C 'via':651C,1268C,1459C,3169C 'view':771C,967C,987C,2105C 'vs':3093C 'wait':2276C,2848C,5715C 'walk':325C,3418C 'want':1225C,1915C,2282C,2287C,2445C,2497C,2512C,2549C,2692C,3711C,4168C,4808C,4825C,4903C,4978C,5022C 'war':242C 'warrior':3381C,3388C 'wast':3508C 'water':3410C 'way':457C,1487C,1688C,1699C,1711C,1756C,1787C,2532C,2559C,3089C,5254C,5927C 'weapon':2745C 'web':20B,171B,1554C,1724C,3098C 'well':12B,71B,109B,586C,603C,640C,845C,946C,1747C,2167C,2621C,2647C,3514C,4237C,4347C,4463C,4593C,4899C,5772C,5807C 'went':1473C 'west':433C,501C 'whatev':3606C,4679C 'wherev':2452C 'whether':3748C,5936C 'wild':432C,500C 'win':1203C 'window.fetch':2717C 'wish':1020C 'within':13B,72B,2355C,4161C 'without':100B,708C,3392C,3427C,5971C 'won':3527C 'work':224B,244C,509C,585C,601C,736C,810C,907C,1195C,1227C,1250C,1349C,1400C,1436C,1563C,1620C,1627C,2222C,2430C,2508C,2945C,4160C,4187C,4558C,5073C,5326C,5725C,5759C,5764C 'worm':4600C 'worri':3428C 'worth':2155C,2158C 'would':298C,655C,1138C,2032C,2052C,2213C,2234C,3277C,3504C,3558C,3681C,4806C,5045C,5250C,5754C,5763C,5845C 'wow':2746C 'write':91B,944C 'written':2919C 'wrote':1529C 'www.ember-cli.com':3619C,5373C 'www.ember-cli.com/#developing-addons-and-blueprints':3618C,5372C 'www.lyrics.com':47B 'www.lyrics.com/ive-been-everywhere-lyrics-johnny-cash.html),':46B 'x':824C,1692C,2896C,2899C,4802C 'xhr':2713C 'yeah':1744C,2279C,4555C,5727C 'year':230B,239B,536C,1588C,1696C,1780C,2748C,2777C,2810C,2977C,3287C 'yes':3452C,4610C 'yet':1333C,2273C,5515C 'zig':2168C 'ziglar':2169C	published	pixelhandler
3	## Closing Keynote: Chris Eppstein, 5:30 — 6:00 PM\n\n* @chriseppstein, maintenance of @Compass; works at LinkedIn\n\n#### Storytime, Once upon a time…\n\n* Rails Conf in Portland years ago\n* Sass, had a few patches\n* Have you heard of SproutCore? It's gonna be hard, frameworks are hard to maintain\n\n#### Ruby Sass in the JS World\n\n* Hasn't been fun\n* _Announcing:_ "Eyeglass", distribute SASS extension as NPM modules for LibSass (C++ implementation of SASS compiler)\n* [LibSass](http://libsass.org) is much faster than Ruby Sass\n* Compass is kind of "end of life" at this point, but it's not disappearing right away\n* [Eyeglass](https://github.com/sass-eyeglass/eyeglass), developer preview, is not a bunch of mixins, e.g. autoprefixer; get the extensions in an let you use them in the JS world\n\n#### Community is You\n\n* It's what makes software great\n* Be excellent to each other, how hard is it just to be nice?\n* Actually it is hard, _"Turn the other cheek."_ - Jesus H. Christ\n* "Don't be a Sasshole." - Chris Eppstein\n* JavaScript community: You're kinda of Jerks to each other\n* "You are not your OSS contributions" - Don't take it personal\n* Know when it's time to step away from the keyboard\n\n#### Conundrum\n\n* How to compete without being negative\n* Attack their weaknesses but ignore their strengths - bad idea.\n* Respect your competitors\n* _Learn how to disagree and be disagreeable_ the secret of getting along\n\n#### Confidence\n\nIs knowing you don't need to engage.\n\n#### Why is Ember going to Win?\n\n* Leadership, Us, backwords compatibility, tooling\n\n#### What does "Win" Even win?\n\n* Find a job you love and you'll never work a day in your life\n* If you use a framework you love you'll never work a day in your live\n* Congrats you may have already one\n* If winning means being #1; the default choice, support is way harder, community? good luck\n* Being #2 is the sweet spot, people pick you because your are a good fit\n* The community you create is more awesome if your people fit\n* Focus on your strengths\n* LESS kind of collapsed under its own community\n* Don't stop learning from others but don't view it as a competition\n* Do what you do because you love it.\n\n## Physical Design: Edward Faulkner, 4:45 — 5:15 PM\n\n_A talk about UX_ for the end users of our app, and for us developers.\n\n* Abstract - (Almost) infinitely Flexible\n* Physical - Constrained by Physics\n\nBring in constraints to our abstract applications the represent our physical world.\n\n* Material design, spec - check it out, kick the tires on _how it works_\n  * "Without breaking the rules of physics."\n  * "Motion respects and reinforces the user as the prime mover"\n\n#### How does this fall into Ember's broader Architecture?\n\nAnimations and motion in general, in reaction to the user's input. They live in the gaps in between what was and what becomes.\n\n#### Liquid-fire\n\n<https://github.com/ef4/liquid-fire>\n\n* Version 1.0 - Coming soon\n* Showing off some animations in the EmberConf application\n* Liquid Outlet notices what is inside and manages changes / transitions\n* A Transitions module defines your animations similar to how the router defines routes\n* Goal Create extensible animations to share animations as Ember Addons\n* Liquid Fire organizes how you setup and when you call your animation library, firing off transitions e.g. before, after with the template content already positioned absolutely\n* Velocity.js is one recommended animation library that Liquid Fire can use to define modular animation and transitions\n* The animations are just functions you can receive arguments. \n* Each transition has an old and a new element.\n* Animation have a forward and reverse path to transition to your before and after states\n* The `explode` animation is pretty sweet, and the fly to is great\n* Tried out re-implementing the fly-to api with Web Animations API, instead of Velocity\n* `liquid-with` & `liquid-each` - helpers for adding before and after elements when your model/properties change\n* An animation (function) can have many constraints and is triggered when all constraints match\n\nPerhaps checkout: <http://miguelcobain.github.io/ember-paper/>\n\n## Minitalks: Leah Silber, 4:00 — 4:30 PM\n\nSorry you had to be there :) nice variety of short talks on experimenting with Ember\n\n## Building Real-time Applications With Ember: Steve Kinney, 3:00 — 3:30 PM\n\n@stevekinney | steve@turing.io\n\n#### How I chose Ember:\n\n* Lazy Twitter: Ember.js or Angular\n* wykatz - Ember.js, Although I'm biased ;)\n\nA Story about Web Sockets, about user sessions, GeoLocation, 3rd party Libraries\n\n* What is a Web Socket? RFC 6455, Duh.\n\nTradition: Request and Response cycle, but the server has to wait for a request, some clients may poll the server.\n\n* A Web Socket is a two-way Pipe\n* Can I actually Use WebSockets? YEAH, except the Opera Mini browser.\n* Lots of libraries to give you fallbacks to long polling, e.g. Socket.io, Faye\n\n#### Demo of building a chat app\n\n* We need a server, Ok - A Web Socket server in 14 lines of code with Node.js\n* Ember allows you to build your application and the DOM becomes a representation of your application\n* `ember generate controller websocket` to create a controller, setup the socket on `init`\n   * Create (un)subscribe handler and a send method\n* Use `needs` to utilize the websocket controller\n* Add an action to respond to user's submitting a message to the chatroom\n\n#### You share the struggles of making a better app with the community\n\nHow to you bring the web socket behaviors and support into a service? search the forums, Oh there's Services, nice.\n\n* `ember g service websockets` then refactor the controller into a service\n* Instead of extending controller, extend Ember.Object\n* `websocket: Ember.inject.service()`\n* For Lulz bring in Socket.io with libraries on the client and server.\n* Server app can bind to events `socket.on('message')`\n* In the client app subscribe to the messages and broadcast messags\n\n#### Let's play\n\n<http://bit.ly/jspoll> | code at: [stevekinney/emberconf-chat](https://github.com/stevekinney/emberconf-chat)\n\n## Building Custom Apps with Ember Cli: Brittany Storoz, 2:15 — 2:45 Pm\n\n_@brittanystoroz_\n\n#### What were our needs? (Firefox OS Requirements)\n\n* Generage and validate a manifest file\n* UI components\n* publish to the marketplace\n\nThe above use cases make for a good use case for using EMBER CLI Addon\n\n* Demo: an EMBER CLI application, selecting timezones and local times\n\nWalkthrough creating an Addon to make the app a Firefox OC app\n\n#### Generate the Manifest (Creating blueprints for this purpose)  \n\n*  `ember generate blueprint name-of-module`\n* Generates files an folders, named the blueprint after the name of her app\n* In the blueprint's directory mimic the file structure of the app, including the manifest\n* Put some files into the `public` directory\n* The blueprint affords using variables to generate application code that ships as your addon\n* There are hooks to utilize, e.g. postProcessTree, runs at the end of the build process, right before the app is written to the `dist` directory\n* You can use that hook to mutate the variables in the blueprint from a config file, e.g. update the name and the version of the application in its manifest file\n* Not only make the bower package available but also use the package, using the `included` hook to call `app.import()`\n\n#### UI Components\n\n* FxOS UI (Gaia): Building Components, a work in progress\n* `bower install gaia-components/gaia-tabs`\n* Setup the components (bower dependencies) and make them available to the consuming application, which needs to know it also requires the dependencies\n* Use the blueprint's `afterInstall` hook to add the bower package to the app\n* In the addon create an Ember.Component (with setup and teardown logic) then tell the consuming app to use that component, so in the `app` directory import the addon/component-name and export, now the app can use the component, it's registered in the app's container now.\n* Also add a template for the Component, in the demo a template was needed for the clock and timezone elements in the app\n\n#### Validation and publishing\n\n* Adding commands, need finer controller for when things happen (jobs)\n* In the `lib/commands` directory create the command (name, alias, `run` method)\n* A command to validate the manifest file, create a command and let the app know that the command can be used\n* hook `includedCommands` require and return the imported lib/commands\n* `ember fxos:validate` & `ember fxos:publish` does the custom work needed!\n* A property of commands is `availableOptions` as options hash in the method, e.g. pass in a dist target, the production marketplace, sweet\n  * App created, app ID, you can see it in the marketplace\n\n\n## Interaction Design With Ember 2.0 And Polymer: Bryan Langslet, 1:30 — 2:00 PM\n\nBlur the lines between native and Web to create an immersive experience.\n\n@blangslet shared a reel of integrations between Ember and Polymer, continuous flow in an app, giving users context clarity and focus\n\nAlso showing off great demos of using Ember and Polymer together. "Demo with Pirate Music" is awesome!\n\n* Demo App on github: [blangslet/treasure-hunt](https://github.com/blangslet/treasure-hunt)\n* Champions Web Platform nicely running inside native app built with Cordova iOS\n\n#### Dream Stack\n\n* Ember for routing\n* Polymer layout grid, flexbox\n* Ember Components + Polymer\n* Polyfills\n\n##### Ember going forward\n\n* Use tomorrows tech today\n\n\n#### Web Components\n\n* Extend the browser itself\n* Encapsultation\n* Declarative\n* True reusability and portability\n\n##### Ember vs Polymer Use Cases \n\n* Developer productivity\n* Conventions and developer happiness\n* Brilliant community\n* World class router\n* Polymer pushing the spec forward\n\n##### Web Animations API\n\n* Best of both CSS and JavaScript animations\n* Run outside the main thread\n\n#### The Web Platform\n\n* Turmoil in the Web landscape\n* Never underestimate the underdog, "Cool Runnings"\n* I'm a huge believer of the Web, everything has to be connected to the Web\n* Web Performance is on the rise, getting closer to native performance, still a ways to go, but rendering engines are getting faster\n* A lot of heavy lifting is moving to the client (JavaScript runtime)\n* Yes Native apps are fast, but what about the best tools available for the job, Web tools are getting awesome!\n\nA Path forward, stand on the shoulders of giants, Ember, Polymer, Web Components, etc.\n\n#### Ember-Flow\n\nA shift in adding animations and transitions to Ember Apps\n\n<hr>\n\n## Growing Ember One Tomster at a Time: Jamie White, 11:30 - 12:00 PM\n\n* Ember London is growing 600 members on meetup.com, 2 events a month\n\n_The Tomster wasn't overly done, there are still choices to be make and things you can contribute to._\n\nThe code is a snapshot of the best ideas in our community, we're trying to create the best possible home for our idea\n\n* Community design and API design are the same.\n\n#### Roles in the Community\n\n* organizer, documenteer, contributor, mentor, student, explorer, critic, etc.\n* loads of roles inside and outside the community\n\n#### Community Interface\n\nIs a README enough, How about a website\n\nA consistent visual language build trust in your community, setting expectations across projects\n\nOnce an established visual language is set it becomes a tool for contribution, e.g. the redesign of Ember community pages (easier to find a meetup location)\n\n#### Analogy\n\nConsider promises, thing about other things while you know that asynchronicity is taken care of\n\n#### Language - words stick\n\n"Stability with out Stagnation" - terse and describes a larger idea\n\nHow about reframing the term 'hack night' to 'bring your own project' its a vocabulary that is more open to women and men.\n\n#### How did a tech community become this vibrant?\n\n_design and engineering_ (the community that is not the software)\n\n#### The Tomster, an illustration to characterize the project, developer friendliness and productivity\n\nThe Ember release cycle is inspired but the Chrome build release cycle but has no characterized illustation, (Is this for me?)\n\nYou can affordable commission and license a Tomster for your community!\n\nDoing the right think should be easier than doing the wrong thing\n\n* Ambition is not normally aside the concept of Friendliness, yet you can put a Tomster face on Ambition\n\n## Aligning Ember with Web Standards: Matthew Beale: 10:45 - 11:15 AM\n\n#### Ember community survey\n\n* [201-created.com/ember-community-survey-2015](http://www.201-created.com/ember-community-survey-2015)\n* 75% of user are using the latest version of Ember.js\n\nStandards are a two-way street\n\n#### Strategy for adopting new features of JavaScript\n\n1. provide legacy wrapper\n2. use syntax as a carrot\n3. private use can start sooner\n\nIt's not a straight to adopt pure ES Classes as some concepts still need to be supported, e.g. calling this._super\n\n#### For example: Decorators\n\n    class Car {\n       attr('attachThings')\n    }\n\n#### Ember's Object Model\n\nProcess of change to Ember's primitive for Objects\n\n1. stable\n2. a good pattern\n3. implemented correctly\n4. implemented performantly\n\nThree new tools…\n\n#### Classes\n\nGotchas:\n\n1. new syntax\n2. super semantics change\n3. mixins\n4. setUnknownProperty\n5. merged /concat\n6. transpiler output?!\n\n#### This is not the first time we had to move across standards\n\n"Polyfill" - Remy Sharp (inspired by spackle to fill the nail holes in your wall)\n\n* Some things can be pollyfill'd and some new spec cannot\n* Transpile that new ES2015 code with [Babel](https://babeljs.io) (not born to die)\n\n#### Standards…\n\n1. are portable\n2. reflect best practices\n3. endure\n\n#### Participants win!\n\n* Promises and ES6 modules are things the Ember picked up early\n\n#### Standards Story\n\n* WHATWG + W3C\n* TC39 + Ecma International\n* In 2008 WHATWG given the task of creating HTML5, realized HTML would never be done\n  * Moved to a new model… A Living Standard, increments over time\n* ES3 (used in IE8), then there was an attempt to create ES4 but that failed\n  * So a few years later and + Web 2.0 they came up with ES5\n* Then A new giant release for ES6, instead now we have ES2015, moved from a giant hover boat approach to a sailboat, sailing into 2015, then 2016, etc.\n\nProcess for JavaScript releases\n\n1. Strawman\n2. Proposal (polyfills)\n3. Draft (experimental),\n4. Candidate (Compliant)\n5. Finished (Shipping)\n\nJavascript will come out every year! (try it out early Babel as es6ro5)\n\n\n## Fault Tolerant UX: Dan Gebhardt, 10:00 - 10:30 AM\n\nLinks\n\n* Twitter: @orbitjs\n* IRC: #orbitjs\n* github/orbitjs\n* Soon <http://orbitjs.com>\n\n#### Ember Orbit\n\n* EO.Store - Synchronous and Asynchronous interfaces\n* EO.Model - informs Orbit of the Schema\n* Orbit Sources DRIVE model state\n* Client-first development\n* Pluggable Sources\n* Data synchronization\n* Editing Isolation, Editing Context\n* Undo / Redo\n\n#### Orbit.JS and JSON Patch\n\n* Transformable and Requestable interfaces\n* Synchronous Event Handling - Promise aware (async blocking, sources opt-in)\n* Non-Promise aware (non-blocking, sources opt-out of promise)\n* Connect events between Sources\n* Memory, Local Storage, JSON API, + More +\n* Orbit will be JSON API compliant, v 1.0 of JSON API tomorrow\n\n\n\n#### Engineering Fault Tolerance\n\n* Ember provides Simple Elegant Patterns for building a Consistent UX\n* Ember Data: Consistent + Durability\n* ACID is hard: Atomic consistent Isolated Durable\n* Rethink Assumptions and Primitives\n* Disparate Sources\n* Disparate Data\n* Common Interfaces\n* Normalized Data\n* Evented Connections\n\n\n#### Applications should try to Provide a forgiving UX, Please :)\n\n* Persist transient data, while still being edited, e.g. editing a comment in a code review\n* Undo and Redo, oops didn't mean to do that, e.g. Gmail can undo\n* Provide offline support, applications which are editing data in isolation, no immediate response from server is required, so your user should not be blocked from editing.\n* Asynchronous non-blocking interface, not blocked by request/response cycles from the server.\n\n#### Applications MUST NOT Violate the Rules of Transactional UX, OR ELSE\n\n* Don't break your users' trust\n\n#### Shield our users from environmental stresses that our application encounters\n\n* A transactional user experience, like a database has to reliable in committing data: ATOMIC\n* Atomic means "all or nothing"\n* A transaction should be consistent, it should move across all states - partials should not be come inconsistent\n* Transaction should be isolated and allow concurrent changes\n* Submit and cancel should just work, the change is isolated from the rest of the application, the change is done in isolation, separate from the canonical represtation\n\n#### Fast forward to today\n\n* We're building complex systems and launching them into users browsers\n* Our Ember Apps allow users to navigate quickly and efficiently\n* Fault Tolerance in our environment can become stressfull - Browser wackiness\n* Plus some very optimistic users\n\n#### Day tells the story around the beginning of his career working on ships.\n\n* Regulatory organizations must certify a ship, its controls and operational stability, etc.\n* Left that work for working on the internet in the 90s\n* Serious engineering and fault tolerance was expected on the server side\n* But the client side was much less serious.	_Notes were taken in real time, the last entries in each section may reflect beginning of the talk (so the last became the first and the first became the last, or not)…_\n\n- Fault Tolerant UX: Dan Gebhardt  \n- Growing Ember One Tomster at a Time  \n- Interaction Design With Ember 2.0 And Polymer  \n- Building Custom Apps with Ember CLI  \n- Building Real-time Applications With Ember  \n- Minitalks  \n- Physical Design: Edward Faulkner  \n- Closing Keynote: Chris Eppstein  	emberconf-2015-day-2	EmberConf 2015 - March 4th (day 2)	2015-03-04	2015-05-07 17:03:21.224648	2015-12-27 00:22:07.627485	1	'/blangslet/treasure-hunt)':1542C '/concat':2154C '/ef4/liquid-fire':555C '/ember-community-survey-2015](http://www.201-created.com/ember-community-survey-2015)':2042C '/ember-paper/':741C '/gaia-tabs':1268C '/jspoll':1037C '/sass-eyeglass/eyeglass),':180C '/stevekinney/emberconf-chat)':1043C '00':87C,746C,775C,1483C,1746C,2356C '1':373C,1480C,2067C,2124C,2141C,2208C,2323C '1.0':557C,2449C '10':2031C,2355C,2357C '11':1743C,2033C '12':1745C '14':885C '15':451C,1053C,2034C '2':6A,385C,1052C,1054C,1482C,1756C,2071C,2126C,2144C,2211C,2325C '2.0':55B,1475C,2285C '2008':2238C '201':2039C '2015':2A,2315C '2016':2317C '3':774C,776C,2077C,2130C,2148C,2215C,2328C '30':85C,748C,777C,1481C,1744C,2358C '3rd':805C '4':448C,745C,747C,2133C,2150C,2331C '45':449C,1055C,2032C '4th':4A '5':84C,450C,2152C,2334C '6':86C,2155C '600':1752C '6455':814C '75':2043C '90s':2742C 'absolut':626C 'abstract':468C,481C 'acid':2471C 'across':1852C,2168C,2623C 'action':937C 'actual':226C,847C 'ad':714C,1377C,1727C 'add':935C,1298C,1352C 'addon':600C,1091C,1105C,1177C,1307C 'addon/component-name':1332C 'adopt':2062C,2089C 'afford':1166C,1985C 'afterinstal':1295C 'ago':106C 'alia':1395C 'align':2024C 'allow':892C,2637C,2685C 'almost':469C 'along':306C 'alreadi':367C,624C 'also':1241C,1287C,1351C,1518C 'although':792C 'ambit':2006C,2023C 'analog':1880C 'angular':789C 'anim':526C,563C,583C,594C,597C,612C,631C,641C,645C,662C,679C,701C,724C,1609C,1617C,1728C 'announc':137C 'api':698C,702C,1610C,1806C,2440C,2446C,2452C 'app':60B,463C,874C,957C,1014C,1024C,1046C,1109C,1113C,1141C,1153C,1196C,1304C,1320C,1328C,1337C,1347C,1373C,1411C,1460C,1462C,1511C,1536C,1550C,1689C,1733C,2684C 'app.import':1251C 'applic':68B,482C,567C,769C,897C,906C,1096C,1171C,1228C,1281C,2492C,2533C,2569C,2594C,2655C 'approach':2309C 'architectur':525C 'argument':652C 'around':2711C 'asid':2010C 'assumpt':2479C 'async':2413C 'asynchron':1891C,2373C,2556C 'atom':2474C,2609C,2610C 'attachth':2110C 'attack':283C 'attempt':2271C 'attr':2109C 'autoprefix':190C 'avail':1239C,1277C,1698C 'availableopt':1443C 'awar':2412C,2422C 'away':176C,272C 'awesom':405C,1534C,1706C 'babel':2201C,2347C 'babeljs.io':2202C 'backword':324C 'bad':290C 'beal':2030C 'becam':28B,34B 'becom':549C,901C,1862C,1937C,2698C 'begin':21B,2713C 'behavior':968C 'believ':1641C 'best':1611C,1696C,1786C,1797C,2213C 'better':956C 'bias':795C 'bind':1016C 'bit.ly':1036C 'bit.ly/jspoll':1035C 'blangslet':1497C 'blangslet/treasure-hunt':1539C 'block':2414C,2425C,2553C,2559C,2562C 'blueprint':1118C,1124C,1135C,1144C,1165C,1214C,1293C 'blur':1485C 'boat':2308C 'born':2204C 'bower':1237C,1263C,1272C,1300C 'break':502C,2582C 'brilliant':1598C 'bring':476C,964C,1003C,1917C 'brittani':1050C 'brittanystoroz':1057C 'broadcast':1030C 'broader':524C 'browser':855C,1579C,2681C,2700C 'bryan':1478C 'build':58B,64B,765C,871C,895C,1044C,1191C,1257C,1845C,1971C,2463C,2673C 'built':1551C 'bunch':186C 'c':147C 'call':610C,1250C,2102C 'came':2287C 'cancel':2642C 'candid':2332C 'cannot':2194C 'canon':2665C 'car':2108C 'care':1894C 'career':2716C 'carrot':2076C 'case':1080C,1086C,1591C 'certifi':2723C 'champion':1543C 'chang':576C,722C,2117C,2147C,2639C,2647C,2657C 'character':1955C,1977C 'chat':873C 'chatroom':948C 'check':491C 'checkout':738C 'cheek':233C 'choic':376C,1769C 'chose':783C 'chris':78B,82C,242C 'chriseppstein':89C 'christ':236C 'chrome':1970C 'clariti':1515C 'class':1601C,2092C,2107C,2139C 'cli':63B,1049C,1090C,1095C 'client':831C,1010C,1023C,1684C,2387C,2756C 'client-first':2386C 'clock':1367C 'close':76B,80C 'closer':1660C 'code':888C,1038C,1172C,1780C,2199C,2514C 'collaps':417C 'come':558C,2339C,2630C 'command':1378C,1393C,1399C,1407C,1415C,1441C 'comment':2511C 'commiss':1986C 'commit':2607C 'common':2486C 'communiti':204C,245C,381C,400C,421C,960C,1599C,1790C,1803C,1814C,1830C,1831C,1849C,1872C,1936C,1944C,1993C,2037C 'compass':92C,160C 'compat':325C 'compet':279C 'competit':435C 'competitor':294C 'compil':151C 'complex':2674C 'compliant':2333C,2447C 'compon':1072C,1253C,1258C,1267C,1271C,1324C,1341C,1357C,1565C,1576C,1719C 'concept':2012C,2095C 'concurr':2638C 'conf':102C 'confid':307C 'config':1217C 'congrat':363C 'connect':1649C,2432C,2491C 'consid':1881C 'consist':1842C,2465C,2469C,2475C,2619C 'constrain':473C 'constraint':478C,729C,735C 'consum':1280C,1319C 'contain':1349C 'content':623C 'context':1514C,2397C 'continu':1507C 'contribut':259C,1777C,1866C 'contributor':1817C 'control':909C,914C,934C,989C,996C,1381C,2727C 'conundrum':276C 'convent':1594C 'cool':1635C 'cordova':1553C 'correct':2132C 'creat':402C,592C,912C,920C,1103C,1117C,1308C,1391C,1405C,1461C,1493C,1795C,2244C,2273C 'created.com':2041C 'created.com/ember-community-survey-2015](http://www.201-created.com/ember-community-survey-2015)':2040C 'critic':1821C 'css':1614C 'custom':59B,1045C,1435C 'cycl':820C,1965C,1973C,2565C 'd':2189C 'dan':42B,2353C 'data':2392C,2468C,2485C,2489C,2503C,2537C,2608C 'databas':2602C 'day':5A,343C,359C,2707C 'declar':1582C 'decor':2106C 'default':375C 'defin':581C,589C,639C 'demo':869C,1092C,1360C,1522C,1529C,1535C 'depend':1273C,1290C 'describ':1905C 'design':52B,73B,445C,489C,1472C,1804C,1807C,1940C 'develop':181C,467C,1592C,1596C,1958C,2389C 'didn':2520C 'die':2206C 'directori':1146C,1163C,1202C,1329C,1390C 'disagre':298C,301C 'disappear':174C 'dispar':2482C,2484C 'dist':1201C,1454C 'distribut':139C 'document':1816C 'dom':900C 'done':1765C,2251C,2659C 'draft':2329C 'dream':1555C 'drive':2383C 'duh':815C 'durabl':2470C,2477C 'e.g':189C,617C,866C,1183C,1219C,1450C,1867C,2101C,2508C,2526C 'earli':2229C,2346C 'easier':1874C,2000C 'ecma':2235C 'edit':2394C,2396C,2507C,2509C,2536C,2555C 'edward':74B,446C 'effici':2691C 'eleg':2460C 'element':661C,718C,1370C 'els':2579C 'ember':45B,54B,62B,70B,318C,522C,599C,764C,771C,784C,891C,907C,982C,1048C,1089C,1094C,1122C,1427C,1430C,1474C,1504C,1525C,1557C,1564C,1568C,1587C,1716C,1722C,1732C,1735C,1748C,1871C,1963C,2025C,2036C,2111C,2119C,2226C,2368C,2457C,2467C,2683C 'ember-flow':1721C 'ember.component':1310C 'ember.inject.service':1000C 'ember.js':787C,791C,2052C 'ember.object':998C 'emberconf':1A,566C 'encapsult':1581C 'encount':2595C 'end':164C,459C,1188C 'endur':2216C 'engag':315C 'engin':1671C,1942C,2454C,2744C 'enough':1836C 'entri':15B 'environ':2696C 'environment':2590C 'eo.model':2375C 'eo.store':2370C 'eppstein':79B,83C,243C 'es':2091C 'es2015':2198C,2302C 'es3':2263C 'es4':2274C 'es5':2290C 'es6':2221C,2297C 'es6ro5':2349C 'establish':1856C 'etc':1720C,1822C,2318C,2731C 'even':330C 'event':1018C,1757C,2409C,2433C,2490C 'everi':2341C 'everyth':1645C 'exampl':2105C 'excel':214C 'except':851C 'expect':1851C,2749C 'experi':762C,1496C,2599C 'experiment':2330C 'explod':678C 'explor':1820C 'export':1334C 'extend':995C,997C,1577C 'extens':141C,193C,593C 'eyeglass':138C,177C 'face':2021C 'fail':2277C 'fall':520C 'fallback':862C 'fast':1691C,2667C 'faster':156C,1674C 'faulkner':75B,447C 'fault':39B,2350C,2455C,2692C,2746C 'fay':868C 'featur':2064C 'file':1070C,1130C,1149C,1159C,1218C,1232C,1404C 'fill':2177C 'find':332C,1876C 'finer':1380C 'finish':2335C 'fire':552C,602C,614C,635C 'firefox':1062C,1111C 'first':30B,33B,2162C,2388C 'fit':398C,409C 'flexbox':1563C 'flexibl':471C 'fli':685C,696C 'flow':1508C,1723C 'fly-to':695C 'focus':410C,1517C 'folder':1132C 'forgiv':2498C 'forum':976C 'forward':665C,1570C,1607C,1709C,2668C 'framework':122C,351C 'friendli':1959C,2014C 'fun':136C 'function':648C,725C 'fxos':1254C,1428C,1431C 'g':983C 'gaia':1256C,1266C 'gaia-compon':1265C 'gap':542C 'gebhardt':43B,2354C 'generag':1065C 'general':530C 'generat':908C,1114C,1123C,1129C,1170C 'geoloc':804C 'get':191C,305C,1659C,1673C,1705C 'giant':1715C,2294C,2306C 'github':1538C 'github.com':179C,554C,1042C,1541C 'github.com/blangslet/treasure-hunt)':1540C 'github.com/ef4/liquid-fire':553C 'github.com/sass-eyeglass/eyeglass),':178C 'github.com/stevekinney/emberconf-chat)':1041C 'github/orbitjs':2365C 'give':860C,1512C 'given':2240C 'gmail':2527C 'go':319C,1569C,1668C 'goal':591C 'gonna':119C 'good':382C,397C,1084C,2128C 'gotcha':2140C 'great':212C,688C,1521C 'grid':1562C 'grow':44B,1734C,1751C 'h':235C 'hack':1914C 'handl':2410C 'handler':923C 'happen':1385C 'happi':1597C 'hard':121C,124C,219C,229C,2473C 'harder':380C 'hash':1446C 'hasn':133C 'heard':114C 'heavi':1678C 'helper':712C 'hole':2180C 'home':1799C 'hook':1180C,1207C,1248C,1296C,1419C 'hover':2307C 'html':2247C 'html5':2245C 'huge':1640C 'id':1463C 'idea':291C,1787C,1802C,1908C 'ie8':2266C 'ignor':287C 'illust':1978C 'illustr':1953C 'immedi':2541C 'immers':1495C 'implement':148C,693C,2131C,2134C 'import':1330C,1425C 'includ':1154C,1247C 'includedcommand':1420C 'inconsist':2631C 'increment':2260C 'infinit':470C 'inform':2376C 'init':919C 'input':537C 'insid':573C,1548C,1826C 'inspir':1967C,2173C 'instal':1264C 'instead':703C,993C,2298C 'integr':1502C 'interact':51B,1471C 'interfac':1832C,2374C,2407C,2487C,2560C 'intern':2236C 'internet':2739C 'io':1554C 'irc':2363C 'isol':2395C,2476C,2539C,2635C,2649C,2661C 'jami':1741C 'javascript':244C,1616C,1685C,2066C,2321C,2337C 'jerk':250C 'jesus':234C 'job':334C,1386C,1701C 'js':131C,202C 'json':2402C,2439C,2445C,2451C 'keyboard':275C 'keynot':77B,81C 'kick':494C 'kind':162C,415C 'kinda':248C 'kinney':773C 'know':265C,309C,1285C,1412C,1889C 'landscap':1630C 'langslet':1479C 'languag':1844C,1858C,1896C 'larger':1907C 'last':14B,27B,36B 'later':2282C 'latest':2049C 'launch':2677C 'layout':1561C 'lazi':785C 'leadership':322C 'leah':743C 'learn':295C,425C 'left':2732C 'legaci':2069C 'less':414C,2760C 'let':196C,1032C,1409C 'lib/commands':1389C,1426C 'librari':613C,632C,807C,858C,1007C 'libsass':146C,152C 'libsass.org':153C 'licens':1988C 'life':166C,346C 'lift':1679C 'like':2600C 'line':886C,1487C 'link':2360C 'linkedin':95C 'liquid':551C,568C,601C,634C,707C,710C 'liquid-each':709C 'liquid-fir':550C 'liquid-with':706C 'live':362C,539C,2258C 'll':339C,355C 'load':1823C 'local':1100C,2437C 'locat':1879C 'logic':1315C 'london':1749C 'long':864C 'lot':856C,1676C 'love':336C,353C,442C 'luck':383C 'lulz':1002C 'm':794C,1638C 'main':1621C 'maintain':126C 'mainten':90C 'make':210C,954C,1081C,1107C,1235C,1275C,1772C 'manag':575C 'mani':728C 'manifest':1069C,1116C,1156C,1231C,1403C 'march':3A 'marketplac':1076C,1458C,1470C 'match':736C 'materi':488C 'matthew':2029C 'may':19B,365C,832C 'mean':371C,2522C,2611C 'meetup':1878C 'meetup.com':1755C 'member':1753C 'memori':2436C 'men':1931C 'mentor':1818C 'merg':2153C 'messag':945C,1020C,1028C,1031C 'method':927C,1397C,1449C 'miguelcobain.github.io':740C 'miguelcobain.github.io/ember-paper/':739C 'mimic':1147C 'mini':854C 'minitalk':71B,742C 'mixin':188C,2149C 'model':2114C,2256C,2384C 'model/properties':721C 'modul':144C,580C,1128C,2222C 'modular':640C 'month':1759C 'motion':507C,528C 'move':1681C,2167C,2252C,2303C,2622C 'mover':516C 'much':155C,2759C 'music':1532C 'must':2570C,2722C 'mutat':1209C 'nail':2179C 'name':1126C,1133C,1138C,1222C,1394C 'name-of-modul':1125C 'nativ':1489C,1549C,1662C,1688C 'navig':2688C 'need':313C,876C,929C,1061C,1283C,1364C,1379C,1437C,2097C 'negat':282C 'never':340C,356C,1631C,2249C 'new':660C,2063C,2137C,2142C,2192C,2197C,2255C,2293C 'nice':225C,756C,981C,1546C 'night':1915C 'node.js':890C 'non':2420C,2424C,2558C 'non-block':2423C,2557C 'non-promis':2419C 'normal':2009C,2488C 'note':7B 'noth':2614C 'notic':570C 'npm':143C 'object':2113C,2123C 'oc':1112C 'offlin':2531C 'oh':977C 'ok':879C 'old':657C 'one':46B,368C,629C,1736C 'oop':2519C 'open':1927C 'oper':2729C 'opera':853C 'opt':2417C,2428C 'opt-in':2416C 'opt-out':2427C 'optimist':2705C 'option':1445C 'orbit':2369C,2377C,2381C,2442C 'orbit.js':2400C 'orbitj':2362C,2364C 'orbitjs.com':2367C 'organ':603C,1815C,2721C 'os':1063C 'oss':258C 'other':427C 'outlet':569C 'output':2157C 'outsid':1619C,1828C 'over':1764C 'packag':1238C,1244C,1301C 'page':1873C 'parti':806C 'partial':2626C 'particip':2217C 'pass':1451C 'patch':111C,2403C 'path':668C,1708C 'pattern':2129C,2461C 'peopl':390C,408C 'perform':1654C,1663C,2135C 'perhap':737C 'persist':2501C 'person':264C 'physic':72B,444C,472C,475C,486C,506C 'pick':391C,2227C 'pipe':844C 'pirat':1531C 'platform':1545C,1625C 'play':1034C 'pleas':2500C 'pluggabl':2390C 'plus':2702C 'pm':88C,452C,749C,778C,1056C,1484C,1747C 'point':169C 'poll':833C,865C 'pollyfil':2188C 'polyfil':1567C,2170C,2327C 'polym':57B,1477C,1506C,1527C,1560C,1566C,1589C,1603C,1717C 'portabl':1586C,2210C 'portland':104C 'posit':625C 'possibl':1798C 'postprocesstre':1184C 'practic':2214C 'pretti':681C 'preview':182C 'prime':515C 'primit':2121C,2481C 'privat':2078C 'process':1192C,2115C,2319C 'product':1457C,1593C,1961C 'progress':1262C 'project':1853C,1920C,1957C 'promis':1882C,2219C,2411C,2421C,2431C 'properti':1439C 'propos':2326C 'provid':2068C,2458C,2496C,2530C 'public':1162C 'publish':1073C,1376C,1432C 'pure':2090C 'purpos':1121C 'push':1604C 'put':1157C,2018C 'quick':2689C 'rail':101C 're':247C,692C,1792C,2672C 're-impl':691C 'reaction':532C 'readm':1835C 'real':11B,66B,767C 'real-tim':65B,766C 'realiz':2246C 'receiv':651C 'recommend':630C 'redesign':1869C 'redo':2399C,2518C 'reel':1500C 'refactor':987C 'reflect':20B,2212C 'refram':1911C 'regist':1344C 'regulatori':2720C 'reinforc':510C 'releas':1964C,1972C,2295C,2322C 'reliabl':2605C 'remi':2171C 'render':1670C 'repres':484C 'represent':903C 'represt':2666C 'request':817C,829C,2406C 'request/response':2564C 'requir':1064C,1288C,1421C,2546C 'respect':292C,508C 'respond':939C 'respons':819C,2542C 'rest':2652C 'rethink':2478C 'return':1423C 'reusabl':1584C 'revers':667C 'review':2515C 'rfc':813C 'right':175C,1193C,1996C 'rise':1658C 'role':1811C,1825C 'rout':590C,1559C 'router':588C,1602C 'rubi':127C,158C 'rule':504C,2574C 'run':1185C,1396C,1547C,1618C,1636C 'runtim':1686C 'sail':2313C 'sailboat':2312C 'sass':107C,128C,140C,150C,159C 'sasshol':241C 'schema':2380C 'search':974C 'secret':303C 'section':18B 'see':1466C 'select':1097C 'semant':2146C 'send':926C 'separ':2662C 'serious':2743C,2761C 'server':823C,835C,878C,883C,1012C,1013C,2544C,2568C,2752C 'servic':973C,980C,984C,992C 'session':803C 'set':1850C,1860C 'setunknownproperti':2151C 'setup':606C,915C,1269C,1312C 'share':596C,950C,1498C 'sharp':2172C 'shield':2586C 'shift':1725C 'ship':1174C,2336C,2719C,2725C 'short':759C 'shoulder':1713C 'show':560C,1519C 'side':2753C,2757C 'silber':744C 'similar':584C 'simpl':2459C 'snapshot':1783C 'socket':800C,812C,838C,882C,917C,967C 'socket.io':867C,1005C 'socket.on':1019C 'softwar':211C,1949C 'soon':559C,2366C 'sooner':2082C 'sorri':750C 'sourc':2382C,2391C,2415C,2426C,2435C,2483C 'spackl':2175C 'spec':490C,1606C,2193C 'spot':389C 'sproutcor':116C 'stabil':1899C,2730C 'stabl':2125C 'stack':1556C 'stagnat':1902C 'stand':1710C 'standard':2028C,2053C,2169C,2207C,2230C,2259C 'start':2081C 'state':676C,2385C,2625C 'step':271C 'steve':772C 'steve@turing.io':780C 'stevekinney':779C 'stevekinney/emberconf-chat':1040C 'stick':1898C 'still':1664C,1768C,2096C,2505C 'stop':424C 'storag':2438C 'stori':797C,2231C,2710C 'storoz':1051C 'storytim':96C 'straight':2087C 'strategi':2060C 'strawman':2324C 'street':2059C 'strength':289C,413C 'stress':2591C 'stressful':2699C 'structur':1150C 'struggl':952C 'student':1819C 'submit':943C,2640C 'subscrib':922C,1025C 'super':2145C 'support':377C,970C,2100C,2532C 'survey':2038C 'sweet':388C,682C,1459C 'synchron':2371C,2393C,2408C 'syntax':2073C,2143C 'system':2675C 'take':262C 'taken':9B,1893C 'talk':24B,454C,760C 'target':1455C 'task':2242C 'tc39':2234C 'teardown':1314C 'tech':1573C,1935C 'tell':1317C,2708C 'templat':622C,1354C,1362C 'term':1913C 'ters':1903C 'thing':1384C,1774C,1883C,1886C,2005C,2185C,2224C 'think':1997C 'this._super':2103C 'thread':1622C 'three':2136C 'time':12B,50B,67B,100C,269C,768C,1101C,1740C,2163C,2262C 'timezon':1098C,1369C 'tire':496C 'to._':1778C 'today':1574C,2670C 'togeth':1528C 'toler':40B,2351C,2456C,2693C,2747C 'tomorrow':1572C,2453C 'tomster':47B,1737C,1761C,1951C,1990C,2020C 'tool':326C,1697C,1703C,1864C,2138C 'tradit':816C 'transact':2576C,2597C,2616C,2632C 'transform':2404C 'transient':2502C 'transit':577C,579C,616C,643C,654C,670C,1730C 'transpil':2156C,2195C 'tri':689C,1793C,2343C,2494C 'trigger':732C 'true':1583C 'trust':1846C,2585C 'turmoil':1626C 'turn':230C 'twitter':786C,2361C 'two':842C,2057C 'two-way':841C,2056C 'ui':1071C,1252C,1255C 'un':921C 'underdog':1634C 'underestim':1632C 'undo':2398C,2516C,2529C 'updat':1220C 'upon':98C 'us':323C,466C 'use':198C,349C,637C,848C,928C,1079C,1085C,1088C,1167C,1205C,1242C,1245C,1291C,1322C,1339C,1418C,1524C,1571C,1590C,2047C,2072C,2079C,2264C 'user':460C,512C,535C,802C,941C,1513C,2045C,2549C,2584C,2588C,2598C,2680C,2686C,2706C 'util':931C,1182C 'ux':41B,456C,2352C,2466C,2499C,2577C 'v':2448C 'valid':1067C,1374C,1401C,1429C 'variabl':1168C,1211C 'varieti':757C 'veloc':705C 'velocity.js':627C 'version':556C,1225C,2050C 'vibrant':1939C 'view':431C 'violat':2572C 'visual':1843C,1857C 'vocabulari':1923C 'vs':1588C 'w3c':2233C 'wacki':2701C 'wait':826C 'walkthrough':1102C 'wall':2183C 'wasn':1762C 'way':379C,843C,1666C,2058C 'weak':285C 'web':700C,799C,811C,837C,881C,966C,1491C,1544C,1575C,1608C,1624C,1629C,1644C,1652C,1653C,1702C,1718C,2027C,2284C 'websit':1840C 'websocket':849C,910C,933C,985C,999C 'whatwg':2232C,2239C 'white':1742C 'win':321C,329C,331C,370C,2218C 'without':280C,501C 'women':1929C 'word':1897C 'work':93C,341C,357C,500C,1260C,1436C,2645C,2717C,2734C,2736C 'world':132C,203C,487C,1600C 'would':2248C 'wrapper':2070C 'written':1198C 'wrong':2004C 'wykatz':790C 'yeah':850C 'year':105C,2281C,2342C 'yes':1687C 'yet':2015C	published	pixelhandler
2	When I shared the data with Kris Seldon, he asked whether I had normalized the data and calculated the geometric mean, since that would be a proper way to compare benchmarks. I found the document [How not to lie with statistics, The correct way to summarize benchmark results](http://ece.uprm.edu/~nayda/Courses/Icom5047F06/Papers/paper4.pdf) by Philip J. Fleming and John J. Wallace. So, I wrote a query for my data set that would group the metrics data in an effort to normalize the measurements taken from actual users on various devices and group the measurements into the benchmarks that I could generate some reporting data from.\nTo itentify the benchmarks I could report on I wrote some filters for the various userAgent strings within my metrics data. I considered the combination of the operating system and the browser, e.g. Safari on Macintosh, or iPad combined with a type of metric, e.g. `index_view`. Then I compared the Ember versions.\n\nWith the normalized set of data, I created a query that would take the latest measurements, up to 100, from the normalized data set and calculated the geopmentric mean for the various benchmarks. I calculated the product of each duration in the normalize set; then raised that value by an exponent that is the reciprocal of the number of factors in that product. (Geometric Mean: multiply the numbers and then take the nth root of the product.) The calculation looked something like this `Math.round(Math.pow(2 * 3 * 5 * 8 * 13 * 21, 1/6) * 1000) / 1000` (I rounded to the nearest thousandth). As for the normalization of the data, the metrics can be reported by the Ember Version, platform (Macintosh/Windows) and browser (Chrome, Safari, Firefox, iPad, iPhone, Android) for the specific metric type, e.g. `index_view`, `post_view` or the `metric_table` (for the long list of 1,000 items).\n\n*I'd like to share my measurements and calculations…*\n\n## Performance Report\n\nFor the upgrade on my site to HTMLBars from Handlebars 1.3…\n\n**Across the board, for the benchmarks I am intersted in, it looks like HTMLBars brought a 10-22% gain in rendering speeds**\n\n<table>\n\t\t<caption>\n\t\t\t\tIndex View: Home Page\n\t\t</caption>\n\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tPlatform\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tBrowser\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tv1.8 Mean\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tv1.10 Mean\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tDifference\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tGain/Loss %\n\t\t\t\t\t\t</th>\n\t\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tSafari\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t162.343\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t86.653\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t75.69\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t47%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t183.794\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t187.945\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t-4.151\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t-2%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tWindows\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t136.289\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t211.616\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t-75.327\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t-55%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiOS\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiPhone\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t450.503\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t352.764\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t97.739\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t22%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t</tbody>\n\t\t<tfoot>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan='2'>Overall</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t206.89\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t186.73\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t20.16\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t10%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t</tfoot>\n</table>\n\n<br><br>\n\n<table>\n\t\t<caption>\n\t\t\t\tPost View: Article Pages\n\t\t</caption>\n\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tPlatform\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tBrowser\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tv1.8 Mean\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tv1.10 Mean\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tDifference\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tGain/Loss %\n\t\t\t\t\t\t</th>\n\t\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiOS\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiPad\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t801.595\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t375.945\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t425.65\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t53%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiOS\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiPhone\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t348.711\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t302.05\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t46.661\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t13%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tAndroid\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tVarious\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t850.716\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t862.627\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t-11.911\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t-1%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tSafari\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t109.321\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t117.684\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t-8.363\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t-8%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t145.244\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t163.481\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t-18.237\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t-13%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tWindows\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t203.063\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t232.081\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t-29.018\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t-14%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tFirefox\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t147.432\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t140.634\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t6.798\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t5%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tWindows\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tFirefox\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t200.542\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t163.704\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t36.838\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t18%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t</tbody>\n\t\t<tfoot>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan='2'>Overall</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t262.68\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t237.34\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t25.34\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t10%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t</tfoot>\n</table>\n\n<br><br>\n\n<table>\n\t\t<caption>\n\t\t\t\tMetrics Table: Long List of 1,000 Records\n\t\t</caption>\n\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tPlatform\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tBrowser\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tv1.8 Mean\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tv1.10 Mean\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th class="not-for-small-screen">\n\t\t\t\t\t\t\t\tDifference\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\tGain/Loss %\n\t\t\t\t\t\t</th>\n\t\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiOS\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiPad\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t3323.655\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t2170.638\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t1153.017\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t35%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiOS\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tiPhone\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t1580.537\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t1268.771\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t311.766\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t20%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tSafari\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t448.611\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t302.707\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t145.904\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t33%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t903.33\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t646.06\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t257.27\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t28%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tWindows\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tChrome\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t812.356\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t829.604\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t-17.248\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t-2%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tMacintosh\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\tFirefox\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t865.249\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t743.429\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t121.82\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t14%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t</tbody>\n\t\t<tfoot>\n\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan='2'>Overall</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t1069.48\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t832.20\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td class="not-for-small-screen">\n\t\t\t\t\t\t\t\t237.27\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t22%\n\t\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t</tfoot>\n</table>\n\n<br>\n\n[excel_to_html_table/]: http://pressbin.com/tools/excel_to_html_table/index.html\n\n\n## The Details\n\nBelow is a look at the calculations for each of the benchmarks that I included in the summary above.\n\n### The Index (Home) Page\n\n#### Safari on Macintosh\n\n*HTMLbars shaved of 76 milliseconds, a 46% gain in rendering speed*\n\n    {\n      fast: 32.94,\n      geometric_mean: 86.653,\n      measurments: 100,\n      name: "index_view",\n      slow: 819,\n      emberVersion: "1.10",\n      platform: "Macintosh",\n      browser: "Safari"\n    }\n\n    {\n      fast: 105.18,\n      geometric_mean: 162.343,\n      measurments: 4,\n      name: "index_view",\n      slow: 244.669,\n      emberVersion: "1.8",\n      platform: "Macintosh",\n      browser: "Safari"\n    }\n\n#### Chrome on Macintosh\n\n*Only a 4 millisecond difference, a 2% decrease in rendering speed*\n\n\t{\n\t  fast: 65.41,\n\t  geometric_mean: 187.945,\n\t  measurments: 100,\n\t  name: "index_view",\n\t  slow: 9547.233,\n\t  emberVersion: "1.10",\n\t  platform: "Macintosh",\n\t  browser: "Chrome"\n\t}\n\n\t{\n\t  fast: 90.804,\n\t  geometric_mean: 183.794,\n\t  measurments: 70,\n\t  name: "index_view",\n\t  slow: 550.173,\n\t  emberVersion: "1.8",\n\t  platform: "Macintosh",\n\t  browser: "Chrome"\n\t}\n\n#### Chrome on Windows\n\n*Handlebars 1.3 was 74 milliseconds faster, a 35% gain in rendering speed*\n\n\t{\n\t  fast: 81.023,\n\t  geometric_mean: 211.616,\n\t  measurments: 100,\n\t  name: "index_view",\n\t  slow: 1397,\n\t  emberVersion: "1.10",\n\t  platform: "Windows",\n\t  browser: "Chrome"\n\t}\n\n\t{\n\t  fast: 95.374,\n\t  geometric_mean: 136.289,\n\t  measurments: 13,\n\t  name: "index_view",\n\t  slow: 172.329,\n\t  emberVersion: "1.8",\n\t  platform: "Windows",\n\t  browser: "Chrome"\n\t}\n\n#### Android\n\n*Only had measurements on Ember v1.10.0*\n\n\t{\n\t  fast: 520.524,\n\t  geometric_mean: 841.979,\n\t  measurments: 18,\n\t  name: "index_view",\n\t  slow: 1382.816,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "Android"\n\t}\n\n#### iPad\n\n*Only had measurements on Ember v1.10.0*\n\n\t{\n\t  fast: 155,\n\t  geometric_mean: 484.614,\n\t  measurments: 34,\n\t  name: "index_view",\n\t  slow: 1120,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "iPad"\n\t}\n\n#### iPhone\n\n*HTMLBars shaved off 98 milliseconds, a 22% gain in rendering speed*\n\n\t{\n\t  fast: 143,\n\t  geometric_mean: 352.764,\n\t  measurments: 62,\n\t  name: "index_view",\n\t  slow: 1490,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "iPhone"\n\t}\n\n\t{\n\t  fast: 330,\n\t  geometric_mean: 450.503,\n\t  measurments: 7,\n\t  name: "index_view",\n\t  slow: 588,\n\t  emberVersion: "1.8",\n\t  platform: null,\n\t  browser: "iPhone"\n\t}\n\nSo for the index page the gains from HTMLBars I noticed were on Safari on Macintosh and on the iPhone. However using Chrome on Windows Handlebars was faster.\n\nI didn't have lots of data for the home page in Ember v1.8.1 but did get loads of traffic on some of my posts, let's see how the individual posts pages did.\n\n### Post (Article) Pages\n\n#### iPad\n\n*HTMLBars shaved off about 426 milliseconds, a 53% gain in rendering speed*\n\n\t{\n\t  fast: 116,\n\t  geometric_mean: 375.945,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 2051,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "iPad"\n\t}\n\n\t{\n\t  fast: 193,\n\t  geometric_mean: 801.595,\n\t  measurments: 18,\n\t  name: "post_view",\n\t  slow: 1449,\n\t  emberVersion: "1.8",\n\t  platform: null,\n\t  browser: "iPad"\n\t}\n\n#### iPhone\n\n*HTMLBars shaved off about 47 milliseconds, an 11% gain in rendering speed*\n\n\t{\n\t  fast: 8,\n\t  geometric_mean: 302.05,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 2139,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "iPhone"\n\t}\n\n\t{\n\t  fast: 174,\n\t  geometric_mean: 348.711,\n\t  measurments: 32,\n\t  name: "post_view",\n\t  slow: 985,\n\t  emberVersion: "1.8",\n\t  platform: null,\n\t  browser: "iPhone"\n\t}\n\n#### Android\n\n*Handlebars 1.3 was 12 milliseconds faster, no rendering speed gains from upgrade to HTMLBars*\n\n\t{\n\t  fast: 204.868,\n\t  geometric_mean: 862.627,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 4610.199,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "Android"\n\t}\n\n\t{\n\t  fast: 275.503,\n\t  geometric_mean: 850.716,\n\t  measurments: 74,\n\t  name: "post_view",\n\t  slow: 2747.738,\n\t  emberVersion: "1.8",\n\t  platform: null,\n\t  browser: "Android"\n\t}\n\n#### Safari on Macintosh\n\n*Handlebars 1.3 was 8 milliseconds faster, no rendering speed gains from upgrade to HTMLBars*\n\n\t{\n\t  fast: 20.164,\n\t  geometric_mean: 117.684,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 5616.18,\n\t  emberVersion: "1.10",\n\t  platform: "Macintosh",\n\t  browser: "Safari"\n\t}\n\n\t{\n\t  fast: 50.377,\n\t  geometric_mean: 109.321,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 2551.46,\n\t  emberVersion: "1.8",\n\t  platform: "Macintosh",\n\t  browser: "Safari"\n\t}\n\n#### Chrome on Macintosh\n\n*Handlebars 1.3 was 18 milliseconds faster, no rendering speed gains from upgrade to HTMLBars*\n\n\t{\n\t  fast: 19.82,\n\t  geometric_mean: 163.481,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 4220.102,\n\t  emberVersion: "1.10",\n\t  platform: "Macintosh",\n\t  browser: "Chrome"\n\t}\n\n\t{\n\t  fast: 18.673,\n\t  geometric_mean: 145.244,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 2884.554,\n\t  emberVersion: "1.8",\n\t  platform: "Macintosh",\n\t  browser: "Chrome"\n\t}\n\n#### Chrome on Windows\n\n*Handlebars 1.3 was 29 milliseconds faster, no rendering speed gains from upgrade to HTMLBars*\n\n\t{\n\t  fast: 31.697,\n\t  geometric_mean: 232.081,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 13214,\n\t  emberVersion: "1.10",\n\t  platform: "Windows",\n\t  browser: "Chrome"\n\t}\n\n\t{\n\t  fast: 56.472,\n\t  geometric_mean: 203.063,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 3696,\n\t  emberVersion: "1.8",\n\t  platform: "Windows",\n\t  browser: "Chrome"\n\t}\n\n#### Firefox on Macintosh\n\n*HTMLBars was 7 milliseconds faster, only a minor gain in rendering speed*\n\n\t{\n\t  fast: 45.745,\n\t  geometric_mean: 140.634,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 1247.685,\n\t  emberVersion: "1.10",\n\t  platform: "Macintosh",\n\t  browser: "Firefox"\n\t}\n\n\t{\n\t  fast: 71.173,\n\t  geometric_mean: 147.432,\n\t  measurments: 62,\n\t  name: "post_view",\n\t  slow: 387.791,\n\t  emberVersion: "1.8",\n\t  platform: "Macintosh",\n\t  browser: "Firefox"\n\t}\n\n#### Firefox on Windows\n\n*HTMLBars was 37 milliseconds faster, an 18% gain in rendering speed*\n\n\t{\n\t  fast: 73.865,\n\t  geometric_mean: 163.704,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 1860,\n\t  emberVersion: "1.10",\n\t  platform: "Windows",\n\t  browser: "Firefox"\n\t}\n\n\t{\n\t  fast: 69.896,\n\t  geometric_mean: 200.542,\n\t  measurments: 100,\n\t  name: "post_view",\n\t  slow: 1305.268,\n\t  emberVersion: "1.8",\n\t  platform: "Windows",\n\t  browser: "Firefox"\n\t}\n\n### Metrics Table (long list of 1,000 records)\n\n#### iPad\n\nI only had a couple measurments…\n\n*Looks like HTMLBars can be 1153 milliseconds faster, a 35% gain in rendering speed*\n\n\t{\n\t  fast: 2062,\n\t  geometric_mean: 2170.638,\n\t  measurments: 2,\n\t  name: "metrics_table",\n\t  slow: 2285,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "iPad"\n\t}\n\n\t{\n\t  fast: 3103,\n\t  geometric_mean: 3323.655,\n\t  measurments: 2,\n\t  name: "metrics_table",\n\t  slow: 3560,\n\t  emberVersion: "1.8",\n\t  platform: null,\n\t  browser: "iPad"\n\t}\n\n#### iPhone\n\n*HTMLBars was 312 milliseconds faster, a 20% gain in rendering speed*\n\n\t{\n\t  fast: 675,\n\t  geometric_mean: 1268.771,\n\t  measurments: 8,\n\t  name: "metrics_table",\n\t  slow: 1568,\n\t  emberVersion: "1.10",\n\t  platform: null,\n\t  browser: "iPhone"\n\t}\n\n\t{\n\t  fast: 871,\n\t  geometric_mean: 1580.537,\n\t  measurments: 8,\n\t  name: "metrics_table",\n\t  slow: 5380,\n\t  emberVersion: "1.8",\n\t  platform: null,\n\t  browser: "iPhone"\n\t}\n\n#### Safari on Macintosh\n\n*HTMLBars was 146 milliseconds faster, a 48% gain in rendering speed*\n\n    {\n      fast: 239.835,\n      geometric_mean: 302.707,\n      measurments: 13,\n      name: "metrics_table",\n      slow: 416.321,\n      emberVersion: "1.10",\n      platform: "Macintosh",\n      browser: "Safari"\n    }\n\n    {\n      fast: 287,\n      geometric_mean: 448.611,\n      measurments: 6,\n      name: "metrics_table",\n      slow: 568.253,\n      emberVersion: "1.8",\n      platform: "Macintosh",\n      browser: "Safari"\n    }\n\n#### Chrome on Macintosh\n\n*HTMLBars was 257 milliseconds faster, a 28% gain in rendering speed*\n\n    {\n      fast: 414.107,\n      geometric_mean: 646.06,\n      measurments: 27,\n      name: "metrics_table",\n      slow: 1584.423,\n      emberVersion: "1.10",\n      platform: "Macintosh",\n      browser: "Chrome"\n    }\n\n    {\n      fast: 457.012,\n      geometric_mean: 903.33,\n      measurments: 27,\n      name: "metrics_table",\n      slow: 1564.946,\n      emberVersion: "1.8",\n      platform: "Macintosh",\n      browser: "Chrome"\n    }\n\n#### Chrome on Windows\n\n*Handlebars 1.3 was 17 milliseconds faster, a 2% decrease in rendering speed*\n\n    {\n      fast: 615.905,\n      geometric_mean: 829.604,\n      measurments: 3,\n      name: "metrics_table",\n      slow: 1142.15,\n      emberVersion: "1.10",\n      platform: "Windows",\n      browser: "Chrome"\n    }\n\n    {\n      fast: 765.64,\n      geometric_mean: 812.356,\n      measurments: 2,\n      name: "metrics_table",\n      slow: 861.923,\n      emberVersion: "1.8",\n      platform: "Windows",\n      browser: "Chrome"\n    }\n\n#### Firefox on Windows\n\nI did not collect enough measurements to make a comparison\n\n#### Firefox on Macintosh\n\nThe data is limited to 2 and 4 measurements, I've incluced the metrics, and unique userAgents to show the individual measuremnts within the normalized set, for example the Firefox versions include versions 33.0 and 37.0.\n\n*In this limited set, HTMLBars is 122 milliseconds faster, a 14% gain in rendering speed*\n\n    {\n      "durations": [\n        696.713,\n        903.421,\n        660.65,\n        734.586\n      ],\n      "fast": 660.65,\n      "geometric_mean": 743.429,\n      "measurments": 4,\n      "metrics": [\n        {\n          "date": "2015-02-17T06:04:15.251Z",\n          "duration": 696.713,\n          "emberVersion": "1.10.0",\n          "id": "8b6994ee-268b-43ce-8f26-96ddfcf466a7",\n          "pathname": "/metrics"\n        },\n        {\n          "date": "2015-02-17T06:04:06.243Z",\n          "duration": 903.421,\n          "emberVersion": "1.10.0",\n          "id": "28bad254-c3b9-462e-9966-4bc2fcc8fc63",\n          "pathname": "/metrics"\n        },\n        {\n          "date": "2015-02-17T06:02:24.487Z",\n          "duration": 660.65,\n          "emberVersion": "1.10.0",\n          "id": "11dfee70-d635-41fd-8e69-2df4f1c70dc1",\n          "pathname": "/metrics"\n        },\n        {\n          "date": "2015-02-17T06:02:24.021Z",\n          "duration": 734.586,\n          "emberVersion": "1.10.0",\n          "id": "b58722d9-c9eb-4ab2-bac7-41ba187a3646",\n          "pathname": "/metrics"\n        }\n      ],\n      "name": "metrics_table",\n      "slow": 903.421,\n      "userAgents": [\n        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:33.0) Gecko/20100101 Firefox/33.0",\n        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:37.0) Gecko/20100101 Firefox/37.0"\n      ],\n      "emberVersion": "1.10",\n      "platform": "Macintosh",\n      "browser": "Firefox"\n    }\n\n    {\n      "metric": {\n        "durations": [\n          746.559,\n          1002.809\n        ],\n        "fast": 746.559,\n        "geometric_mean": 865.249,\n        "measurments": 2,\n        "metrics": [\n          {\n            "date": "2015-02-17T03:02:27.682Z",\n            "duration": 746.559,\n            "emberVersion": "1.8.1",\n            "id": "d828e5b6-c5c2-4fee-8bf3-2d08d97ed36d",\n            "pathname": "/metrics"\n          },\n          {\n            "date": "2015-02-17T03:02:11.844Z",\n            "duration": 1002.809,\n            "emberVersion": "1.8.1",\n            "id": "e65effb9-4756-4642-8397-1757c4f3be15",\n            "pathname": "/metrics"\n          }\n        ],\n        "name": "metrics_table",\n        "slow": 1002.809,\n        "userAgents": [\n          "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:33.0) Gecko/20100101 Firefox/33.0",\n          "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:37.0) Gecko/20100101 Firefox/37.0"\n        ],\n        "emberVersion": "1.8",\n        "platform": "Macintosh",\n        "browser": "Firefox"\n      }\n    }\n\nPerhaps I'll use the queries and API endpoints for my metrics collection and reporting to see how the next version of Ember.js does, or see how a feature change impacts performance.	Last week I posted an article about [Measuring Performance with User Timing API, in an Ember Application](/posts/measuring-performance-with-user-timing-api-in-an-ember-application) and my conclusion was… I can't make any conclusions at this point, I can only ask more questions. For example: "How do I normalize the data that I've captured and calculate the geometric means?"\n\nAt EmberConf 2015 I shared a minitalk on this same subject. I was very happy to collect the metrics in my own database and explore the measurements and to make some educated guesses about what I thought would be the the gains and losses. After looking over the raw data my best guess was that there would not be any significant speed improvements for users browsing my site with a desktop browser. However, for visitors on a newer mobile device, like an iPad or iPhone, perhaps the speed would be about 25% to 50% faster for them.	how-much-faster-is-htmlbars-than-handlebars	How Much Faster is HTMLBars Than Handlebars?	2015-03-08	2015-05-07 17:03:21.218462	2015-12-29 05:50:55.127166	1	'-02':1769C,1790C,1812C,1833C,1900C,1921C '-1':575C '-11.911':574C '-13':587C '-14':593C '-17':1770C,1791C,1813C,1834C,1901C,1922C '-17.248':655C '-1757':1936C '-18.237':586C '-2':528C,656C '-22':500C '-29.018':592C '-4':1806C '-4.151':527C '-4642':1934C '-4756':1933C '-55':534C '-75.327':533C '-8':581C '-8.363':580C '-8397':1935C '/metrics':1787C,1809C,1830C,1851C,1918C,1939C '/posts/measuring-performance-with-user-timing-api-in-an-ember-application':25B '/tools/excel_to_html_table/index.html':674C '/~nayda/courses/icom5047f06/papers/paper4.pdf)':207C '000':459C,617C,1429C '02':1815C,1836C,1903C,1924C '04':1772C,1793C '06.243':1794C '1':458C,616C,1428C '1.10':727C,777C,828C,871C,896C,926C,1040C,1089C,1140C,1193C,1246C,1299C,1350C,1400C,1465C,1513C,1563C,1613C,1664C,1881C '1.10.0':1778C,1799C,1821C,1842C '1.3':482C,804C,1114C,1167C,1220C,1273C,1640C '1.8':745C,795C,846C,944C,1058C,1107C,1158C,1211C,1264C,1317C,1368C,1418C,1483C,1531C,1581C,1631C,1682C,1969C '1.8.1':1909C,1930C '1/6':404C '10':499C,545C,610C '10.10':1864C,1875C,1952C,1963C '100':331C,720C,770C,821C,1033C,1082C,1133C,1186C,1204C,1239C,1257C,1292C,1310C,1343C,1393C,1411C '1000':405C,406C '1002.809':1889C,1928C,1944C '105.18':733C '1069.48':664C '109.321':578C,1202C '11':1071C '11.844':1925C '1120':894C '1142.15':1662C '1153':1443C '1153.017':631C '116':1028C '117.684':579C,1184C '11dfee70':1824C '11dfee70-d635-41fd-8e69-2df4f1c70dc1':1823C '12':1116C '121.82':661C '122':1745C '1247.685':1348C '1268.771':636C,1504C '13':402C,569C,839C,1556C '1305.268':1416C '13214':1297C '136.289':531C,837C '1382.816':869C '1397':826C '14':662C,1749C '140.634':597C,1341C '143':914C '1449':1056C '145.244':584C,1255C '145.904':643C '146':1541C '147.432':596C,1359C '1490':924C '15.251':1773C '155':884C '1564.946':1629C '1568':1511C '1580.537':635C,1522C '1584.423':1611C '162.343':519C,736C '163.481':585C,1237C '163.704':603C,1391C '17':1642C '172.329':844C '174':1095C '18':605C,864C,1051C,1222C,1382C '18.673':1252C '183.794':525C,786C '186.73':543C '1860':1398C '187.945':526C,768C '19.82':1234C '193':1046C '2':398C,759C,1458C,1476C,1646C,1675C,1708C,1896C '20':638C,1495C '20.16':544C '20.164':1181C '200.542':602C,1409C '2015':64B,1768C,1789C,1811C,1832C,1899C,1920C '203.063':590C,1308C '204.868':1128C '2051':1038C '206.89':542C '2062':1453C '21':403C '211.616':532C,819C '2139':1087C '2170.638':630C,1456C '22':540C,667C,908C '2285':1463C '232.081':591C,1290C '237.27':666C '237.34':608C '239.835':1551C '24.021':1837C '24.487':1816C '244.669':743C '25':153B '25.34':609C '2551.46':1209C '257':1591C '257.27':649C '262.68':607C '268b':1782C '27':1606C,1624C '27.682':1904C '2747.738':1156C '275.503':1146C '28':650C,1595C '287':1569C '2884.554':1262C '28bad254':1802C '28bad254-c3b9-462e':1801C '29':1275C '2d08d97ed36d':1916C '2df4f1c70dc1':1828C '3':399C,1657C '302.05':567C,1080C '302.707':642C,1554C '31.697':1287C '3103':1471C '311.766':637C '312':1491C '32':1100C '32.94':715C '33':644C '33.0':1736C,1866C,1954C '330':932C '3323.655':629C,1474C '34':889C '348.711':566C,1098C '35':632C,810C,1447C '352.764':538C,917C '3560':1481C '36.838':604C '3696':1315C '37':1378C '37.0':1738C,1877C,1965C '375.945':561C,1031C '387.791':1366C '4':738C,755C,1710C,1765C '414.107':1601C '416.321':1561C '41ba187a3646':1849C '41fd':1826C '4220.102':1244C '425.65':562C '426':1019C '43ce':1783C '448.611':641C,1572C '45.745':1338C '450.503':537C,935C '457.012':1619C '46':709C '46.661':568C '4610.199':1138C '462e':1804C '47':522C,1068C '48':1545C '484.614':887C '4ab2':1847C '4fee':1914C '5':400C,599C '50':155B '50.377':1199C '520.524':859C '53':563C,1022C '5380':1529C '550.173':793C '56.472':1305C '5616.18':1191C '568.253':1579C '588':942C '6':1574C '6.798':598C '615.905':1652C '62':919C,1361C '646.06':648C,1604C '65.41':765C '660.65':1757C,1760C,1819C '675':1501C '69.896':1406C '696.713':1755C,1776C '7':937C,1327C '70':788C '71.173':1356C '73.865':1388C '734.586':1758C,1840C '74':806C,1151C '743.429':660C,1763C '746.559':1888C,1891C,1907C '75.69':521C '76':706C '765.64':1670C '8':401C,1077C,1169C,1506C,1524C '801.595':560C,1049C '81.023':816C '812.356':653C,1673C '819':725C '829.604':654C,1655C '832.20':665C '841.979':862C '850.716':572C,1149C '86.653':520C,718C '861.923':1680C '862.627':573C,1131C '865.249':659C,1894C '871':1519C '8b6994ee':1781C '8b6994ee-268b-43ce-8f26-96ddfcf466a7':1780C '8bf3':1915C '8e69':1827C '8f26':1784C '90.804':783C '903.33':647C,1622C '903.421':1756C,1797C,1856C '95.374':834C '9547.233':775C '96ddfcf466a7':1785C '97.739':539C '98':905C '985':1105C '9966':1805C 'across':483C 'actual':240C 'android':438C,570C,851C,875C,1112C,1144C,1162C 'api':20B,1981C 'applic':24B 'articl':13B,548C,1012C 'ask':42B,166C 'b58722d9':1845C 'b58722d9-c9eb-4ab2-bac7-41ba187a3646':1844C 'bac7':1848C 'bc2fcc8fc63':1807C 'benchmark':187C,203C,251C,263C,345C,488C,688C 'best':113B 'board':485C 'brought':497C 'brows':127B 'browser':133B,291C,432C,510C,551C,620C,730C,748C,780C,798C,831C,849C,874C,899C,929C,947C,1043C,1061C,1092C,1110C,1143C,1161C,1196C,1214C,1249C,1267C,1302C,1320C,1353C,1371C,1403C,1421C,1468C,1486C,1516C,1534C,1566C,1584C,1616C,1634C,1667C,1685C,1884C,1972C 'c3b9':1803C 'c4f3be15':1937C 'c5c2':1913C 'c9eb':1846C 'calcul':58B,174C,338C,347C,391C,469C,683C 'captur':56B 'chang':2003C 'chrome':433C,524C,530C,583C,589C,646C,652C,750C,781C,799C,800C,832C,850C,971C,1216C,1250C,1268C,1269C,1303C,1321C,1586C,1617C,1635C,1636C,1668C,1686C 'collect':78B,1693C,1986C 'combin':284C,298C 'compar':186C,309C 'comparison':1699C 'conclus':28B,35B 'consid':282C 'correct':199C 'could':254C,265C 'coupl':1436C 'creat':320C 'd':462C 'd635':1825C 'd828e5b6':1912C 'd828e5b6-c5c2-4fee-8bf3-2d08d97ed36d':1911C 'data':52B,111B,161C,172C,223C,230C,258C,280C,318C,335C,419C,983C,1704C 'databas':84B 'date':1767C,1788C,1810C,1831C,1898C,1919C 'decreas':760C,1647C 'desktop':132B 'detail':676C 'devic':141B,244C 'didn':978C 'differ':515C,556C,625C,757C 'document':191C 'durat':352C,1754C,1775C,1796C,1818C,1839C,1887C,1906C,1927C 'e.g':292C,304C,444C 'e65effb9':1932C 'ece.uprm.edu':206C 'ece.uprm.edu/~nayda/courses/icom5047f06/papers/paper4.pdf)':205C 'educ':93B 'effort':233C 'ember':23B,311C,427C,856C,881C,989C 'ember.js':1996C 'emberconf':63B 'embervers':726C,744C,776C,794C,827C,845C,870C,895C,925C,943C,1039C,1057C,1088C,1106C,1139C,1157C,1192C,1210C,1245C,1263C,1298C,1316C,1349C,1367C,1399C,1417C,1464C,1482C,1512C,1530C,1562C,1580C,1612C,1630C,1663C,1681C,1777C,1798C,1820C,1841C,1880C,1908C,1929C,1968C 'endpoint':1982C 'enough':1694C 'exampl':46B,1730C 'excel':668C 'explor':86B 'expon':363C 'factor':372C 'fast':714C,732C,764C,782C,815C,833C,858C,883C,913C,931C,1027C,1045C,1076C,1094C,1127C,1145C,1180C,1198C,1233C,1251C,1286C,1304C,1337C,1355C,1387C,1405C,1452C,1470C,1500C,1518C,1550C,1568C,1600C,1618C,1651C,1669C,1759C,1890C 'faster':3A,156B,808C,976C,1118C,1171C,1224C,1277C,1329C,1380C,1445C,1493C,1543C,1593C,1644C,1747C 'featur':2002C 'filter':271C 'firefox':435C,595C,601C,658C,1322C,1354C,1372C,1373C,1404C,1422C,1687C,1700C,1732C,1885C,1973C 'firefox/33.0':1868C,1956C 'firefox/37.0':1879C,1967C 'fleme':211C 'found':189C 'gain':103B,501C,710C,811C,909C,955C,1023C,1072C,1122C,1175C,1228C,1281C,1333C,1383C,1448C,1496C,1546C,1596C,1750C 'gain/loss':516C,557C,626C 'gecko/20100101':1867C,1878C,1955C,1966C 'generat':255C 'geometr':60B,176C,376C,716C,734C,766C,784C,817C,835C,860C,885C,915C,933C,1029C,1047C,1078C,1096C,1129C,1147C,1182C,1200C,1235C,1253C,1288C,1306C,1339C,1357C,1389C,1407C,1454C,1472C,1502C,1520C,1552C,1570C,1602C,1620C,1653C,1671C,1761C,1892C 'geopmentr':340C 'get':993C 'group':227C,246C 'guess':94B,114B 'handlebar':7A,481C,803C,974C,1113C,1166C,1219C,1272C,1639C 'happi':76B 'home':507C,698C,986C 'howev':134B,969C 'html':670C 'htmlbar':5A,479C,496C,703C,902C,957C,1015C,1064C,1126C,1179C,1232C,1285C,1325C,1376C,1440C,1489C,1539C,1589C,1743C 'id':1779C,1800C,1822C,1843C,1910C,1931C 'impact':2004C 'improv':124B 'incluc':1714C 'includ':691C,1734C 'index':305C,445C,505C,697C,722C,740C,772C,790C,823C,841C,866C,891C,921C,939C,952C 'individu':1007C,1723C 'intel':1860C,1871C,1948C,1959C 'interst':491C 'io':535C,558C,564C,627C,633C 'ipad':144B,297C,436C,559C,628C,876C,900C,1014C,1044C,1062C,1431C,1469C,1487C 'iphon':146B,437C,536C,565C,634C,901C,930C,948C,968C,1063C,1093C,1111C,1488C,1517C,1535C 'item':460C 'itentifi':261C 'j':210C,214C 'john':213C 'kris':163C 'last':8B 'latest':327C 'let':1002C 'lie':195C 'like':142B,394C,463C,495C,1439C 'limit':1706C,1741C 'list':456C,614C,1426C 'll':1976C 'load':994C 'long':455C,613C,1425C 'look':107B,392C,494C,680C,1438C 'loss':105B 'lot':981C 'mac':1861C,1872C,1949C,1960C 'macintosh':295C,517C,523C,576C,582C,594C,639C,645C,657C,702C,729C,747C,752C,779C,797C,964C,1165C,1195C,1213C,1218C,1248C,1266C,1324C,1352C,1370C,1538C,1565C,1583C,1588C,1615C,1633C,1702C,1859C,1870C,1883C,1947C,1958C,1971C 'macintosh/windows':430C 'make':33B,91B,1697C 'math.pow':397C 'math.round':396C 'mean':61B,177C,341C,377C,512C,514C,553C,555C,622C,624C,717C,735C,767C,785C,818C,836C,861C,886C,916C,934C,1030C,1048C,1079C,1097C,1130C,1148C,1183C,1201C,1236C,1254C,1289C,1307C,1340C,1358C,1390C,1408C,1455C,1473C,1503C,1521C,1553C,1571C,1603C,1621C,1654C,1672C,1762C,1893C 'measur':15B,88B,237C,248C,328C,467C,719C,737C,769C,787C,820C,838C,854C,863C,879C,888C,918C,936C,1032C,1050C,1081C,1099C,1132C,1150C,1185C,1203C,1238C,1256C,1291C,1309C,1342C,1360C,1392C,1410C,1437C,1457C,1475C,1505C,1523C,1555C,1573C,1605C,1623C,1656C,1674C,1695C,1711C,1764C,1895C 'measuremnt':1724C 'metric':80B,229C,279C,303C,421C,442C,451C,611C,1423C,1460C,1478C,1508C,1526C,1558C,1576C,1608C,1626C,1659C,1677C,1716C,1766C,1853C,1886C,1897C,1941C,1985C 'millisecond':707C,756C,807C,906C,1020C,1069C,1117C,1170C,1223C,1276C,1328C,1379C,1444C,1492C,1542C,1592C,1643C,1746C 'minitalk':68B 'minor':1332C 'mobil':140B 'mozilla/5.0':1858C,1869C,1946C,1957C 'much':2A 'multipli':378C 'name':721C,739C,771C,789C,822C,840C,865C,890C,920C,938C,1034C,1052C,1083C,1101C,1134C,1152C,1187C,1205C,1240C,1258C,1293C,1311C,1344C,1362C,1394C,1412C,1459C,1477C,1507C,1525C,1557C,1575C,1607C,1625C,1658C,1676C,1852C,1940C 'nearest':411C 'newer':139B 'next':1993C 'normal':50B,170C,235C,315C,334C,355C,416C,1727C 'notic':959C 'nth':385C 'null':873C,898C,928C,946C,1042C,1060C,1091C,1109C,1142C,1160C,1467C,1485C,1515C,1533C 'number':370C,380C 'oper':287C 'os':1862C,1873C,1950C,1961C 'overal':541C,606C,663C 'page':508C,549C,699C,953C,987C,1009C,1013C 'pathnam':1786C,1808C,1829C,1850C,1917C,1938C 'perform':16B,470C,2005C 'perhap':147B,1974C 'philip':209C 'platform':429C,509C,550C,619C,728C,746C,778C,796C,829C,847C,872C,897C,927C,945C,1041C,1059C,1090C,1108C,1141C,1159C,1194C,1212C,1247C,1265C,1300C,1318C,1351C,1369C,1401C,1419C,1466C,1484C,1514C,1532C,1564C,1582C,1614C,1632C,1665C,1683C,1882C,1970C 'point':38B 'post':11B,447C,546C,1001C,1008C,1011C,1035C,1053C,1084C,1102C,1135C,1153C,1188C,1206C,1241C,1259C,1294C,1312C,1345C,1363C,1395C,1413C 'pressbin.com':673C 'pressbin.com/tools/excel_to_html_table/index.html':672C 'product':349C,375C,389C 'proper':183C 'queri':220C,322C,1979C 'question':44B 'rais':358C 'raw':110B 'reciproc':367C 'record':618C,1430C 'render':503C,712C,762C,813C,911C,1025C,1074C,1120C,1173C,1226C,1279C,1335C,1385C,1450C,1498C,1548C,1598C,1649C,1752C 'report':257C,266C,424C,471C,1988C 'result':204C 'root':386C 'round':408C 'rv':1865C,1876C,1953C,1964C 'safari':293C,434C,518C,577C,640C,700C,731C,749C,962C,1163C,1197C,1215C,1536C,1567C,1585C 'see':1004C,1990C,1999C 'seldon':164C 'set':224C,316C,336C,356C,1728C,1742C 'share':66B,159C,465C 'shave':704C,903C,1016C,1065C 'show':1721C 'signific':122B 'sinc':178C 'site':129B,477C 'slow':724C,742C,774C,792C,825C,843C,868C,893C,923C,941C,1037C,1055C,1086C,1104C,1137C,1155C,1190C,1208C,1243C,1261C,1296C,1314C,1347C,1365C,1397C,1415C,1462C,1480C,1510C,1528C,1560C,1578C,1610C,1628C,1661C,1679C,1855C,1943C 'someth':393C 'specif':441C 'speed':123B,149B,504C,713C,763C,814C,912C,1026C,1075C,1121C,1174C,1227C,1280C,1336C,1386C,1451C,1499C,1549C,1599C,1650C,1753C 'statist':197C 'string':276C 'subject':72B 'summar':202C 'summari':694C 'system':288C 't03':1902C,1923C 't06':1771C,1792C,1814C,1835C 'tabl':452C,612C,671C,1424C,1461C,1479C,1509C,1527C,1559C,1577C,1609C,1627C,1660C,1678C,1854C,1942C 'take':325C,383C 'taken':238C 'thought':98B 'thousandth':412C 'time':19B 'traffic':996C 'type':301C,443C 'uniqu':1718C 'upgrad':474C,1124C,1177C,1230C,1283C 'use':970C,1977C 'user':18B,126B,241C 'userag':275C,1719C,1857C,1945C 'v1.10':513C,554C,623C 'v1.10.0':857C,882C 'v1.8':511C,552C,621C 'v1.8.1':990C 'valu':360C 'various':243C,274C,344C,571C 've':55B,1713C 'version':312C,428C,1733C,1735C,1994C 'view':306C,446C,448C,506C,547C,723C,741C,773C,791C,824C,842C,867C,892C,922C,940C,1036C,1054C,1085C,1103C,1136C,1154C,1189C,1207C,1242C,1260C,1295C,1313C,1346C,1364C,1396C,1414C 'visitor':136B 'wallac':215C 'way':184C,200C 'week':9B 'whether':167C 'window':529C,588C,600C,651C,802C,830C,848C,973C,1271C,1301C,1319C,1375C,1402C,1420C,1638C,1666C,1684C,1689C 'within':277C,1725C 'would':99B,118B,150B,180C,226C,324C 'wrote':218C,269C 'x':1863C,1874C,1951C,1962C 'z':1774C,1795C,1817C,1838C,1905C,1926C	published	pixelhandler
5	This article is a brief overview of both Web Components and Ember Components as well as a comparison of the two. You will see examples of blurring the lines between native Web Components and Ember components. Bits and pieces from the various specification(s), documentation sites and tutorials are highlighted (copied straightaway, follow links to see the full details). *The HTMLRocks tutorials were borrowed (copied) from heavily.*\nWith the _Ember 2.X Evolution_ under way, you will have a new generation of first class citizens for your DOM, Ember.Components. Perhaps this overview will help you to design your Ember Components with future standards in mind, learn how to use native Web Components in synchronicity with Ember Components, and learn how to upgrade a native Web Component to an Ember.Component.\n\n## An Ember.Component\n\nAn [Ember.Component] is a view that is completely isolated.\n\n* Property access in its templates go to the view object\n* Actions are targeted at the view object\n* No access to the surrounding context or outer controller\n* All contextual information must be passed into the component\n\n[Ember.Component]: http://emberjs.com/api/classes/Ember.Component.html\n\n### Commonly Used Properties, Methods & Events…\n\n`tagName`, `layoutName`, `willInsertElement`, `didInsertElement`, `actions`, `sendAction`, `targetObject`, `willDestroyElement`, `$`, `on`, `off`\n\n\n## A Web Component\n\nA Draft of Specifications:  \n\n* [Template][W3C Template Element] (HTML5)\n* [HTMLImport][W3C HTML Imports] (Working Draft)\n* [Custom Element][W3C Custom Elements] (Editor's Draft)\n* [Shadow DOM][W3C Shadow DOM] (Editor's Draft)\n\n[W3C Template Element]: http://www.w3.org/TR/html5/scripting-1.html#the-template-element\n[W3C HTML Imports]: http://www.w3.org/TR/html-imports/\n[W3C Custom Elements]: http://w3c.github.io/webcomponents/spec/custom/\n[W3C Shadow DOM]: http://w3c.github.io/webcomponents/spec/shadow/\n\n### Template\n\nThe [Template][W3C Template Element] element is used to declare fragments of HTML that can be cloned and inserted in the document by script.\n\nWhen web pages dynamically alter the contents of their documents, they may require fragments of HTML which may require further modification before use, e.g the insertion of values appropriate for the usage context.\n\n`template.content` Returns the template contents, which are stored in a DocumentFragment associated with a different Document (to avoid the template contents interfering with the main Document).\n\nThe template element doesn't provide data binding. `<template>` provides an ability to insert 'inert HTML tags' into a document, using inert HTML tags.\n\n* Inlined scripts won't be executed without being stamped out\n* Resources such as `<img>` or `<video>` won't be fetched without being stamped out\n\nTo define a template, simply wrap your content with a `<template>` tag.\n\nIn order to stamp out the `<template>`, you'll need to write a bit of JavaScript.\n\n<sup>Some content in the summaries above were taken directly from the [W3C docs][Web Component] and the [HTMLRocks Tutorials]</sup>\n\n[W3C Template Element]: http://www.w3.org/TR/html5/scripting-1.html#the-template-element\n[HTMLRocks Tutorials]: http://www.html5rocks.com/en/search?q=Web+Components\n\n#### More info\n\n* [Introduction to Template Element](http://webcomponents.org/articles/introduction-to-template-element/)\n* [http://www.w3.org/TR/html5/scripting-1.html#the-template-element](http://www.w3.org/TR/html5/scripting-1.html#the-template-element)\n\n\n### HTMLImport\n\n[HTML Imports][W3C HTML Imports] are a way to include and reuse HTML documents in other HTML documents.\n\n_Imports_ are HTML docs, linked as external resources, from another HTML doc. The document that links to an import is called an _import referrer_. An import has an _import referrer ancestor_ as its import referrer.\n\nAn import referrer which has its own browsing context is called a _master document_. Each import is associated with one master document.\n\nThe URL of an import is called the _import location_. In the import referrer, an import is represented as a Document, called the imported document. The imported documents don't have browsing context.\n\nThe set of all imports associated with the master document forms an _import map_ of the master document. The maps stores imports as its items with their import locations as keys.\n\n[W3C HTML Imports]: http://www.w3.org/TR/html-imports/\n\n<sup>Most of the content in the summaries above were copied directly from the [W3C docs][Web Component] and the [HTMLRocks Tutorials]</sup>\n\n#### [Mozilla won't ship HTML Imports][Mozilla and Web Components]\n[Mozilla and Web Components]: https://hacks.mozilla.org/2014/12/mozilla-and-web-components/\n\n\n### Custom Element\n\n[Custom Elements] provides a way for Web developers to build their own, fully-featured DOM elements.\n\nIt's possible to create DOM elements with any tag names in HTML, but these elements aren't very functional. Custom elements inform the parser how to properly construct an element & to react to lifecycle changes.\n\n_Rationalize the platform._ The spec ensures that all of its new features & abilities are in concert with how the relevant bits of the Web platform work today\n\n#### Lifecycle: Types of Callbacks\n\n* `createdCallback` - invoked after custom element instance is created and its definition is registered\n* `attachedCallback` - whenever custom element is inserted into a document\n* `detachedCallback` - whenever custom element is removed from the documen\n* `attributeChangedCallback` - whenever custom element's attribute is added, changed or removed.\n\n<sup>Most of the content in the summaries above were copied directly from the [W3C docs][Web Component] and the [HTMLRocks Tutorials]</sup>\n\n[Custom Elements]: http://w3c.github.io/webcomponents/spec/custom/\n\n### Shadow DOM\n\n"A particularly pernicious aspect of the lack of encapsulation is that if you upgrade the library and the internal details of the widget’s DOM changes, your styles and scripts might break in unpredictable ways." -HTMLRocks tutorial\n\n[Shadow DOM][W3C Shadow DOM] addresses the DOM tree encapsulation problem.\n\nElements can get a new kind of node associated with them, a _shadow root_. An element with a shadow root is a _shadow host_. The content of a shadow host isn’t rendered; the content of the shadow root is rendered instead.\n\nWith Shadow DOM, all markup and CSS are scoped to the host element. CSS styles defined inside a Shadow Root won't affect its parent document, CSS styles defined outside the Shadow Root won't affect the main page.\n\n<sup>Most of the content in the summaries above were copied directly from the [W3C docs][Web Component] and the [HTMLRocks Tutorials]</sup>\n\n#### Tutorials\n\n* [Shadow DOM 101]\n* [Shadow DOM 201]\n* [Shadow DOM 301]\n\n[W3C Shadow DOM]: http://w3c.github.io/webcomponents/spec/shadow/\n[Shadow DOM 101]: http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/\n[Shadow DOM 201]: http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom-201/ "CSS and Styling - HTML5 Rocks"\n[Shadow DOM 301]: http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom-301/ "Advanced Concepts & DOM APIs - HTML5 Rocks"\n\n\n## Compare & Contrast…\n\n_How do the two components line up? Can they work together? What are the differences?_\n\n### Ember.Component\n\n* Scope is isolated, only knows the context passed in. Compared with a view that knows the scope of the current controller. Body of component (between the opening and closing tags) is in the same scope of the template it belongs too.\n* No encapsulation of styles, best to use a custom element and define a base style for the component.\n* You can use in an Ember App today, in any modern browser.\n* Specification - only works with Ember.js\n* Can use a 'layout' (template); compile with your build pipeline, e.g. ember-cli\n* Built-in data-binding (using Ember)\n* Lifecycle callbacks (Events): `didInsertElement`, `parentViewDidChange`, `willClearRender`, `willDestroyElement`, `willInsertElement`\n* Create components that extend from other components\n* Bundle custom functionality into a single component\n* Use a custom tagName (custom element)\n* How do you distribute components, the Ember CLI 'addons' story is still in its infancy but becoming more attractive\n\n### Web Component: Custom Element\n\n* [caniuse Custom Element](http://caniuse.com/#search=Custom%20Element)\n* Feature detecting is a matter of checking if `document.registerElement()` exists\n* The most important API primitive under the Web Components umbrella\n* Define new HTML/DOM elements\n* Create elements that extend from other elements\n* Logically bundle together custom functionality into a single tag\n* Extend the API of existing DOM elements\n\n    var XFoo = document.registerElement('x-foo', {\n      prototype: Object.create(HTMLElement.prototype, {\n        bar: {\n          get: function() { return 5; }\n        },\n        foo: {\n          value: function() {\n            alert('foo() called');\n          }\n        }\n      })\n    });\n\nLifecycle callback methods:  \n\n* `createdCallback` an instance of the element is created\n* `attachedCallback` an instance was inserted into the document\n* `detachedCallback` an instance was removed from the document\n* `attributeChangedCallback(attrName, oldVal, newVal)` an attribute was added, removed, or updated\n\n\n### Web Component: Shadow DOM\n\n* [caniuse Shadow DOM](http://caniuse.com/#search=Shadow%20DOM)\n* Shadow DOM is 'really' completely _isolated_, both in scope (context) and style.\n* The shadow root has it's own stylesheet.\n* There is a way with CSS to define styles outside of the component using `::shadow` pseudo-element.\n* By 'really' _isolated_ we mean there is only a couple backdoors e.g. `::shadow` or `/deep/` using CSS or JavaScript (`querySelector`)\n* You can use only in Chrome\n* Specification is a work in progress\n\nFor example, if an element is hosting a shadow root, you can write `#host::shadow span {}` to style all of the spans within its shadow tree.\n\n_(Code samples borrowed from HTMLRocks tutorials)_\n\n    <style>\n      #host::shadow span { color: red; }\n    </style>\n    <div id="host"><span>Light DOM</span></div>\n    <script>\n      var host = document.querySelector('div');\n      var root = host.createShadowRoot();\n      root.innerHTML = '<span>Shadow DOM</span>' + \n                       '<content></content>';\n    </script>\n\nUsing JavaScript can the shadow tree be accessed? Yes, with the power comes the responsibility to respect encapsulation.\n\n    document.querySelector('x-tabs::shadow x-panel::shadow #foo');\n\nDo the `::shadow` pseudo-element and `/deep/` combinator defeat the purpose of style encapsulation? Shadow DOM prevents accidental styling from outsiders but never promises to be a bullet proof vest.\n\nDevelopers should be allowed to intentionally style inner parts of your Shadow tree...if they know what they're doing. Having more control is also good for flexibility, theming, and the re-usability of your elements.\n\n<sup>Some of the content above was copied directly from the [W3C docs][Web Component] and the [HTMLRocks Tutorials]</sup>\n\n### Web Component: HTMLImport\n\n* [caniuse HTML Import](http://caniuse.com/#search=HTML%20Import)\n* To detect support, check if .import exists on the <link> element `'import' in document.createElement('link')`\n* How many imports to you want to link to in the head of a document.\n* Perhaps you still need a build pipeline to minimize http requests\n* An import is just a document. The content of an import is called an `import` document `$('link[rel="import"]')[0].import;`\n* Script in the import is executed in the context of the window that contains the importing document\n* Imports do not block parsing of the main page\n* The HTML Template element is a natural fit for HTML Imports\n* An ideal way to distribute Web Components\n\n### Web Component: Template Element\n\n* [caniuse Template](http://caniuse.com/#search=Template)\n* Looks good to go in modern browsers (not Internet Explorer)\n* _No built-in data-bindings_, use Object.observe\n* [caniuse Object.observe](http://caniuse.com/#search=Object.observe)\n* Feature detect `<template>`, create the DOM element and check that the .content property exists - `'content' in document.createElement('template')`\n* Content is effectively inert until activated\n* Content within a template won't have side effects\n* Content is considered not to be in the document\n* The .content property is a read-only `DocumentFragment` containing the guts of the template\n* Create a deep copy of its .content using `document.importNode()`\n\n    var t = document.querySelector('#mytemplate');\n    // Populate the src at runtime.\n    t.content.querySelector('img').src = 'logo.png';\n\n    var clone = document.importNode(t.content, true);\n    document.body.appendChild(clone);\n\n\n## Blurring the lines between Web Components and Ember.Component\n\nBelow are a few code samples showing how to use the `tagName` of your Ember component that is based on a Custom Element (Web Component).\n\nSee the jsbin and github repos for demo links to inspect and see the code in action. Checkout the shadow root in your developer tools to see the shadow root of the Web components.\n\n### Upgrade a native Custom Element into a Web Component  \n\n* See [jayphelps jsbin](http://jsbin.com/hafivocecu/1/edit?html,js,output) (code samples below copied from this jsbin)\n\n\n    <script type="text/x-handlebars">\n      {{input value=value}}\n      <x-ember class="blue"></x-ember>\n      <x-native foo={{value}} class="red">\n        {{value}}\n      </x-native>\n    </script>\n\n    <script type="text/x-handlebars" data-template-name="components/x-ember">\n      I am an ember component\n    </script>\n\nSetup component generation...\n\n    window.EmberENV = {\n      FEATURES: {\n        'ember-htmlbars-component-generation': true\n      }\n    };\n\nCreate a native Web Component...\n\n    // Native Web Component\n    function XNativeElement() {}\n\n    XNativeElement.prototype = Object.create(HTMLElement.prototype);\n\n    document.registerElement('x-native', XNativeElement);\n\n    // Upgraded to an Ember Component using `x-native` element\n    App.XNativeComponent = Ember.Component.extend({\n      tagName: 'x-native',\n      attributeBindings: ['foo']\n    });\n\n### Upgrading a Web Component to an Ember.Component\n\n* [alert-box-web-components](https://github.com/pixelhandler/alert-box-web-components) - see examples/app.html\n\nI found that in Chrome, which supports Web Components, I can use a Custom Element as the `tagName` for an Ember Component. I reap the benefit from the behaviors provided by the native Web Component and the bindings provided by an Ember Component.\n\n#### Alert Box Web Components Demos\n\nThese three demos show examples of using only Web Components, upgrading a Web Component to an Ember Component, and converting the Web Component to an Ember Component.\n\n* [pixelhandler/alert-box-web-components](https://github.com/pixelhandler/alert-box-web-components#alert-box) - Repository for a native Web Component\n* [Web Component only](http://pixelhandler.github.io/alert-box-web-components/example/) - Example of the native Web Component in action\n* [Ember.js app using (native) Web Component](http://pixelhandler.github.io/alert-box-web-components/example/app.html) - Upgraded Web Component to an Ember Component\n* [As an Ember.Component only](http://pixelhandler.github.io/alert-box-web-components/example/ember-component.html) - Borrowed styles and behavior from the Web Component but only done in Ember\n\n\n#### Alert Box Web Component Code:\n\n    <!--\n      Web Component: Alert Box\n    -->\n    <template id="alert-box">\n      <style>\n        html {\n          box-sizing: border-box;\n        }\n        *, *:before, *:after {\n          box-sizing: inherit;\n        }\n\n        /* alert-box */\n        :host {\n          display: none;\n          width: 400px;\n          margin: 15px 0;\n        }\n        :host(.ready) {\n          display: block;\n        }\n\n        section {\n          background-color: #337ab7;\n        }\n        :host(.red) section,\n        :host([type="danger"]) section,\n        :host([type="fail"]) section {\n          background-color: #D9534F;\n        }\n        :host(.orange) section,\n        :host([type="warning"]) section {\n          background-color: #F0AD4E;\n        }\n        :host(.green) section,\n        :host([type="success"]) section {\n          background-color: #5CB85C;\n        }\n        :host(.blue) section,\n        :host([type="info"]) section {\n          background-color: #337ab7;\n        }\n\n        main {\n          color: #fff;\n          background-color: transparent;\n          font-family: 'Fira Sans', sans-serif;\n          overflow: visible;\n          display: flex;\n          flex-flow: row;\n          height: 60px;\n        }\n        section {\n          border-radius: 4px;\n          margin-right: 2px;\n          padding: 0;\n          display: flex;\n          justify-content: space-around;\n          align-items: center;\n          flex-flow: row;\n        }\n        section.notice {\n          flex: 10.5 10%;\n        }\n        section.action {\n          flex: 1 10%;\n        }\n        section.action:hover {\n          cursor: pointer;\n        }\n        aside {\n          flex: 1 10%;\n          padding: 6px 0 0 0;\n        }\n        article {\n          flex: 9 10%;\n        }\n        div {\n          flex: 1 auto;\n          align-self: center;\n          text-align: center;\n          padding: 6px 0 0 0;\n        }\n        div .close {\n          text-align: center;\n        }\n      </style>\n      <main class="alert-box">\n        <section class="notice">\n          <aside>\n            <content select=".icon"></content>\n          </aside>\n          <article>\n            <content select=".message"></content>\n          </article>\n        </section>\n        <section class="action">\n          <div>\n            <content select=".close"></content>\n          </div>\n        </section>\n      </main>\n    </template>\n    <script type="text/javascript" charset="utf-8">\n      document.addEventListener('DOMContentLoaded', function () {\n        'use-strict';\n\n        window.AlertBoxElement = document.registerElement('alert-box', {\n          prototype: Object.create(HTMLElement.prototype, {\n            createdCallback: {\n              value: function () {\n                this.addEventListener('click', this.clickHandler);\n              }\n            },\n            attachedCallback: {\n              value: function () {\n                if (this.innerHTML !== '') {\n                  var template = document.getElementById('alert-box');\n                  var clone = document.importNode(template.content, true);\n                  this.createShadowRoot().appendChild(clone);\n                }\n                this.classList.add('ready');\n              }\n            },\n            detachedCallback: {\n              value: function () {\n                this.removeEventListener('click', this.clickHandler);\n              }\n            },\n            clickHandler: {\n              value: function (evt) {\n                evt = new CustomEvent('alert-box-click', evt);\n                this.dispatchEvent(evt);\n                this.parentNode.removeChild(this);\n              }\n            }\n          })\n        });\n      });\n    </script>\n    <!--\n      Web Component: Icon Info\n    -->\n    <template id="info-icon">\n      <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"\n        viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">\n        <g>\n          <path fill="#FFFFFF" d="M51.833,39.464c0,0.919-0.68,1.68-1.76,1.68c-1.04,0-1.72-0.76-1.72-1.68c0-0.92,0.68-1.68,1.72-1.68\n            C51.153,37.785,51.833,38.544,51.833,39.464z M48.954,67.899V46.983h2.32v20.917H48.954z"/>\n        </g>\n        <circle fill="none" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" cx="49.95" cy="50.198" r="29.416"/>\n      </svg>\n    </template>\n    <script type="text/javascript" charset="utf-8">\n      document.addEventListener('DOMContentLoaded', function () {\n        'use-strict';\n\n        window.IconInfoElement = document.registerElement('icon-info', {\n          prototype: Object.create(HTMLElement.prototype, {\n            attachedCallback: {\n              value: function () {\n                var template = document.getElementById('info-icon');\n                var clone = document.importNode(template.content, true);\n                this.createShadowRoot().appendChild(clone);\n              }\n            },\n          })\n        });\n      });\n    </script>\n    <!--\n      Web Component: Icon X\n    -->\n    <template id="icon-x">\n      <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"\n        viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">\n        <g>\n          <path fill="#FFFFFF" d="M61.059,64.036L49.884,49.837L39.005,64.036h-3.058l12.35-15.459L37.182,35.303h3.176l9.585,11.972\n            l9.467-11.972h3.059L51.59,48.451l12.643,15.585H61.059z"/>\n        </g>\n      </svg>\n    </template>\n    <script type="text/javascript" charset="utf-8">\n      document.addEventListener('DOMContentLoaded', function () {\n        'use-strict';\n\n        window.IconXElement = document.registerElement('icon-x', {\n          prototype: Object.create(HTMLElement.prototype, {\n            attachedCallback: {\n              value: function () {\n                var template = document.getElementById('icon-x');\n                var clone = document.importNode(template.content, true);\n                this.createShadowRoot().appendChild(clone);\n              }\n            },\n          })\n        });\n      });\n    </script>\n\nUpgraded Web Component to an Ember.Component...\n\n    <!--\n      Upgraded Web Component (to an Ember.Component) used within a template...\n      Ember Components utilizing native `<alert-box>` Web Component.\n    -->\n    <script type="text/x-handlebars" data-template-name="components/countdown-info">\n      <p class="message">Info Alert Box, Countdown is Over.</p>\n      <icon-info class="icon"></icon-info>\n      <icon-x class="close"></icon-x>\n    </script>\n\nEmber.Component template for content of native template...\n\n    <script type="text/x-handlebars" data-template-name="components/countdown-warning">\n      <p class="message">\n        Warning Alert Box w/ Countdown:<br>\n        <span class="minutes">{{minutes}}</span> minutes \n        <span class="seconds">{{seconds}}</span> seconds.\n      </p>\n      <icon-warning class="icon"></icon-warning>\n      <icon-x class="close"></icon-x>\n    </script>\n\nEmber.Component upgrade from Web Component...\n\n    // AlertBoxComponents and components that extend it upgrade\n    // a native Web Component `<alert-box>`\n\n    // NOTE: without alert-box being defined in ember...\n    // The feature for `ember-htmlbars-component-generation: true`\n    // would bug out on `<alert-box>` used in a template\n    App.AlertBoxComponent = Ember.Component.extend({\n      tagName: 'alert-box',\n      attributeBindings: ['type'],\n      type: 'info'\n    });\n\n    App.CountdownWarningComponent = App.AlertBoxComponent.extend({\n      classNames: ['fixed'],\n      attributeBindings: ['minutes:data-minutes', 'seconds:data-seconds'],\n      layoutName: 'countdown-warning',\n      type: 'warning',\n      minutes: 0,\n      seconds: 0\n    });\n\n    App.CountdownInfoComponent = App.AlertBoxComponent.extend({\n      classNames: ['fixed'],\n      layoutName: 'countdown-info'\n    });\n\nEmber.Component only (not using the Web Component)...\n\n    <script type="text/x-handlebars" data-template-name="components/alert-box">\n      <div class="notice box">\n        <div class="left">\n          {{partial iconTemplateName}}\n        </div>\n        <div class="middle">\n          <p class="message">\n            {{yield}}\n          </p>\n        </div>\n      </div>\n      <div class="action box">\n        <div class="right">\n          {{#if hasCloseContent}}\n            {{closeContent}}\n          {{else}}\n            {{partial closeTemplateName}}\n          {{/if}}\n        </div>\n      </div>\n    </script>\n\n## I'm betting Ember and Web Components…\n\nI'm really happy with the Shadow Dom and the encapsultation it provides for DOM elements. However, since I can't use that across the board I'm stoked that Ember Components do follow the general patterns for native Web Component. \n\nI can use a custom `tagName` and benefit from using a custom HTML element. And write CSS that provides the default styles for that Custom Element. Even though the Ember Component does not encapsultate the component's DOM like Shadow DOM does using a shadow root, at least the Ember Component has an isolated scope.\n\nI enjoyed test driving Web Components by authoring an Alert Box Web Component, and was able to borrow from that experiment code that is projection ready, the custom element styles and markup.\n\nI am looking forward to the specification for Web Components taking shape and being implemented in more browsers than just Chrome… so I'm placing my bets that Web Components and Ember Components will live in synchronicity at some point in the near future. Web Components doing all the things they are designed to do, working together with Ember Components providing a simple way to stamp out Web Components and provide some useful data bindings as well as work together, perhaps with Custom Events.\n\n## Thanks to…\n\n* W3C for publishing the [Web Component] specs\n* [HTMLRocks Tutorials] for publishing great tutorials on Web Components\n\n_To provide a brief overview of Web Components, I borrowed the content from the two sources above to provide a short summary as highlights of the specifications under the Web Component umbrella._\n\n[Web Component]: http://www.w3.org/TR/#tr_Web_Components\n	What is a native [Web Component] and how does it differ from an [Ember.Component]. Can your use of Ember Components reflect the Web Components specification? (Not an official W3C adopted standard, yet.) Perhaps you’ve been waiting for browser vendors to come up to bat and implement the specification for Web Components; well, Google Chrome has done just that. So, you want to use the latest and greatest tools available on the Web platform; and you’re ready to place your bets… Is it time to start building with the Web Component specification? Only if you can force your users to browse your application with Google Chrome. So yeah, Web Components are not ready for prime time yet; but, strategically you can use them now.\n\n[Ember.Component]: http://emberjs.com/api/classes/Ember.Component.html\n[Web Component]: http://www.w3.org/TR/#tr_Web_Components	a-bet-on-web-components-and-embercomponent-synchronicity	A Bet on Web Components and Ember.Component Synchronicity	2015-03-02	2015-05-07 17:03:21.23878	2015-12-27 01:26:20.041699	1	'/#search=custom%20element)':1299C '/#search=html%20import)':1641C '/#search=object.observe)':1779C '/#search=shadow%20dom)':1414C '/#search=template)':1755C '/2014/12/mozilla-and-web-components/':775C '/alert-box-web-components/example/)':2108C '/alert-box-web-components/example/app.html)':2125C '/alert-box-web-components/example/ember-component.html)':2139C '/api/classes/ember.component.html':137B,321C '/articles/introduction-to-template-element/)':588C '/deep':1467C,1554C '/en/search?q=web+components':579C '/en/tutorials/webcomponents/shadowdom-201/':1109C '/en/tutorials/webcomponents/shadowdom-301/':1120C '/en/tutorials/webcomponents/shadowdom/':1103C '/hafivocecu/1/edit?html,js,output)':1946C '/pixelhandler/alert-box-web-components#alert-box)':2096C '/pixelhandler/alert-box-web-components)':2015C '/tr/#tr_web_components':142B,2534C '/tr/html-imports/':382C,737C '/tr/html5/scripting-1.html#the-template-element':376C,574C '/tr/html5/scripting-1.html#the-template-element](http://www.w3.org/tr/html5/scripting-1.html#the-template-element)':591C '/webcomponents/spec/custom/':388C,929C '/webcomponents/spec/shadow/':394C,1097C '0':1701C,2243C,2245C '101':1085C,1100C '2':213C '201':1088C,1106C '301':1091C,1117C '5':1360C 'abil':489C,843C 'abl':2379C 'access':284C,301C,1526C 'accident':1565C 'across':2291C 'action':293C,331C,1914C,2116C 'activ':1802C 'ad':900C,1401C 'addon':1279C 'address':974C 'adopt':38B 'advanc':1121C 'affect':1044C,1057C 'alert':1364C,2009C,2061C,2153C,2190C,2217C,2373C 'alert-box':2189C,2216C 'alert-box-web-compon':2008C 'alertboxcompon':2176C 'allow':1581C 'also':1602C 'alter':424C 'ancestor':641C 'anoth':620C 'api':1124C,1313C,1342C 'app':1210C,2118C 'app.alertboxcomponent':2213C 'app.alertboxcomponent.extend':2224C,2247C 'app.countdowninfocomponent':2246C 'app.countdownwarningcomponent':2223C 'app.xnativecomponent':1993C 'applic':112B 'appropri':448C 'aren':811C 'articl':144C 'aspect':935C 'associ':464C,663C,706C,988C 'attachedcallback':875C,1378C 'attract':1289C 'attribut':898C,1399C 'attributebind':1999C,2219C,2227C 'attributechangedcallback':893C,1394C 'attrnam':1395C 'author':2371C 'avail':78B 'avoid':470C 'backdoor':1463C 'bar':1356C 'base':1199C,1891C 'bat':53B 'becom':1287C 'behavior':2046C,2143C 'belong':1184C 'benefit':2043C,2316C 'best':1190C 'bet':2A,90B,2263C,2422C 'bind':486C,1240C,1772C,2055C,2470C 'bit':179C,547C,851C 'block':1723C 'blur':169C,1865C 'board':2293C 'bodi':1166C 'borrow':206C,1513C,2140C,2381C,2507C 'box':2010C,2062C,2154C,2191C,2218C,2374C 'break':963C 'brief':147C,2501C 'brows':110B,653C,699C 'browser':47B,1215C,1762C,2413C 'bug':2206C 'build':96B,787C,1229C,1676C 'built':1236C,1768C 'built-in':1235C,1767C 'bullet':1575C 'bundl':1258C,1332C 'call':631C,656C,674C,689C,1366C,1694C 'callback':861C,1244C,1368C 'canius':1294C,1409C,1636C,1751C,1775C 'caniuse.com':1298C,1413C,1640C,1754C,1778C 'caniuse.com/#search=custom%20element)':1297C 'caniuse.com/#search=html%20import)':1639C 'caniuse.com/#search=object.observe)':1777C 'caniuse.com/#search=shadow%20dom)':1412C 'caniuse.com/#search=template)':1753C 'chang':830C,901C,957C 'check':1306C,1645C,1787C 'checkout':1915C 'chrome':63B,115B,1478C,2022C,2416C 'citizen':227C 'class':226C 'classnam':2225C,2248C 'cli':1234C,1278C 'clone':412C,1859C,1864C 'close':1173C 'code':1511C,1877C,1912C,1947C,2157C,2385C 'combin':1555C 'come':50B,1531C 'common':322C 'compar':1127C,1154C 'comparison':160C 'compil':1226C 'complet':281C,1419C 'compon':5A,14B,28B,32B,60B,100B,119B,139B,152C,155C,175C,178C,242C,254C,259C,268C,317C,339C,564C,754C,768C,772C,920C,1077C,1133C,1168C,1203C,1252C,1257C,1264C,1275C,1291C,1318C,1406C,1447C,1628C,1634C,1746C,1748C,1870C,1888C,1897C,1931C,1940C,1955C,1962C,1969C,1972C,1987C,2004C,2012C,2026C,2039C,2052C,2060C,2064C,2075C,2079C,2083C,2088C,2092C,2102C,2104C,2114C,2122C,2128C,2132C,2147C,2156C,2160C,2175C,2178C,2186C,2202C,2260C,2267C,2299C,2308C,2339C,2344C,2359C,2369C,2376C,2405C,2425C,2428C,2441C,2455C,2464C,2487C,2497C,2505C,2528C,2531C 'concept':1122C 'concert':846C 'consid':1814C 'construct':823C 'contain':1716C,1830C 'content':426C,457C,473C,531C,551C,741C,907C,1005C,1014C,1064C,1618C,1689C,1790C,1793C,1797C,1803C,1812C,1822C,1842C,2167C,2509C 'context':305C,452C,654C,700C,1151C,1424C,1711C 'contextu':310C 'contrast':1128C 'control':308C,1165C,1600C 'convert':2085C 'copi':193C,207C,747C,913C,1070C,1621C,1839C,1950C 'countdown':2238C,2252C 'countdown-info':2251C 'countdown-warn':2237C 'coupl':1462C 'creat':799C,869C,1251C,1324C,1377C,1782C,1836C,1965C 'createdcallback':862C,1370C 'css':1028C,1035C,1048C,1110C,1440C,1469C,2325C 'current':1164C 'custom':355C,358C,384C,776C,778C,815C,865C,877C,886C,895C,925C,1194C,1259C,1267C,1269C,1292C,1295C,1334C,1894C,1935C,2031C,2313C,2320C,2333C,2391C,2478C 'data':485C,1239C,1771C,2230C,2234C,2469C 'data-bind':1238C,1770C 'data-minut':2229C 'data-second':2233C 'declar':405C 'deep':1838C 'default':2329C 'defeat':1556C 'defin':525C,1037C,1050C,1197C,1320C,1442C,2193C 'definit':872C 'demo':1905C,2065C,2068C 'design':239C,2448C 'detachedcallback':884C,1386C 'detail':201C,951C 'detect':1301C,1643C,1781C 'develop':785C,1578C,1921C 'didinsertel':330C,1246C 'differ':19B,467C,1143C 'direct':558C,748C,914C,1071C,1622C 'distribut':1274C,1744C 'doc':562C,614C,622C,752C,918C,1075C,1626C 'documen':892C 'document':187C,417C,429C,468C,478C,497C,606C,610C,624C,659C,667C,688C,692C,695C,710C,718C,883C,1047C,1385C,1393C,1670C,1687C,1697C,1719C,1820C 'document.body.appendchild':1863C 'document.createelement':1654C,1795C 'document.importnode':1844C,1860C 'document.queryselector':1537C,1847C 'document.registerelement':1308C,1349C,1978C 'documentfrag':463C,1829C 'doesn':482C 'dom':230C,364C,367C,391C,793C,800C,931C,956C,970C,973C,976C,1024C,1084C,1087C,1090C,1094C,1099C,1105C,1116C,1123C,1345C,1408C,1411C,1416C,1518C,1563C,1784C,2275C,2282C,2346C,2349C 'done':65B,2150C 'draft':341C,354C,362C,370C 'drive':2367C 'dynam':423C 'e.g':443C,1231C,1464C 'editor':360C,368C 'effect':1799C,1811C 'element':347C,356C,359C,373C,385C,400C,401C,481C,571C,585C,777C,779C,794C,801C,810C,816C,825C,866C,878C,887C,896C,926C,980C,995C,1034C,1195C,1270C,1293C,1296C,1323C,1325C,1330C,1346C,1375C,1452C,1489C,1552C,1614C,1651C,1732C,1750C,1785C,1895C,1936C,1992C,2032C,2283C,2322C,2334C,2392C 'ember':27B,154C,177C,212C,241C,258C,1209C,1233C,1242C,1277C,1887C,1960C,1986C,2038C,2059C,2082C,2091C,2131C,2152C,2195C,2200C,2264C,2298C,2338C,2358C,2427C,2454C 'ember-c':1232C 'ember-htmlbars-component-gener':1959C,2199C 'ember.component':7A,22B,134B,271C,273C,275C,318C,1144C,1872C,2007C,2135C,2163C,2164C,2171C,2254C 'ember.component.extend':1994C,2214C 'ember.components':231C 'ember.js':1220C,2117C 'emberjs.com':136B,320C 'emberjs.com/api/classes/ember.component.html':135B,319C 'encapsul':940C,978C,1187C,1536C,1561C 'encapsult':2278C,2342C 'enjoy':2365C 'ensur':836C 'even':2335C 'event':326C,1245C,2479C 'evolut':215C 'exampl':167C,1486C,2070C,2109C 'examples/app.html':2017C 'execut':507C,1708C 'exist':1309C,1344C,1648C,1792C 'experi':2384C 'explor':1765C 'extend':1254C,1327C,1340C,2180C 'extern':617C 'featur':792C,842C,1300C,1780C,1958C,2197C 'fetch':519C 'first':225C 'fit':1736C 'fix':2226C,2249C 'flexibl':1605C 'follow':195C,2301C 'foo':1352C,1361C,1365C,1546C,2000C 'forc':106B 'form':711C 'forward':2399C 'found':2019C 'fragment':406C,433C 'full':200C 'fulli':791C 'fully-featur':790C 'function':814C,1260C,1335C,1358C,1363C,1973C 'futur':244C,2439C 'general':2303C 'generat':223C,1956C,1963C,2203C 'get':982C,1357C 'github':1902C 'github.com':2014C,2095C 'github.com/pixelhandler/alert-box-web-components#alert-box)':2094C 'github.com/pixelhandler/alert-box-web-components)':2013C 'go':288C,1759C 'good':1603C,1757C 'googl':62B,114B 'great':2493C 'greatest':76B 'gut':1832C 'hacks.mozilla.org':774C 'hacks.mozilla.org/2014/12/mozilla-and-web-components/':773C 'happi':2271C 'head':1667C 'heavili':209C 'help':236C 'highlight':192C,2521C 'host':1003C,1009C,1033C,1491C,1498C 'howev':2284C 'html':351C,378C,408C,435C,493C,500C,593C,596C,605C,609C,613C,621C,733C,763C,807C,1637C,1730C,1738C,2321C 'html/dom':1322C 'html5':348C,1113C,1125C 'htmlbar':1961C,2201C 'htmlelement.prototype':1355C,1977C 'htmlimport':349C,592C,1635C 'htmlrock':203C,567C,575C,757C,923C,967C,1080C,1515C,1631C,2489C 'http':1680C 'ideal':1741C 'img':1855C 'implement':55B,2410C 'import':352C,379C,594C,597C,611C,629C,633C,636C,639C,644C,647C,661C,672C,676C,680C,683C,691C,694C,705C,713C,722C,728C,734C,764C,1312C,1638C,1647C,1652C,1658C,1683C,1692C,1696C,1700C,1702C,1706C,1718C,1720C,1739C 'includ':602C 'inert':492C,499C,1800C 'infanc':1285C 'info':581C,2222C,2253C 'inform':311C,817C 'inlin':502C 'inner':1585C 'insert':414C,445C,491C,880C,1382C 'insid':1038C 'inspect':1908C 'instanc':867C,1372C,1380C,1388C 'instead':1021C 'intent':1583C 'interf':474C 'intern':950C 'internet':1764C 'introduct':582C 'invok':863C 'isn':1010C 'isol':282C,1147C,1420C,1455C,2362C 'item':725C 'javascript':549C,1471C,1520C 'jayphelp':1942C 'jsbin':1900C,1943C,1953C 'jsbin.com':1945C 'jsbin.com/hafivocecu/1/edit?html,js,output)':1944C 'key':731C 'kind':985C 'know':1149C,1159C,1593C 'lack':938C 'latest':74B 'layout':1224C 'layoutnam':328C,2236C,2250C 'learn':248C,261C 'least':2356C 'librari':947C 'lifecycl':829C,858C,1243C,1367C 'light':1517C 'like':2347C 'line':171C,1134C,1867C 'link':196C,615C,626C,1655C,1663C,1698C,1906C 'live':2430C 'll':542C 'locat':677C,729C 'logic':1331C 'logo.png':1857C 'look':1756C,2398C 'm':2262C,2269C,2295C,2419C 'main':477C,1059C,1727C 'mani':1657C 'map':714C,720C 'markup':1026C,2395C 'master':658C,666C,709C,717C 'matter':1304C 'may':431C,437C 'mean':1457C 'method':325C,1369C 'might':962C 'mind':247C 'minim':1679C 'minut':2228C,2231C,2242C 'modern':1214C,1761C 'modif':440C 'mozilla':759C,765C,769C 'must':312C 'mytempl':1848C 'name':805C 'nativ':12B,173C,252C,266C,1934C,1967C,1970C,1981C,1991C,1998C,2050C,2100C,2112C,2120C,2169C,2184C,2306C 'natur':1735C 'near':2438C 'need':543C,1674C 'never':1570C 'new':222C,841C,984C,1321C 'newval':1397C 'node':987C 'note':2187C 'object':292C,299C 'object.create':1354C,1976C 'object.observe':1774C,1776C 'offici':36B 'oldval':1396C 'one':665C 'open':1171C 'order':536C 'outer':307C 'outsid':1051C,1444C,1568C 'overview':148C,234C,2502C 'page':422C,1060C,1728C 'panel':1544C 'parent':1046C 'parentviewdidchang':1247C 'pars':1724C 'parser':819C 'part':1586C 'particular':933C 'pass':314C,1152C 'pattern':2304C 'perhap':41B,232C,1671C,2476C 'pernici':934C 'piec':181C 'pipelin':1230C,1677C 'pixelhandler.github.io':2107C,2124C,2138C 'pixelhandler.github.io/alert-box-web-components/example/)':2106C 'pixelhandler.github.io/alert-box-web-components/example/app.html)':2123C 'pixelhandler.github.io/alert-box-web-components/example/ember-component.html)':2137C 'pixelhandler/alert-box-web-components':2093C 'place':88B,2420C 'platform':82B,855C 'platform._':833C 'point':2435C 'popul':1849C 'possibl':797C 'power':1530C 'prevent':1564C 'prime':124B 'primit':1314C 'problem':979C 'progress':1484C 'project':2388C 'promis':1571C 'proof':1576C 'proper':822C 'properti':283C,324C,1791C,1823C 'prototyp':1353C 'provid':484C,487C,780C,2047C,2056C,2280C,2327C,2456C,2466C,2499C,2516C 'pseudo':1451C,1551C 'pseudo-el':1450C,1550C 'publish':2484C,2492C 'purpos':1558C 'queryselector':1472C 'ration':831C 're':85B,1596C,1610C 're-us':1609C 'react':827C 'read':1827C 'read-on':1826C 'readi':86B,122B,2389C 'realli':1418C,1454C,2270C 'reap':2041C 'referr':634C,640C,645C,648C,681C 'reflect':29B 'regist':874C 'rel':1699C 'relev':850C 'remov':889C,903C,1390C,1402C 'render':1012C,1020C 'repo':1903C 'repositori':2097C 'repres':685C 'request':1681C 'requir':432C,438C 'resourc':512C,618C 'respect':1535C 'respons':1533C 'return':454C,1359C 'reus':604C 'rock':1114C,1126C 'root':993C,999C,1018C,1041C,1054C,1429C,1494C,1918C,1927C,2354C 'runtim':1853C 'sampl':1512C,1878C,1948C 'scope':1030C,1145C,1161C,1179C,1423C,2363C 'script':419C,503C,961C,1703C 'second':2232C,2235C,2244C 'see':166C,198C,1898C,1910C,1924C,1941C,2016C 'sendact':332C 'set':702C 'setup':1954C 'shadow':363C,366C,390C,930C,969C,972C,992C,998C,1002C,1008C,1017C,1023C,1040C,1053C,1083C,1086C,1089C,1093C,1098C,1104C,1115C,1407C,1410C,1415C,1428C,1449C,1465C,1493C,1499C,1509C,1523C,1541C,1545C,1549C,1562C,1589C,1917C,1926C,2274C,2348C,2353C 'shape':2407C 'ship':762C 'short':2518C 'show':1879C,2069C 'side':1810C 'simpl':2458C 'simpli':528C 'sinc':2285C 'singl':1263C,1338C 'site':188C 'sourc':2513C 'span':1500C,1506C 'spec':835C,2488C 'specif':33B,57B,101B,185C,343C,1216C,1479C,2402C,2524C 'src':1851C,1856C 'stamp':510C,522C,538C,2461C 'standard':39B,245C 'start':95B 'still':1282C,1673C 'stoke':2296C 'store':460C,721C 'stori':1280C 'straightaway':194C 'strateg':128B 'style':959C,1036C,1049C,1112C,1189C,1200C,1426C,1443C,1502C,1560C,1566C,1584C,2141C,2330C,2393C 'stylesheet':1434C 'summari':554C,744C,910C,1067C,2519C 'support':1644C,2024C 'surround':304C 'synchron':8A,256C,2432C 't.content':1861C 't.content.queryselector':1854C 'tab':1540C 'tag':494C,501C,534C,804C,1174C,1339C 'tagnam':327C,1268C,1884C,1995C,2035C,2215C,2314C 'take':2406C 'taken':557C 'target':295C 'targetobject':333C 'templat':287C,344C,346C,372C,395C,397C,399C,456C,472C,480C,527C,570C,584C,1182C,1225C,1731C,1749C,1752C,1796C,1806C,1835C,2165C,2170C,2212C 'template.content':453C 'test':2366C 'thank':2480C 'theme':1606C 'thing':2445C 'though':2336C 'three':2067C 'time':93B,125B 'today':857C,1211C 'togeth':1139C,1333C,2452C,2475C 'tool':77B,1922C 'tree':977C,1510C,1524C,1590C 'true':1862C,1964C,2204C 'tutori':190C,204C,568C,576C,758C,924C,968C,1081C,1082C,1516C,1632C,2490C,2494C 'two':163C,1132C,2512C 'type':859C,2220C,2221C,2240C 'umbrella':1319C 'umbrella._':2529C 'unpredict':965C 'updat':1404C 'upgrad':264C,945C,1932C,1983C,2001C,2076C,2126C,2158C,2172C,2182C 'url':669C 'usabl':1611C 'usag':451C 'use':25B,72B,131B,251C,323C,403C,442C,498C,1192C,1206C,1222C,1241C,1265C,1448C,1468C,1475C,1519C,1773C,1843C,1882C,1988C,2029C,2072C,2119C,2209C,2257C,2289C,2311C,2318C,2351C,2468C 'user':108B 'valu':447C,1362C 'var':1347C,1845C,1858C 'various':184C 've':43B 'vendor':48B 'vest':1577C 'view':278C,291C,298C,1157C 'w3c':37B,345C,350C,357C,365C,371C,377C,383C,389C,398C,561C,569C,595C,732C,751C,917C,971C,1074C,1092C,1625C,2482C 'w3c.github.io':387C,393C,928C,1096C 'w3c.github.io/webcomponents/spec/custom/':386C,927C 'w3c.github.io/webcomponents/spec/shadow/':392C,1095C 'wait':45B 'want':70B,1661C 'warn':2239C,2241C 'way':217C,600C,782C,966C,1438C,1742C,2459C 'web':4A,13B,31B,59B,81B,99B,118B,138B,151C,174C,253C,267C,338C,421C,563C,753C,767C,771C,784C,854C,919C,1076C,1290C,1317C,1405C,1627C,1633C,1745C,1747C,1869C,1896C,1930C,1939C,1968C,1971C,2003C,2011C,2025C,2051C,2063C,2074C,2078C,2087C,2101C,2103C,2113C,2121C,2127C,2146C,2155C,2159C,2174C,2185C,2259C,2266C,2307C,2368C,2375C,2404C,2424C,2440C,2463C,2486C,2496C,2504C,2527C,2530C 'webcomponents.org':587C 'webcomponents.org/articles/introduction-to-template-element/)':586C 'well':61B,157C,2472C 'whenev':876C,885C,894C 'widget':954C 'willclearrend':1248C 'willdestroyel':334C,1249C 'willinsertel':329C,1250C 'window':1714C 'window.emberenv':1957C 'within':1507C,1804C 'without':508C,520C,2188C 'won':504C,516C,760C,1042C,1055C,1807C 'work':353C,856C,1138C,1218C,1482C,2451C,2474C 'would':2205C 'wrap':529C 'write':545C,1497C,2324C 'www.html5rocks.com':578C,1102C,1108C,1119C 'www.html5rocks.com/en/search?q=web+components':577C 'www.html5rocks.com/en/tutorials/webcomponents/shadowdom-201/':1107C 'www.html5rocks.com/en/tutorials/webcomponents/shadowdom-301/':1118C 'www.html5rocks.com/en/tutorials/webcomponents/shadowdom/':1101C 'www.w3.org':141B,375C,381C,573C,590C,736C,2533C 'www.w3.org/tr/#tr_web_components':140B,2532C 'www.w3.org/tr/html-imports/':380C,735C 'www.w3.org/tr/html5/scripting-1.html#the-template-element':374C,572C 'www.w3.org/tr/html5/scripting-1.html#the-template-element](http://www.w3.org/tr/html5/scripting-1.html#the-template-element)':589C 'x':214C,1351C,1539C,1543C,1980C,1990C,1997C 'x-foo':1350C 'x-nativ':1979C,1989C,1996C 'x-panel':1542C 'x-tab':1538C 'xfoo':1348C 'xnativeel':1974C,1982C 'xnativeelement.prototype':1975C 'yeah':117B 'yes':1527C 'yet':40B,126B	published	pixelhandler
34	\n    \n    def random_token\n      characters = 'BCDFGHJKLMNPQRSTVWXYZbcdfghjkmnpqrstvwxyz23456789-_'\n      temp_token = ''\n      srand\n      TOKEN_LENGTH.times do\n        pos = rand(characters.length)\n        temp_token += characters[pos..pos]\n      end\n      temp_token\n    end\n    \n	In creating rant.cc as a short URL generator I wanted to avoid generating\nrandom text that would be offensive, so the block below attempts to avoid\ncreating some text string you may have to apologize to your mother about.\nCreate random token with Ruby (random_token.rb)	ruby-block-to-create-random-token-string-without-offending	Ruby Block to Create Random Token String Without Offending	2010-08-14	2015-05-07 17:03:21.425458	2015-05-07 17:03:21.425458	1	'apolog':44B 'attempt':33B 'avoid':21B,35B 'bcdfghjklmnpqrstvwxyzbcdfghjkmnpqrstvwxyz23456789':59C 'block':2A,31B 'charact':58C,70C 'characters.length':67C 'creat':4A,11B,36B,49B 'def':55C 'end':73C,76C 'generat':17B,22B 'may':41B 'mother':47B 'offend':9A 'offens':28B 'pos':65C,71C,72C 'rand':66C 'random':5A,23B,50B,56C 'random_token.rb':54B 'rant.cc':12B 'rubi':1A,53B 'short':15B 'srand':62C 'string':7A,39B 'temp':60C,68C,74C 'text':24B,38B 'token':6A,51B,57C,61C,69C,75C 'token_length.times':63C 'url':16B 'want':19B 'without':8A 'would':26B	published	pixelhandler
15	1. Try Jasmine because we love BDD\n2. Try Mocha because it's newer and it's used with Konacha\n3. Try QUnit because it may be better with async tests then the above\n   and the Ember.js project uses it anyway\n4. Wow Ember.js has testing helpers in the ember-testing package, lets\n   rewrite the integration tests\n5. Try Pavlov since is provides BDD style spec runner on top of QUnit\n6. Just use TDD QUnit test runner\n\nIn getting started with the exercise we talked and asked... \n\n* What is important in testing an app built with Ember.js?  \n* Because the Ember.js framework has solid test coverage\nfor the API it provides, is the main gap making sure an \napplication's compontents or modules work together?\n* The underlying behavior of the framework features and API should just work,\nwhat should we not test?\n* Unit tests are needed, but it would be great to have integration tests that\nrun super fast in a JavaScript runner.\n* Perhaps integration or end-to-end testing is the main objective for\n  our exercise.\n\nThe results of this exercise are on GitHub:\n\n* Repo: [peepcode-ordr-test] | [wiki][peepcode-ordr-test-wiki]\n\n[peepcode-ordr-test]: https://github.com/Ember-SC/peepcode-ordr-test "Ember-SC Meetup PeepCode Ordr Test Repository"\n[peepcode-ordr-test-wiki]: https://github.com/Ember-SC/peepcode-ordr-test/wiki "Guide pages proposed to expand Ember testing guide"\n\n## The Application and Fixture Data\n\nSee the [application code] which is a result of completing the tutorial\nvideo which comes with accompanying [fixture data]. To understand what the\napplication does, see the [Fire up Ember.js video] page which has\ndiagrams and an nice explanation of the workings of the **Ordr** app.\n\n[application code]: https://github.com/Ember-SC/peepcode-ordr-test/wiki/Guide:-Example-Browser-Application\n[fixture data]: https://github.com/Ember-SC/peepcode-ordr-test/wiki/Guide:-Fixture-Data\n\nScott commented, "it's a reasonable 'smallest realistic' Ember.js\napplication to 'learn with'".\n\nFor testing, we used compiled Handlebars templates instead of the script\nelements you see in the tutorial.\n\n**Warning:** this example of testing does cover testing [Ember.Data]\nmodels; Ember.data is not ready for prime time yet. That said,\nEmber.Data Fixtures are a nice way to pre-populate application data for\nlisting and reading data. So, why not test the models? Perhaps we can\nlearn something about the fixture adapter by testing.\n\n[Ember.Data]: https://github.com/emberjs/data\n\nI would not recommended using the fixture adapter for a production application, \nthe tutorial uses fixture data as an example that a browser application can be \nworked on in parallel to the development of a server application which will \nprovide the data via an API. \n\nUsing fixture data is an ideal way to facilitate testing of data that, in \nproduction, comes down the wire via AJAX requests.\n\n### Mocking Models\n\nWhen using Ember Data with asynchronous testing, things can get crazy.\nIf your testing suite becomes loaded with intermitent test failures due\nto the [model lifecycle], it may be a good idea to mock your models in\nyour unit tests (when the model is _not_ the subject of the test). See below:\n\n```javascript\nApp.Model = {\n  find: Em.K,\n  transaction: { commit: Em.K, rollback: Em.K },\n  createRecord: Em.K\n};\nApp.SomeModel = App.Model;\n```\n\nWhen mocking the `DS.Model` interface you can also use spies to assert \nyour application works with the model.\n\n[FixtureAdapter]: /guides/models/the-fixture-adapter/ "Fixture Adapter section of the Model guide"\n[model]: /guides/models/ "Model guide"\n[model lifecycle]: /guides/models/model-lifecycle/ "Models must be loaded and saved asynchronously"\n\n## Testing Setup and Helpers\n\nThe [testing/integration guide page] on the [emberjs.com] site is an\nexcellent source for learning about setting up an application for\ntesting, a reference for the test helpers that are part of the\nember-testing package and information on adding your own test helpers.\n\n[testing/integration guide page]: http://emberjs.com/guides/testing/integration/\n[emberjs.com]: http://emberjs.com\n\n### QUnit Test Runner\n\nSee this page on [Testing Setup/Helpers] for the Qunit test runner we\nused, as well as an example of custom test helpers.\n\nIn this case the testing support code combines the definition of the \nhelpers and the execution of code to setup the application for testing.\n\n[Testing Setup/Helpers]: https://github.com/Ember-SC/peepcode-ordr-test/wiki/Guide:-Testing-Setup-Helpers\n\nThe example HTML document includes CSS styles to display the working application \nbelow the QUnit test runner.\n\nWhile under test the application can use a different root element, we used\n`#app-root` to identify the Ember.js applications's root element.\n\nThe libraries listed in the HTML test runner are same versions distributed \nwith the Ember.js [starter kit] repository, see the starter kit repository\nfor the lastest recommended versions for building Ember.js applications.\n\n### Setup the Application For Testing\n\nThe example is this guide uses two (2) methods to prepare the application for \ntesting:\n\n```javascript\nApp.setupForTesting();\nApp.injectTestHelpers();\n```\n\nAdded to the Ordr application is a call to [deferReadiness]\n`App.deferReadiness()`, used to perform asynchronous setup logic and defer \nbooting the application. The `deferReadiness` call was not included in the \ntutorial video, and requires `App.advanceReadiness()` to run the application \nwhen not under test.\n\n### Custom Test Helpers\n\nSee the [end-to-end tests] page for an example integration test that verifies the \ndefault route of the Ordr application. A custom test helper is used to confirm \nthe route. Below is the helper:\n\n```javascript\nEmber.Test.registerHelper('path', function() {\n  return testing().path();\n});\n```\n\nA custom helper object is used to introspect application state. The helpers are \ndefined in a support file loaded only during testing.\n\nIn the example below, helper methods are defined to assist both integration and \nunit testing. See the Unit Tests and End-to-End tests pages in this guide for \nexamples which use custom test helpers: `path()` and `getFoodController()`, \nwhich are defined in the (support) file below.\n\n```javascript\n(function (host) {\n  var document = host.document;\n  var App = host.App;\n\n  var testing = function(){\n    var helper = {\n      container: function(){\n        return App.__container__;\n      },\n      controller: function( name ){\n        return helper.container().lookup('controller:' + name);\n      },\n      path: function(){\n        return helper.controller('application').get('currentPath');\n      }\n    };\n    return helper;\n  };\n\n  Ember.Test.registerHelper('path', function() {\n    return testing().path();\n  });\n\n  Ember.Test.registerHelper('getFoodController', function() {\n    return testing().controller('food');\n  });\n\n  // Move app to an element on the page so it can be seen while testing.\n  document.write('<div id="test-app-container"><div id="ember-testing"></div></div>');\n  App.rootElement = '#ember-testing';\n  App.setupForTesting();\n  App.injectTestHelpers();\n\n}(window));\n```\n\nThe `App.rootElement` bas been changed while the applicaiton is under test so \nthat both the test report and application are visible in the [QUnit] test runner.\n\nSee the [integration] testing page or read the [ember-testing package] code for \nmore details on the helpers which facilitate testing asynchronous behavior \nwithin the application. Also, note that [QUnit] provides `start()` and `stop()` \nmethods utilized by the `wait()` method (included with the Ember testing \nhelpers). \n\nAsync testing can be challenging, our exercise used the default test \nadapter that ships with the Ember Test package. QUnit provides solid support for \nasync testing using it's `start` and `stop` methods which are utilized \ninternally in the Ember Test package by the `wait` helper which internally calls \n`Test.adapter.asyncStart()` and `Test.adapter.asyncEnd()`.\n\n**Warning:** This example of custom helpers includes a call to a private method \nof the Ember#Application object `__container__`; since it's used only in the \nhelper, only while testing, and in only one function... when the private API \nchanges this helper can be updated. This method should **not** be used by the \napplication source code at all.\n\n\n[QUnit]: http://qunitjs.com/ "Default testing library supported by the ember-testing package"\n[starter kit]: https://github.com/emberjs/starter-kit "A starter kit for Ember"\n[deferReadiness]: http://emberjs.com/api/classes/Ember.Application.html#method_deferReadiness "perform asynchronous setup logic and defer booting your application"\n[integration]: /guides/testing/integration "integration testing page"\n[ember-testing package]: https://github.com/emberjs/ember.js/tree/master/packages/ember-testing/lib "ember.js / packages / ember-testing / lib"\n\n### End-to-End Tests\n\nSee this [end-to-end tests] page for examples of integration tests of a Ember.js\napplication.\n\nWith integration tests executed via JavaScript, not only are test reports \ngenerated fast, but also various components of the application are tested to \nconfirm they work as designed.\n\nUnit tests can be used to confirm each component of the application\n_can_ work as designed; however, integration tests confirm that the components \n_do_ behave as expected (i.e. they are working together as designed).\n\nA healthy combination of both unit and integration tests, executed via a \nJavaScript test runner in a browser or in a headless runner (e.g. phantomjs), \nfacilitates the practice of test-driven development; and helps to ensure that \ndevelopment of Ember.js applications can scale and behave as **ambitious** as \npromised by the Ember.js application framework.\n\n[end-to-end tests]: https://github.com/Ember-SC/peepcode-ordr-test/wiki/Guide:-End-to-End-Tests\n\n#### Testing the PeepCode Ordr Application\n\nIn the test modules below `App.reset()` is called during the `setup` routine of\neach test, so every test executes in isolation from the other tests, resetting\nthe application each time.\n\n#### Ember.run\n\nThe tests have code that should be executed with the confines of an \n[Ember.run] loop (or queue). When the application is in testing mode the \nautomatic invocation of an [Ember.run] queue is disabled. So when creating a \nmodel or changing properties that are bound or observed, this activity requires \nexecution in the scope of an `Ember.run` (callback) function.\n\n[Ember.run]: http://emberjs.com/api/classes/Ember.run.html "wrap your code inside this call"\n\n#### Tables Integration Test Module\n\nTables have a tab (think of this as an order) listing food items. The \napplication uses the UI pattern for a "Master–detail interface". There are six \n(6) tables, each of them have a tab (order with list items). Note that\nthe model relationship may be defined differently than may appear to the\nuser of the application. In the application source code, a Food may have \nTabItems and a Tab may have a Table; but this doesn't matter from the\nperspective of an integration test.\n\nThe module below has three (3) integration tests and use the `visit` helper \nprovided by the Ember Test package.\n\nThe custom `path()` helper is not part of the Ember testing package and\nserves as an example of using your own custom test helpers.\n\n```javascript\nmodule('Ordr App integration tests: Tables', {\n  setup: function () {\n    App.reset();\n  }\n});\n\ntest('Initial Redirect', function(){\n  expect(1);\n  visit('/').then(function () {\n    equal(path(), 'tables.index', 'Redirects to /tables');\n  });\n});\n\ntest('Displays six tables', function(){\n  expect(1);\n  visit('/tables').then(function () {\n    equal(find('#tables a').length, 6, 'Six tables display');\n  });\n});\n\ntest('Table 2, food menu', function () {\n  expect(3);\n  visit('/tables/2').then(function () {\n    equal(find('div.nine h2').text(), 'Table 2', 'Table 2 heading displayed');\n    equal(find('#customer-tab li h3:first').text(), 'Click a food to add it', 'Has call to action text');\n    equal(find('#menu li > a').length, 5, 'Has food menu with 5 choices');\n  });\n});\n```\n\n#### Tabs Integration Test Module\n\nThe module below uses the following test helpers provided by the Ember\ntest package:\n\n* `visit` (`then`), `click`\n\nThe integration tests visit various routes for a few of the tables and exercises \nthe application behaviors of adding food items to a tab (order). Also, a test \nconfirms that the state of the tab(s) remains between visits of a couple tables. \nOne table has data pre-populated (data defined in the fixures for table #4).\n\n```javascript\nmodule('Ordr App integration tests: Tabs', {\n  setup: function () {\n    App.reset();\n  }\n});\n\ntest('Tables 1 and 3, adding foods to the tabs', function(){\n  expect(5);\n  visit('/tables/1').then(function (){\n    equal(find('div.nine h2').text(), 'Table 1', 'Table 1 heading displayed');\n    return click('#menu li:eq(0) > a');\n  }).then(function(){\n    equal(find('#customer-tab li:eq(0) > h3').text(), 'Pizza $15.00', 'Added pizza to tab');\n    equal(find('#total span').text(), '$15.00', 'Total price updated with pizza price');\n    visit('/tables/3').then(function (){\n      equal(find('div.nine h2').text(), 'Table 3', 'Table 3 heading displayed');\n      visit('/tables/1').then(function (){\n        equal(find('#customer-tab li:eq(0) > h3').text(), 'Pizza $15.00', 'Pizza still in tab');\n      });\n    });\n  });\n});\n\ntest('Table 4, already had foods added to the tab', function(){\n  expect(3);\n  visit('/tables/4').then(function (){\n    var actual = [],\n        expectedFoods = 'Pizza$15.00Pancakes$3.00Fries$7.00HotDog$9.50BirthdayCake$20.00Total$54.50';\n\n    find('#customer-tab > li').each(function (){\n      actual.push( find(this).text() );\n    });\n    equal(find('div.nine h2').text(), 'Table 4', 'Table 4 heading displayed');\n    equal(actual.join('').replace(/\\s/g, ''), expectedFoods, 'Pizza, Pancakes, Fries, Hot Dogs, Cake already added');\n    equal(find('#total span').text(), '$54.50', 'Already has $54.50 in foods in the tab');\n  });\n});\n```\n\n### Testing Strategy\n\nThe approach of testing an Ember.js application by writing integration\ntests does support the concept of writing tests for the design of an\napplication from a behavioral perspective. Basically testing the user's\ninterations with your application. I really like that approach as it\ndoes favor writing tests first then writing code to pass your tests. \n\nThis exercise of writing tests for the Ordr app was done after writing\nthe app via a tutorial video. I do think that with the "async aware"\ntesting DSL provided by the "ember-testing" package a software\nengineer is encouraged to write tests from the perspective of user\ninteractions. This can be thought of as functional or integration\ntesting.\n\nUsing the Ember-testing package with QUnit affords taming the beast of\nasync testing.\n\nI look forward to writing tests for application development which support\nthe design of the application and the user experience. I do prefer to \navoid writing tests that are basically written to catch bugs when code changes.\n\nUsing the ember-testing package I can write tests that describe the\napplication's behavior. For example `visit` this or that route `then`\nassert or expect some thing to be displayed. And, perhaps `find` an input\nelement and `fillIn` my name or some data; and `click` submit `then` the\ntest can automatically `wait` for the result of that click event `then`\nconfirm that the application is routed to the desired page.\n\nThis type of testing allows you to start with a simple action like\n`visit` a route. With that failing test, you can then write the code in\nthe router to support the new route. Next, add more to your test using\n`then`, to check that a template has the right content for users to get\nbusy using the app. So, you write a failing test for the items in the\ntemplate that are crucial for your users to interact with. Next, write the\ncode to render your template and the necessary elements should be\ndisplayed passing your test. To continue testing the experience, write a\ntest to `fillIn` or `click` some part of that template and assert that your\ncontroller or route has an event/action handler that deals with the user\ninteraction. Once you have a failing test, then work on putting together\nthe function handlers to complete the desired behaviors.\n\nThat's pretty powerful in a speedy JavaScript test runner, and can grow/change\nas the scope of your application changes.\n\nAside from integration tests, there's unit testing. I recommend writing unit\ntests to help engineer the features that your application supports. Having\nintegration tests are great and important; but don't forget to write unit tests\nas you develop key behaviours and features... to display, or interact with\nsingle components of the application.\n\n## Unit Tests\n\nSee this page on writing [unit tests] for a controller, a handlebars\nhelper and the models used in the Ordr app.\n\n[unit tests]: https://github.com/Ember-SC/peepcode-ordr-test/wiki/Guide:-Unit-Tests\n\nI found that in some of the unit tests the `visit()` helper was needed to force\nEmber Data Fixtures to become ready for testing. In addition to `App.reset()`\nsome setup may be needed to ask the route to setup the expected application\nstate, so `visit()` is called during the setup routine.\n\nThere is one caveat with this case study and using `App.reset()`. The Ordr App \nis reset with each unit test so the unit test is executed in isolation from \nother tests but the Ordr application code is also running. Instead of reseting \nthe application, it may be desireable for the tests of a production application \nto use a new Ember.Application with only the required objects that will be unit \ntested. Then the unit tests would be executed in isolation from the \napplication's start routine. This topic fell outside the scope of our exercise,\nso I used only the Ordr applicaiton for the unit tests.\n\n### Food Controller Unit Test Module\n\nThis tests insures a food can be added to the tab (order). The example tests \nbelow use a custom helper to lookup the food controller instance \n`getFoodController()`.  \n\nA food record is created within an [Ember.run] queue which helps organize the \n"act" segment of a test. It's common practice in test-driven development \norganize tests in 3 steps: 1-Arrange, 2-Act, 3-Assert.\n\n```javascript\nmodule('Ordr App unit tests: Food Controller', {\n  setup: function () {\n    App.reset();\n    visit('/tables/1');\n  }\n});\n\ntest('Add food to tabItems', function() {\n  expect(7);\n\n  var controller = getFoodController();\n  ok(controller, 'Food controller is ok');\n  ok(controller.addFood, 'Food controller has addFood action');\n\n  var tabItems = controller.get('controllers.table.tab.tabItems');\n  ok(tabItems, 'Food controller can access food items');\n  equal(tabItems.get('content').length, 0, 'tabItems are empty');\n\n  var cheese, foods = [];\n  Ember.run(function () {\n    cheese = App.Food.createRecord({\n      id: 500,\n      name: 'cheese',\n      imgUrl: '',\n      cents: 100\n    });\n    controller.addFood(cheese);\n    tabItems.get('content').forEach(function(food){\n      foods.push( food.record.toJSON() );\n    });\n  });\n  equal(tabItems.get('content').length, 1, 'Added food to tabItems');\n  equal(foods.length, 1, 'tabItems has one food');\n  equal(foods[0].cents, 100, 'added food cost is 100 cents');\n});\n```\n\n### Handlebars Helper Unit Test Module\n\nThe example tests below exercise the display format of money using a Handlebars \nhelper to convert cents to dollars, e.g. 350 cents display as "3.50". Conditions \nare tested to confirm output when the cents value is not a number and when the \ncents value is a number. The helper outputs "0.00" by default, otherwise formats \nthe cents as dollars (two decimal places).\n\n```javascript\nmodule('Ordr App unit tests: Handlebars Helper', {\n  setup: function () {\n    App.reset();\n  }\n});\n\ntest('money helper renders default text', function() {\n  expect(2);\n\n  var view, cents;\n  Ember.run(function () {\n    view = Ember.View.create({\n      template: Ember.Handlebars.compile('{{money cents}}')\n    });\n    view.appendTo('#qunit-fixture');\n    cents = view.get('cents');\n  });\n  equal(cents, null, 'Value is not a null');\n  strictEqual(view.$().text(), '0.00', 'Renders 0.00 when NaN');\n});\n\ntest('money helper renders number converted to money format', function() {\n  expect(2);\n\n  var view, cents;\n  Ember.run(function () {\n    view = Ember.View.create({\n      template: Ember.Handlebars.compile('{{money view.cents}}'),\n      cents: 777\n    });\n    view.appendTo('#qunit-fixture');\n    cents = view.get('cents');\n  });\n  equal(cents, 777, 'Value is 777');\n  strictEqual(view.$().text(), '7.77', 'Renders 7.77 given 777');\n});\n\n```\n\n### Models Unit Test Module\n\n**Warning: This application uses Ember Data, "Use with caution"**\n\nIn the schema for the Ordr application...\n\n* A Table belongs to a Tab (order)\n* A Tab has many TabItems and a computed property for `cents` subtotal\n* A TabItem belongs to a Food\n* A Food has a `cents` property that is copied to a TabItem\n  (a food price can change but the price in the order is final)\n\nAgain, in this test, the setup of the models using fixtures is forced by using \n`visit()` to trigger a route that results in the setup of application state \nunder test, specifically the models that rely on fixture data. (This may be an \nanti-pattern, but seemed necessary at this time for testing the models using the\n`DS.Model#createRecord` method provided by Ember Data.)\n\nSee the [unit tests] page for the functions and variables used to assist creating\nmodel instances during unit testing of the various model classes.\n\n```javascript\nmodule('Ordr App unit tests: Models', {\n  setup: function () {\n    App.reset();\n    visit('/tables/4');\n  }\n});\n\ntest('Tab model has total of all items for table 4', function() {\n  expect(3);\n\n  ok(App.Tab, 'Food model ok');\n  var tab = getFoodController().get('controllers.table.tab');\n  ok(tab, 'tab instance ok');\n\n  var total = 0;\n  tab.get('tabItems.content').forEach(function(food){\n    total += food.record.get('cents');\n  });\n  strictEqual(tab.get('cents'), total, '5450 cents is the total of the tab');\n});\n\ntest('Food model created with name, imageUrl and cents', function() {\n  expect(5);\n\n  ok(App.Food, 'Food model ok');\n  var food;\n  Ember.run(function () {\n    food = createCheese();\n  });\n  ok(food, 'created food item');\n  equal(food.get('name'), 'Cheese', 'Food Name is Cheese');\n  equal(food.get('imageUrl'), 'img/cheese.png', 'Url is img/cheese.png');\n  equal(food.get('cents'), 400, 'cents is 400');\n\n  Ember.run(function () {\n    food.destroy();\n  });\n});\n\ntest('TabItem model created with food model and cents', function() {\n  expect(2);\n\n  ok(App.TabItem, 'TabItem model ok');\n  var tabItem;\n  Ember.run(function () {\n    tabItem = createTabItem(createCheese(), 400);\n  });\n  equal(tabItem.get('cents'), 400, 'created tabItem with 400 cents');\n\n  Ember.run(function () {\n    tabItem.destroy();\n  });\n});\n\ntest('Tab model created with food models', function() {\n  expect(3);\n\n  ok(App.Tab, 'Tab model ok');\n  var tab, foods = [], foodsSum;\n  Ember.run(function () {\n    tab = createTabWithCheeseAndCrackers();\n  });\n  tab.get('tabItems.content').forEach(function(food){\n    foods.push(food.record.get('cents'));\n  });\n  foodsSum = foods.reduce(function (prev, cur) {\n    return prev + cur;\n  });\n  equal(foods.length, 2, 'created tab with two items');\n  equal(foodsSum, tab.get('cents'), 'total of tab is 750');\n\n  Ember.run(function () {\n    tab.destroy();\n  });\n});\n\ntest('Table', function() {\n  expect(2);\n\n  ok(App.Table, 'Table model ok');\n  var table;\n  Ember.run(function () {\n    table = createTable(createTabWithCheeseAndCrackers());\n  });\n  equal(table.get('tab.tabItems.content').length, 2, 'created table with tab which already has 2 items');\n\n  Ember.run(function () {\n    table.destroy();\n  });\n});\n```\n\n## What Not to Test\n\nGet familiar with the Ember.js framework you are using and spend some\ntime reading the tests it has, which guarantee that it's own features work.\nYou can learn how to write tests by learning from those examples. But be\ncareful not to write tests for your application the same way the\nframework tests itself, avoid using or testing Ember.js private methods\nand properties.\n\nIf the framework has a feature that is tested and works, there is no need\nto test that your application can do that. Don't test an observer or\nbinding unless it's really important for your team to know that the\nbound property should work as your test describes it. \n\nDon't test every element and CSS class your handlebars template\ncontains, likely that will change fast anyway. Instead, test that your\ntemplate fires off the expected actions for your app to respond to.\nLikely, you don't need to write a test for every element that can be\nclicked by an user.	**Learning by Example**\n\nThe [PeepCode] Ordr app is an excellent video tutorial for learning\nEmber.js and also a great example of a browser application for writing\ntests in JavaScript. Learning Ember.js is a task in itself, learning to\ntest an Ember.js comes with an equal level of challenge. This article is\na collection of observations for an exercise in testing a non-trivial\nEmber.js application, specifically the Ordr app code from the PeepCode\ntutorial [Fire up Ember.js video].\n\n[PeepCode]: https://peepcode.com "Screencast tutorials for professional web developers and designers"\n[Fire up Ember.js video]: https://peepcode.com/products/emberjs "Ember.js Tutorial video by Peepcode"\n\nThese comments on testing are based on a exercise with a group of\nhackers from the Ember-SC meetup group in Southern California. Drew,\nScott, Ty and myself spent some time trying out various ways to test an\nEmber Application.\n\nThe journey went something like this...	testing-an-ember-application-integration-and-unit-tests	Testing an Ember Application: Integration and Unit tests	2013-08-14	2015-05-07 17:03:21.298783	2015-05-07 17:03:21.298783	1	'/api/classes/ember.application.html#method_deferreadiness':1352C '/api/classes/ember.run.html':1624C '/ember-sc/peepcode-ordr-test':360C '/ember-sc/peepcode-ordr-test/wiki':376C '/ember-sc/peepcode-ordr-test/wiki/guide:-end-to-end-tests':1526C '/ember-sc/peepcode-ordr-test/wiki/guide:-example-browser-application':440C '/ember-sc/peepcode-ordr-test/wiki/guide:-fixture-data':445C '/ember-sc/peepcode-ordr-test/wiki/guide:-testing-setup-helpers':818C '/ember-sc/peepcode-ordr-test/wiki/guide:-unit-tests':2629C '/emberjs/data':533C '/emberjs/ember.js/tree/master/packages/ember-testing/lib':1373C '/emberjs/starter-kit':1343C '/guides/models':696C '/guides/models/model-lifecycle':701C '/guides/models/the-fixture-adapter':687C '/guides/testing/integration':1363C '/guides/testing/integration/':762C '/products/emberjs':104B '/tables':1788C,1797C '/tables/1':1968C,2035C,2868C '/tables/2':1818C '/tables/3':2020C '/tables/4':2068C,3299C '0':1987C,1998C,2045C,2909C,2954C,3331C '0.00':3018C,3079C,3081C '1':156C,1779C,1795C,1956C,1977C,1979C,2850C,2940C,2947C '100':2926C,2956C,2961C '15.00':2002C,2012C,2049C,2075C '2':163C,904C,1811C,1827C,1829C,2852C,3049C,3095C,3416C,3483C,3505C,3522C,3530C '20.00':2083C '3':176C,1726C,1816C,1958C,2029C,2031C,2066C,2848C,2854C,3313C,3451C '3.00':2077C '3.50':2992C '350':2988C '4':197C,1943C,2056C,2103C,2105C,3310C '400':3398C,3401C,3429C,3433C,3437C '5':214C,1858C,1863C,1966C,3363C '500':2921C '54.50':2085C,2126C,2129C '5450':3344C '6':228C,1662C,1805C '7':2876C '7.00':2079C '7.77':3125C,3127C '750':3497C '777':3108C,3118C,3121C,3129C '9.50':2081C 'access':2902C 'accompani':406C 'act':2831C,2853C 'action':1850C,2388C,2892C,3681C 'activ':1610C 'actual':2072C 'actual.join':2109C 'actual.push':2093C 'ad':752C,915C,1904C,1959C,2003C,2060C,2120C,2798C,2941C,2957C 'adapt':527C,541C,689C,1228C 'add':1845C,2412C,2870C 'addfood':2891C 'addit':2655C 'afford':2261C 'ajax':599C 'allow':2381C 'alreadi':2057C,2119C,2127C,3528C 'also':25B,675C,1197C,1416C,1911C,2718C 'ambiti':1511C 'anti':3243C 'anti-pattern':3242C 'anyway':196C,3671C 'api':265C,290C,578C,1307C 'app':15B,78B,251C,435C,850C,1080C,1122C,1767C,1947C,2201C,2207C,2435C,2624C,2694C,2859C,3033C,3291C,3684C 'app-root':849C 'app.__container__':1090C 'app.advancereadiness':949C 'app.deferreadiness':925C 'app.food':3365C 'app.food.createrecord':2919C 'app.injecttesthelpers':914C,1142C 'app.model':656C,667C 'app.reset':1537C,1773C,1953C,2657C,2691C,2866C,3040C,3297C 'app.rootelement':1137C,1145C 'app.setupfortesting':913C,1141C 'app.somemodel':666C 'app.tab':3315C,3453C 'app.tabitem':3418C 'app.table':3507C 'appear':1685C 'applic':4A,32B,74B,150B,275C,386C,392C,413C,436C,455C,506C,545C,557C,570C,681C,731C,811C,830C,840C,856C,891C,894C,909C,919C,936C,953C,982C,1012C,1103C,1162C,1196C,1285C,1322C,1361C,1401C,1421C,1441C,1505C,1517C,1531C,1559C,1582C,1649C,1691C,1694C,1901C,2143C,2160C,2173C,2275C,2283C,2318C,2370C,2546C,2568C,2601C,2671C,2715C,2724C,2735C,2762C,3136C,3149C,3226C,3586C,3622C 'applicaiton':1151C,2781C 'approach':2138C,2178C 'arrang':2851C 'articl':58B 'asid':2548C 'ask':244C,2664C 'assert':679C,2329C,2493C,2855C 'assist':1035C,3276C 'async':185C,1217C,1241C,2218C,2266C 'asynchron':608C,708C,929C,1192C,1354C 'automat':1588C,2357C 'avoid':2292C,3594C 'awar':2219C 'bas':1146C 'base':115B 'basic':2165C,2297C 'bdd':162C,220C 'beast':2264C 'becom':618C,2650C 'behav':1454C,1509C 'behavior':284C,1193C,1902C,2163C,2320C,2527C 'behaviour':2589C 'belong':3152C,3171C 'better':183C 'bind':3632C 'birthdaycak':2082C 'boot':934C,1359C 'bound':1606C,3645C 'browser':31B,556C,1481C 'bug':2301C 'build':889C 'built':252C 'busi':2432C 'cake':2118C 'california':133B 'call':922C,939C,1265C,1277C,1539C,1630C,1848C,2676C 'callback':1619C 'care':3579C 'case':792C,2687C 'catch':2300C 'caution':3142C 'caveat':2684C 'cent':2925C,2955C,2962C,2984C,2989C,3001C,3010C,3024C,3052C,3060C,3065C,3067C,3069C,3098C,3107C,3113C,3115C,3117C,3167C,3179C,3339C,3342C,3345C,3360C,3397C,3399C,3413C,3432C,3438C,3472C,3492C 'challeng':56B,1221C 'chang':1148C,1308C,1602C,2304C,2547C,3191C,3669C 'check':2420C 'chees':2914C,2918C,2923C,2928C,3383C,3387C 'choic':1864C 'class':3287C,3661C 'click':1841C,1885C,1983C,2351C,2364C,2486C,3703C 'code':79B,393C,437C,796C,807C,1182C,1324C,1566C,1627C,1696C,2188C,2303C,2402C,2460C,2716C 'collect':61B 'combin':797C,1466C 'come':50B,404C,594C 'comment':111B,447C 'commit':660C 'common':2838C 'compil':463C 'complet':399C,2524C 'compon':1418C,1438C,1452C,2598C 'compont':277C 'comput':3164C 'concept':2151C 'condit':2993C 'confin':1573C 'confirm':990C,1425C,1436C,1449C,1914C,2367C,2997C 'contain':1087C,1287C,3665C 'content':2427C,2907C,2930C,2938C 'continu':2476C 'control':1091C,1097C,1119C,2496C,2613C,2787C,2815C,2863C,2878C,2881C,2883C,2889C,2900C 'controller.addfood':2887C,2927C 'controller.get':2895C 'controllers.table.tab':3323C 'controllers.table.tab.tabitems':2896C 'convert':2983C,3089C 'copi':3183C 'cost':2959C 'coupl':1927C 'cover':482C 'coverag':262C 'crazi':613C 'creat':1598C,2822C,3277C,3355C,3377C,3408C,3434C,3445C,3484C,3523C 'createchees':3374C,3428C 'createrecord':664C,3258C 'createt':3516C 'createtabitem':3427C 'createtabwithcheeseandcrack':3464C,3517C 'crucial':2450C 'css':824C,3660C 'cur':3477C,3480C 'currentpath':1105C 'custom':787C,958C,984C,1005C,1059C,1273C,1741C,1761C,1835C,1994C,2041C,2088C,2809C 'customer-tab':1834C,1993C,2040C,2087C 'data':389C,408C,442C,507C,512C,550C,575C,581C,590C,606C,1932C,1936C,2349C,2647C,3139C,3237C,3263C 'deal':2504C 'decim':3028C 'default':977C,1226C,1329C,3020C,3045C 'defer':933C,1358C 'deferreadi':924C,938C,1349C 'defin':1017C,1033C,1067C,1681C,1937C 'definit':799C 'describ':2316C,3652C 'design':97B,1429C,1445C,1463C,2157C,2280C 'desir':2375C,2526C,2728C 'detail':1185C,1657C 'develop':95B,566C,1496C,1502C,2276C,2587C,2844C 'diagram':424C 'differ':844C,1682C 'disabl':1595C 'display':827C,1790C,1808C,1831C,1981C,2033C,2107C,2336C,2471C,2593C,2974C,2990C 'distribut':871C 'div.nine':1823C,1973C,2025C,2099C 'document':822C,1077C 'document.write':1136C 'doesn':1711C 'dog':2117C 'dollar':2986C,3026C 'done':2203C 'drew':134B 'driven':1495C,2843C 'ds.model':671C,3257C 'dsl':2221C 'due':624C 'e.g':1487C,2987C 'element':470C,846C,859C,1125C,2342C,2468C,3658C,3699C 'em.k':658C,661C,663C,665C 'ember':3A,127B,149B,206C,362C,382C,605C,746C,1139C,1179C,1214C,1233C,1256C,1284C,1336C,1348C,1368C,1377C,1737C,1749C,1880C,2226C,2256C,2308C,2646C,3138C,3262C 'ember-sc':126B,361C 'ember-test':205C,745C,1138C,1178C,1335C,1367C,1376C,2225C,2255C,2307C 'ember.application':2740C 'ember.data':484C,486C,496C,530C 'ember.handlebars.compile':3058C,3104C 'ember.js':23B,39B,49B,73B,86B,100B,105B,192C,199C,254C,257C,419C,454C,855C,874C,890C,1374C,1400C,1504C,1516C,2142C,3543C,3598C 'ember.run':1562C,1576C,1592C,1618C,1621C,2825C,2916C,3053C,3099C,3371C,3402C,3424C,3439C,3461C,3498C,3513C,3532C 'ember.test.registerhelper':998C,1108C,1114C 'ember.view.create':3056C,3102C 'emberjs.com':719C,761C,763C,764C,1351C,1623C 'emberjs.com/api/classes/ember.application.html#method_deferreadiness':1350C 'emberjs.com/api/classes/ember.run.html':1622C 'emberjs.com/guides/testing/integration/':760C 'empti':2912C 'encourag':2233C 'end':324C,326C,964C,966C,1047C,1049C,1381C,1383C,1388C,1390C,1520C,1522C 'end-to-end':323C,963C,1046C,1380C,1387C,1519C 'engin':2231C,2563C 'ensur':1500C 'eq':1986C,1997C,2044C 'equal':53B,1783C,1800C,1821C,1832C,1852C,1971C,1991C,2007C,2023C,2038C,2097C,2108C,2121C,2905C,2936C,2945C,2952C,3068C,3116C,3380C,3388C,3395C,3430C,3481C,3489C,3518C 'event':2365C 'event/action':2501C 'everi':1548C,3657C,3698C 'exampl':11B,28B,478C,553C,785C,820C,898C,971C,1028C,1056C,1271C,1394C,1756C,2322C,2804C,2969C,3576C 'excel':18B,723C 'execut':805C,1405C,1473C,1550C,1570C,1612C,2706C,2757C 'exercis':66B,118B,240C,334C,339C,1223C,1899C,2194C,2774C,2972C 'expand':381C 'expect':1456C,1778C,1794C,1815C,1965C,2065C,2331C,2670C,2875C,3048C,3094C,3312C,3362C,3415C,3450C,3504C,3680C 'expectedfood':2073C,2112C 'experi':2287C,2479C 'explan':428C 'facilit':587C,1190C,1489C 'fail':2395C,2440C,2513C 'failur':623C 'familiar':3540C 'fast':315C,1414C,3670C 'favor':2182C 'featur':288C,2565C,2591C,3563C,3608C 'fell':2768C 'file':1021C,1071C 'fillin':2344C,2484C 'final':3199C 'find':657C,1801C,1822C,1833C,1853C,1972C,1992C,2008C,2024C,2039C,2086C,2094C,2098C,2122C,2339C 'fire':84B,98B,417C,3677C 'first':1839C,2185C 'fixtur':388C,407C,441C,497C,526C,540C,549C,580C,688C,2648C,3064C,3112C,3210C,3236C 'fixtureadapt':686C 'fixur':1940C 'follow':1874C 'food':1120C,1646C,1698C,1812C,1843C,1860C,1905C,1960C,2059C,2131C,2786C,2795C,2814C,2819C,2862C,2871C,2882C,2888C,2899C,2903C,2915C,2933C,2942C,2951C,2953C,2958C,3174C,3176C,3188C,3316C,3336C,3353C,3366C,3370C,3373C,3376C,3378C,3384C,3410C,3447C,3459C,3469C 'food.destroy':3404C 'food.get':3381C,3389C,3396C 'food.record.get':3338C,3471C 'food.record.tojson':2935C 'foods.length':2946C,3482C 'foods.push':2934C,3470C 'foods.reduce':3474C 'foodssum':3460C,3473C,3490C 'forc':2645C,3212C 'foreach':2931C,3334C,3467C 'forget':2580C 'format':2975C,3022C,3092C 'forward':2270C 'found':2631C 'framework':258C,287C,1518C,3544C,3591C,3605C 'fri':2078C,2115C 'function':1000C,1074C,1084C,1088C,1092C,1100C,1110C,1116C,1303C,1620C,1772C,1777C,1782C,1793C,1799C,1814C,1820C,1952C,1964C,1970C,1990C,2022C,2037C,2064C,2070C,2092C,2249C,2521C,2865C,2874C,2917C,2932C,3039C,3047C,3054C,3093C,3100C,3271C,3296C,3311C,3335C,3361C,3372C,3403C,3414C,3425C,3440C,3449C,3462C,3468C,3475C,3499C,3503C,3514C,3533C 'gap':271C 'generat':1413C 'get':236C,612C,1104C,2431C,3322C,3539C 'getfoodcontrol':1064C,1115C,2817C,2879C,3321C 'github':342C 'github.com':359C,375C,439C,444C,532C,817C,1342C,1372C,1525C,2628C 'github.com/ember-sc/peepcode-ordr-test':358C 'github.com/ember-sc/peepcode-ordr-test/wiki':374C 'github.com/ember-sc/peepcode-ordr-test/wiki/guide:-end-to-end-tests':1524C 'github.com/ember-sc/peepcode-ordr-test/wiki/guide:-example-browser-application':438C 'github.com/ember-sc/peepcode-ordr-test/wiki/guide:-fixture-data':443C 'github.com/ember-sc/peepcode-ordr-test/wiki/guide:-testing-setup-helpers':816C 'github.com/ember-sc/peepcode-ordr-test/wiki/guide:-unit-tests':2627C 'github.com/emberjs/data':531C 'github.com/emberjs/ember.js/tree/master/packages/ember-testing/lib':1371C 'github.com/emberjs/starter-kit':1341C 'given':3128C 'good':633C 'great':27B,307C,2574C 'group':121B,130B 'grow/change':2540C 'guarante':3558C 'guid':377C,384C,694C,698C,715C,758C,901C,1054C 'h2':1824C,1974C,2026C,2100C 'h3':1838C,1999C,2046C 'hacker':123B 'handlebar':464C,2615C,2963C,2980C,3036C,3663C 'handler':2502C,2522C 'head':1830C,1980C,2032C,2106C 'headless':1485C 'healthi':1465C 'help':1498C,2562C,2828C 'helper':202C,712C,739C,756C,789C,802C,960C,986C,996C,1006C,1015C,1030C,1061C,1086C,1107C,1188C,1216C,1262C,1274C,1295C,1310C,1733C,1743C,1763C,1876C,2616C,2641C,2810C,2964C,2981C,3016C,3037C,3043C,3086C 'helper.container':1095C 'helper.controller':1102C 'host':1075C 'host.app':1081C 'host.document':1078C 'hot':2116C 'hotdog':2080C 'howev':1446C 'html':821C,865C 'i.e':1457C 'id':2920C 'idea':634C 'ideal':584C 'identifi':853C 'imageurl':3358C,3390C 'img/cheese.png':3391C,3394C 'imgurl':2924C 'import':247C,2576C,3637C 'includ':823C,942C,1211C,1275C 'inform':750C 'initi':1775C 'input':2341C 'insid':1628C 'instanc':2816C,3279C,3327C 'instead':466C,2720C,3672C 'insur':2793C 'integr':5A,212C,310C,321C,972C,1037C,1172C,1362C,1364C,1396C,1403C,1447C,1471C,1632C,1719C,1727C,1768C,1866C,1887C,1948C,2146C,2251C,2550C,2571C 'inter':2170C 'interact':2242C,2455C,2508C,2595C 'interfac':672C,1658C 'intermit':621C 'intern':1253C,1264C 'introspect':1011C 'invoc':1589C 'isol':1552C,2708C,2759C 'item':1647C,1673C,1906C,2444C,2904C,3307C,3379C,3488C,3531C 'jasmin':158C 'javascript':37B,318C,655C,912C,997C,1073C,1407C,1476C,1764C,1944C,2535C,2856C,3030C,3288C 'journey':152B 'key':2588C 'kit':876C,881C,1340C,1346C 'know':3642C 'konacha':175C 'lastest':885C 'learn':9B,22B,38B,45B,457C,522C,726C,3567C,3573C 'length':1804C,1857C,2908C,2939C,3521C 'let':209C 'level':54B 'li':1837C,1855C,1985C,1996C,2043C,2090C 'lib':1379C 'librari':861C,1331C 'lifecycl':628C,700C 'like':155B,2176C,2389C,3666C,3688C 'list':509C,862C,1645C,1672C 'load':619C,705C,1022C 'logic':931C,1356C 'look':2269C 'lookup':1096C,2812C 'loop':1577C 'love':161C 'main':270C,330C 'make':272C 'mani':3160C 'master':1656C 'matter':1713C 'may':181C,630C,1679C,1684C,1699C,1705C,2660C,2726C,3239C 'meetup':129B,364C 'menu':1813C,1854C,1861C,1984C 'method':905C,1031C,1205C,1210C,1249C,1281C,1315C,3259C,3600C 'mocha':165C 'mock':601C,636C,669C 'mode':1586C 'model':485C,518C,602C,627C,638C,645C,685C,693C,695C,697C,699C,702C,1600C,1677C,2619C,3130C,3208C,3232C,3254C,3278C,3286C,3294C,3302C,3317C,3354C,3367C,3407C,3411C,3420C,3444C,3448C,3455C,3509C 'modul':279C,1535C,1634C,1722C,1765C,1868C,1870C,1945C,2790C,2857C,2967C,3031C,3133C,3289C 'money':2977C,3042C,3059C,3085C,3091C,3105C 'move':1121C 'must':703C 'name':1093C,1098C,2346C,2922C,3357C,3382C,3385C 'nan':3083C 'necessari':2467C,3247C 'need':302C,2643C,2662C,3617C,3692C 'new':2409C,2739C 'newer':169C 'next':2411C,2457C 'nice':427C,500C 'non':71B 'non-trivi':70B 'note':1198C,1674C 'null':3070C,3075C 'number':3006C,3014C,3088C 'object':331C,1007C,1286C,2745C 'observ':63B,1608C,3630C 'ok':2880C,2885C,2886C,2897C,3314C,3318C,3324C,3328C,3364C,3368C,3375C,3417C,3421C,3452C,3456C,3506C,3510C 'one':1302C,1929C,2683C,2950C 'order':1644C,1670C,1910C,2802C,3156C,3197C 'ordr':14B,77B,346C,351C,356C,366C,371C,434C,918C,981C,1530C,1766C,1946C,2200C,2623C,2693C,2714C,2780C,2858C,3032C,3148C,3290C 'organ':2829C,2845C 'otherwis':3021C 'output':2998C,3017C 'outsid':2769C 'packag':208C,748C,1181C,1235C,1258C,1338C,1370C,1375C,1739C,1751C,1882C,2228C,2258C,2310C 'page':378C,421C,716C,759C,770C,968C,1051C,1128C,1174C,1366C,1392C,2376C,2606C,3268C 'pancak':2076C,2114C 'parallel':563C 'part':742C,1746C,2488C 'pass':2190C,2472C 'path':999C,1003C,1062C,1099C,1109C,1113C,1742C,1784C 'pattern':1653C,3244C 'pavlov':216C 'peepcod':13B,82B,88B,109B,345C,350C,355C,365C,370C,1529C 'peepcode-ordr-test':344C,354C 'peepcode-ordr-test-wiki':349C,369C 'peepcode.com':89B,103B 'peepcode.com/products/emberjs':102B 'perform':928C,1353C 'perhap':320C,519C,2338C 'perspect':1716C,2164C,2239C 'phantomj':1488C 'pizza':2001C,2004C,2017C,2048C,2050C,2074C,2113C 'place':3029C 'popul':505C,1935C 'power':2531C 'practic':1491C,2839C 'pre':504C,1934C 'pre-popul':503C,1933C 'prefer':2290C 'prepar':907C 'pretti':2530C 'prev':3476C,3479C 'price':2014C,2018C,3189C,3194C 'prime':491C 'privat':1280C,1306C,3599C 'product':544C,593C,2734C 'profession':93B 'project':193C 'promis':1513C 'properti':1603C,3165C,3180C,3602C,3646C 'propos':379C 'provid':219C,267C,573C,1201C,1237C,1734C,1877C,2222C,3260C 'put':2518C 'queue':1579C,1593C,2826C 'qunit':178C,227C,232C,765C,776C,833C,1167C,1200C,1236C,1327C,2260C,3063C,3111C 'qunit-fixtur':3062C,3110C 'qunitjs.com':1328C 'read':511C,1176C,3552C 'readi':489C,2651C 'realist':453C 'realli':2175C,3636C 'reason':451C 'recommend':537C,886C,2557C 'record':2820C 'redirect':1776C,1786C 'refer':735C 'relationship':1678C 'reli':3234C 'remain':1922C 'render':2462C,3044C,3080C,3087C,3126C 'replac':2110C 'repo':343C 'report':1160C,1412C 'repositori':368C,877C,882C 'request':600C 'requir':948C,1611C,2744C 'reset':1557C,2696C,2722C 'respond':3686C 'result':336C,397C,2361C,3221C 'return':1001C,1089C,1094C,1101C,1106C,1111C,1117C,1982C,3478C 'rewrit':210C 'right':2426C 'rollback':662C 'root':845C,851C,858C 'rout':978C,992C,1891C,2327C,2372C,2392C,2410C,2498C,2666C,3219C 'router':2405C 'routin':1543C,2680C,2765C 'run':313C,951C,2719C 'runner':223C,234C,319C,767C,778C,835C,867C,1169C,1478C,1486C,2537C 's/g':2111C 'said':495C 'save':707C 'sc':128B,363C 'scale':1507C 'schema':3145C 'scope':1615C,2543C,2771C 'scott':135B,446C 'screencast':90B 'script':469C 'section':690C 'see':390C,415C,472C,653C,768C,878C,961C,1041C,1170C,1385C,2604C,3264C 'seem':3246C 'seen':1133C 'segment':2832C 'serv':1753C 'server':569C 'set':728C 'setup':710C,809C,892C,930C,1355C,1542C,1771C,1951C,2659C,2668C,2679C,2864C,3038C,3205C,3224C,3295C 'setup/helpers':773C,815C 'ship':1230C 'simpl':2387C 'sinc':217C,1288C 'singl':2597C 'site':720C 'six':1661C,1791C,1806C 'smallest':452C 'softwar':2230C 'solid':260C,1238C 'someth':154B,523C 'sourc':724C,1323C,1695C 'southern':132B 'span':2010C,2124C 'spec':222C 'specif':75B,3230C 'speedi':2534C 'spend':3549C 'spent':139B 'spi':677C 'start':237C,1202C,1246C,2384C,2764C 'starter':875C,880C,1339C,1345C 'state':1013C,1917C,2672C,3227C 'step':2849C 'still':2051C 'stop':1204C,1248C 'strategi':2136C 'strictequ':3076C,3122C,3340C 'studi':2688C 'style':221C,825C 'subject':649C 'submit':2352C 'subtot':3168C 'suit':617C 'super':314C 'support':795C,1020C,1070C,1239C,1332C,2149C,2278C,2407C,2569C 'sure':273C 'tab':1638C,1669C,1704C,1836C,1865C,1909C,1920C,1950C,1963C,1995C,2006C,2042C,2053C,2063C,2089C,2134C,2801C,3155C,3158C,3301C,3320C,3325C,3326C,3351C,3443C,3454C,3458C,3463C,3485C,3495C,3526C 'tab.destroy':3500C 'tab.get':3332C,3341C,3465C,3491C 'tab.tabitems.content':3520C 'tabitem':1701C,2873C,2894C,2898C,2910C,2944C,2948C,3161C,3170C,3186C,3406C,3419C,3423C,3426C,3435C 'tabitem.destroy':3441C 'tabitem.get':3431C 'tabitems.content':3333C,3466C 'tabitems.get':2906C,2929C,2937C 'tabl':1631C,1635C,1663C,1708C,1770C,1792C,1802C,1807C,1810C,1826C,1828C,1897C,1928C,1930C,1942C,1955C,1976C,1978C,2028C,2030C,2055C,2102C,2104C,3151C,3309C,3502C,3508C,3512C,3515C,3524C 'table.destroy':3534C 'table.get':3519C 'tables.index':1785C 'talk':242C 'tame':2262C 'task':42B 'tdd':231C 'team':3640C 'templat':465C,2423C,2447C,2464C,2491C,3057C,3103C,3664C,3676C 'test':1A,8A,35B,47B,68B,113B,147B,186C,201C,207C,213C,233C,249C,261C,298C,300C,311C,327C,347C,352C,357C,367C,372C,383C,460C,480C,483C,516C,529C,588C,609C,616C,622C,642C,652C,709C,733C,738C,747C,755C,766C,772C,777C,788C,794C,813C,814C,834C,838C,866C,896C,911C,957C,959C,967C,973C,985C,1002C,1025C,1040C,1044C,1050C,1060C,1083C,1112C,1118C,1135C,1140C,1154C,1159C,1168C,1173C,1180C,1191C,1215C,1218C,1227C,1234C,1242C,1257C,1298C,1330C,1337C,1365C,1369C,1378C,1384C,1391C,1397C,1404C,1411C,1423C,1431C,1448C,1472C,1477C,1494C,1523C,1527C,1534C,1546C,1549C,1556C,1564C,1585C,1633C,1720C,1728C,1738C,1750C,1762C,1769C,1774C,1789C,1809C,1867C,1875C,1881C,1888C,1913C,1949C,1954C,2054C,2135C,2140C,2147C,2154C,2166C,2184C,2192C,2197C,2220C,2227C,2236C,2252C,2257C,2267C,2273C,2294C,2309C,2314C,2355C,2380C,2396C,2416C,2441C,2474C,2477C,2482C,2514C,2536C,2551C,2555C,2560C,2572C,2584C,2603C,2610C,2626C,2638C,2653C,2700C,2704C,2711C,2731C,2750C,2754C,2785C,2789C,2792C,2805C,2835C,2842C,2846C,2861C,2869C,2966C,2970C,2995C,3035C,3041C,3084C,3132C,3203C,3229C,3252C,3267C,3282C,3293C,3300C,3352C,3405C,3442C,3501C,3538C,3554C,3571C,3583C,3592C,3597C,3611C,3619C,3628C,3651C,3656C,3673C,3696C 'test-driven':1493C,2841C 'test.adapter.asyncend':1268C 'test.adapter.asyncstart':1266C 'testing/integration':714C,757C 'text':1825C,1840C,1851C,1975C,2000C,2011C,2027C,2047C,2096C,2101C,2125C,3046C,3078C,3124C 'thing':610C,2333C 'think':1639C,2214C 'thought':2246C 'three':1725C 'time':141B,492C,1561C,3250C,3551C 'togeth':281C,1461C,2519C 'top':225C 'topic':2767C 'total':2009C,2013C,2084C,2123C,3304C,3330C,3337C,3343C,3348C,3493C 'transact':659C 'tri':142B,157C,164C,177C,215C 'trigger':3217C 'trivial':72B 'tutori':20B,83B,91B,106B,401C,475C,547C,945C,2210C 'two':903C,3027C,3487C 'ty':136B 'type':2378C 'ui':1652C 'under':283C 'understand':410C 'unit':7A,299C,641C,1039C,1043C,1430C,1469C,2554C,2559C,2583C,2602C,2609C,2625C,2637C,2699C,2703C,2749C,2753C,2784C,2788C,2860C,2965C,3034C,3131C,3266C,3281C,3292C 'unless':3633C 'updat':1313C,2015C 'url':3392C 'use':173C,194C,230C,462C,538C,548C,579C,604C,676C,780C,842C,848C,902C,926C,988C,1009C,1058C,1224C,1243C,1291C,1319C,1434C,1650C,1730C,1758C,1872C,2253C,2305C,2417C,2433C,2620C,2690C,2737C,2777C,2807C,2978C,3137C,3140C,3209C,3214C,3255C,3274C,3547C,3595C 'user':1688C,2168C,2241C,2286C,2429C,2453C,2507C,3706C 'util':1206C,1252C 'valu':3002C,3011C,3071C,3119C 'var':1076C,1079C,1082C,1085C,2071C,2877C,2893C,2913C,3050C,3096C,3319C,3329C,3369C,3422C,3457C,3511C 'variabl':3273C 'various':144B,1417C,1890C,3285C 'verifi':975C 'version':870C,887C 'via':576C,598C,1406C,1474C,2208C 'video':19B,87B,101B,107B,402C,420C,946C,2211C 'view':3051C,3055C,3077C,3097C,3101C,3123C 'view.appendto':3061C,3109C 'view.cents':3106C 'view.get':3066C,3114C 'visibl':1164C 'visit':1732C,1780C,1796C,1817C,1883C,1889C,1924C,1967C,2019C,2034C,2067C,2323C,2390C,2640C,2674C,2867C,3215C,3298C 'wait':1209C,1261C,2358C 'warn':476C,1269C,3134C 'way':145B,501C,585C,3589C 'web':94B 'well':782C 'went':153B 'wiki':348C,353C,373C 'window':1143C 'wire':597C 'within':1194C,2823C 'work':280C,293C,431C,560C,682C,829C,1427C,1443C,1460C,2516C,3564C,3613C,3648C 'would':305C,535C,2755C 'wow':198C 'wrap':1625C 'write':34B,2145C,2153C,2183C,2187C,2196C,2205C,2235C,2272C,2293C,2313C,2400C,2438C,2458C,2480C,2558C,2582C,2608C,3570C,3582C,3694C 'written':2298C 'yet':493C	published	pixelhandler
18	I will start with the end in mind. I'll need a router to **list** the products, a **collection** of data, a **view** to render the list, and a **model** for each data object. (The code examples are found in a [gist][backbone product list gist])\n\n## The Product's Router\n\n**product_router.js**\n\n    PX = window.PX || {};\n    // application\n    PX.App = Backbone.Router.extend({\n        routes: {\n            "/": "listProducts",\n            "list": "listProducts"\n        },\n        //initialize: function (options) {},\n        listProducts: function () {\n            var productsList = new PX.ProductListView({\n                "container": $('#container'),\n                "collection": PX.products\n            });\n            PX.products.deferred.done(function () {\n                productsList.render();\n            });\n        }\n    });\n\nIn the code above I am using a object named 'PX' as a namespace, adding the code for the Backbone objects to the PX object to minimize adding a bunch global variables to the window obejct. For the purpose of this tutorial I am only adding one global object, 'PX'.\n\n    PX = window.PX || {};\n\nThe object literal `{ ... }` is an argument to `Backbone.Router.extend` which is the **prototype** for the router object that I will use to render the products' list. `PX.App` is a constructor with a prototype that extends the `Backbone.Router` function. The prototype (object literal) has to properties: *routes* and *listProducts*. The routes property has an object literal with two named routes - the root directory "/" and "list". Both routes are assigned a string which is the name of the function that handles the routes. See the [Backbone.Router documentation][backbone router] for more details.\n\nIn the routes' handler method (`listProducts`) I create a new `Backbone.View` object using the new operator with `PX.ProductListView` and passing some options as an object literal. Included in the options argument are properties for a `container` and also a `collection`. The container is the jQuery object where I will render the products list or *view*. The collection is a list of products or a collection of product models. Typically with an application that has some output from a server-side script a collection's data would be written into a script element (or bootstrapped) as JSON data so that an AJAX request is not necessary. In this case, I am not using any server-side scripting; so, I will need to fetch a collection (array) of products from an API. Also, I am using a [jQuery Deferred object][deferred] to indicate when the collection is ready. The function `PX.products.deferred.done` accepts functions as arguments which can be executed when the deferred object is resolved. In this example the render method is called when a list of products (collection instance) is populated with models (data).\n\nI have not created a view or a collection yet; to use this router I will need both.\n\n## The Products' View(s)\n\nI will need two types of view objects one to render the list and one for each item in the list. A Backbone view has a model instance as data; and uses a `render` method to parse the JSON data into HTML with using a template, e.g. the [Mustache library][mustachejs] provides a sweet logic-less utility to render JSON using an HTML template (see a [Mustache tutorial][mustache tutorial] with [examples][mustache examples]).\n\n**product_list_view.js**\n\n\n    PX.ProductListView = Backbone.View.extend({\n        tagName: "ul",\n        className: "products",\n        render: function () {\n            for (var i = 0; i < this.collection.length; i++) {\n                this.renderItem(this.collection.models[i]);\n            };\n            $(this.container).find(this.className).remove();\n            this.$el.appendTo(this.options.container);\n            return this;\n        },\n        renderItem: function (model) {\n            var item = new PX.ProductListItemView({\n                "model": model\n            });\n            item.render().$el.appendTo(this.$el);\n        }\n    });    \n\n\nThe constructor for the *product list view* above uses an (unordered list) `ul` tag and will be responsible for rendering a list of products. The render method uses an iteration over the object's `collection` to build the list of products. The render method depends on the list view object having a `collection` property. (I should have added a check during initialization and also thrown an error if the constructor is called without an option for the collection.)\n\nWhen rendering a list, the `render` method calls a `renderItem` method which renders each list item. In the method to render each `li` a variable named `item` is assigned a new `PX.ProductListItemView` instance. This *item* is constructed with a model from the products' collection. The item object is a view instance for each product in the list. Notice the reference to `this.$el`, every Backbone view object has an `el` property and also a jQuery/Zepto object `$el`. Also in the render method, the return value is `this`, which refers to the view object itself. So, when a view is rendered the element can be accessed like so `viewInstance.render().$el`. When this code is executed: `item.render().$el.appendTo(this.$el);` from within the `renderItem` method, the result of rendering the product (item) is appended to the `ul` (this.$el) element with belongs to the product list view instance object.\n\nI will need to create a view to render each item...\n\n**product_list_item_view.js**\n\n    PX.ProductListItemView = Backbone.View.extend({\n        tagName: "li",\n        className: "product",\n        initialize: function (options) {\n            this.template = $('#product-template').html();\n        },\n        render: function () {\n            var markup = Mustache.to_html(this.template, this.model.toJSON());\n            this.$el.html(markup).attr('id',this.model.get('_id'));\n            return this;\n        }\n    });\n\n\nThe *product list items'* view constructor uses a (list item) `li` tag and during initialization selects some HTML to use as an HTML template. This template will be used to render the JSON data for each product. The template HTML is found on the document within a script element, see below.\n\n**product-template.html**\n\n    <script type="text/template" id="product-template">\n            <p><a href="products/{{_id}}">{{title}}</a></p>\n        <p>{{description}}</p>\n        <p>ID: {{_id}}</p>\n    </script>\n\n\nThe HTML template will be used to render the markup; see the code in the render method `Mustache.to_html(this.template, this.model.toJSON())`. To learn more about using Mustache, see: [mustache.js][mustachejs]. The [Underscore] library has a template rendering utility as well, I happen to like the *logic-less* library and syntax that Mustache.js provides. This demonstrates the flexibility of Backbone, I can use whatever methods I choose to render HTML. The template HTML could have been loaded using AJAX and stored as an object, in this example I used a script element. In the template there are placeholders for the JSON object's properties: `{{title}}`, `{{description}}` and `{{_id}}`. The job of the template utility is blending JSON data found in a Backbone model object with a HTML template string.\n\nThe `$el` property of the view instance object for the list item is an `li` element, which receives the `markup` as it's HTML content when the code `this.$el.html(markup)` in the render method executes. Using `this.$el` allows for chaining. So, I added an `id` property to the `li` element as well.\n\nTo learn more about [Backbone.View objects][backbone view] see the documentation.\n\nThere would be no list of products to render without a collection...\n\n## The Products' Collection\n\nThe product data exists in an (example) API and is available using a [Web service][ecomapi]; the url to fetch an array of products is '/api/products'. [Backbone collections][backbone collection] can fetch this array, then generate models to add as members of the products' collection. Below is a constructor to generate a collection of product data using an API for the data source.\n\n**product_collection.js**\n\n    PX.ProductList = Backbone.Collection.extend({\n        model: PX.Product,\n        url: '/api/products',\n        initialize: function () {\n            this.fetch({\n                success: this.fetchSuccess,\n                error: this.fetchError\n            });\n            this.deferred = new $.Deferred();\n        },\n        deferred: Function.constructor.prototype,\n        fetchSuccess: function (collection, response) {\n            collection.deferred.resolve();\n        },\n        fetchError: function (collection, response) {\n            throw new Error("Products fetch did get collection from API");\n        }\n    });\n    \n    PX.products = new PX.ProductList();\n\n\nIn the `PX.ProductList` prototype there are properties for `model` and `url`. The model property has a constructor object used to generate models as members of the products collection. The url property is the web service that [Backbone.sync][backbone sync] will call to fetch the data. During initialization the product data is fetched and a `deferred` property is initialized which will be resolved during execution of the fetch success handler function. \n\nBackbone wraps the AJAX success and error handlers and calls the handlers sent following the fetch call. When Backbone calls either handler, two arguments are passed `collection` and `response`. In this example, the `fetchSuccess` method resolves the collection's deferred object and the `fetchError` method throws an error. \n\nWhen the router fires the method to `listProducts` the collections' deferred object is used to render the list when the deferred is done (resolved). See the router code `PX.products.deferred.done`; which takes an anonymous function to call the list view's render method, `productsList.render();`.\n\nThe collection cannot generate a list of products without a model constructor...\n\n## The Product Model\n\n**product_model.js**\n\n    // model\n    PX.Product = Backbone.Model.extend({\n        defaults: {\n            title: null,\n            description: null\n        }\n    });    \n\n\nThis [Backbone.Model][backbone model] is very simple, it has some defaults defined on it's prototype object: `title` and `description`. The API has a much more data in each product document. However, the purpose of this tutorial is to demonstrate generating a list of products; these two properties do for now. Each model that the collection adds will have all the data provided by the Web service. The List view instance also uses the model instance to get JSON data when rendering each list item. The model object has a method to get the data as an object `.toJSON()` which is not stringified but rather a JavaScript object. The model's data is stored on a property of the model instance named `attributes`. To learn more about [Backbone.Model][backbone model] see the documentation.\n\nAll these objects work together to provide a representation of the API data in the format specified using the template and the view instance objects to present HTML within the browser. The server is only providing data as JSON objects. All the HTML rendering is done on the client-side. \n\nSo to kick off the application we need to create an instance of the router and start Backbone.history ...\n\n## Bootstrap the Application\n\n**bootstrap.js**\n\n    // bootstrap\n    PX.app = new PX.App();\n    Backbone.history.start();\n\n\n`new PX.App()` returns the instance of the router and `Backbone.history.start()` handles monitoring of the hashchange or HTML5 pushState. When a route is matched in the URL e.g. /#list the assigned function is called to handler the route's behavior. For a demo, see the example API page at [http://ecomapi.herokuapp.com/#list][ecomapi list] (look under the heading 'Product List' you can reset the data with the button 'Add product fixtures'). \n\nSee the [Backbone.history documentation][backbone history] for more info.\n\n## Post Hoc\n\nThis tutorial walks through development using the core components that Backbone provides; as stated in the Backbone documentation, giving *structure* to a web application. There are more than a few ways to do this same job of rendering a list of products with JSON data. Perhaps event a single AJAX call using a success handler and some DOM manipulation with jQuery. However, without structure in a web application, the task of managing code as the application's life matures and grows (well into a beast) can become a fairly difficult. Backbone provides simple structure and still allows the developer to decide how to organize code, and which utilities to add. I like to use jQuery, Mustache and RequireJS as well, Backbone does not get in the way. See a [sample application][app-boilerplate] using these libraries. I used this sample application to test the file structure and build process when planning development for a fairly complex application.\n\nPerhaps you can continue building upon this tutorial and generate a route to view product details. Also, if you have not already read the first article in this series, you can build your own development API as well - [Develop a RESTful API Using Node.js With Express and Mongoose][productsapi].\n\nIn the next post I plan to take a second look at this same code; but instead, walk though the process of using [Jasmine][jasmine], a behavior-driven development framework, to discover the implementation. This tutorial is structured in the same way I would approach writing tests, sort of a top-down approach beginning with the router instance.\n\n## Reference\n\n* Gist: [Product API example using Backbone.js Models, Views and Collections][backbone product list gist]  \n* API tutorial: [Develop a RESTful API Using Node.js With Express and Mongoose][productsapi]  \n* [Sample API with list generated using code in this tutorial][ecomapi list]  \n* [Backbone documentation][backbone]  \n* [Underscore documentation][underscore]  \n* Framework for API: [Express, a node package for developing node.js apps][expressjs]  \n* [hashchange][hashchange] | HTML5 [pushState][pushState]  \n* [Mustache examples][mustache examples] | [Mustache tutorial][mustache tutorial]  \n* [Example application structure with RequireJS and Backbone.js][app-boilerplate]  \n\n[backbone product list gist]: https://gist.github.com/1912291 "Product API example using Backbone.js Models, Views and Collections"\n\n[productsapi]: http://pixelhandler.com/blog/2012/02/09/develop-a-restful-api-using-node-js-with-express-and-mongoose/ "Develop a RESTful API Using Node.js With Express and Mongoose"\n\n[app-boilerplate]: https://github.com/pixelhandler/vertebrae "Example application structure with RequireJS and Backbone.js"\n\n[backbone]: http://documentcloud.github.com/backbone/ "Backbone.js"\n[backbone model]: http://documentcloud.github.com/backbone/#Model "Backbone.Model"\n[backbone collection]: http://documentcloud.github.com/backbone/#Collection "Backbone.Collection"\n[backbone view]: http://documentcloud.github.com/backbone/#View "Backbone.View"\n[backbone history]: http://documentcloud.github.com/backbone/#History "Backbone History"\n[backbone sync]: http://documentcloud.github.com/backbone/#Sync "Backbone.sync"\n[backbone router]: http://documentcloud.github.com/backbone/#Router "Backbone.Router"\n\n[deferred]: http://api.jquery.com/category/deferred-object/ "utility object that can register multiple callbacks into callback queues"\n\n[ecomapi]: http://ecomapi.herokuapp.com/ "Web Service"\n[ecomapi list]: http://ecomapi.herokuapp.com/#list "Backbone List of Products generated with API data"\n\n[expressjs]: http://expressjs.com/ "High performance, high class Web development for Node.js"\n\n[hashchange]: http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#event-hashchange "hashchange"\n\n[jasmine]: http://pivotal.github.com/jasmine/ "Jasmine is a behavior-driven development framework"\n\n[json]: http://www.json.org/ "JSON"\n\n[mongodb]: http://www.mongodb.org/ "MongoDB (from 'humongous') - Document-oriented storage"\n\n[mongoosejs]: http://mongoosejs.com/ "Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment."\n\n[mustachejs]: https://github.com/janl/mustache.js/ "Minimal templating with {{mustaches}} in JavaScript"\n\n[mustache examples]: http://coenraets.org/tutorials/mustache/ "example code using Mustache"\n\n[mustache tutorial]: http://coenraets.org/blog/2011/12/tutorial-html-templates-with-mustache-js/ "Tutorial: HTML Templates with Mustache.js"\n\n[node]: http://nodejs.org/ "Node.js"\n\n[pushState]: https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history "Manipulating the browser history"\n\n[rest]: http://en.wikipedia.org/wiki/Representational_state_transfer "Representational state transfer"\n\n[underscore]: http://documentcloud.github.com/underscore/ "Underscore is a utility-belt library for JavaScript"	This tutorial explores coding with [Backbone.js][backbone] using data stored in an API. The code developed will interact with an API as described in the earlier post : [Develop a RESTful API Using Node.js With Express and Mongoose][productsapi]. This article is the second tutorial in a series on the topic building an online store using [REST][rest]. Previously, I explored creating an API with [Node.js][node], [Express][expressjs], [MongoDB][mongodb], and [Mongoose][mongoosejs]. In this article I demonstrate an overview of coding a front-end interface for a data-driven application using Backbone.\n\nBackbone organizes code objects for [Models][backbone model], [Collections][backbone collection], [Views][backbone view], [Routers][backbone router] and uses a [sync][backbone sync] object to interact with an API. I will use these constructors to build a list of projects from objects stored as documents in a database ([MongoDB][mongodb]) . The API built in the previous tutorial facilitates development with an actual [web service][ecomapi] rather than mocking JSON data in a flat file.\n\nFor the purpose of getting to know Backbone, the use case that I will focus on is listing products consumed via [JSON][json] data from a web service. Each product in the list represents data found in a *model*. The product list represents a *collection* of (product) models. The HTML is generated using a *view* which renders data - blending the model's JSON data with a template. Finally a *route* triggers the asynchronous process of fetching data and rendering the product list by listening for a [hashchange][hashchange] or using [pushState][pushState]. These are the core components that Backbone provides.\n\n[backbone]: http://documentcloud.github.com/backbone/ "Backbone.js"\n[backbone model]: http://documentcloud.github.com/backbone/#Model "Backbone.Model"\n[backbone collection]: http://documentcloud.github.com/backbone/#Collection "Backbone.Collection"\n[backbone view]: http://documentcloud.github.com/backbone/#View "Backbone.View"\n[backbone history]: http://documentcloud.github.com/backbone/#History "Backbone History"\n[backbone sync]: http://documentcloud.github.com/backbone/#Sync "Backbone.sync"\n[backbone router]: http://documentcloud.github.com/backbone/#Router "Backbone.Router"\n[productsapi]: http://pixelhandler.com/posts/develop-a-restful-api-using-nodejs-with-express-and-mongoose "Develop a RESTful API Using Node.js With Express and Mongoose"\n[rest]: http://en.wikipedia.org/wiki/Representational_state_transfer "Representational state transfer"\n[expressjs]: http://expressjs.com/ "High performance, high class Web development for Node.js"\n[mongodb]: http://www.mongodb.org/ "MongoDB (from 'humongous') - Document-oriented storage"\n[mongoosejs]: http://mongoosejs.com/ "Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment."\n[ecomapi]: http://ecomapi.herokuapp.com/ "Web Service"\n[json]: http://www.json.org/ "JSON"\n[node]: http://nodejs.org/ "Node.js"\n[pushState]: https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history "Manipulating the browser history"\n[hashchange]: http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#event-hashchange "hashchange"	backbonejs-models-views-and-collections-to-present-api-data	Backbone.js Models, Views and Collections to Present API Data	2012-02-29	2015-05-07 17:03:21.327442	2015-05-07 17:03:21.327442	1	'/#list':2504C '/#list][ecomapi':2019C '/1912291':2403C '/api/products':1494C,1538C '/backbone/':282B,2443C '/backbone/#collection':294B,2455C '/backbone/#history':306B,2467C '/backbone/#model':288B,2449C '/backbone/#router':319B,2480C '/backbone/#sync':313B,2474C '/backbone/#view':300B,2461C '/blog/2011/12/tutorial-html-templates-with-mustache-js/':2591C '/blog/2012/02/09/develop-a-restful-api-using-node-js-with-express-and-mongoose/':2416C '/category/deferred-object/':2485C '/en/dom/manipulating_the_browser_history':390B,2603C '/initialize':460C '/janl/mustache.js/':2571C '/jasmine/':2531C '/pixelhandler/vertebrae':2432C '/posts/develop-a-restful-api-using-nodejs-with-express-and-mongoose':324B '/specs/web-apps/current-work/multipage/history.html#event-hashchange':398B,2526C '/tutorials/mustache/':2582C '/underscore/':2618C '/wiki/representational_state_transfer':338B,2611C '0':911C 'accept':768C 'access':1122C 'actual':166B 'ad':490C,503C,521C,997C,1433C 'add':1507C,1814C,2035C,2158C 'ajax':718C,1338C,1646C,2098C 'allow':1428C,2145C 'alreadi':2228C 'also':654C,749C,1003C,1090C,1095C,1829C,2223C 'anonym':1723C 'api':8A,22B,30B,40B,72B,133B,156B,328B,748C,1476C,1527C,1569C,1779C,1902C,2014C,2242C,2248C,2319C,2331C,2336C,2345C,2364C,2405C,2420C,2511C 'api.jquery.com':2484C 'api.jquery.com/category/deferred-object/':2483C 'app':2181C,2372C,2395C,2428C 'app-boilerpl':2180C,2394C,2427C 'append':1149C 'applic':102B,453C,688C,1947C,1962C,2072C,2116C,2124C,2179C,2190C,2206C,2388C,2434C 'approach':2301C,2310C 'argument':533C,647C,771C,1666C 'array':743C,1490C,1502C 'articl':49B,85B,2232C 'assign':594C,1046C,1998C 'asynchron':251B,375B,2566C 'attr':1202C 'attribut':1880C 'avail':1479C 'backbon':16B,104B,105B,111B,114B,117B,120B,126B,186B,277B,279B,284B,290B,296B,302B,307B,309B,315B,442C,495C,612C,846C,1082C,1319C,1381C,1449C,1495C,1497C,1610C,1643C,1661C,1760C,1886C,2042C,2059C,2065C,2139C,2169C,2327C,2356C,2358C,2397C,2440C,2445C,2451C,2457C,2463C,2468C,2470C,2476C,2505C 'backbone.collection':295B,2456C 'backbone.collection.extend':1534C 'backbone.history':1959C,2040C 'backbone.history.start':1968C,1978C 'backbone.js':1A,15B,283B,2322C,2393C,2408C,2439C,2444C 'backbone.model':289B,1759C,1885C,2450C 'backbone.model.extend':1752C 'backbone.router':320B,563C,610C,2481C 'backbone.router.extend':455C,535C 'backbone.sync':314B,1609C,2475C 'backbone.view':301B,627C,1447C,2462C 'backbone.view.extend':901C,1178C 'beast':2133C 'becom':2135C 'begin':2311C 'behavior':2007C,2283C,2536C 'behavior-driven':2282C,2535C 'belong':1157C 'belt':2624C 'blend':237B,1375C 'boilerpl':2182C,2396C,2429C 'bootstrap':711C,1960C,1964C 'bootstrap.js':1963C 'browser':393B,1921C,2606C 'build':60B,140B,976C,2197C,2211C,2238C 'built':157B 'bunch':505C 'button':2034C 'call':789C,1011C,1025C,1613C,1652C,1659C,1662C,1726C,2001C,2099C 'callback':2492C,2494C 'cannot':1736C 'case':189B,725C 'chain':1430C 'check':999C 'choos':1326C 'class':347B,2518C 'classnam':904C,1181C 'client':1940C 'client-sid':1939C 'code':13B,24B,91B,107B,435C,478C,492C,1129C,1272C,1416C,1718C,2121C,2153C,2270C,2350C,2584C 'coenraets.org':2581C,2590C 'coenraets.org/blog/2011/12/tutorial-html-templates-with-mustache-js/':2589C 'coenraets.org/tutorials/mustache/':2580C 'collect':5A,113B,115B,223B,291B,418C,471C,656C,673C,681C,700C,742C,762C,795C,810C,974C,992C,1017C,1061C,1465C,1468C,1496C,1498C,1513C,1521C,1553C,1558C,1567C,1600C,1669C,1680C,1700C,1735C,1813C,2326C,2412C,2452C 'collection.deferred.resolve':1555C 'complex':2205C 'compon':275B,2057C 'construct':1054C 'constructor':138B,556C,941C,1009C,1213C,1517C,1589C,1745C 'consum':198B 'contain':469C,470C,652C,658C 'content':1413C 'continu':2210C 'core':274B,2056C 'could':1333C 'creat':70B,624C,805C,1169C,1951C 'data':9A,18B,100B,174B,202B,213B,236B,242B,255B,420C,432C,702C,714C,801C,853C,863C,1241C,1377C,1471C,1524C,1530C,1617C,1622C,1784C,1819C,1837C,1852C,1869C,1903C,1927C,2031C,2093C,2512C 'data-driven':99B 'databas':152B 'decid':2149C 'default':1753C,1768C 'defer':755C,757C,778C,1548C,1549C,1627C,1682C,1701C,1711C,2482C 'defin':1769C 'demo':2010C 'demonstr':87B,1315C,1797C 'depend':984C 'describ':32B 'descript':1365C,1756C,1777C 'design':370B,2561C 'detail':616C,2222C 'develop':25B,37B,163B,325B,349B,2053C,2147C,2201C,2241C,2245C,2285C,2333C,2370C,2417C,2520C,2538C 'developer.mozilla.org':389B,2602C 'developer.mozilla.org/en/dom/manipulating_the_browser_history':388B,2601C 'difficult':2138C 'directori':588C 'discov':2288C 'document':149B,358B,611C,1252C,1453C,1788C,1890C,2041C,2066C,2357C,2360C,2549C 'document-ori':357B,2548C 'documentcloud.github.com':281B,287B,293B,299B,305B,312B,318B,2442C,2448C,2454C,2460C,2466C,2473C,2479C,2617C 'documentcloud.github.com/backbone/':280B,2441C 'documentcloud.github.com/backbone/#collection':292B,2453C 'documentcloud.github.com/backbone/#history':304B,2465C 'documentcloud.github.com/backbone/#model':286B,2447C 'documentcloud.github.com/backbone/#router':317B,2478C 'documentcloud.github.com/backbone/#sync':311B,2472C 'documentcloud.github.com/backbone/#view':298B,2459C 'documentcloud.github.com/underscore/':2616C 'dom':2106C 'done':1713C,1936C 'driven':101B,2284C,2537C 'e.g':870C,1995C 'earlier':35B 'ecomapi':169B,377B,1484C,2354C,2496C,2500C 'ecomapi.herokuapp.com':378B,2018C,2497C,2503C 'ecomapi.herokuapp.com/#list':2502C 'ecomapi.herokuapp.com/#list][ecomapi':2017C 'either':1663C 'el':939C,1080C,1087C,1094C,1126C,1135C,1154C,1390C,1427C 'el.appendto':923C,937C,1133C 'el.html':1200C,1418C 'element':709C,1119C,1155C,1256C,1351C,1404C,1440C 'en.wikipedia.org':337B,2610C 'en.wikipedia.org/wiki/representational_state_transfer':336B,2609C 'end':95B,405C 'environ':376B,2567C 'error':1006C,1544C,1562C,1649C,1690C 'event':2095C 'everi':1081C 'exampl':436C,784C,896C,898C,1346C,1475C,1674C,2013C,2320C,2380C,2382C,2387C,2406C,2433C,2579C,2583C 'execut':775C,1131C,1424C,1636C 'exist':1472C 'explor':12B,69B 'express':44B,76B,332B,2252C,2340C,2365C,2424C 'expressj':77B,342B,2373C,2513C 'expressjs.com':343B,2514C 'extend':561C 'facilit':162B 'fair':2137C,2204C 'fetch':254B,740C,1488C,1500C,1564C,1615C,1624C,1639C,1658C 'fetcherror':1556C,1686C 'fetchsuccess':1551C,1676C 'file':178B,2194C 'final':246B 'find':919C 'fire':1694C 'first':2231C 'fixtur':2037C 'flat':177B 'flexibl':1317C 'focus':193B 'follow':1656C 'format':1906C 'found':214B,438C,1249C,1378C 'framework':2286C,2362C,2539C 'front':94B 'front-end':93B 'function':461C,464C,474C,564C,603C,766C,769C,907C,928C,1184C,1192C,1540C,1552C,1557C,1642C,1724C,1999C 'function.constructor.prototype':1550C 'generat':230B,1504C,1519C,1593C,1737C,1798C,2216C,2348C,2509C 'get':183B,1566C,1835C,1850C,2172C 'gist':441C,445C,2317C,2330C,2400C 'gist.github.com':2402C 'gist.github.com/1912291':2401C 'github.com':2431C,2570C 'github.com/janl/mustache.js/':2569C 'github.com/pixelhandler/vertebrae':2430C 'give':2067C 'global':506C,523C 'grow':2129C 'handl':605C,1979C 'handler':620C,1641C,1650C,1654C,1664C,2003C,2103C 'happen':1301C 'hashchang':265B,266B,395B,399B,1983C,2374C,2375C,2523C,2527C 'head':2024C 'high':344B,346B,2515C,2517C 'histori':303B,308B,394B,2043C,2464C,2469C,2607C 'hoc':2048C 'howev':1789C,2110C 'html':228B,865C,887C,1190C,1196C,1225C,1230C,1247C,1261C,1278C,1329C,1332C,1386C,1412C,1918C,1933C,2593C 'html5':1985C,2376C 'humong':356B,2547C 'id':1203C,1205C,1367C,1435C 'implement':2290C 'includ':643C 'indic':759C 'info':2046C 'initi':1001C,1183C,1222C,1539C,1619C,1630C 'instanc':796C,851C,1050C,1068C,1163C,1395C,1828C,1833C,1878C,1914C,1953C,1973C,2315C 'instead':2272C 'interact':27B,130B 'interfac':96B 'item':841C,931C,1033C,1044C,1052C,1063C,1147C,1175C,1211C,1217C,1400C,1842C 'item.render':936C,1132C 'iter':969C 'jasmin':2279C,2280C,2528C,2532C 'javascript':1864C,2577C,2627C 'job':1369C,2084C 'jqueri':661C,754C,2109C,2163C 'jquery/zepto':1092C 'json':173B,200B,201B,241B,381B,383B,713C,862C,884C,1240C,1360C,1376C,1836C,1929C,2092C,2540C,2542C 'kick':1944C 'know':185B 'learn':1282C,1444C,1882C 'less':880C,1307C 'li':1040C,1180C,1218C,1403C,1439C 'librari':873C,1292C,1308C,2185C,2625C 'life':2126C 'like':1123C,1303C,2160C 'list':142B,196B,211B,220B,260B,414C,426C,444C,458C,552C,590C,669C,676C,792C,836C,844C,945C,951C,961C,978C,987C,1021C,1032C,1074C,1161C,1210C,1216C,1399C,1458C,1708C,1728C,1739C,1800C,1826C,1841C,1996C,2020C,2026C,2088C,2329C,2347C,2355C,2399C,2501C,2506C 'listen':262B 'listproduct':457C,459C,463C,574C,622C,1698C 'liter':530C,568C,581C,642C 'll':409C 'load':1336C 'logic':879C,1306C 'logic-less':878C,1305C 'look':2021C,2266C 'manag':2120C 'manipul':391B,2107C,2604C 'markup':1194C,1201C,1269C,1408C,1419C 'match':1991C 'matur':2127C 'member':1509C,1596C 'method':621C,787C,858C,966C,983C,1024C,1028C,1036C,1099C,1140C,1276C,1324C,1423C,1677C,1687C,1696C,1732C,1848C 'mind':407C 'minim':502C,2572C 'mock':172B 'model':2A,110B,112B,217B,226B,239B,285B,368B,429C,684C,800C,850C,929C,934C,935C,1057C,1382C,1505C,1535C,1581C,1585C,1594C,1744C,1748C,1750C,1761C,1810C,1832C,1844C,1867C,1877C,1887C,2323C,2409C,2446C,2559C 'mongodb':78B,79B,153B,154B,352B,354B,366B,2543C,2545C,2557C 'mongoos':46B,81B,334B,363B,2254C,2342C,2426C,2554C 'mongoosej':82B,361B,2552C 'mongoosejs.com':362B,2553C 'monitor':1980C 'much':1782C 'multipl':2491C 'mustach':872C,891C,893C,897C,1286C,2164C,2379C,2381C,2383C,2385C,2575C,2578C,2586C,2587C 'mustache.js':1288C,1312C,2596C 'mustache.to':1195C,1277C 'mustachej':874C,1289C,2568C 'name':485C,584C,600C,1043C,1879C 'namespac':489C 'necessari':722C 'need':410C,738C,818C,826C,1167C,1949C 'new':467C,626C,631C,932C,1048C,1547C,1561C,1571C,1966C,1969C 'next':2258C 'node':75B,384B,2367C,2597C 'node.js':42B,74B,330B,351B,386B,2250C,2338C,2371C,2422C,2522C,2599C 'nodejs.org':385B,2598C 'notic':1075C 'null':1755C,1757C 'obejct':511C 'object':108B,128B,146B,367B,433C,484C,496C,500C,524C,529C,543C,567C,580C,628C,641C,662C,756C,779C,831C,972C,989C,1064C,1084C,1093C,1110C,1164C,1343C,1361C,1383C,1396C,1448C,1590C,1683C,1702C,1774C,1845C,1855C,1865C,1893C,1915C,1930C,2487C,2558C 'one':522C,832C,838C 'onlin':62B 'oper':632C 'option':462C,638C,646C,1014C,1185C 'organ':106B,2152C 'orient':359B,2550C 'output':692C 'overview':89B 'packag':2368C 'page':2015C 'pars':860C 'pass':636C,1668C 'perform':345B,2516C 'perhap':2094C,2207C 'pivotal.github.com':2530C 'pivotal.github.com/jasmine/':2529C 'pixelhandler.com':323B,2415C 'pixelhandler.com/blog/2012/02/09/develop-a-restful-api-using-node-js-with-express-and-mongoose/':2414C 'pixelhandler.com/posts/develop-a-restful-api-using-nodejs-with-express-and-mongoose':322B 'placehold':1357C 'plan':2200C,2261C 'popul':798C 'post':36B,2047C,2259C 'present':7A,1917C 'previous':67B,160B 'process':252B,2198C,2276C 'product':197B,208B,219B,225B,259B,416C,443C,447C,551C,668C,678C,683C,745C,794C,821C,905C,944C,963C,980C,1060C,1071C,1146C,1160C,1182C,1188C,1209C,1244C,1460C,1467C,1470C,1492C,1512C,1523C,1563C,1599C,1621C,1741C,1747C,1787C,1802C,2025C,2036C,2090C,2221C,2318C,2328C,2398C,2404C,2508C 'product-templ':1187C 'product-template.html':1259C 'product_collection.js':1532C 'product_list_item_view.js':1176C 'product_list_view.js':899C 'product_model.js':1749C 'product_router.js':450C 'productsapi':47B,321B,2255C,2343C,2413C 'productslist':466C 'productslist.render':475C,1733C 'project':144B 'properti':571C,577C,649C,993C,1088C,1363C,1391C,1436C,1579C,1586C,1603C,1628C,1805C,1874C 'prototyp':539C,559C,566C,1576C,1773C 'provid':278B,875C,1313C,1820C,1897C,1926C,2060C,2140C 'purpos':181B,514C,1791C 'pushstat':269B,270B,387B,1986C,2377C,2378C,2600C 'px':451C,486C,499C,525C,526C 'px.app':454C,553C,1965C,1967C,1970C 'px.product':1536C,1751C 'px.productlist':1533C,1572C,1575C 'px.productlistitemview':933C,1049C,1177C 'px.productlistview':468C,634C,900C 'px.products':472C,1570C 'px.products.deferred.done':473C,767C,1719C 'queue':2495C 'rather':170B,1862C 'read':2229C 'readi':764C 'receiv':1406C 'refer':1077C,1106C,2316C 'regist':2490C 'remov':921C 'render':235B,257B,424C,549C,666C,786C,834C,857C,883C,906C,959C,965C,982C,1019C,1023C,1030C,1038C,1098C,1117C,1144C,1173C,1191C,1238C,1267C,1275C,1296C,1328C,1422C,1462C,1706C,1731C,1839C,1934C,2086C 'renderitem':927C,1027C,1139C 'repres':212B,221B 'represent':339B,1899C,2612C 'request':719C 'requirej':2166C,2391C,2437C 'reset':2029C 'resolv':781C,1634C,1678C,1714C 'respons':957C,1554C,1559C,1671C 'rest':39B,65B,66B,327B,335B,2247C,2335C,2419C,2608C 'result':1142C 'return':925C,1101C,1206C,1971C 'root':587C 'rout':248B,456C,572C,576C,585C,592C,607C,619C,1989C,2005C,2218C 'router':119B,121B,316B,412C,449C,542C,613C,815C,1693C,1717C,1956C,1976C,2314C,2477C 'sampl':2178C,2189C,2344C 'script':698C,708C,734C,1255C,1350C 'second':52B,2265C 'see':608C,889C,1257C,1270C,1287C,1451C,1715C,1888C,2011C,2038C,2176C 'select':1223C 'sent':1655C 'seri':56B,2235C 'server':696C,732C,1923C 'server-sid':695C,731C 'servic':168B,206B,380B,1483C,1607C,1824C,2499C 'side':697C,733C,1941C 'simpl':1764C,2141C 'singl':2097C 'sort':2304C 'sourc':1531C 'specifi':1907C 'start':402C,1958C 'state':340B,2062C,2613C 'still':2144C 'storag':360B,2551C 'store':19B,63B,147B,1340C,1871C 'string':596C,1388C 'stringifi':1860C 'structur':2068C,2112C,2142C,2195C,2294C,2389C,2435C 'success':1542C,1640C,1647C,2102C 'sweet':877C 'sync':125B,127B,310B,1611C,2471C 'syntax':1310C 'tag':953C,1219C 'tagnam':902C,1179C 'take':1721C,2263C 'task':2118C 'templat':245B,869C,888C,1189C,1231C,1233C,1246C,1262C,1295C,1331C,1354C,1372C,1387C,1910C,2573C,2594C 'test':2192C,2303C 'this.classname':920C 'this.collection.length':913C 'this.collection.models':916C 'this.container':918C 'this.deferred':1546C 'this.fetch':1541C 'this.fetcherror':1545C 'this.fetchsuccess':1543C 'this.model.get':1204C 'this.model.tojson':1198C,1280C 'this.options.container':924C 'this.renderitem':915C 'this.template':1186C,1197C,1279C 'though':2274C 'throw':1560C,1688C 'thrown':1004C 'titl':1364C,1754C,1775C 'togeth':1895C 'tojson':1856C 'tool':369B,2560C 'top':2308C 'top-down':2307C 'topic':59B 'transfer':341B,2614C 'trigger':249B 'tutori':11B,53B,161B,517C,892C,894C,1794C,2050C,2214C,2292C,2332C,2353C,2384C,2386C,2588C,2592C 'two':583C,827C,1665C,1804C 'type':828C 'typic':685C 'ul':903C,952C,1152C 'underscor':1291C,2359C,2361C,2615C,2619C 'unord':950C 'upon':2212C 'url':1486C,1537C,1583C,1602C,1994C 'use':17B,41B,64B,103B,123B,136B,188B,231B,268B,329B,482C,547C,629C,729C,752C,813C,855C,867C,885C,948C,967C,1214C,1227C,1236C,1265C,1285C,1322C,1337C,1348C,1425C,1480C,1525C,1591C,1704C,1830C,1908C,2054C,2100C,2162C,2183C,2187C,2249C,2278C,2321C,2337C,2349C,2407C,2421C,2585C 'util':881C,1297C,1373C,2156C,2486C,2623C 'utility-belt':2622C 'valu':1102C 'var':465C,909C,930C,1193C 'variabl':507C,1042C 'via':199B 'view':3A,116B,118B,233B,297B,422C,671C,807C,822C,830C,847C,946C,988C,1067C,1083C,1109C,1115C,1162C,1171C,1212C,1394C,1450C,1729C,1827C,1913C,2220C,2324C,2410C,2458C 'viewinstance.render':1125C 'walk':2051C,2273C 'way':2079C,2175C,2298C 'web':167B,205B,348B,379B,1482C,1606C,1823C,2071C,2115C,2498C,2519C 'well':1299C,1442C,2130C,2168C,2244C 'whatev':1323C 'window':510C 'window.px':452C,527C 'within':1137C,1253C,1919C 'without':1012C,1463C,1742C,2111C 'work':372B,1894C,2563C 'would':703C,1455C,2300C 'wrap':1644C 'write':2302C 'written':705C 'www.json.org':382B,2541C 'www.mongodb.org':353B,2544C 'www.whatwg.org':397B,2525C 'www.whatwg.org/specs/web-apps/current-work/multipage/history.html#event-hashchange':396B,2524C 'yet':811C	published	pixelhandler
36	    \n    mysqldump --default-character-set=latin1 --opt -h localhost -u\n    export -p export > export.sql\n    \n    replace "CHARSET=latin1" "CHARSET=utf8" "SET NAMES latin1" "SET NAMES\n    utf8" < export.sql > export-utf8.sql\n    \n    mysql --user=root -p --host=localhost --default-character-set=utf8\n    cms_production < export-utf8.sql\n    	Fix bad characters â€ Â after mysqldump and import	fix-bad-characters-after-mysqldump-and-import-utf-8	Fix Bad Characters Ã¢â¬ Ã After Mysqldump and Import Utf-8	2010-08-14	2015-05-07 17:03:21.433399	2015-05-07 17:03:21.433399	1	'-8':12A 'bad':2A,14B 'charact':3A,15B,25C,57C 'charset':37C,39C 'cms':60C 'default':24C,56C 'default-character-set':23C,55C 'export':32C,34C 'export-utf8.sql':48C,62C 'export.sql':35C,47C 'fix':1A,13B 'h':29C 'host':53C 'import':10A,21B 'latin1':27C,38C,43C 'localhost':30C,54C 'mysql':49C 'mysqldump':8A,19B,22C 'name':42C,45C 'opt':28C 'p':33C,52C 'product':61C 'replac':36C 'root':51C 'set':26C,41C,44C,58C 'u':31C 'user':50C 'utf':11A 'utf8':40C,46C,59C 'â':5A,16B,17B 'ã':4A,6A	published	pixelhandler
19	### Nouns\n\n#### Products\n\nThere a many configurations for setting up a product to sell online, some with no options, with multiple configurable options, or groups of products. For this example I will use one of my favorite things, a *t-shirt*. This type of product can be configured with size and color options, e.g. Black - Large, or Red - Medium; specific material variations would be represented as separate products, like long- vs. short-sleeves.\n\n**Product** attributes include:\n\n    Id,  \n    Title,  \n    Description,  \n    Images: [ { Kind, URL } ],  \n    Categories: [ { Name } ],  \n    Style: Number,  \n    Varients: [  \n      {  \n        Color,  \n        Images: [  \n          { Kind, URL }  \n        ],  \n        Sizes: [  \n          { Size, Available, SKU, Price }  \n        ],  \n      }  \n    ]\n\n**[JSON][json]** data may be represented like so:\n\n    \n    {  \n      "title": "My Awesome T-shirt",  \n      "description": "All about the details. Of course it's black.",  \n      "images": [  \n        {  \n          "kind": "thumbnail",  \n          "url": "images/products/1234/main.jpg"  \n        }  \n      ],  \n      "categories": [  \n          { "name": "Clothes" },  \n          { "name": "Shirts" }  \n      ],  \n      "style": "1234",  \n      "variants": [  \n        {  \n          "color": "Black",  \n          "images": [  \n            {  \n              "kind": "thumbnail",  \n              "url": "images/products/1234/thumbnail.jpg"  \n            },  \n            {  \n              "kind": "catalog",  \n              "url": "images/products/1234/black.jpg"  \n            }  \n          ],  \n          "sizes": [  \n            {  \n              "size": "S",  \n              "available": 10,  \n              "sku": "CAT-1234-Blk-S",  \n              "price": 99.99  \n            },  \n            {  \n              "size": "M",  \n              "available": 7,  \n              "sku": "CAT-1234-Blk-M",  \n              "price": 109.99  \n            }  \n          ]  \n        }  \n      ],  \n      "catalogs": [  \n          { "name": "Apparel" }  \n      ]  \n    }\n\n\nThe above object has a variety of types composing a document that should bring up some challenges in learning how to store and update the document in a [MongoDB][mongodb] database. The first thing I needed to do was install MongoDB (see the [quickstart guide][mongoquickstart]). To get to know the database I [tried out using Mongo in the console][try mongodb]. \n\nI'll need to define the [Web service][web service] urls to interact with the data via REST like so...\n\n* /products *- list*  \n* /products/:id *- single*  \n\n\n### Data: MongoDB using [Mongoose][mongoosejs] with [Express framework][expressjs] running on Node.js\n\nFor installation of Node.js, NPM, and Express see:\n\n* [Installing Node.js][install node]  \n* [npm is a package manager for node.][install npm]  \n  * [npm install express][install express]  \n\nAlso there are plenty of links at the end of the article to learn about this stack.\n\nWorking with data using the Mongoose package in node, I will need to research storing JSON documents. The Mongoose documentation outlines the use of [schema types][schema types] and [embedded documents][embedded documents]; so these can be integrated into a product [model][mongoosejs model] to store the product JSON above. Models are defined by passing a Schema instance to [mongoose.model][mongoosejs model].\n\n#### A Node App Running Express to Access Data using a RESTful Web Service\n\nI found that a section of '[Backbone Fundamentals][node-express-mongodb]' has an example application which is built using this same stack : Node.js, Express, Mongoose and MongoDB. I reviewed the example methods to GET, POST, PUT and DELETE. Then I got started with an instance of the `express.HTTPServer`.\n\nI created a file `app.js` and added the following JavaScript code:\n\n    \n    var application_root = __dirname,\n        express = require("express"),\n        path = require("path"),\n        mongoose = require('mongoose');\n\n    var app = express.createServer();\n\n    // Database\n\n    mongoose.connect('mongodb://localhost/ecomm_database');\n\n    // Config\n\n    app.configure(function () {\n      app.use(express.bodyParser());\n      app.use(express.methodOverride());\n      app.use(app.router);\n      app.use(express.static(path.join(application_root, "public")));\n      app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n    });\n\n    app.get('/api', function (req, res) {\n      res.send('Ecomm API is running');\n    });\n\n    // Launch server\n\n    app.listen(4242);\n\n\nIn the above code, the line beginning with `var` loads the modules needed for the API, and `app = express.createServer()` creates the Web server. The Web server can also serve static files in a `public` directory, the line in the configure block `app.use(express.static(path.join(application_root, "public")));` sets up the public directory to use static files. The code,  `mongoose.connect('mongodb://localhost/ecomm_database');`, hooks up the database. All I needed to do is name the database, in this example I used the name: 'ecomm_database'. With MongoDB is setup and running, the actual database is automatically generated. To run `mongod`, on the command line I needed to execute the command: \n\n    mongod run --config /usr/local/Cellar/mongodb/2.0.1-x86_64/mongod.conf  \n\nSince I installed MongoGB on OSX Lion, the above command was printed out following the installation on my MacBook.\n\nThe code `app.listen(4242);` sets up the server to respond to the URL: *http://localhost:4242*. Once *mongod* is running, to start up the server genereated with the app.js file... I executed `node app.js` on the command line.\n\nNow, I have a folder named 'ecomapi' and inside this directory is the 'app.js' file and a directory named 'public' which has an 'index.html' file. With the static index.html file I can load the data using jQuery which I am linking to on a CDN. Later I will be able to try out AJAX calls to create products using my browser's JavaScript console.\n\n    ecomapi\n    |-- app.js  \n    `-- public  \n        `-- index.html  \n\n    <!DOCTYPE html>\n    <html lang="en">\n      <head>\n        <meta charset="utf-8">\n        <title>API index</title>\n      </head>\n      <body>\n        <section>\n          <h1>Nouns...</h1>\n          <p>\n            /products<br>\n            /products/:id\n          </p>\n        </section>\n        <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>\n      </body>\n    </html>\n\nIn my browser I can load http://localhost:4242 and see that the static index.html file loads and also hitting http://localhost:4242/api spits out some text 'Ecomm API is running', which is the result of the get response:\n\n    app.get('/api', function (req, res) {  \n      res.send('Ecomm API is running');  \n    });  \n\nUp to this point we have a simple server with a single get response, next I can add in the data models and REST services.\n\n#### Setup a Simple Model Using CRUD (create, read, update, delete)\n\nFollowing the `app.configure` code block, in the *app.js*, I added a Schema and a Product Model:\n\n    var Schema = mongoose.Schema;  \n      \n    var Product = new Schema({  \n        title: { type: String, required: true },  \n        description: { type: String, required: true },  \n        style: { type: String, unique: true },  \n        modified: { type: Date, default: Date.now }\n    });\n\nSince I still needed to learn how to use the [schema types][schema types] and [embedded documents][embedded documents] that come with [mongoose][mongoosejs], I didn't add the price yet which should be set on a combination of color and size.\n\nTo use the model I created a variable `ProductModel`:\n\n    var ProductModel = mongoose.model('Product', Product);  \n\nNow I can add the CRUD methods:\n\n##### READ a List of Products\n\n    \n    app.get('/api/products', function (req, res){\n      return ProductModel.find(function (err, products) {\n        if (!err) {\n          return res.send(products);\n        } else {\n          return console.log(err);\n        }\n      });\n    });\n\n\n##### CREATE a Single Product\n\n\n    app.post('/api/products', function (req, res){\n      var product;\n      console.log("POST: ");\n      console.log(req.body);\n      product = new ProductModel({\n        title: req.body.title,\n        description: req.body.description,\n        style: req.body.style,\n      });\n      product.save(function (err) {\n        if (!err) {\n          return console.log("created");\n        } else {\n          return console.log(err);\n        }\n      });\n      return res.send(product);\n    });\n\n\n##### READ a Single Product by ID\n\n\n    app.get('/api/products/:id', function (req, res){\n      return ProductModel.findById(req.params.id, function (err, product) {\n        if (!err) {\n          return res.send(product);\n        } else {\n          return console.log(err);\n        }\n      });\n    });\n\n\n##### UPDATE a Single Product by ID\n\n    \n    app.put('/api/products/:id', function (req, res){\n      return ProductModel.findById(req.params.id, function (err, product) {\n        product.title = req.body.title;\n        product.description = req.body.description;\n        product.style = req.body.style;\n        return product.save(function (err) {\n          if (!err) {\n            console.log("updated");\n          } else {\n            console.log(err);\n          }\n          return res.send(product);\n        });\n      });\n    });\n\n\n##### DELETE a Single Product by ID\n\n    \n    app.delete('/api/products/:id', function (req, res){\n      return ProductModel.findById(req.params.id, function (err, product) {\n        return product.remove(function (err) {\n          if (!err) {\n            console.log("removed");\n            return res.send('');\n          } else {\n            console.log(err);\n          }\n        });\n      });\n    });\n\n\n*NOTE: To exit your running app.js job, press `control-c` then re-start your updated app.js using the same command as before: node app.js* \n\nWith the new **product model** and **CRUD methods** serving up a RESTful service at *http://localhost:4242/api* I can utilize the index.html (with jQuery)... and in my browser's console I can fiddle with my new Web service using jQuery's AJAX methods. Specifically, by loading http://localhost:4242/ and executing commands in the JavaScript console I can using ($.ajax) POST to create a new product.\n\n    \n    jQuery.post("/api/products", {\n      "title": "My Awesome T-shirt",  \n      "description": "All about the details. Of course it's black.",  \n      "style": "12345"\n    }, function (data, textStatus, jqXHR) { \n        console.log("Post resposne:"); console.dir(data); console.log(textStatus); console.dir(jqXHR); \n    });\n\n\nThe post response is something like:\n\n    _id: "4f34d8e7f05ebf212b000004"  \n    description: "All about the details. Of course it's black."  \n    modified: "2012-02-10T08:44:23.372Z"  \n    style: "12345"  \n    title: "My Awesome T-shirt"\n\nThe `_id` property was added automatically, this value can be used to UPDATE, READ, or DELETE the record. Notice all the `console.log()` and `console.dir()` calls I added within the anonymous functions' '*success*' callbacks. With the logging in place, I can inspect the server's response in the console or by viewing the responses on in network tab of my browser's developer tools.\n\nTo READ the product data I just created, I execute the following code in my browser's JavaScript console:\n\n\n    jQuery.get("/api/products/", function (data, textStatus, jqXHR) { \n        console.log("Get resposne:"); \n        console.dir(data); \n        console.log(textStatus); \n        console.dir(jqXHR); \n    });\n\n\nThe above GET request reads *all products*; to read a specific product add the ID to the URL like so:\n\n\n    jQuery.get("/api/products/4f34d8e7f05ebf212b000004", function(data, textStatus, jqXHR) { \n        console.log("Get resposne:"); \n        console.dir(data); \n        console.log(textStatus); \n        console.dir(jqXHR); \n    });\n\n\nTo test the UPDATE request use PUT:\n\n\n    jQuery.ajax({\n        url: "/api/products/4f34d8e7f05ebf212b000004", \n        type: "PUT",\n        data: {\n          "title": "My Awesome T-shirt in Black",  \n          "description": "All about the details. Of course it's black, and long sleeve",  \n          "style": "12345"\n        }, \n        success: function (data, textStatus, jqXHR) { \n            console.log("Post resposne:"); \n            console.dir(data); \n            console.log(textStatus); \n            console.dir(jqXHR); \n        }\n    });\n\n\nThe above code is about the same as the the previous code I used to create the product document and store in MongoDB. However, I appended the product's description with the text: 'black, and long sleeve'.\n\nNow, when I get the product by ID, I see the updated text added to the product description:\n\n    jQuery.get("/api/products/4f34d8e7f05ebf212b000004");  \n    \nOr I can visit : http://localhost:4242/api/products/4f34d8e7f05ebf212b000004 to see the text response only.\n\nI can also DELETE the product:  \n\n    jQuery.ajax({\n        url: "/api/products/4f34d8e7f05ebf212b000004", \n        type: "DELETE",\n        success: function (data, textStatus, jqXHR) { \n            console.log("Post resposne:"); \n            console.dir(data); \n            console.log(textStatus); \n            console.dir(jqXHR); \n        }\n    });\n\nNow when I load http://localhost:4242/api/products/4f34d8e7f05ebf212b000004 the server response with a `null` response\n\n*TIP: I am using a log of console.log() and console.dir() calls within the success (anonymous) functions to view the responses from the server.*\n\n\n#### Embedded Documents for the Remaining Product Attributes\n\nI am now adding a few items to the product model: *images, categories, catalogs, variants*. A t-shirt product may have many variants with size and color options; the pricing should be configured by the combination of: the selected size option which belongs to a selected color option. The product may belong one or more product catalogs, and also should have one or more associated categories.\n\n\n    // Product Model\n\n    var Product = new Schema({\n        title: { type: String, required: true },\n        description: { type: String, required: true },\n        style: { type: String, unique: true },\n        images: [Images],\n        categories: [Categories],\n        catalogs: [Catalogs],\n        variants: [Variants],\n        modified: { type: Date, default: Date.now }\n    });\n\n\nThe [embedded documents][embedded documents] are in square brackets (above) in the product model. I referenced the [Mongoose][mongoosejs] documentation to learn how to assemble this model with embedded documents.\n\nBelow are the schema assignments that together assemble the product document to store in MongoDB. My strategy is adding one embedded document at time and updating each the CREATE and UPDATE methods, stopping and restarting the application (`control-c` then `node app.js`) with each iteration. And working out the additional code by fiddling with the same jQuery `$.ajax` requests, but also adding the single attribute(s) added to the `post` data to create a new product document in the db.\n\n\n    // Schemas\n\n    var Sizes = new Schema({\n        size: { type: String, required: true },\n        available: { type: Number, required: true, min: 0, max: 1000 },\n        sku: { \n            type: String, \n            required: true, \n            validate: [/[a-zA-Z0-9]/, 'Product sku should only have letters and numbers']\n        },\n        price: { type: Number, required: true, min: 0 }\n    });\n\n    var Images = new Schema({\n        kind: { \n            type: String, \n            enum: ['thumbnail', 'catalog', 'detail', 'zoom'],\n            required: true\n        },\n        url: { type: String, required: true }\n    });\n\n    var Variants = new Schema({\n        color: String,\n        images: [Images],\n        sizes: [Sizes]\n    });\n\n    var Categories = new Schema({\n        name: String\n    });\n\n    var Catalogs = new Schema({\n        name: String\n    });\n\n\nFor example, I first added the `[Images]` embedded docuemnt to my product model and tested out the application by updated the AJAX post which creates the product using the same post as before but with an array of objects with the image attributes for `kind` and `url`, see below:\n\n\n    var Images = new Schema({ \n        kind: String, \n        url: String\n    });\n\n    var Product = new Schema({\n        title: { type: String, required: true },\n        description: { type: String, required: true },\n        style: { type: String, unique: true },\n        images: [Images],\n        modified: { type: Date, default: Date.now }\n    });\n\n\nI also updated the CREATE *(POST)* and UPDATE *(PUT)* methods, adding the references to the images attribute (an embedded document) of the product model.\n\n\n    // CREATE a product\n\n    app.post('/api/products', function(req, res){\n      var product;\n      console.log("POST: ");\n      console.log(req.body);\n      product = new ProductModel({\n        title: req.body.title,\n        description: req.body.description,\n        style: req.body.style,\n        images: [Images]\n      });\n      product.save(function(err) {\n        if (!err) {\n          return console.log("created");\n        } else {\n          return console.log(err);\n        }\n      });\n      return res.send(product);\n    });\n\n\n\n    // UPDATE a single product\n\n    app.put('/api/products/:id', function(req, res){\n      return ProductModel.findById(req.params.id, function(err, product) {\n        product.title = req.body.title;\n        product.description = req.body.description;\n        product.style = req.body.style;\n        product.images = req.body.images;\n        return product.save(function(err) {\n          if (!err) {\n            console.log("updated");\n          } else {\n            console.log(err);\n          }\n          return res.send(product);\n        });\n      });\n    });\n\n\nThen I worked out the adding the image(s) data to my post that creates a product in the database; addming the images data array with an object like so:\n\n\n    jQuery.post("/api/products", {\n      "title": "My Awesome T-shirt",  \n      "description": "All about the details. Of course it's black.",  \n      "style": "1234",\n      "images": [  \n        {  \n          "kind": "thumbnail",  \n          "url": "images/products/1234/main.jpg"  \n        }  \n      ]\n    }, function(data, textStatus, jqXHR) { \n        console.log("Post resposne:"); console.dir(data); console.log(textStatus); console.dir(jqXHR); \n    });\n\n\nOn my first of attempt of adding multiple documents to the product model, I did get errors and the server's create action failed. However, my terminal (shell) does report the errors - the app.js file uses the code `app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));` to setup the display of errors on the command line. Also, I added some console.log calls in the post action to log the request pluse notes on the execution of saving the document. On both the browser and on the command line, all the logging indicates whether I am building the product model (using Mongoose) properly. This attempt to add the images did not save. I am not sure why, but I switched over to adding a [Categories] embedded docuemnt, then worked my way toward a completed product model with an API to CREATE, UPDATE and DELETE a single product at a time and to READ a single product or list of products in an array.\n\nAfter debugging the embedded documents I added for the product models attribtues... now I can create the complete product in a post:\n\n\n    jQuery.post("/api/products", {\n      "title": "My Awesome T-shirt",  \n      "description": "All about the details. Of course it's black.",  \n      "images": [  \n        {  \n          "kind": "thumbnail",  \n          "url": "images/products/1234/main.jpg"  \n        }  \n      ],  \n      "categories": [  \n          { "name": "Clothes" },\n          { "name": "Shirts" } \n      ],  \n      "style": "1234",  \n      "variants": [  \n        {  \n          "color": "Black",  \n          "images": [  \n            {  \n              "kind": "thumbnail",  \n              "url": "images/products/1234/thumbnail.jpg"  \n            },\n            {  \n              "kind": "catalog",  \n              "url": "images/products/1234/black.jpg"  \n            }  \n          ],  \n          "sizes": [  \n            {  \n              "size": "S",  \n              "available": 10,  \n              "sku": "CAT-1234-Blk-S",  \n              "price": 99.99  \n            },\n            {\n              "size": "M",  \n              "available": 7,  \n              "sku": "CAT-1234-Blk-M",  \n              "price": 109.99  \n            }  \n          ]  \n        }  \n      ],\n      "catalogs": [\n          { "name": "Apparel" }\n      ]  \n    }, function(data, textStatus, jqXHR) { \n        console.log("Post resposne:"); console.dir(data); console.log(textStatus); console.dir(jqXHR); \n    });\n\n\nAnd from the node console (shell) I get this output:\n\n    POST:  \n    { title: 'My Awesome T-shirt',  \n      description: 'All about the details. Of course it\\'s black.',  \n      images: [ { kind: 'thumbnail', url: 'images/products/1234/main.jpg' } ],  \n      categories: [ { name: 'Clothes' }, { name: 'Shirts' } ],  \n      style: '1234',  \n      varients: [ { color: 'Black', images: [Object], sizes: [Object] } ],  \n      catalogs: [ { name: 'Apparel' } ] }  \n    validate style  \n    1234  \n    validate description  \n    All about the details. Of course it's black.  \n    validate title  \n    My Awesome T-shirt  \n    created  \n\nIn my browser this looks like these two screenshot:\n\nReady to post using the console…\n\n![jQUery post in console](http://pixelhandler.com/images/products-post.png)\n\nServer response in the network tab…\n\n![network tab in browser](http://pixelhandler.com/images/server-response.png)\n\n#### Bulk Actions for UPDATE and DELETE\n\nFinally to finish up the actions needed in the design for the products web service I added the **bulk** actions to remove all products at once and also to update many products in a PUT request. \n\n\n    app.delete('/api/products', function (req, res) {\n      ProductModel.remove(function (err) {\n        if (!err) {\n          console.log("removed");\n          return res.send('');\n        } else {\n          console.log(err);\n        }\n      });\n    });\n\n\n\n    app.put('/api/products', function (req, res) {\n        var i, len = 0;\n        console.log("is Array req.body.products");\n        console.log(Array.isArray(req.body.products));\n        console.log("PUT: (products)");\n        console.log(req.body.products);\n        if (Array.isArray(req.body.products)) {\n            len = req.body.products.length;\n        }\n        for (i = 0; i < len; i++) {\n            console.log("UPDATE product by id:");\n            for (var id in req.body.products[i]) {\n                console.log(id);\n            }\n            ProductModel.update({ "_id": id }, req.body.products[i][id], function (err, numAffected) {\n                if (err) {\n                    console.log("Error on update");\n                    console.log(err);\n                } else {\n                    console.log("updated num: " + numAffected);\n                }\n            });\n        }\n        return res.send(req.body.products);\n    });\n\n\nSee the [Gist][gist-ecomapi] links that follow for sample scripts to create many products (fixtures) and also the bulk update with single AJAX PUT request.\n\n### The app.js, index.html and jQuery AJAX snippets developed in this tutorial\n\n**The Source Code for This Tutorial is on GitHub as a Gist:**\n\n* [Develop a RESTful API Using Node.js With Express and Mongoose][gist-ecomapi]\n* [Fixtures - example AJAX posts to create products][gist-ecomapi-fixture]\n* [Sample script for bulk update of products][gist-ecomapi-updates]\n\nThe application file:\n\n    \n    var application_root = __dirname,\n        express = require("express"),\n        path = require("path"),\n        mongoose = require('mongoose');\n    \n    var app = express.createServer();\n    \n    // database\n    \n    mongoose.connect('mongodb://localhost/ecomm_database');\n    \n    // config\n    \n    app.configure(function () {\n      app.use(express.bodyParser());\n      app.use(express.methodOverride());\n      app.use(app.router);\n      app.use(express.static(path.join(application_root, "public")));\n      app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n    });\n    \n    var Schema = mongoose.Schema; //Schema.ObjectId\n    \n    // Schemas\n    \n    var Sizes = new Schema({\n        size: { type: String, required: true },\n        available: { type: Number, required: true, min: 0, max: 1000 },\n        sku: { \n            type: String, \n            required: true, \n            validate: [/[a-zA-Z0-9]/, 'Product sku should only have letters and numbers']\n        },\n        price: { type: Number, required: true, min: 0 }\n    });\n    \n    var Images = new Schema({\n        kind: { \n            type: String, \n            enum: ['thumbnail', 'catalog', 'detail', 'zoom'],\n            required: true\n        },\n        url: { type: String, required: true }\n    });\n    \n    var Variants = new Schema({\n        color: String,\n        images: [Images],\n        sizes: [Sizes]\n    });\n    \n    var Categories = new Schema({\n        name: String\n    });\n    \n    var Catalogs = new Schema({\n        name: String\n    });\n    \n    // Product Model\n    \n    var Product = new Schema({\n        title: { type: String, required: true },\n        description: { type: String, required: true },\n        style: { type: String, unique: true },\n        images: [Images],\n        categories: [Categories],\n        catalogs: [Catalogs],\n        variants: [Variants],\n        modified: { type: Date, default: Date.now }\n    });\n    \n    // validation\n    \n    Product.path('title').validate(function (v) {\n        console.log("validate title");\n        console.log(v);\n        return v.length > 10 && v.length < 70;\n    });\n    \n    Product.path('style').validate(function (v) {\n        console.log("validate style");\n        console.log(v);\n        return v.length < 40;\n    }, 'Product style attribute is should be less than 40 characters');\n    \n    Product.path('description').validate(function (v) {\n        console.log("validate description");\n        console.log(v);\n        return v.length > 10;\n    }, 'Product description should be more than 10 characters');\n    \n    var ProductModel = mongoose.model('Product', Product);\n    \n    /* Product Document \n    [\n    {  \n      "title": "My Awesome T-shirt",  \n      "description": "All about the details. Of course it's black.",  \n      "images": [  \n        {  \n          "kind": "thumbnail",  \n          "url": "images/products/1234/main.jpg"  \n        }  \n      ],  \n      "categories": [  \n          { "name": "Clothes" },  \n          { "name": "Shirts" }  \n      ],  \n      "style": "1234",  \n      "variants": [  \n        {  \n          "color": "Black",  \n          "images": [  \n            {  \n              "kind": "thumbnail",  \n              "url": "images/products/1234/thumbnail.jpg"  \n            },  \n            {  \n              "kind": "catalog",  \n              "url": "images/products/1234/black.jpg"  \n            }  \n          ],  \n          "sizes": [  \n            {  \n              "size": "S",  \n              "available": 10,  \n              "sku": "CAT-1234-Blk-S",  \n              "price": 99.99  \n            },  \n            {  \n              "size": "M",  \n              "available": 7,  \n              "sku": "CAT-1234-Blk-M",  \n              "price": 109.99  \n            }  \n          ]  \n        }  \n      ],  \n      "catalogs": [  \n          { "name": "Apparel" }  \n      ]  \n    }\n    ]\n    */\n    \n    \n    // REST api\n    \n    app.get('/api', function (req, res) {\n      res.send('Ecomm API is running');\n    });\n    \n    // POST to CREATE\n    app.post('/api/products', function (req, res) {\n      var product;\n      console.log("POST: ");\n      console.log(req.body);\n      product = new ProductModel({\n        title: req.body.title,\n        description: req.body.description,\n        style: req.body.style,\n        images: req.body.images,\n        categories: req.body.categories,\n        catalogs: req.body.catalogs,\n        variants: req.body.variants\n      });\n      product.save(function (err) {\n        if (!err) {\n          return console.log("created");\n        } else {\n          return console.log(err);\n        }\n      });\n      return res.send(product);\n    });\n    \n    // PUT to UPDATE\n    \n    // Bulk update\n    app.put('/api/products', function (req, res) {\n        var i, len = 0;\n        console.log("is Array req.body.products");\n        console.log(Array.isArray(req.body.products));\n        console.log("PUT: (products)");\n        console.log(req.body.products);\n        if (Array.isArray(req.body.products)) {\n            len = req.body.products.length;\n        }\n        for (i = 0; i < len; i++) {\n            console.log("UPDATE product by id:");\n            for (var id in req.body.products[i]) {\n                console.log(id);\n            }\n            ProductModel.update({ "_id": id }, req.body.products[i][id], function (err, numAffected) {\n                if (err) {\n                    console.log("Error on update");\n                    console.log(err);\n                } else {\n                    console.log("updated num: " + numAffected);\n                }\n            });\n        }\n        return res.send(req.body.products);\n    });\n    \n    // Single update\n    app.put('/api/products/:id', function (req, res) {\n      return ProductModel.findById(req.params.id, function (err, product) {\n        product.title = req.body.title;\n        product.description = req.body.description;\n        product.style = req.body.style;\n        product.images = req.body.images;\n        product.categories = req.body.categories;\n        product.catalogs = req.body.catalogs;\n        product.variants = req.body.variants;\n        return product.save(function (err) {\n          if (!err) {\n            console.log("updated");\n          } else {\n            console.log(err);\n          }\n          return res.send(product);\n        });\n      });\n    });\n    \n    // GET to READ\n    \n    // List products\n    app.get('/api/products', function (req, res) {\n      return ProductModel.find(function (err, products) {\n        if (!err) {\n          return res.send(products);\n        } else {\n          return console.log(err);\n        }\n      });\n    });\n    \n    // Single product\n    app.get('/api/products/:id', function (req, res) {\n      return ProductModel.findById(req.params.id, function (err, product) {\n        if (!err) {\n          return res.send(product);\n        } else {\n          return console.log(err);\n        }\n      });\n    });\n    \n    // DELETE to DESTROY\n    \n    // Bulk destroy all products\n    app.delete('/api/products', function (req, res) {\n      ProductModel.remove(function (err) {\n        if (!err) {\n          console.log("removed");\n          return res.send('');\n        } else {\n          console.log(err);\n        }\n      });\n    });\n    \n    // remove a single product\n    app.delete('/api/products/:id', function (req, res) {\n      return ProductModel.findById(req.params.id, function (err, product) {\n        return product.remove(function (err) {\n          if (!err) {\n            console.log("removed");\n            return res.send('');\n          } else {\n            console.log(err);\n          }\n        });\n      });\n    });\n    \n    // launch server\n    \n    app.listen(4242);\n    \n\nAlso in the app.js gist (above), I added code to validate the product model\nusing Mongoose.\n\nThe index file (inside /public directory):\n\n    \n    <!DOCTYPE html>\n    <html lang="en">\n      <head>\n        <meta charset="utf-8">\n        <title>API index</title>\n      </head>\n      <body>\n        <section>\n          <h1>Nouns...</h1>\n          <p>\n            /products<br>\n            /products/:id\n          </p>\n        </section>\n        <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>\n      </body>\n    </html>\n    \n\nSome jQuery AJAX snippets to fiddle with the API:\n\n    \n    // jQuery snippets used in the console to use the REST api created with app.js\n    \n    // CREATE\n    \n    jQuery.post("/api/products", {\n      "title": "My Awesome T-shirt",  \n      "description": "All about the details. Of course it's black.",  \n      "images": [  \n        {  \n          "kind": "thumbnail",  \n          "url": "images/products/1234/main.jpg"  \n        }  \n      ],  \n      "categories": [  \n          { "name": "Clothes" },\n          { "name": "Shirts" } \n      ],  \n      "style": "1234",  \n      "variants": [  \n        {  \n          "color": "Black",  \n          "images": [  \n            {  \n              "kind": "thumbnail",  \n              "url": "images/products/1234/thumbnail.jpg"  \n            },\n            {  \n              "kind": "catalog",  \n              "url": "images/products/1234/black.jpg"  \n            }  \n          ],  \n          "sizes": [  \n            {  \n              "size": "S",  \n              "available": 10,  \n              "sku": "CAT-1234-Blk-S",  \n              "price": 99.99  \n            },\n            {\n              "size": "M",  \n              "available": 7,  \n              "sku": "CAT-1234-Blk-M",  \n              "price": 109.99  \n            }  \n          ]  \n        }  \n      ],\n      "catalogs": [\n          { "name": "Apparel" }\n      ]  \n    }, function(data, textStatus, jqXHR) { \n        console.log("Post resposne:"); console.dir(data); console.log(textStatus); console.dir(jqXHR); \n    });\n    \n    // generated a product document with automatically assigned ID, e.g. 4f34734d21289c1c28000007 \n    \n    \n    // READ\n    \n    jQuery.get("/api/products/", function(data, textStatus, jqXHR) { \n        console.log("Post resposne:"); \n        console.dir(data); \n        console.log(textStatus); \n        console.dir(jqXHR); \n    });\n    \n    jQuery.get("/api/products/4f34734d21289c1c28000007", function(data, textStatus, jqXHR) { \n        console.log("Post resposne:"); \n        console.dir(data); \n        console.log(textStatus); \n        console.dir(jqXHR); \n    });\n    \n    // UPDATE\n    \n    jQuery.ajax({\n        url: "/api/products/4f34734d21289c1c28000007", \n        type: "PUT",\n        data: {\n          "title": "My Awesome T-shirt",  \n          "description": "All about the details. Of course it's black, and longsleeve.",  \n          "images": [  \n            {  \n              "kind": "thumbnail",  \n              "url": "images/products/1234/main.jpg"  \n            }  \n          ],  \n          "categories": [  \n              { "name": "Clothes" },\n              { "name": "Shirts" } \n          ],  \n          "style": "1234",  \n          "variants": [  \n            {  \n              "color": "Black",  \n              "images": [  \n                {  \n                  "kind": "zoom",  \n                  "url": "images/products/1234/zoom.jpg"  \n                }\n              ],  \n              "sizes": [  \n                {  \n                  "size": "L",  \n                  "available": 77,  \n                  "sku": "CAT-1234-Blk-L",  \n                  "price": 99.99  \n                }\n              ]  \n            }  \n          ],\n          "catalogs": [\n              { "name": "Apparel" }\n          ]  \n        }, \n        success: function(data, textStatus, jqXHR) { \n            console.log("PUT resposne:"); \n            console.dir(data); \n            console.log(textStatus); \n            console.dir(jqXHR); \n        }\n    });\n    \n    // Delete\n    \n    jQuery.ajax({url: "/api/products/4f34734d21289c1c28000007", type: "DELETE", success: function(data, textStatus, jqXHR) { console.dir(data); }});\n    \n\n\n### Post Hoc\n\nThis tutorial came about as a desire to develop with a local API. Using a local API, I can develop a client application with Backbone.js and utilize the asynchronous behaviors that come with the API. I am not suggesting that anyone uses this tutorial to build a RESTful API for a production ecommerce application. However, I do advocate developing with a local API rather then just mocking a server without asynchronous interations with JSON data. If you are not working with a RESTful API and are not consuming data using AJAX, in a few hours you can be. \n\nJavaScript runs in so many applications, and since I already know JavaScript I would rather fiddle with Node.js than build an API for my local development needs in PHP or Ruby. Also, this exercise helps me to understand more about JSON, REST and jQuery AJAX development. Getting to know these technologies and developing solid skills using asynchronous behavior, necessary to build HTML5 apps for desktop and/or mobile browsers.\n\n*Completing this tutorial will likely take a few hours, even longer if you do not have node and npm running on your development environment.*\n\n### Reference\n\n* [API design nouns are good, verbs are bad.][nouns are good verbs are bad]\n* [Installing Node.js][install node]\n* [npm is a package manager for node.][install npm]\n* [Models are defined by passing a Schema instance to mongoose.model][mongoosejs model]\n* [SchemaTypes take care of validation, casting, defaults, and other general options in our models][schema types]\n* [Embedded documents are documents with schemas of their own that are part of other documents][embedded documents]\n* [Backbone Todo boilerplates demonstrating integration with Node.js, Express, MongoDB][backbone boilerplates]\n* [MongoDB (from 'humongous') - Document-oriented storage][mongodb]\n  * [MongoDB Quickstart][mongoquickstart]\n  * [Try manipulating the Mongo database with the database shell][mongotutorial] or [MongoDB browser shell][try mongodb]\n* [Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.][mongoosejs]\n* [High performance, high class Web development for Node.js][expressjs]\n* [npm install express][install express]\n* [Using Node.js, Express, Mongoose and MongoDB][node-express-mongodb]\n\n[gist-ecomapi]: https://gist.github.com/1791080 "Develop a RESTful API Using Node.js With Express and Mongoose"\n[gist-ecomapi-fixture]: https://gist.github.com/1791080#file_fixtures.js "Fixtures - example AJAX posts to create products"\n[gist-ecomapi-updates]: https://gist.github.com/1791080#file_bulk_updates.js "Sample script for bulk update of products"\n\n[nouns are good verbs are bad]: http://blog.apigee.com/detail/restful_api_design_nouns_are_good_verbs_are_bad/ "API design nouns are good, verbs are bad"\n\n[mongoosejs]: http://mongoosejs.com/ "Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment."\n\n[mongoosejs model]: http://mongoosejs.com/docs/model-definition.html "Models are defined by passing a Schema instance to mongoose.model"\n\n[schema types]: http://mongoosejs.com/docs/schematypes.html "SchemaTypes take care of validation, casting, defaults, and other general options in our models"\n\n[embedded documents]: http://mongoosejs.com/docs/embedded-documents.html "Embedded documents are documents with schemas of their own that are part of other documents"\n\n[backbone boilerplates]: https://github.com/addyosmani/backbone-boilerplates "Backbone Todo boilerplates demonstrating integration with Node.js, Express, MongoDB"\n\n[mongodb]: http://www.mongodb.org/ "MongoDB (from 'humongous') - Document-oriented storage"\n\n[mongoquickstart]: http://www.mongodb.org/display/DOCS/Quickstart "MongoDB Quickstart"\n\n[try mongodb]: http://try.mongodb.org/ "MongoDB browser shell"\n\n[mongotutorial]: http://www.mongodb.org/display/DOCS/Tutorial "Try manipulating the Mongo database with the database shell"\n\n[backbone]: http://documentcloud.github.com/backbone/ "Backbone.js"\n\n[node]: http://nodejs.org/ "Node.js"\n\n[install node]: https://github.com/joyent/node/wiki/Installation "Building and Installing Node.js"\n\n[install npm]: http://npmjs.org/ "npm is a package manager for node."\n\n[expressjs]: http://expressjs.com/ "High performance, high class Web development for Node.js"\n\n[install express]: http://expressjs.com/guide.html "npm install express"\n\n[node-express-mongodb]: https://github.com/addyosmani/backbone-fundamentals#restful "Using Node.js, Express, Mongoose and MongoDB"\n\n[rest]: http://en.wikipedia.org/wiki/Representational_state_transfer "Representational state transfer"\n\n[crud]: http://en.wikipedia.org/wiki/Create,_read,_update_and_delete "Create, read, update and delete"\n\n[web service]: http://en.wikipedia.org/wiki/Web_service "Web service"\n\n[json]: http://www.json.org/ "JSON (JavaScript Object Notation)"\n	For the past couple months I've been developing with [Backbone.js][backbone] and mocking data for an application. I've worked in the ecommerce industry for a few years and thought it would be a good idea to create a serious of posts on the topic of developing with Backbone using an example with some complexity, perhaps more than a '*todos*' or '*blog*' application, so the example will utilize a familiar Web application, an online store. To program a data-driven asynchronous application using a language I already know, JavaScript, the best way to learn is to write some code. So, I researched a few example applications using [Node.js][node] with a [MongoDB database][mongodb]. This article is intended to be the first in a series on the topic building an online store using [REST][rest] and Backbone.js to structure the code. This tutorial is not intended for production code, but rather an exploration of developing interactions with a RESTful API. This first post lays down a foundation for developing with a local API, then I can get into using the application with Backbone; but let's get into the server-side for a bit first.\n\n## API Design for Mock Ecommerce Application\n\nGoals for the Web service:\n\n* Simple API design and pragmatic REST Web service, with only 2 base URLs per resource  \n* Keep verbs out of your base URLs\n* Our HTTP verbs are POST, GET, PUT, and DELETE ([Create, Read, Update, Delete][crud])  \n* Concrete names are better than abstract\n\n*Example* : two (2) resources (`/products` and `/products/XX`) and the four (4) HTTP verbs\n\n<table class="cols5">\n    <tr>\n        <th><strong>Resource</strong></th>\n        <th><strong>POST</strong><br>(create)</th>\n        <th><strong>GET</strong><br>(read)</th>\n        <th><strong>PUT</strong><br>(update)</th>\n        <th><strong>DELETE</strong><br>(delete)</th>\n    </tr>\n    <tr>\n        <td><strong>/products</strong></td>\n        <td>create a new product</td>\n        <td>list products</td>\n        <td>bulk update products</td>\n        <td>delete all products</td>\n    </tr>\n    <tr>\n        <td><strong>/products/1234</strong></td>\n        <td>error</td>\n        <td>show 1234</td>\n        <td>if exists update 1234, else error</td>\n        <td>delete 1234</td>\n    </tr>\n</table>\n\n[backbone]: http://documentcloud.github.com/backbone/ "Backbone.js"\n[node]: http://nodejs.org/ "Node.js"\n[mongodb]: http://www.mongodb.org/ "MongoDB (from 'humongous') - Document-oriented storage"\n[rest]: http://en.wikipedia.org/wiki/Representational_state_transfer "Representational state transfer"	develop-a-restful-api-using-nodejs-with-express-and-mongoose	Develop a RESTful API Using Node.js With Express and Mongoose	2012-02-09	2015-05-07 17:03:21.334409	2015-05-07 17:03:21.334409	1	'-02':1568C '-10':1569C '-1234':485C,497C,2683C,2695C,3318C,3330C,3719C,3731C,3846C '/1791080':4229C '/1791080#file_bulk_updates.js':4260C '/1791080#file_fixtures.js':4246C '/addyosmani/backbone-boilerplates':4359C '/addyosmani/backbone-fundamentals#restful':4454C '/api':824C,1116C,3342C '/api/products':1272C,1295C,1336C,1363C,1401C,1516C,1665C,2310C,2351C,2415C,2635C,2866C,2883C,3355C,3403C,3475C,3520C,3541C,3569C,3590C,3671C,3765C '/api/products/4f34734d21289c1c28000007':3780C,3797C,3872C '/api/products/4f34d8e7f05ebf212b000004':1700C,1723C,1820C,1841C '/backbone/':312B,4406C '/detail/restful_api_design_nouns_are_good_verbs_are_bad/':4276C '/display/docs/quickstart':4381C '/display/docs/tutorial':4393C '/docs/embedded-documents.html':4339C '/docs/model-definition.html':4305C '/docs/schematypes.html':4320C '/guide.html':4444C '/images/products-post.png)':2809C '/images/server-response.png)':2822C '/joyent/node/wiki/installation':4415C '/products':266B,284B,588C,590C,1075C,1076C,3643C,3644C '/products/1234':297B '/products/xx':268B '/public':3638C '/schema.objectid':3083C '/usr/local/cellar/mongodb/2.0.1-x86_64/mongod.conf':947C '/wiki/create,_read,_update_and_delete':4471C '/wiki/representational_state_transfer':329B,4464C '/wiki/web_service':4481C '0':2129C,2157C,2890C,2910C,3100C,3128C,3410C,3430C '10':482C,2680C,3217C,3255C,3262C,3315C,3716C '1000':2131C,3102C '109.99':502C,2700C,3335C,3736C '1234':300B,304B,308B,465C,2433C,2663C,2755C,2768C,3298C,3699C,3830C '12345':1534C,1575C,1749C '2':230B,264B '2012':1567C '23.372':1572C '4':272B '40':3232C,3241C '4242':836C,970C,981C,1085C,1497C,3617C '4242/api':1098C,1466C '4242/api/products/4f34d8e7f05ebf212b000004':1826C,1863C '44':1571C '4f34734d21289c1c28000007':3762C '4f34d8e7f05ebf212b000004':1555C '7':494C,2692C,3327C,3728C '70':3219C '77':3843C '9':2142C,3113C '99.99':490C,2688C,3323C,3724C,3851C 'a-za-z0':2138C,3109C 'abl':1053C 'abstract':261B 'access':716C 'action':2474C,2515C,2824C,2834C,2848C 'actual':926C 'ad':778C,1169C,1586C,1608C,1814C,1904C,2050C,2094C,2099C,2203C,2292C,2389C,2458C,2508C,2571C,2618C,2845C,3625C 'add':1142C,1230C,1262C,1691C,2555C 'addit':2082C 'addm':2404C 'advoc':3941C 'ajax':1057C,1491C,1508C,2090C,2220C,2976C,2984C,3017C,3648C,3974C,4026C,4249C 'alreadi':99B,3991C 'also':631C,864C,1095C,1835C,1960C,2093C,2283C,2506C,2856C,2970C,3618C,4013C 'and/or':4047C 'anonym':1611C,1885C 'anyon':3924C 'api':4A,172B,185B,209B,221B,830C,852C,1072C,1104C,1122C,2587C,3005C,3340C,3348C,3640C,3654C,3665C,3896C,3900C,3918C,3932C,3946C,3967C,4003C,4075C,4233C,4277C 'app':712C,797C,854C,3054C,4044C 'app.configure':803C,1162C,3060C 'app.delete':1400C,2865C,3568C,3589C 'app.get':823C,1115C,1271C,1335C,3341C,3519C,3540C 'app.js':776C,994C,999C,1017C,1069C,1167C,1430C,1442C,1450C,2074C,2485C,2980C,3621C,3668C 'app.listen':835C,969C,3616C 'app.post':1294C,2309C,3354C 'app.put':1362C,2350C,2882C,3402C,3474C 'app.router':810C,3067C 'app.use':805C,807C,809C,811C,817C,878C,2490C,3062C,3064C,3066C,3068C,3074C 'apparel':505C,2703C,2765C,3338C,3739C,3854C 'append':1789C 'applic':28B,74B,83B,94B,118B,193B,214B,738C,784C,814C,881C,2068C,2216C,3038C,3041C,3071C,3906C,3937C,3987C 'array':2235C,2408C,2611C,2893C,3413C 'array.isarray':2896C,2904C,3416C,3424C 'articl':128B,642C 'assembl':2026C,2039C 'assign':2036C,3759C 'associ':1966C 'asynchron':93B,3912C,3954C,4038C,4197C,4299C 'attempt':2456C,2553C 'attribtu':2623C 'attribut':408C,1900C,2097C,2241C,2298C,3235C 'automat':929C,1587C,3758C 'avail':427C,481C,493C,2123C,2679C,2691C,3094C,3314C,3326C,3715C,3727C,3842C 'awesom':440C,1519C,1578C,1729C,2418C,2638C,2730C,2783C,3273C,3674C,3803C 'backbon':22B,60B,195B,309B,729C,4147C,4156C,4355C,4360C,4403C 'backbone.js':21B,149B,313B,3908C,4407C 'bad':4082C,4088C,4273C,4284C 'base':231B,240B 'begin':843C 'behavior':3913C,4039C 'belong':1944C,1953C 'best':103B 'better':259B 'bit':207B 'black':387C,453C,468C,1532C,1565C,1734C,1744C,1797C,2431C,2651C,2666C,2743C,2758C,2779C,3286C,3301C,3687C,3702C,3816C,3833C 'blk':487C,499C,2685C,2697C,3320C,3332C,3721C,3733C,3848C 'blk-l':3847C 'blk-m':498C,2696C,3331C,3732C 'blk-s':486C,2684C,3319C,3720C 'block':877C,1164C 'blog':73B 'blog.apigee.com':4275C 'blog.apigee.com/detail/restful_api_design_nouns_are_good_verbs_are_bad/':4274C 'boilerpl':4149C,4157C,4356C,4362C 'bracket':2010C 'bring':519C 'browser':1064C,1080C,1477C,1641C,1660C,2532C,2790C,2819C,4049C,4181C,4388C 'build':141B,2545C,3929C,4001C,4042C,4416C 'built':741C 'bulk':291B,2823C,2847C,2972C,3029C,3400C,3564C,4264C 'c':1435C,2071C 'call':1058C,1606C,1881C,2511C 'callback':1614C 'came':3886C 'care':4116C,4323C 'cast':4119C,4326C 'cat':484C,496C,2682C,2694C,3317C,3329C,3718C,3730C,3845C 'catalog':475C,503C,1914C,1958C,1993C,1994C,2167C,2194C,2673C,2701C,2763C,3138C,3165C,3195C,3196C,3308C,3336C,3378C,3709C,3737C,3852C 'categori':416C,459C,1913C,1967C,1991C,1992C,2188C,2573C,2657C,2749C,3159C,3193C,3194C,3292C,3376C,3693C,3824C 'cdn':1048C 'challeng':522C 'charact':3242C,3263C 'class':4203C,4435C 'client':3905C 'cloth':461C,2659C,2751C,3294C,3695C,3826C 'code':111B,153B,161B,782C,840C,894C,968C,1163C,1657C,1766C,1775C,2083C,2489C,2992C,3626C 'color':384C,421C,467C,1242C,1928C,1948C,2181C,2665C,2757C,3152C,3300C,3701C,3832C 'combin':1240C,1937C 'come':1223C,3915C 'command':936C,943C,957C,1002C,1446C,1500C,2504C,2536C 'complet':2582C,2629C,4050C 'complex':66B 'compos':514C 'concret':256B 'config':802C,946C,3059C 'configur':338C,353C,380C,876C,1934C 'consol':565C,1067C,1479C,1504C,1629C,1663C,2721C,2802C,2806C,3660C 'console.dir':1542C,1546C,1605C,1673C,1677C,1708C,1712C,1758C,1762C,1852C,1856C,1880C,2446C,2450C,2711C,2715C,3747C,3751C,3773C,3777C,3788C,3792C,3863C,3867C,3880C 'console.log':1288C,1301C,1303C,1320C,1324C,1354C,1386C,1389C,1418C,1423C,1539C,1544C,1603C,1670C,1675C,1705C,1710C,1755C,1760C,1849C,1854C,1878C,2316C,2318C,2337C,2341C,2376C,2379C,2443C,2448C,2510C,2708C,2713C,2875C,2880C,2891C,2895C,2898C,2901C,2914C,2925C,2938C,2942C,2945C,3210C,3213C,3225C,3228C,3248C,3251C,3361C,3363C,3388C,3392C,3411C,3415C,3418C,3421C,3434C,3445C,3458C,3462C,3465C,3506C,3509C,3536C,3559C,3578C,3583C,3607C,3612C,3744C,3749C,3770C,3775C,3785C,3790C,3860C,3865C 'consum':3971C 'control':1434C,2070C 'control-c':1433C,2069C 'coupl':14B 'cours':450C,1529C,1562C,1741C,2428C,2648C,2740C,2776C,3283C,3684C,3813C 'creat':49B,251B,277B,285B,773C,856C,1060C,1156C,1250C,1290C,1321C,1511C,1652C,1779C,2060C,2105C,2223C,2286C,2306C,2338C,2398C,2473C,2589C,2627C,2787C,2965C,3020C,3353C,3389C,3666C,3669C,4252C,4472C 'crud':255B,1155C,1264C,1457C,4468C 'data':25B,91B,432C,583C,593C,650C,717C,1038C,1145C,1536C,1543C,1649C,1667C,1674C,1702C,1709C,1726C,1752C,1759C,1846C,1853C,2103C,2393C,2407C,2440C,2447C,2705C,2712C,3741C,3748C,3767C,3774C,3782C,3789C,3800C,3857C,3864C,3877C,3881C,3958C,3972C 'data-driven':90B 'databas':125B,536C,557C,799C,900C,909C,918C,927C,2403C,3056C,4173C,4176C,4398C,4401C 'date':1200C,1999C,2279C,3201C 'date.now':1202C,2001C,2281C,3203C 'db':2112C 'debug':2613C 'default':1201C,2000C,2280C,3202C,4120C,4327C 'defin':572C,700C,4104C,4308C 'delet':250B,254B,282B,283B,294B,307B,761C,1159C,1394C,1597C,1836C,1843C,2592C,2828C,3561C,3869C,3874C,4476C 'demonstr':4150C,4363C 'descript':412C,444C,1188C,1310C,1523C,1556C,1735C,1793C,1818C,1979C,2265C,2325C,2422C,2642C,2734C,2770C,3181C,3244C,3250C,3257C,3277C,3370C,3678C,3807C 'design':210B,222B,2838C,4076C,4192C,4278C,4294C 'desir':3890C 'desktop':4046C 'destroy':3563C,3565C 'detail':448C,1527C,1560C,1739C,2168C,2426C,2646C,2738C,2774C,3139C,3281C,3682C,3811C 'develop':1A,19B,58B,167B,181B,1643C,2986C,3002C,3892C,3903C,3942C,4007C,4027C,4034C,4072C,4205C,4230C,4437C 'didn':1228C 'directori':871C,888C,1014C,1021C,3639C 'dirnam':786C,3043C 'display':2499C 'docuemnt':2207C,2575C 'document':323B,516C,531C,664C,667C,678C,680C,1219C,1221C,1782C,1895C,2004C,2006C,2021C,2031C,2042C,2053C,2109C,2301C,2460C,2528C,2616C,3270C,3756C,4131C,4133C,4144C,4146C,4162C,4336C,4341C,4343C,4354C,4375C 'document-ori':322B,4161C,4374C 'documentcloud.github.com':311B,4405C 'documentcloud.github.com/backbone/':310B,4404C 'driven':92B 'dumpexcept':819C,2492C,3076C 'e.g':386C,3761C 'ecomapi':1010C,1068C,2957C,3014C,3024C,3035C,4226C,4242C,4256C 'ecomm':829C,917C,1103C,1121C,3347C 'ecommerc':34B,213B,3936C 'els':305B,1286C,1322C,1352C,1388C,1422C,2339C,2378C,2879C,2944C,3390C,3464C,3508C,3534C,3557C,3582C,3611C 'embed':677C,679C,1218C,1220C,1894C,2003C,2005C,2030C,2052C,2206C,2300C,2574C,2615C,4130C,4145C,4335C,4340C 'en.wikipedia.org':328B,4463C,4470C,4480C 'en.wikipedia.org/wiki/create,_read,_update_and_delete':4469C 'en.wikipedia.org/wiki/representational_state_transfer':327B,4462C 'en.wikipedia.org/wiki/web_service':4479C 'end':639C 'enum':2165C,3136C 'environ':4073C,4198C,4300C 'err':1279C,1282C,1289C,1316C,1318C,1325C,1345C,1348C,1355C,1372C,1383C,1385C,1390C,1410C,1415C,1417C,1424C,2333C,2335C,2342C,2360C,2373C,2375C,2380C,2872C,2874C,2881C,2934C,2937C,2943C,3384C,3386C,3393C,3454C,3457C,3463C,3484C,3503C,3505C,3510C,3527C,3530C,3537C,3550C,3553C,3560C,3575C,3577C,3584C,3599C,3604C,3606C,3613C 'error':298B,306B,2468C,2483C,2501C,2939C,3459C 'even':4059C 'exampl':63B,77B,117B,262B,361C,737C,754C,912C,2200C,3016C,4248C 'execut':941C,997C,1499C,1654C,2524C 'exercis':4015C 'exist':302B 'exit':1427C 'explor':165B 'express':8A,599C,611C,628C,630C,714C,733C,747C,787C,789C,3009C,3044C,3046C,4154C,4211C,4213C,4216C,4222C,4237C,4367C,4441C,4447C,4450C,4457C 'express.bodyparser':806C,3063C 'express.createserver':798C,855C,3055C 'express.errorhandler':818C,2491C,3075C 'express.httpserver':771C 'express.methodoverride':808C,3065C 'express.static':812C,879C,3069C 'expressj':601C,4208C,4430C 'expressjs.com':4431C,4443C 'expressjs.com/guide.html':4442C 'fail':2475C 'familiar':81B 'favorit':368C 'fiddl':1482C,2085C,3651C,3997C 'file':775C,867C,892C,995C,1018C,1028C,1033C,1092C,2486C,3039C,3636C 'final':2829C 'finish':2831C 'first':134B,174B,208B,538C,2202C,2454C 'fixtur':2968C,3015C,3025C,4243C,4247C 'folder':1008C 'follow':780C,961C,1160C,1656C,2960C 'found':724C 'foundat':179B 'four':271B 'framework':600C 'function':804C,825C,1117C,1273C,1278C,1296C,1315C,1338C,1344C,1365C,1371C,1382C,1403C,1409C,1414C,1535C,1612C,1666C,1701C,1751C,1845C,1886C,2311C,2332C,2353C,2359C,2372C,2439C,2704C,2867C,2871C,2884C,2933C,3061C,3208C,3223C,3246C,3343C,3356C,3383C,3404C,3453C,3477C,3483C,3502C,3521C,3526C,3543C,3549C,3570C,3574C,3592C,3598C,3603C,3740C,3766C,3781C,3856C,3876C 'fundament':730C 'general':4123C,4330C 'generat':930C,3753C 'genereat':991C 'get':189B,199B,247B,278B,553C,757C,1113C,1137C,1671C,1681C,1706C,1804C,2467C,2724C,3514C,4028C 'gist':2954C,2956C,3001C,3013C,3023C,3034C,3622C,4225C,4241C,4255C 'gist-ecomapi':2955C,3012C,4224C 'gist-ecomapi-fixtur':3022C,4240C 'gist-ecomapi-upd':3033C,4254C 'gist.github.com':4228C,4245C,4259C 'gist.github.com/1791080':4227C 'gist.github.com/1791080#file_bulk_updates.js':4258C 'gist.github.com/1791080#file_fixtures.js':4244C 'github':2998C 'github.com':4358C,4414C,4453C 'github.com/addyosmani/backbone-boilerplates':4357C 'github.com/addyosmani/backbone-fundamentals#restful':4452C 'github.com/joyent/node/wiki/installation':4413C 'goal':215B 'good':46B,4079C,4085C,4270C,4281C 'got':764C 'group':356C 'guid':550C 'help':4016C 'high':4200C,4202C,4432C,4434C 'hit':1096C 'hoc':3883C 'hook':897C 'hour':3978C,4058C 'howev':1787C,2476C,3938C 'html5':4043C 'http':243B,273B 'humong':321B,4160C,4373C 'id':410C,591C,1077C,1334C,1337C,1361C,1364C,1399C,1402C,1554C,1583C,1693C,1808C,2352C,2918C,2921C,2926C,2928C,2929C,2932C,3438C,3441C,3446C,3448C,3449C,3452C,3476C,3542C,3591C,3645C,3760C 'idea':47B 'imag':413C,422C,454C,469C,1912C,1989C,1990C,2159C,2183C,2184C,2205C,2240C,2249C,2275C,2276C,2297C,2329C,2330C,2391C,2406C,2434C,2557C,2652C,2667C,2744C,2759C,3130C,3154C,3155C,3191C,3192C,3287C,3302C,3374C,3688C,3703C,3819C,3834C 'images/products/1234/black.jpg':477C,2675C,3310C,3711C 'images/products/1234/main.jpg':458C,2438C,2656C,2748C,3291C,3692C,3823C 'images/products/1234/thumbnail.jpg':473C,2671C,3306C,3707C 'images/products/1234/zoom.jpg':3838C 'includ':409C 'index':1073C,3635C,3641C 'index.html':1027C,1032C,1071C,1091C,1471C,2981C 'indic':2541C 'industri':35B 'insid':1012C,3637C 'inspect':1622C 'instal':545C,606C,613C,615C,624C,627C,629C,950C,963C,4089C,4091C,4100C,4210C,4212C,4411C,4418C,4420C,4440C,4446C 'instanc':705C,768C,4109C,4313C 'integr':685C,4151C,4364C 'intend':130B,158B 'inter':3955C 'interact':168B,580C 'item':1907C 'iter':2077C 'javascript':101B,781C,1066C,1503C,1662C,3982C,3993C,4487C 'job':1431C 'jqueri':1040C,1473C,1489C,2089C,2803C,2983C,3647C,3655C,4025C 'jquery.ajax':1721C,1839C,3795C,3870C 'jquery.get':1664C,1699C,1819C,3764C,3779C 'jquery.post':1515C,2414C,2634C,3670C 'jqxhr':1538C,1547C,1669C,1678C,1704C,1713C,1754C,1763C,1848C,1857C,2442C,2451C,2707C,2716C,3743C,3752C,3769C,3778C,3784C,3793C,3859C,3868C,3879C 'json':430C,431C,663C,696C,3957C,4022C,4484C,4486C 'keep':235B 'kind':414C,423C,455C,470C,474C,2162C,2243C,2252C,2435C,2653C,2668C,2672C,2745C,3133C,3288C,3303C,3307C,3689C,3704C,3708C,3820C,3835C 'know':100B,555C,3992C,4030C 'l':3841C,3849C 'languag':97B 'larg':388C 'later':1049C 'launch':833C,3614C 'lay':176B 'learn':106B,524C,644C,1208C,2023C 'len':2889C,2906C,2912C,3409C,3426C,3432C 'less':3239C 'let':197B 'letter':2148C,3119C 'like':401C,436C,586C,1553C,1697C,2412C,2793C,4054C 'line':842C,873C,937C,1003C,2505C,2537C 'link':636C,1044C,2958C 'lion':954C 'list':289B,589C,1268C,2606C,3517C 'll':569C 'load':846C,1036C,1083C,1093C,1495C,1861C 'local':184B,3895C,3899C,3945C,4006C 'localhost':980C,1084C,1097C,1465C,1496C,1825C,1862C 'localhost/ecomm_database':801C,896C,3058C 'log':1617C,1876C,2517C,2540C 'long':402C,1746C,1799C 'longer':4060C 'longsleev':3818C 'look':2792C 'm':492C,500C,2690C,2698C,3325C,3333C,3726C,3734C 'macbook':966C 'manag':621C,4097C,4427C 'mani':337C,1923C,2859C,2966C,3986C 'manipul':4170C,4395C 'materi':393C 'max':2130C,3101C 'may':433C,1921C,1952C 'medium':391C 'method':755C,1265C,1458C,1492C,2063C,2291C 'min':2128C,2156C,3099C,3127C 'mobil':4048C 'mock':24B,212B,3950C 'model':689C,691C,698C,709C,1146C,1153C,1175C,1248C,1455C,1911C,1969C,2015C,2028C,2211C,2305C,2464C,2548C,2584C,2622C,3171C,3631C,4102C,4113C,4127C,4190C,4292C,4302C,4306C,4334C 'modifi':1198C,1566C,1997C,2277C,3199C 'modul':848C 'mongo':562C,4172C,4397C 'mongod':933C,944C,983C 'mongodb':124B,126B,317B,319B,534C,535C,546C,567C,594C,734C,750C,920C,1786C,2046C,4155C,4158C,4165C,4166C,4180C,4184C,4188C,4219C,4223C,4290C,4368C,4369C,4371C,4382C,4385C,4387C,4451C,4460C 'mongogb':951C 'mongoos':10A,596C,653C,666C,748C,793C,795C,1225C,2019C,2550C,3011C,3050C,3052C,3633C,4185C,4217C,4239C,4287C,4458C 'mongoose.connect':800C,895C,3057C 'mongoose.model':707C,1256C,3266C,4111C,4315C 'mongoose.schema':1178C,3082C 'mongoosej':597C,690C,708C,1226C,2020C,4112C,4199C,4285C,4301C 'mongoosejs.com':4286C,4304C,4319C,4338C 'mongoosejs.com/docs/embedded-documents.html':4337C 'mongoosejs.com/docs/model-definition.html':4303C 'mongoosejs.com/docs/schematypes.html':4318C 'mongoquickstart':551C,4168C,4378C 'mongotutori':4178C,4390C 'month':15B 'multipl':352C,2459C 'name':257B,417C,460C,462C,504C,907C,916C,1009C,1022C,2191C,2197C,2658C,2660C,2702C,2750C,2752C,2764C,3162C,3168C,3293C,3295C,3337C,3694C,3696C,3738C,3825C,3827C,3853C 'necessari':4040C 'need':541C,570C,659C,849C,903C,939C,1206C,2835C,4008C 'network':1637C,2814C,2816C 'new':287B,1181C,1306C,1453C,1485C,1513C,1972C,2107C,2116C,2160C,2179C,2189C,2195C,2250C,2258C,2321C,3087C,3131C,3150C,3160C,3166C,3174C,3366C 'next':1139C 'node':121B,314B,616C,623C,656C,711C,732C,998C,1449C,2073C,2720C,4066C,4092C,4099C,4221C,4408C,4412C,4429C,4449C 'node-express-mongodb':731C,4220C,4448C 'node.js':6A,120B,316B,604C,608C,614C,746C,3007C,3999C,4090C,4153C,4207C,4215C,4235C,4366C,4410C,4419C,4439C,4456C 'nodejs.org':315B,4409C 'notat':4489C 'note':1425C,2521C 'notic':1600C 'noun':333C,1074C,3642C,4077C,4083C,4268C,4279C 'npm':609C,617C,625C,626C,4068C,4093C,4101C,4209C,4421C,4423C,4445C 'npmjs.org':4422C 'null':1869C 'num':2947C,3467C 'numaffect':2935C,2948C,3455C,3468C 'number':419C,2125C,2150C,2153C,3096C,3121C,3124C 'object':508C,2237C,2411C,2760C,2762C,4189C,4291C,4488C 'one':365C,1954C,1963C,2051C 'onlin':85B,143B,346C 'option':350C,354C,385C,1929C,1942C,1949C,4124C,4331C 'orient':324B,4163C,4376C 'osx':953C 'outlin':668C 'output':2726C 'packag':620C,654C,4096C,4426C 'part':4141C,4351C 'pass':702C,4106C,4310C 'past':13B 'path':790C,792C,3047C,3049C 'path.join':813C,880C,3070C 'per':233B 'perform':4201C,4433C 'perhap':67B 'php':4010C 'pixelhandler.com':2808C,2821C 'pixelhandler.com/images/products-post.png)':2807C 'pixelhandler.com/images/server-response.png)':2820C 'place':1619C 'plenti':634C 'pluse':2520C 'point':1128C 'post':53B,175B,246B,276B,758C,1302C,1509C,1540C,1549C,1756C,1850C,2102C,2221C,2229C,2287C,2317C,2396C,2444C,2514C,2633C,2709C,2727C,2799C,2804C,3018C,3351C,3362C,3745C,3771C,3786C,3882C,4250C 'pragmat':224B 'press':1432C 'previous':1774C 'price':429C,489C,501C,1232C,1931C,2151C,2687C,2699C,3122C,3322C,3334C,3723C,3735C,3850C 'print':959C 'product':160B,288B,290B,293B,296B,334C,343C,358C,377C,400C,407C,688C,695C,1061C,1174C,1180C,1257C,1258C,1270C,1280C,1285C,1293C,1300C,1305C,1328C,1332C,1346C,1351C,1359C,1373C,1393C,1397C,1411C,1454C,1514C,1648C,1685C,1690C,1781C,1791C,1806C,1817C,1838C,1899C,1910C,1920C,1951C,1957C,1968C,1971C,2014C,2041C,2108C,2143C,2210C,2225C,2257C,2304C,2308C,2315C,2320C,2345C,2349C,2361C,2383C,2400C,2463C,2547C,2583C,2595C,2604C,2608C,2621C,2630C,2841C,2852C,2860C,2900C,2916C,2967C,3021C,3032C,3114C,3170C,3173C,3233C,3256C,3267C,3268C,3269C,3360C,3365C,3396C,3420C,3436C,3485C,3513C,3518C,3528C,3533C,3539C,3551C,3556C,3567C,3588C,3600C,3630C,3755C,3935C,4253C,4267C 'product.catalogs':3496C 'product.categories':3494C 'product.description':1376C,2364C,3488C 'product.images':2368C,3492C 'product.path':3205C,3220C,3243C 'product.remove':1413C,3602C 'product.save':1314C,1381C,2331C,2371C,3382C,3501C 'product.style':1378C,2366C,3490C 'product.title':1374C,2362C,3486C 'product.variants':3498C 'productmodel':1253C,1255C,1307C,2322C,3265C,3367C 'productmodel.find':1277C,3525C 'productmodel.findbyid':1342C,1369C,1407C,2357C,3481C,3547C,3596C 'productmodel.remove':2870C,3573C 'productmodel.update':2927C,3447C 'program':88B 'proper':2551C 'properti':1584C 'public':816C,870C,883C,887C,1023C,1070C,3073C 'put':248B,280B,759C,1720C,1725C,2290C,2863C,2899C,2977C,3397C,3419C,3799C,3861C 'quickstart':549C,4167C,4383C 'rather':163B,3947C,3996C 're':1438C 're-start':1437C 'read':252B,279B,1157C,1266C,1329C,1595C,1646C,1683C,1687C,2601C,3516C,3763C,4473C 'readi':2797C 'record':1599C 'red':390C 'refer':2294C,4074C 'referenc':2017C 'remain':1898C 'remov':1419C,2850C,2876C,3579C,3585C,3608C 'report':2481C 'repres':397C,435C 'represent':330B,4465C 'req':826C,1118C,1274C,1297C,1339C,1366C,1404C,2312C,2354C,2868C,2885C,3344C,3357C,3405C,3478C,3522C,3544C,3571C,3593C 'req.body':1304C,2319C,3364C 'req.body.catalogs':3379C,3497C 'req.body.categories':3377C,3495C 'req.body.description':1311C,1377C,2326C,2365C,3371C,3489C 'req.body.images':2369C,3375C,3493C 'req.body.products':2894C,2897C,2902C,2905C,2923C,2930C,2951C,3414C,3417C,3422C,3425C,3443C,3450C,3471C 'req.body.products.length':2907C,3427C 'req.body.style':1313C,1379C,2328C,2367C,3373C,3491C 'req.body.title':1309C,1375C,2324C,2363C,3369C,3487C 'req.body.variants':3381C,3499C 'req.params.id':1343C,1370C,1408C,2358C,3482C,3548C,3597C 'request':1682C,1718C,2091C,2519C,2864C,2978C 'requir':788C,791C,794C,1186C,1191C,1977C,1982C,2121C,2126C,2135C,2154C,2170C,2175C,2263C,2268C,3045C,3048C,3051C,3092C,3097C,3106C,3125C,3141C,3146C,3179C,3184C 'res':827C,1119C,1275C,1298C,1340C,1367C,1405C,2313C,2355C,2869C,2886C,3345C,3358C,3406C,3479C,3523C,3545C,3572C,3594C 'res.send':828C,1120C,1284C,1327C,1350C,1392C,1421C,2344C,2382C,2878C,2950C,3346C,3395C,3470C,3512C,3532C,3555C,3581C,3610C 'research':114B,661C 'resourc':234B,265B,275B 'respond':976C 'respons':1114C,1138C,1550C,1626C,1634C,1831C,1866C,1870C,1890C,2811C 'resposn':1541C,1672C,1707C,1757C,1851C,2445C,2710C,3746C,3772C,3787C,3862C 'rest':3A,146B,147B,171B,225B,326B,585C,720C,1148C,1462C,3004C,3339C,3664C,3931C,3966C,4023C,4232C,4461C 'restart':2066C 'result':1110C 'return':1276C,1283C,1287C,1319C,1323C,1326C,1341C,1349C,1353C,1368C,1380C,1391C,1406C,1412C,1420C,2336C,2340C,2343C,2356C,2370C,2381C,2877C,2949C,3215C,3230C,3253C,3387C,3391C,3394C,3469C,3480C,3500C,3511C,3524C,3531C,3535C,3546C,3554C,3558C,3580C,3595C,3601C,3609C 'review':752C 'root':785C,815C,882C,3042C,3072C 'rubi':4012C 'run':602C,713C,832C,924C,932C,945C,985C,1106C,1124C,1429C,3350C,3983C,4069C 'sampl':2962C,3026C,4261C 'save':2526C,2560C 'schema':672C,674C,704C,1171C,1177C,1182C,1213C,1215C,1973C,2035C,2113C,2117C,2161C,2180C,2190C,2196C,2251C,2259C,3081C,3084C,3088C,3132C,3151C,3161C,3167C,3175C,4108C,4128C,4135C,4312C,4316C,4345C 'schematyp':4114C,4321C 'screenshot':2796C 'script':2963C,3027C,4262C 'section':727C 'see':547C,612C,1087C,1810C,1828C,2246C,2952C 'select':1940C,1947C 'sell':345C 'separ':399C 'seri':137B 'serious':51B 'serv':865C,1459C 'server':203B,834C,859C,862C,974C,990C,1133C,1624C,1865C,1893C,2471C,2810C,3615C,3952C 'server-sid':202B 'servic':219B,227B,575C,577C,722C,1149C,1463C,1487C,2843C,4478C,4483C 'set':340C,884C,971C,1237C 'setup':922C,1150C,2497C 'shell':2479C,2722C,4177C,4182C,4389C,4402C 'shirt':373C,443C,463C,1522C,1581C,1732C,1919C,2421C,2641C,2661C,2733C,2753C,2786C,3276C,3296C,3677C,3697C,3806C,3828C 'short':405C 'short-sleev':404C 'show':299B 'showstack':821C,2494C,3078C 'side':204B 'simpl':220B,1132C,1152C 'sinc':948C,1203C,3989C 'singl':592C,1136C,1292C,1331C,1358C,1396C,2096C,2348C,2594C,2603C,2975C,3472C,3538C,3587C 'size':382C,425C,426C,478C,479C,491C,1244C,1926C,1941C,2115C,2118C,2185C,2186C,2676C,2677C,2689C,2761C,3086C,3089C,3156C,3157C,3311C,3312C,3324C,3712C,3713C,3725C,3839C,3840C 'skill':4036C 'sku':428C,483C,495C,2132C,2144C,2681C,2693C,3103C,3115C,3316C,3328C,3717C,3729C,3844C 'sleev':406C,1747C,1800C 'snippet':2985C,3649C,3656C 'solid':4035C 'someth':1552C 'sourc':2991C 'specif':392C,1493C,1689C 'spit':1099C 'squar':2009C 'stack':647C,745C 'start':765C,987C,1439C 'state':331B,4466C 'static':866C,891C,1031C,1090C 'still':1205C 'stop':2064C 'storag':325B,4164C,4377C 'store':86B,144B,527C,662C,693C,1784C,2044C 'strategi':2048C 'string':1185C,1190C,1195C,1976C,1981C,1986C,2120C,2134C,2164C,2174C,2182C,2192C,2198C,2253C,2255C,2262C,2267C,2272C,3091C,3105C,3135C,3145C,3153C,3163C,3169C,3178C,3183C,3188C 'structur':151B 'style':418C,464C,1193C,1312C,1533C,1574C,1748C,1984C,2270C,2327C,2432C,2662C,2754C,2767C,3186C,3221C,3227C,3234C,3297C,3372C,3698C,3829C 'success':1613C,1750C,1844C,1884C,3855C,3875C 'suggest':3922C 'sure':2564C 'switch':2568C 't-shirt':371C,441C,1520C,1579C,1730C,1917C,2419C,2639C,2731C,2784C,3274C,3675C,3804C 't08':1570C 'tab':1638C,2815C,2817C 'take':4055C,4115C,4322C 'technolog':4032C 'termin':2478C 'test':1715C,2213C 'text':1102C,1796C,1813C,1830C 'textstatus':1537C,1545C,1668C,1676C,1703C,1711C,1753C,1761C,1847C,1855C,2441C,2449C,2706C,2714C,3742C,3750C,3768C,3776C,3783C,3791C,3858C,3866C,3878C 'thing':369C,539C 'thought':41B 'thumbnail':456C,471C,2166C,2436C,2654C,2669C,2746C,3137C,3289C,3304C,3690C,3705C,3821C 'time':2055C,2598C 'tip':1871C 'titl':411C,438C,1183C,1308C,1517C,1576C,1727C,1974C,2260C,2323C,2416C,2636C,2728C,2781C,3176C,3206C,3212C,3271C,3368C,3672C,3801C 'todo':71B,4148C,4361C 'togeth':2038C 'tool':1644C,4191C,4293C 'topic':56B,140B 'toward':2580C 'transfer':332B,4467C 'tri':559C,566C,1055C,4169C,4183C,4384C,4394C 'true':820C,822C,1187C,1192C,1197C,1978C,1983C,1988C,2122C,2127C,2136C,2155C,2171C,2176C,2264C,2269C,2274C,2493C,2495C,3077C,3079C,3093C,3098C,3107C,3126C,3142C,3147C,3180C,3185C,3190C 'try.mongodb.org':4386C 'tutori':155B,2989C,2995C,3885C,3927C,4052C 'two':263B,2795C 'type':375C,513C,673C,675C,1184C,1189C,1194C,1199C,1214C,1216C,1724C,1842C,1975C,1980C,1985C,1998C,2119C,2124C,2133C,2152C,2163C,2173C,2261C,2266C,2271C,2278C,3090C,3095C,3104C,3123C,3134C,3144C,3177C,3182C,3187C,3200C,3798C,3873C,4129C,4317C 'understand':4019C 'uniqu':1196C,1987C,2273C,3189C 'updat':253B,281B,292B,303B,529C,1158C,1356C,1387C,1441C,1594C,1717C,1812C,2057C,2062C,2218C,2284C,2289C,2346C,2377C,2590C,2826C,2858C,2915C,2941C,2946C,2973C,3030C,3036C,3399C,3401C,3435C,3461C,3466C,3473C,3507C,3794C,4257C,4265C,4474C 'url':232B,241B,415C,424C,457C,472C,476C,578C,979C,1696C,1722C,1840C,2172C,2245C,2254C,2437C,2655C,2670C,2674C,2747C,3143C,3290C,3305C,3309C,3691C,3706C,3710C,3796C,3822C,3837C,3871C 'use':5A,61B,95B,119B,145B,191B,364C,561C,595C,651C,670C,718C,742C,890C,914C,1039C,1062C,1154C,1211C,1246C,1443C,1488C,1507C,1592C,1719C,1777C,1874C,2226C,2487C,2549C,2800C,3006C,3632C,3657C,3662C,3897C,3925C,3973C,4037C,4214C,4234C,4455C 'util':79B,1469C,3910C 'v':3209C,3214C,3224C,3229C,3247C,3252C 'v.length':3216C,3218C,3231C,3254C 'valid':2137C,2766C,2769C,2780C,3108C,3204C,3207C,3211C,3222C,3226C,3245C,3249C,3628C,4118C,4325C 'valu':1589C 'var':783C,796C,845C,1176C,1179C,1254C,1299C,1970C,2114C,2158C,2177C,2187C,2193C,2248C,2256C,2314C,2887C,2920C,3040C,3053C,3080C,3085C,3129C,3148C,3158C,3164C,3172C,3264C,3359C,3407C,3440C 'variabl':1252C 'variant':466C,1915C,1924C,1995C,1996C,2178C,2664C,3149C,3197C,3198C,3299C,3380C,3700C,3831C 'variat':394C 'varient':420C,2756C 'varieti':511C 've':17B,30B 'verb':236B,244B,274B,4080C,4086C,4271C,4282C 'via':584C 'view':1632C,1888C 'visit':1824C 'vs':403C 'way':104B,2579C 'web':82B,218B,226B,574C,576C,721C,858C,861C,1486C,2842C,4204C,4436C,4477C,4482C 'whether':2542C 'within':1609C,1882C 'without':3953C 'work':31B,648C,2079C,2386C,2577C,3963C,4194C,4296C 'would':43B,395C,3995C 'write':109B 'www.json.org':4485C 'www.mongodb.org':318B,4370C,4380C,4392C 'www.mongodb.org/display/docs/quickstart':4379C 'www.mongodb.org/display/docs/tutorial':4391C 'year':39B 'yet':1233C 'z':1573C 'z0':2141C,3112C 'za':2140C,3111C 'zoom':2169C,3140C,3836C	published	pixelhandler
20	## A few reasons I enjoy the JavaScript development community\n\nI find it refreshing that many of these libraries have a fair amount of\nadoption within the development community. One of the primary objectives on\nthis project is to build the application with modular code. Also to load\nmodules when the specific components are needed for execution rather than the\nentire library which becomes the finish application. The AMD specification and\nthe compatibility with RequireJS and other libraries is very attractive.\nRequireJS gives me the ability to author various modules and manage the code\ndependencies efficiently. Also with the build and optimization features of\nRequireJS I am able to organize the modules within packages. I broke down the\nfile organization by having common directories for models, views, collections\n(objects defined using Backbone) and a few other directories, like syncs,\nutils to extend the functionality of Backbone. The modules in each directory\nare built into a single common package of modules and the package can be\nrequired by other modules which reside in other packages (groups of code for\nspecific feature/component implementation, e.g. site chrome). I forked an open\nsource book [Backbone.js Fundamentals](https://github.com/pixelhandler/backbone-fundamentals) on these topics adding an explanation on how I am\nbuilding and optimizing using packages of modules; see the section "Optimize\nand Build a Backbone JavaScript application with Require.JS using Packages". I\nposted this section on the [HauteLookTech.com blog](http://www.hautelooktech.com/2012/02/01/optimize-and-build-a-backbone-js-javascript-application-with-require-js-using-packages/) as well.\n\nAfter spending a few weeks during code freeze at work and trying out all these\nlibraries we began development for a mobile application. In an effort to\nrapidly prototype the web application I began to build with [jQuery Mobile](http://jquerymobile.com/demos/1.0.1/docs/about/getting-started.html).\nThis gave our team common components that work across a wide range of devices\nwithout overloading us with testing. Also the theme roller for jQuery Mobile\nis a handy tool for the building a base skin for the mobile site. With only a\nfew sketches and by generating a mobile theme that looked very _blueprint-ish_\nwe began authoring a site prototype to work out the features and components\nthat should be included in the mobile site application. Since the site\nframework is built with Backbone we will not use the jQuery Mobile routing\nfeatures; however for the prototype this mobile framework was very handy right\nout of the box. Recently there have been many talks and articles on the\nconcept of **"mobile first"**, basically the small screen helps to define what\nreally matters and helps to put usability as a high priority. This ends up\nstriking a nice balance between identifying requirements for design, usability\nand the application's functionality. Using the logic-less template library,\nMustache to render JSON from the web service layer is much funner than all\nkinds of crazy DOM fragment manipulation to render data. I found a great\ntutorial post on using [HTML Templates with Mustache.js](http://coenraets.org/blog/2011/12/tutorial-html-templates-with-mustache-js/).\n\nI am developing the framework based on Backbone.js which has the dependency of\nthe Underscore.js library - a very robust set of tools that complement\nBackbone, especially with filtering collections. Also, Backbone needs either\njQuery or Zepto, I am content with jQuery. The Deferred and Callbacks objects\nin the current version of jQuery also help to manage asynchronous behaviors of\nthe components within the framework. For example, I can add a Deferred object\nto a collection and within a view object only render after the resolution of\nthe deferred property of the required collection object. The Callbacks object\ncomes in handy using a view object that programmatically renders partial\ntemplates based on various child views, I can iterate over options passed to a\nview and define child views based on the options, then add to the (parent)\nview object's render method callbacks to render the child views. Though\nBackbone does not provide (out of the box) a collection view; there are good\nsolutions posted online. So, when I need to program some behavior that is not\nincluded in Backbone, I often discover good solutions online that I can borrow\nfrom. For me, the bottom line is that Backbone gives common patterns for\ndeveloping a data-driven application backed by a RESTful API and is very\nextendable. Backbone does not box me in, yet is fairly straight forward for me\nto build on top of, also giving solid structure to the components I need in\ndeveloping a modular application.\n\nAbout modular code, which JavaScript does not currently provide a standard,\nthere are plenty of patterns you can use. For me\n[AMD](http://requirejs.org/docs/whyamd.html) is just fine. Even though a\nfuture standard my be different than the way AMD operates, the API fits well\ninto current libraries. One thing I notice is that when there is a need for\nsome functionality in JavaScript many solutions pop up in the community; which\nis great. However, it would be nice if developers find a good solution and\nadopt it; it would seem that more adoption and development using the ‘good’\nsolution would lead to the said solution becoming _even better_ or _great_ and\nthe use of the solution would become easier for other developers to adopt and\nimplement. AMD is a good solution for [modules using RequireJS](http://requirejs.org/docs/why.html), some would argue _‘the’_\nsolution. For now, it is a viable solution and I’m using it. The Group for AMD\nJS Module API has forks for AMD compatible versions of\n[Backbone.js](https://github.com/amdjs/backbone) and\n[Underscore.js](https://github.com/amdjs/underscore) libraries.\n\nPerhaps the most enjoyment I find in JavaScript development with this mix of\nlibraries is the discovery of a solution based on using [behavior-driven development (BDD)](http://dannorth.net/introducing-bdd/) methodologies; and of\ncourse discovering though this _lather, rinse, repeat_ (test-driven\ndevelopment) practice. The combination of\n[Jasmine](http://pivotal.github.com/jasmine/), [jQuery-Jasmin](https://github.com/velesin/jasmine-jquery) and\n[Sinon.JS](http://sinonjs.org/) testing libraries is powerful to say the\nleast. I really enjoy getting from red to green, in passing the tests. I find\nthat sometimes the hardest part is to guess what exactly will prove the\nsolution yet to be discovered. This development approach helps to break down a\nsolution by proving the expected behavior with simpler units of behavior which\ncan be tested and verified independently from the application itself. Sinon.JS\nprovides an nice and [fake XHR server](http://sinonjs.org/docs/#server) for\n[testing Backbone.js applications](http://tinnedfruit.com/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html). Jasmine has\n[spies](https://github.com/pivotal/jasmine/wiki/Spies) which replace a\nfunction that it is spying on, and Jasmine-jQuery adds the sweetness of\nfixtures, jQuery based matchers and event spies to complete a solid suite for\na front-end developer to embrace the process of test-driven development. It is\nvery nice to execute the tests on various mobile devices during development to\nensure cross platform/device compatibility.\n\nNode.js came in very handy in authoring a shell script to prep and build using\nthe [r.js optimizer](http://requirejs.org/docs/optimization.html). I needed to\nhave a site that can be hosted in a cloud environment with out any server-side\nscript execution. So adding to the RequireJS optimizer script I added a\nrelease script to modify my build.js and index.html files to utilize a\nspecified build directory. And, node is just cool, right?\n\nI would like tell an anecdote from my youth to summarize the experience I have\nusing this combination of JavaScript libraries and frameworks. When I was a\nkid I loved wearing Docs (Dr. Martens). These are warehouse style boots with\nair-cushioned soles (dubbed **Bouncing Soles**). A kid I knew wrote a song, "I\ncan climb mountains, I can climb rocks, I can do anything when I wear my\nDocs." These bouncing soles give a sense of invincibility to a young man full\nof spit and well you know. I feel the same way when developing with Backbone,\nUnderscore, Node.js, AMD, Jasmine, jQuery and RequireJS. Perhaps I should\nwrite a song, "I can pass my specs, I can mock my requests, I can build\nanything with Backbone, Underscore, jQuery and RequireJS". On second thought,\nI'll spare you the pain of my lack of musical talent. to wrap it up happy\ndeveloper build awesome stuff, and these group of libraries and the community\nbehind them makes me a kick-xxx happy developer, seriously.\n	Currently I am developing a JavaScript application using open source\nframeworks and libraries. Included the mix are… \n[jQuery Mobile](http://jquerymobile.com/),\n[Underscore.js](http://documentcloud.github.com/underscore/),\n[Backbone.js](http://documentcloud.github.com/backbone/),\n[RequireJS](http://requirejs.org/),\n[mustache.js](https://github.com/janl/mustache.js),\n[Node.js](http://nodejs.org/), [Jasmine](http://pivotal.github.com/jasmine/),\n[Sinon.JS](http://sinonjs.org/), [Jasmine-jQuery](https://github.com/velesin/jasmine-jquery), \nand the [Asynchronous Module Definition (AMD)](https://github.com/amdjs/amdjs-api/wiki/AMD)\nspecification. The web application is backed with a RESTful API. \nSo, in researching on all the JavaScript based MVC type of frameworks, comparing\n[Knockout](http://knockoutjs.com/), [Ember.js](http://emberjs.com/)\n(Sproutcore 2), [JavaScript MVC](http://javascriptmvc.com/), and\n**Backbone.js** I ended up selecting Backbone as my first choice. The\ncommunity of developers using Backbone appears very active, there are plenty\nof blog posts, articles, tutorials, and videos on how to author code using\nBackbone.	developing-a-modular-javascript-application-with-requirejs-and-backbonejs	Developing a Modular JavaScript Application With RequireJS and Backbone.js	2012-02-03	2015-05-07 17:03:21.343104	2015-05-07 17:03:21.343104	1	'/)':105B,1129C '/),':31B,43B,51B,59B,101B,112B '/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html).':1217C '/2012/02/01/optimize-and-build-a-backbone-js-javascript-application-with-require-js-using-packages/)':385C '/amdjs/amdjs-api/wiki/amd)':74B '/amdjs/backbone)':1059C '/amdjs/underscore)':1064C '/backbone/),':39B '/blog/2011/12/tutorial-html-templates-with-mustache-js/).':636C '/demos/1.0.1/docs/about/getting-started.html).':429C '/docs/#server)':1210C '/docs/optimization.html).':1307C '/docs/why.html),':1024C '/docs/whyamd.html)':910C '/introducing-bdd/)':1096C '/janl/mustache.js),':47B '/jasmine/),':55B,1118C '/pivotal/jasmine/wiki/spies)':1223C '/pixelhandler/backbone-fundamentals)':343C '/underscore/),':35B '/velesin/jasmine-jquery)':1124C '/velesin/jasmine-jquery),':65B '2':107B 'abil':234C 'abl':256C 'across':438C 'activ':132B 'ad':347C,1331C,1338C 'add':705C,769C,1237C 'adopt':173C,972C,979C,1010C 'air':1402C 'air-cushion':1401C 'also':194C,245C,449C,666C,689C,872C 'amd':71B,217C,907C,925C,1013C,1045C,1052C,1462C 'amount':171C 'anecdot':1366C 'anyth':1426C,1486C 'api':84B,849C,928C,1048C 'appear':130B 'applic':5A,16B,78B,190C,215C,370C,410C,419C,508C,589C,844C,885C,1198C,1214C 'approach':1172C 'argu':1027C 'articl':139B,548C 'asynchron':68B,693C 'attract':229C 'author':146B,236C,489C,1293C 'awesom':1515C 'back':80B,845C 'backbon':119B,129B,149B,280C,294C,368C,516C,661C,667C,785C,815C,834C,854C,1459C,1488C 'backbone.js':9A,36B,114B,339C,644C,1056C,1213C 'balanc':580C 'base':92B,464C,642C,746C,764C,1086C,1243C 'basic':555C 'bdd':1093C 'becom':212C,992C,1004C 'began':405C,421C,488C 'behavior':694C,809C,1090C,1183C,1188C 'behavior-driven':1089C 'behind':1525C 'better':994C 'blog':137B,382C 'blueprint':485C 'blueprint-ish':484C 'book':338C 'boot':1399C 'borrow':825C 'bottom':830C 'bounc':1406C,1433C 'box':540C,792C,857C 'break':1175C 'broke':264C 'build':188C,248C,354C,366C,423C,462C,868C,1300C,1353C,1485C,1514C 'build.js':1345C 'built':301C,514C 'callback':681C,732C,778C 'came':1288C 'child':749C,762C,782C 'choic':123B 'chrome':332C 'climb':1417C,1421C 'cloud':1320C 'code':147B,193C,242C,325C,394C,888C 'coenraets.org':635C 'coenraets.org/blog/2011/12/tutorial-html-templates-with-mustache-js/).':634C 'collect':276C,665C,711C,729C,794C 'combin':1113C,1378C 'come':734C 'common':271C,305C,434C,836C 'communiti':125B,158C,177C,956C,1524C 'compar':97B 'compat':221C,1053C,1286C 'complement':660C 'complet':1249C 'compon':201C,435C,499C,697C,878C 'concept':551C 'content':675C 'cool':1359C 'cours':1100C 'crazi':615C 'cross':1284C 'current':10B,685C,893C,932C 'cushion':1403C 'dannorth.net':1095C 'dannorth.net/introducing-bdd/)':1094C 'data':621C,842C 'data-driven':841C 'defer':679C,707C,724C 'defin':278C,561C,761C 'definit':70B 'depend':243C,648C 'design':585C 'develop':1A,13B,127B,157C,176C,406C,639C,839C,882C,966C,981C,1008C,1074C,1092C,1110C,1171C,1258C,1267C,1281C,1457C,1513C,1534C 'devic':443C,1279C 'differ':921C 'directori':272C,285C,299C,1354C 'discov':818C,1101C,1169C 'discoveri':1082C 'doc':1392C,1431C 'documentcloud.github.com':34B,38B 'documentcloud.github.com/backbone/),':37B 'documentcloud.github.com/underscore/),':33B 'dom':616C 'dr':1393C 'driven':843C,1091C,1109C,1266C 'dub':1405C 'e.g':330C 'easier':1005C 'effici':244C 'effort':413C 'either':669C 'ember.js':102B 'emberjs.com':104B 'emberjs.com/)':103B 'embrac':1260C 'end':116B,575C,1257C 'enjoy':154C,1069C,1140C 'ensur':1283C 'entir':209C 'environ':1321C 'especi':662C 'even':914C,993C 'event':1246C 'exact':1161C 'exampl':702C 'execut':205C,1273C,1329C 'expect':1182C 'experi':1373C 'explan':349C 'extend':290C,853C 'fair':170C,862C 'fake':1205C 'featur':251C,497C,525C 'feature/component':328C 'feel':1452C 'file':267C,1348C 'filter':664C 'find':160C,967C,1071C,1151C 'fine':913C 'finish':214C 'first':122B,554C 'fit':929C 'fixtur':1241C 'fork':334C,1050C 'forward':864C 'found':623C 'fragment':617C 'framework':20B,96B,512C,532C,641C,700C,1383C 'freez':395C 'front':1256C 'front-end':1255C 'full':1444C 'function':292C,591C,947C,1227C 'fundament':340C 'funner':610C 'futur':917C 'gave':431C 'generat':477C 'get':1141C 'github.com':46B,64B,73B,342C,1058C,1063C,1123C,1222C 'github.com/amdjs/amdjs-api/wiki/amd)':72B 'github.com/amdjs/backbone)':1057C 'github.com/amdjs/underscore)':1062C 'github.com/janl/mustache.js),':45B 'github.com/pivotal/jasmine/wiki/spies)':1221C 'github.com/pixelhandler/backbone-fundamentals)':341C 'github.com/velesin/jasmine-jquery)':1122C 'github.com/velesin/jasmine-jquery),':63B 'give':231C,835C,873C,1435C 'good':798C,819C,969C,984C,1016C 'great':625C,959C,996C 'green':1145C 'group':323C,1043C,1519C 'guess':1159C 'handi':458C,535C,736C,1291C 'happi':1512C,1533C 'hardest':1155C 'hautelooktech.com':381C 'help':559C,566C,690C,1173C 'high':572C 'host':1317C 'howev':526C,960C 'html':630C 'identifi':582C 'implement':329C,1012C 'includ':23B,503C,813C 'independ':1195C 'index.html':1347C 'invinc':1439C 'ish':486C 'iter':753C 'jasmin':52B,61B,1115C,1121C,1218C,1235C,1463C 'jasmine-jqueri':60B,1234C 'javascript':4A,15B,91B,108B,156C,369C,890C,949C,1073C,1380C 'javascriptmvc.com':111B 'javascriptmvc.com/),':110B 'jqueri':27B,62B,425C,454C,522C,670C,677C,688C,1120C,1236C,1242C,1464C,1490C 'jquery-jasmin':1119C 'jquerymobile.com':30B,428C 'jquerymobile.com/),':29B 'jquerymobile.com/demos/1.0.1/docs/about/getting-started.html).':427C 'js':1046C 'json':602C 'kick':1531C 'kick-xxx':1530C 'kid':1388C,1409C 'kind':613C 'knew':1411C 'knockout':98B 'knockoutjs.com':100B 'knockoutjs.com/),':99B 'know':1450C 'lack':1504C 'lather':1104C 'layer':607C 'lead':987C 'least':1137C 'less':596C 'librari':22B,167C,210C,226C,403C,598C,652C,933C,1065C,1079C,1131C,1381C,1521C 'like':286C,1363C 'line':831C 'll':1497C 'load':196C 'logic':595C 'logic-less':594C 'look':482C 'love':1390C 'm':1039C 'make':1527C 'man':1443C 'manag':240C,692C 'mani':164C,545C,950C 'manipul':618C 'marten':1394C 'matcher':1244C 'matter':564C 'method':777C 'methodolog':1097C 'mix':25B,1077C 'mobil':28B,409C,426C,455C,468C,479C,506C,523C,531C,553C,1278C 'mock':1480C 'model':274C 'modifi':1343C 'modul':69B,197C,238C,260C,296C,308C,317C,360C,1019C,1047C 'modular':3A,192C,884C,887C 'mountain':1418C 'much':609C 'music':1506C 'mustach':599C 'mustache.js':44B,633C 'mvc':93B,109B 'need':203C,668C,805C,880C,944C,1309C 'nice':579C,964C,1203C,1271C 'node':1356C 'node.js':48B,1287C,1461C 'nodejs.org':50B 'nodejs.org/),':49B 'notic':937C 'object':182C,277C,682C,708C,716C,730C,733C,740C,774C 'often':817C 'one':178C,934C 'onlin':801C,821C 'open':18B,336C 'oper':926C 'optim':250C,356C,364C,1304C,1335C 'option':755C,767C 'organ':258C,268C 'overload':445C 'packag':262C,306C,311C,322C,358C,374C 'pain':1501C 'parent':772C 'part':1156C 'partial':744C 'pass':756C,1147C,1475C 'pattern':837C,901C 'perhap':1066C,1467C 'pivotal.github.com':54B,1117C 'pivotal.github.com/jasmine/),':53B,1116C 'platform/device':1285C 'plenti':135B,899C 'pop':952C 'post':138B,376C,627C,800C 'power':1133C 'practic':1111C 'prep':1298C 'primari':181C 'prioriti':573C 'process':1262C 'program':807C 'programmat':742C 'project':185C 'properti':725C 'prototyp':416C,492C,529C 'prove':1163C,1180C 'provid':788C,894C,1201C 'put':568C 'r.js':1303C 'rang':441C 'rapid':415C 'rather':206C 'realli':563C,1139C 'reason':152C 'recent':541C 'red':1143C 'refresh':162C 'releas':1340C 'render':601C,620C,718C,743C,776C,780C 'repeat':1106C 'replac':1225C 'request':1482C 'requir':314C,583C,728C 'require.js':372C 'requirej':7A,40B,223C,230C,253C,1021C,1334C,1466C,1492C 'requirejs.org':42B,909C,1023C,1306C 'requirejs.org/),':41B 'requirejs.org/docs/optimization.html).':1305C 'requirejs.org/docs/why.html),':1022C 'requirejs.org/docs/whyamd.html)':908C 'research':87B 'resid':319C 'resolut':721C 'rest':83B,848C 'right':536C,1360C 'rins':1105C 'robust':655C 'rock':1422C 'roller':452C 'rout':524C 'said':990C 'say':1135C 'screen':558C 'script':1296C,1328C,1336C,1341C 'second':1494C 'section':363C,378C 'see':361C 'seem':976C 'select':118B 'sens':1437C 'serious':1535C 'server':1207C,1326C 'server-sid':1325C 'servic':606C 'set':656C 'shell':1295C 'side':1327C 'simpler':1185C 'sinc':509C 'singl':304C 'sinon.js':56B,1126C,1200C 'sinonjs.org':58B,1128C,1209C 'sinonjs.org/)':1127C 'sinonjs.org/),':57B 'sinonjs.org/docs/#server)':1208C 'site':331C,469C,491C,507C,511C,1313C 'sketch':474C 'skin':465C 'small':557C 'sole':1404C,1407C,1434C 'solid':874C,1251C 'solut':799C,820C,951C,970C,985C,991C,1002C,1017C,1029C,1036C,1085C,1165C,1178C 'sometim':1153C 'song':1414C,1472C 'sourc':19B,337C 'spare':1498C 'spec':1477C 'specif':75B,200C,218C,327C 'specifi':1352C 'spend':389C 'spi':1220C,1231C,1247C 'spit':1446C 'sproutcor':106B 'standard':896C,918C 'straight':863C 'strike':577C 'structur':875C 'stuff':1516C 'style':1398C 'suit':1252C 'summar':1371C 'sweet':1239C 'sync':287C 'talent':1507C 'talk':546C 'team':433C 'tell':1364C 'templat':597C,631C,745C 'test':448C,1108C,1130C,1149C,1192C,1212C,1265C,1275C 'test-driven':1107C,1264C 'theme':451C,480C 'thing':935C 'though':784C,915C,1102C 'thought':1495C 'tinnedfruit.com':1216C 'tinnedfruit.com/2011/03/03/testing-backbone-apps-with-jasmine-sinon.html).':1215C 'tool':459C,658C 'top':870C 'topic':346C 'tri':399C 'tutori':140B,626C 'type':94B 'underscor':1460C,1489C 'underscore.js':32B,651C,1061C 'unit':1186C 'us':446C 'usabl':569C,586C 'use':17B,128B,148B,279C,357C,373C,520C,592C,629C,737C,904C,982C,999C,1020C,1040C,1088C,1301C,1376C 'util':288C,1350C 'various':237C,748C,1277C 'verifi':1194C 'version':686C,1054C 'viabl':1035C 'video':142B 'view':275C,715C,739C,750C,759C,763C,773C,783C,795C 'warehous':1397C 'way':924C,1455C 'wear':1391C,1429C 'web':77B,418C,605C 'week':392C 'well':387C,930C,1448C 'wide':440C 'within':174C,261C,698C,713C 'without':444C 'work':397C,437C,494C 'would':962C,975C,986C,1003C,1026C,1362C 'wrap':1509C 'write':1470C 'wrote':1412C 'www.hautelooktech.com':384C 'www.hautelooktech.com/2012/02/01/optimize-and-build-a-backbone-js-javascript-application-with-require-js-using-packages/)':383C 'xhr':1206C 'xxx':1532C 'yet':860C,1166C 'young':1442C 'youth':1369C 'zepto':672C	published	pixelhandler
22	_Screencast Demo_  \n<video poster="http://pixelhandler.com/uploads/html5-video-block-demo.png" width="864" height="540" controls>\n  <source src="http://pixelhandler.com/uploads/videojs_player_demo.mp4" type='video/mp4' />\n</video>\n[Video File](http://pixelhandler.com/uploads/videojs_player_demo.mp4)\n\n*Notes:* For info on HTML5 video see : <http://diveintohtml5.info/video.html> which has a tutorial for video conversion for web using the (free) Miro Video Converter. As HTML5 video implementations vary per web browser, to use this block you will need to prepare (4) files: .mp4, .ogv, .webm and have a preview or "poster" image. Also, if needed, Flowplayer (free) plays your .mp4 as flash media content.\n\n*CMS Block supports videos playback using the following supporting files*\n\n1. Preview Image: Choose a 'Poster' image, file with a .png or .jpg extension; e.g. still frame from video.\n2. MPEG 4 (.mp4): Choose a file with a .mp4 extension as common HTML5 video format; also used for flash fallback\n3. Ogg video (.ogv): Choose a file with a .ogv extension; "Theora" file, HTML5 video format e.g. for FireFox\n4. WebM video (.webm): Choose a file with a .webm extension; HTML5 video format e.g. for MSIE 9+\n5. Maximum Dimensions: Input the maximum width and height in pixels\n\n*Links and References:*\n\n* Source code : <https://github.com/pixelhandler/videojs_player>\n* CMS: <http://www.concrete5.org/> | add-on: <http://www.concrete5.org/marketplace/addons/video-js-player/>\n* HTML5 video: <http://diveintohtml5.info/video.html>\n* Video Converter: <http://www.mirovideoconverter.com/>\n* VideoJS: JavaScript for HTML5 video player - <http://videojs.com/>\n* Flowplayer free: Flash fallback for playing videos for browsers that do not support `<video>` element - <http://flowplayer.org/index.html>\n* Alternate location to view tutorial : <http://www.vimeo.com/28320066>\n	## Screencast: Demo of HTML5 video used in a CMS block\n\n**videojs_player package as add-on for [Concrete5.org](http://www.concrete5.org/marketplace/addons/) CMS**\n\nThe screencast below shows how to use the videojs_player package and also\nnotes the tools used to prepare video for the block.	html5-video-package-for-cms-using-videojs	HTML5 Video Package for CMS Using VideoJS	2011-08-29	2015-05-07 17:03:21.362026	2015-05-07 17:03:21.362026	1	'/28320066':280C '/index.html':272C '/marketplace/addons/)':29B '/marketplace/addons/video-js-player/':240C '/pixelhandler/videojs_player':232C '/uploads/videojs_player_demo.mp4)':60C '/video.html':70C,245C '1':137C '2':156C '3':177C '4':103C,158C,196C '5':214C '9':213C 'add':23B,236C 'add-on':22B,235C 'also':43B,115C,172C 'altern':273C 'block':17B,53B,97C,128C 'browser':93C,264C 'choos':140C,160C,181C,200C 'cms':5A,16B,30B,127C,233C 'code':229C 'common':168C 'concrete5.org':26B 'content':126C 'convers':77C 'convert':85C,247C 'demo':9B,55C 'dimens':216C 'diveintohtml5.info':69C,244C 'diveintohtml5.info/video.html':68C,243C 'e.g':151C,193C,210C 'element':269C 'extens':150C,166C,187C,206C 'fallback':176C,259C 'file':57C,104C,136C,144C,162C,183C,189C,202C 'firefox':195C 'flash':124C,175C,258C 'flowplay':118C,256C 'flowplayer.org':271C 'flowplayer.org/index.html':270C 'follow':134C 'format':171C,192C,209C 'frame':153C 'free':82C,119C,257C 'github.com':231C 'github.com/pixelhandler/videojs_player':230C 'height':222C 'html5':1A,11B,65C,87C,169C,190C,207C,241C,252C 'imag':114C,139C,143C 'implement':89C 'info':63C 'input':217C 'javascript':250C 'jpg':149C 'link':225C 'locat':274C 'maximum':215C,219C 'media':125C 'miro':83C 'mp4':105C,122C,159C,165C 'mpeg':157C 'msie':212C 'need':100C,117C 'note':44B,61C 'ogg':178C 'ogv':106C,180C,186C 'packag':3A,20B,41B 'per':91C 'pixel':224C 'pixelhandler.com':59C 'pixelhandler.com/uploads/videojs_player_demo.mp4)':58C 'play':120C,261C 'playback':131C 'player':19B,40B,254C 'png':147C 'poster':113C,142C 'prepar':49B,102C 'preview':111C,138C 'refer':227C 'screencast':8B,32B,54C 'see':67C 'show':34B 'sourc':228C 'still':152C 'support':129C,135C,268C 'theora':188C 'tool':46B 'tutori':74C,277C 'use':6A,13B,37B,47B,80C,95C,132C,173C 'vari':90C 'video':2A,12B,50B,56C,66C,76C,84C,88C,130C,155C,170C,179C,191C,198C,208C,242C,246C,253C,262C 'videoj':7A,18B,39B,249C 'videojs.com':255C 'view':276C 'web':79C,92C 'webm':107C,197C,199C,205C 'width':220C 'www.concrete5.org':28B,234C,239C 'www.concrete5.org/marketplace/addons/)':27B 'www.concrete5.org/marketplace/addons/video-js-player/':238C 'www.mirovideoconverter.com':248C 'www.vimeo.com':279C 'www.vimeo.com/28320066':278C	published	pixelhandler
33	\n    \n    // '$' is prototype library\n    (function(){\n    \t// use location for facebook like button\n    \tvar $pg = {\n    \t\turl : unescape(document.location.href),\n    \t\tsocial : $('social') // id to place like button in\n    \t}\n    \t$pg.fb = '&lt;div id=&quot;facebook&quot;&gt;&lt;iframe';\n    \t$pg.fb += ' src=&quot;http://www.facebook.com/plugins/like.php?href=';\n    \t$pg.fb += $page.url;\n    \t$pg.fb += '&amp;amp;layout=button_count&amp;amp;show_faces=true&amp;amp;';\n    \t$pg.fb += 'width=90&amp;amp;action=like&amp;amp;colorscheme=light&amp;amp';\n    \t$pg.fb += 'height=30&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=';\n    \t$pg.fb += '&quot;border:none; overflow:hidden; width:90px; ';\n    \t$pg.fb += 'height:30px;&quot; allowTransparency=&quot;true&quot;&gt;';\n    \t$pg.fb += '&lt;/iframe&gt;&lt;/div&gt;';\n    \tif ($pg.social) {\n    \t\t$pg.social.insert({ 'bottom' : $pg.fb });\n    \t};\n    })($);\n    \n    \n    \n    <div id="social"></div>\n    \n	If you are not using the full facebook .js api then here is a lightweight\nscript to insert a facebook like button into a div (with id, 'social' ) [this\nexample is using prototype]. facebook like button (insert_facebook_like.js)\n[download](/downloads/code/javascript/insert_facebook_like.js)	insert-facebook-like-button-with-current-page-url	Insert Facebook Like Button With Current Page's URL	2010-08-14	2015-05-07 17:03:21.421499	2015-05-07 17:03:21.421499	1	'/div':126C '/downloads/code/javascript/insert_facebook_like.js':48B '/iframe':125C '/plugins/like.php?href='';':81C '0':110C '30':106C '30px':121C '90':96C '90px':118C 'action':98C 'allowtranspar':122C 'amp':85C,89C,93C,97C,100C,103C 'api':19B 'border':113C 'bottom':130C 'button':4A,31B,45B,58C,70C,87C 'colorschem':101C 'count':88C 'current':6A 'div':34B,73C 'document.location.href':63C 'download':47B 'exampl':39B 'face':91C 'facebook':2A,17B,29B,43B,56C,75C 'framebord':109C 'full':16B 'function':52C 'height':105C,120C 'hidden':116C 'id':36B,66C,74C 'ifram':76C 'insert':1A,27B 'insert_facebook_like.js':46B 'js':18B 'layout':86C 'librari':51C 'light':102C 'lightweight':24B 'like':3A,30B,44B,57C,69C,99C 'locat':54C 'none':114C 'overflow':115C 'page':7A 'page.url':83C 'pg':60C 'pg.fb':72C,77C,82C,84C,94C,104C,112C,119C,124C,131C 'pg.social':128C 'pg.social.insert':129C 'place':68C 'prototyp':42B,50C 'script':25B 'scroll':107C 'show':90C 'social':37B,64C,65C 'src':78C 'style':111C 'true':92C,123C 'unescap':62C 'url':9A,61C 'use':14B,41B,53C 'var':59C 'width':95C,117C 'www.facebook.com':80C 'www.facebook.com/plugins/like.php?href='';':79C	published	pixelhandler
23	\n  * Ruby gems like capistrano for deployment,\n  * Git (SCM) to manage both the code to generate my site and generated code,\n  * local development using Ruby to build my now Jekyll powered website,\n  * and my favorite text editor, TextMate, to generate, edit and preview the content\n\n… the choice of leaving WordPress for my personal blog/site and using\nOctopress (Ruby, Jekyll) and some using handy tools like Git and Capistrano\njust felt right. And yeah my site is now static HTML, Javascript, CSS and not\nusing any PHP, MySQL, and I like it that way.\n\nAnd to boot any other content, or code (e.g. demos, apps) that I choose to add\nto my site, doesn't need to be part of any CMS and can deploy along site the\nblog.\n\nA few other things that just make me happy are:\n\n  * no WordPress updates when a security issues is discovered\n  * The Octopress plugins are cool: Gist Tag, Render Partial, Github Style codeblock, Category Generator \n    * I can include code snippets from a download folder\n    * Or import a Gist from github.com\n  * Since the site is generated with rake tasks, resulting in Web standards code (HTML, CSS, Javascript) I can test preview the site on my localhost easily…\n\nWell that sums up what made me happy about the switch.\n	Over the weekend I noticed a few coding bloggers had switched to\n[Octopress](http://octopress.org/docs/). I noticed the advantages for a\ndeveloper who doesn't need a content management system (CMS) using web forms\nto update a website. It may sound like I am reverting to the way people\nblogged 10 years ago with a static HTML website; but is not at all the case.\nWith modern programming tools like…	a-few-reasons-i-decided-to-switch-to-octopress-from-wordress	A Few Reasons I Decided to Switch to Octopress (From Wordress)	2011-08-08	2015-05-07 17:03:21.366804	2015-05-07 17:03:21.366804	1	'/docs/).':27B '10':63B 'add':190C 'advantag':31B 'ago':65B 'along':206C 'app':185C 'blog':62B,209C 'blog/site':135C 'blogger':20B 'boot':177C 'build':108C 'capistrano':86C,149C 'case':77B 'categori':241C 'choic':128C 'choos':188C 'cms':43B,202C 'code':19B,95C,102C,182C,246C,270C 'codeblock':240C 'content':40B,126C,180C 'cool':233C 'css':162C,272C 'decid':5A 'demo':184C 'deploy':88C,205C 'develop':34B,104C 'discov':228C 'doesn':36B,194C 'download':250C 'e.g':183C 'easili':283C 'edit':122C 'editor':118C 'favorit':116C 'felt':151C 'folder':251C 'form':46B 'gem':84C 'generat':97C,101C,121C,242C,262C 'gist':234C,255C 'git':89C,147C 'github':238C 'github.com':257C 'handi':144C 'happi':218C,291C 'html':69B,160C,271C 'import':253C 'includ':245C 'issu':226C 'javascript':161C,273C 'jekyl':111C,140C 'leav':130C 'like':54B,82B,85C,146C,171C 'local':103C 'localhost':282C 'made':289C 'make':216C 'manag':41B,92C 'may':52B 'modern':79B 'mysql':168C 'need':38B,196C 'notic':16B,29B 'octopress':9A,24B,138C,230C 'octopress.org':26B 'octopress.org/docs/).':25B 'part':199C 'partial':237C 'peopl':61B 'person':134C 'php':167C 'plugin':231C 'power':112C 'preview':124C,277C 'program':80B 'rake':264C 'reason':3A 'render':236C 'result':266C 'revert':57B 'right':152C 'rubi':83C,106C,139C 'scm':90C 'secur':225C 'sinc':258C 'site':99C,156C,193C,207C,260C,279C 'snippet':247C 'sound':53B 'standard':269C 'static':68B,159C 'style':239C 'sum':286C 'switch':7A,22B,294C 'system':42B 'tag':235C 'task':265C 'test':276C 'text':117C 'textmat':119C 'thing':213C 'tool':81B,145C 'updat':48B,222C 'use':44B,105C,137C,143C,165C 'way':60B,174C 'web':45B,268C 'websit':50B,70B,113C 'weekend':14B 'well':284C 'wordpress':131C,221C 'wordress':11A 'yeah':154C 'year':64B	published	pixelhandler
24	So I...\n\n  1. Ran Software Update,\n  2. backed up with Time Machine,\n  3. repaired disk permissions,\n  4. and verified my disk.\n  5. Then purchased Lion in the app store on my mac.\n  6. Made a backup of my /private/etc/php.ini file\n  7. Installed Lion\n  8. Ran Software Update again, e.g. for Java updates\nNext, I checked my localhost/phpmyadmin and checked my phpinfo.php files. The\narticle 'Fixing mysql in OS X Lion upgrade' (link above) was correct. I needed\nto:\n\n  1. Place my copy of php.ini back to its original location at /private/etc/php.ini\n  2. Update the php.ini file to change mysqli setting… ;mysqli.default_socket = /var/mysql/mysql.sock mysqli.default_socket = /tmp/mysql.sock\nMy current LAMP dev projects seem just fine so far. Notes on localhost\nenvironment on Lion :\n\n  * mysql -version mysql  Ver 14.14 Distrib 5.5.12, for osx10.6 (i386) using readline 5.1\n  * php -version PHP 5.3.6 with Suhosin-Patch (cli) (built: Jun 16 2011 22:26:57)\n  * httpd -v Server version: Apache/2.2.19 (Unix)\n	Today I upgraded to Lion (was on Snow Leopard). My main concern was that the\nOSX (native) PHP would break and that MySQL server (community) installation\nwould not be compatible. \n\nI found an article on the topic at :\n[http://www.september28.co.uk/blog/2011/07/20/fixing-mysql-in-os-x-lion-upgrade/](http://www.september28.co.uk/blog/2011/07/20/fixing-mysql-in-os-x-lion-upgrade/) which eased my nerves.	osx-upgrade-to-lion-went-well-and-so-far-native-php-and-mysql-server-playing-nice	OSX Upgrade to Lion Went Well, and So Far Native PHP and MySQL Server Playing Nice	2011-07-21	2015-05-07 17:03:21.371409	2015-05-07 17:03:21.371409	1	'/blog/2011/07/20/fixing-mysql-in-os-x-lion-upgrade/](http://www.september28.co.uk/blog/2011/07/20/fixing-mysql-in-os-x-lion-upgrade/)':57B '/private/etc/php.ini':100C,152C '/tmp/mysql.sock':167C '/var/mysql/mysql.sock':164C '1':64C,140C '14.14':188C '16':208C '2':68C,153C '2011':209C '22':210C '26':211C '3':74C '4':78C '5':83C '5.1':196C '5.3.6':200C '5.5.12':190C '57':212C '6':94C '7':102C '8':105C 'apache/2.2.19':217C 'app':89C 'articl':50B,125C 'back':69C,146C 'backup':97C 'break':36B 'built':206C 'chang':159C 'check':116C,120C 'cli':205C 'communiti':41B 'compat':46B 'concern':28B 'copi':143C 'correct':136C 'current':169C 'dev':171C 'disk':76C,82C 'distrib':189C 'e.g':110C 'eas':59B 'environ':181C 'far':9A,177C 'file':101C,123C,157C 'fine':175C 'fix':126C 'found':48B 'httpd':213C 'i386':193C 'instal':42B,103C 'java':112C 'jun':207C 'lamp':170C 'leopard':25B 'link':133C 'lion':4A,21B,86C,104C,131C,183C 'localhost':180C 'localhost/phpmyadmin':118C 'locat':150C 'mac':93C 'machin':73C 'made':95C 'main':27B 'mysql':13A,39B,127C,184C,186C 'mysqli':160C 'mysqli.default':162C,165C 'nativ':10A,33B 'need':138C 'nerv':61B 'next':114C 'nice':16A 'note':178C 'origin':149C 'os':129C 'osx':1A,32B 'osx10.6':192C 'patch':204C 'permiss':77C 'php':11A,34B,197C,199C 'php.ini':145C,156C 'phpinfo.php':122C 'place':141C 'play':15A 'project':172C 'purchas':85C 'ran':65C,106C 'readlin':195C 'repair':75C 'seem':173C 'server':14A,40B,215C 'set':161C 'snow':24B 'socket':163C,166C 'softwar':66C,107C 'store':90C 'suhosin':203C 'suhosin-patch':202C 'time':72C 'today':17B 'topic':53B 'unix':218C 'updat':67C,108C,113C,154C 'upgrad':2A,19B,132C 'use':194C 'v':214C 'ver':187C 'verifi':80C 'version':185C,198C,216C 'well':6A 'went':5A 'would':35B,43B 'www.september28.co.uk':56B 'www.september28.co.uk/blog/2011/07/20/fixing-mysql-in-os-x-lion-upgrade/](http://www.september28.co.uk/blog/2011/07/20/fixing-mysql-in-os-x-lion-upgrade/)':55B 'x':130C	published	pixelhandler
30	\n    \n    (function($) {\n    /**\n     *  .matchHeight()\n     *    - match heights of multiple columns that use css layout with floating elements\n     */\n    $.fn.matchHeight = function(options) {\n        // set the containing element and set elements used as columns\n        var defaults = {\n            container : '.main',\n            columns   : 'div',\n            excluded  : '.dontChangeThis, .dontChangeThat',\n            fixed     : 200\n        };\n        var opts = $.extend(defaults, options);\n        return this.each(function() {\n            var _ = { self : $(this) };\n            _.px = {};\n            _.cols = $(opts.container+' > '+opts.columns);\n            _.cols.each(function(index) {\n                _.px.index = $(this).height();\n                if ($(opts.excluded).length>0) {\n                    _.colheight = opts.fixed;\n                    return;\n                } else {\n                    if (index < 1) {\n                        _.colheight = _.px.index;\n                    } else {\n                        if (_.px.index > _.colheight) {\n                            _.colheight = _.px.index;\n                        }\n                    }\n                }\n            }).each(function(index) {\n                $(this).css({ height : _.colheight });\n            });\n        });\n    };\n    })(jQuery);\n    \n    //\n    // Call the plugin on a containing layout element with multiple columns\n    //\n    \n    /**\n     * Stuff to do as soon as the DOM is ready\n     *  - enable plugin behavior(s)\n     */\n    $(function() {\n        $('.main-container')matchHeight({\n                    container : '.main',\n                    columns   : 'div.cols',\n                    excluded  : 'body.page2, div.noColumns',\n                    fixed  : 200\n         });\n        // or us the defaults\n        // $('.container').matchHeight();\n    });\n	jQuery plugin to line up columns in a CSS layout with floating divs. This code\nhas an option to use a fixed height instead of the greatest height among the\ncolumn elements by setting a string as a (excluded) selector to indicate when\nto use the fixed height.  Call the plugin on a containing layout element with\nmultiple columns	jquery-plugin-to-matchheight-of-multiple-columns-with-floating-elements	jQuery Plugin to 'matchHeight' of Multiple Columns With Floating Elements	2010-08-26	2015-05-07 17:03:21.408344	2015-05-07 17:03:21.408344	1	'0':132C '1':139C '200':107C,194C 'among':39B 'behavior':179C 'body.page2':191C 'call':59B,156C 'code':25B 'col':120C 'colheight':133C,140C,145C,146C,154C 'cols.each':123C 'column':7A,16B,41B,69B,76C,96C,101C,166C,188C 'contain':64B,89C,99C,161C,184C,186C,199C 'css':19B,79C,152C 'default':98C,111C,198C 'div':23B,102C 'div.cols':189C 'div.nocolumns':192C 'dom':174C 'dontchangethat':105C 'dontchangethi':104C 'element':10A,42B,66B,83C,90C,93C,163C 'els':136C,142C 'enabl':177C 'exclud':49B,103C,190C 'extend':110C 'fix':32B,57B,106C,193C 'float':9A,22B,82C 'fn.matchheight':84C 'function':70C,85C,115C,124C,149C,181C 'greatest':37B 'height':33B,38B,58B,73C,128C,153C 'index':125C,138C,150C 'indic':52B 'instead':34B 'jqueri':1A,11B,155C 'layout':20B,65B,80C,162C 'length':131C 'line':14B 'main':100C,183C,187C 'main-contain':182C 'match':72C 'matchheight':4A,71C,185C,200C 'multipl':6A,68B,75C,165C 'opt':109C 'option':28B,86C,112C 'opts.columns':122C 'opts.container':121C 'opts.excluded':130C 'opts.fixed':134C 'plugin':2A,12B,61B,158C,178C 'px':119C 'px.index':126C,141C,144C,147C 'readi':176C 'return':113C,135C 'selector':50B 'self':117C 'set':44B,87C,92C 'soon':171C 'string':46B 'stuff':167C 'this.each':114C 'us':196C 'use':30B,55B,78C,94C 'var':97C,108C,116C	published	pixelhandler
32	## Create your proxy.php file\n\n    \n    \n    <?php\n    // Set your return content type\n    header('Content-type: text/html');\n    \n    // Website url to open\n    $daurl = 'htts://domain.com';\n    \n    // Get that website's content\n    $handle = fopen($daurl, "r");\n    \n    // If there is something, read and return\n    if ($handle) {\n        while (!feof($handle)) {\n            $buffer = fgets($handle, 4096);\n            echo $buffer;\n        }\n        fclose($handle);\n    }\n    ?>\n    \n\n### Call your proxy file with AJAX using jQuery\n\n    \n    \n    // requires jQuery $\n    $(function(){ \n    \t// you will need a proxy script to load remote content\n    \tvar proxy = 'proxy.php'; \n    \t$('div.container').hide();\n    \t$('div.container').load( proxy + ' div#id', function() {\n    \t\t$('div.container').show()\n    \t});\n    });\n    \n	To get around cross domain issues use a local proxy.php file to load the\nremote url that you would like to use on your domain and interact with AJAX.	use-proxy-file-with-php-to-load-a-url-from-remote-domain	Use Proxy File With PHP to Load a URL From Remote Domain	2010-08-14	2015-05-07 17:03:21.417484	2015-05-07 17:03:21.417484	1	'4096':87C 'ajax':41B,97C 'around':15B 'buffer':84C,89C 'call':92C 'content':50C,54C,67C,112C 'content-typ':53C 'creat':42C 'cross':16B 'daurl':61C,70C 'div':121C 'div.container':116C,118C,124C 'domain':12A,17B,37B 'domain.com':62C 'echo':88C 'fclose':90C 'feof':82C 'fget':85C 'file':3A,23B,45C,95C 'fopen':69C 'function':102C,123C 'get':14B,63C 'handl':68C,80C,83C,86C,91C 'header':52C 'hide':117C 'id':122C 'interact':39B 'issu':18B 'jqueri':99C,101C 'like':32B 'load':7A,25B,110C,119C 'local':21B 'need':105C 'open':60C 'php':5A,46C 'proxi':2A,94C,107C,114C,120C 'proxy.php':22B,44C,115C 'r':71C 'read':76C 'remot':11A,27B,111C 'requir':100C 'return':49C,78C 'script':108C 'set':47C 'show':125C 'someth':75C 'text/html':56C 'type':51C,55C 'url':9A,28B,58C 'use':1A,19B,34B,98C 'var':113C 'websit':57C,65C 'would':31B	published	pixelhandler
52	Starting to feel confident, I build out a new site in the agile style called prayerlife.net the concepts are similar twitter and 43things. This time I was working without a tutorial but referencing the _Agile_ book and searching the web and google group _Ruby on Rails: Talk_ for help along the way. I also tune in to podcasts: Railscast, Rubyology, and Learning Rails. In addition, I participate in a local usergroup, [OCRuby.com](http://ocruby.com), where I can ask questions and learn from others in realtime. At a meeting I learned from a presentation on using the console while demonstating 'Active Record'; this helped me to catch the key concepts of data models. **Lessons & tips:** The best way to learn is to… just build it. Get in touch with others who are learning as well. Also, connect with those who have programming experience. The podcasts are are great way to get past concepts that seem difficult. **Resources:** Podcast: Railscast, Rubyology, and Learning Rails \n\n* Books: Simply Rails 2, Agile Web Development with Rails\n* Usergroup: OCRuby.com\n* [Rails documentation](http://rubyonrails.org/documentation)\n\nSee more progress on: [Learn more about Ruby on Rails](http://www.43things.com/people/progress/billheaton/11129881)\n\n### UPDATE: I shut down rant.cc and prayerlife.net projects and no longer own the domains.	Learning Rails has been an awesome way to learn about programming; using the 'Rails' framework and opinions helped me to learn best practices and object oriented programming concepts.\n\n**How I did it:** I bought Simply Rails 2 and coded the example _digg_ like site, 'shovel'. Then got very excited about rails and bought the Agile Web Development with Rails book; and built the example store application. Since I'm a huge fan of twitter I built my own short URL site for tracking clicks on the links I post all around the web - rant.cc .	how-i-learn-more-about-ruby-on-rails	How I Learn More About Ruby on Rails	2009-06-08	2015-05-07 17:03:21.503402	2015-05-07 17:03:21.503402	1	'/documentation)':279C '/people/progress/billheaton/11129881)':292C '2':45B,267C '43things':125C 'activ':201C 'addit':167C 'agil':63B,115C,137C,268C 'along':152C 'also':156C,236C 'applic':74B 'around':99B 'ask':179C 'awesom':14B 'best':30B,217C 'book':68B,138C,264C 'bought':42B,61B 'build':108C,224C 'built':70B,84B 'call':117C 'catch':207C 'click':92B 'code':47B 'concept':36B,120C,210C,253C 'confid':106C 'connect':237C 'consol':198C 'data':212C 'demonst':200C 'develop':65B,270C 'difficult':256C 'digg':50B 'document':276C 'domain':306C 'exampl':49B,72B 'excit':57B 'experi':243C 'fan':80B 'feel':105C 'framework':23B 'get':226C,251C 'googl':144C 'got':55B 'great':248C 'group':145C 'help':26B,151C,204C 'huge':79B 'key':209C 'learn':3A,9B,17B,29B,164C,182C,191C,220C,233C,262C,284C 'lesson':214C 'like':51B 'link':95B 'local':172C 'longer':303C 'm':77B 'meet':189C 'model':213C 'new':111C 'object':33B 'ocruby.com':174C,175C,274C 'opinion':25B 'orient':34B 'other':184C,230C 'particip':169C 'past':252C 'podcast':160C,245C,258C 'post':97B 'practic':31B 'prayerlife.net':118C,299C 'present':194C 'program':19B,35B,242C 'progress':282C 'project':300C 'question':180C 'rail':8A,10B,22B,44B,59B,67B,148C,165C,263C,266C,272C,275C,289C 'railscast':161C,259C 'rant.cc':102B,297C 'realtim':186C 'record':202C 'referenc':135C 'resourc':257C 'rubi':6A,146C,287C 'rubyolog':162C,260C 'rubyonrails.org':278C 'rubyonrails.org/documentation)':277C 'search':140C 'see':280C 'seem':255C 'short':87B 'shovel':53B 'shut':295C 'similar':122C 'simpli':43B,265C 'sinc':75B 'site':52B,89B,112C 'start':103C 'store':73B 'style':116C 'talk':149C 'time':127C 'tip':215C 'touch':228C 'track':91B 'tune':157C 'tutori':133C 'twitter':82B,123C 'updat':293C 'url':88B 'use':20B,196C 'usergroup':173C,273C 'way':15B,154C,218C,249C 'web':64B,101B,142C,269C 'well':235C 'without':131C 'work':130C 'www.43things.com':291C 'www.43things.com/people/progress/billheaton/11129881)':290C	published	pixelhandler
35	    # Allows concatenation from files ending with .js and .css  \n    # In styles.combined.css use...\n    #   <!--#include file="reset.css" -->\n    #   <!--#include file="layout.css" -->\n    # these will included into this single file\n    \n    <FilesMatch ".combined.js">\n            Options +Includes\n            SetOutputFilter INCLUDES\n    </FilesMatch>\n    <FilesMatch ".combined.css">\n            Options +Includes\n            SetOutputFilter INCLUDES\n    </FilesMatch>	I like to keep CSS files named separately like ; reset.css, elements.css,\nclasses.css, layout.css and so on. Also, I like to keep jQuery plugins in\nindividual files. This apache directive allows me to combine .js and .css\nfiles into a single file. This is a great performance advantage, less http\nrequests on page load; see Google's best practices for tips on combining\nexternal [css](http://code.google.com/speed/page-speed/docs/rtt.html#CombineExternalCSS) and \n[js](http://code.google.com/speed/page-speed/docs/rtt.html#CombineExternalJS).	apache-directive-to-combine-js-and-css-files	Apache Directive to Combine .js and .css Files	2010-08-14	2015-05-07 17:03:21.429417	2015-05-07 17:03:21.429417	1	'/speed/page-speed/docs/rtt.html#combineexternalcss)':75B '/speed/page-speed/docs/rtt.html#combineexternaljs).':80B 'advantag':55B 'allow':38B,81C 'also':25B 'apach':1A,36B 'best':65B 'classes.css':20B 'code.google.com':74B,79B 'code.google.com/speed/page-speed/docs/rtt.html#combineexternalcss)':73B 'code.google.com/speed/page-speed/docs/rtt.html#combineexternaljs).':78B 'combin':4A,41B,70B 'concaten':82C 'css':7A,13B,44B,72B,89C 'direct':2A,37B 'elements.css':19B 'end':85C 'extern':71B 'file':8A,14B,34B,45B,49B,84C,99C 'googl':63B 'great':53B 'http':57B 'includ':95C,101C,103C,105C,107C 'individu':33B 'jqueri':30B 'js':5A,42B,77B,87C 'keep':12B,29B 'layout.css':21B 'less':56B 'like':10B,17B,27B 'load':61B 'name':15B 'option':100C,104C 'page':60B 'perform':54B 'plugin':31B 'practic':66B 'request':58B 'reset.css':18B 'see':62B 'separ':16B 'setoutputfilt':102C,106C 'singl':48B,98C 'styles.combined.css':91C 'tip':68B 'use':92C	published	pixelhandler
38	    \n    <!--[if lt IE 7 ]> <body class="ie6"> <![endif]-->\n    <!--[if IE 7 ]>\t\t<body class="ie7"> <![endif]-->\n    <!--[if IE 8 ]>\t\t<body class="ie8"> <![endif]-->\n    <!--[if IE 9 ]>\t\t<body class="ie9"> <![endif]-->\n    <!--[if (gt IE 9)|!(IE)]><!--> <body> <!--<![endif]-->\n    	If you have some time a great blog to browse is\n[paulirish.com](http://paulirish.com/) ; Paul Irish has a boilerplate project\nfor html5 that uses the following example to target specific web browsers\nusing a css class. CSS definitions and JavaScript behavior can be hooked into\nthe page referencing the classes, e.g. ie7, ie8, etc.	target-specific-browsers-with-css-class-on-body-element	Target Specific Browsers With Css Class on Body Element	2010-08-14	2015-05-07 17:03:21.443232	2015-05-07 17:03:21.443232	1	'/)':24B 'behavior':51B 'blog':17B 'bodi':8A 'boilerpl':29B 'brows':19B 'browser':3A,42B 'class':6A,46B,60B 'css':5A,45B,47B 'definit':48B 'e.g':61B 'element':9A 'etc':64B 'exampl':37B 'follow':36B 'great':16B 'hook':54B 'html5':32B 'ie7':62B 'ie8':63B 'irish':26B 'javascript':50B 'page':57B 'paul':25B 'paulirish.com':21B,23B 'paulirish.com/)':22B 'project':30B 'referenc':58B 'specif':2A,40B 'target':1A,39B 'time':14B 'use':34B,43B 'web':41B	published	pixelhandler
39	\n    \n    def importHTML\n      require 'open-uri'\n      @source = open(&quot;http://domain.com/some.html&quot;).read\n    end\n    \n    # uses a reference parameter when getting remote XML\n    def importXML\n      require 'open-uri'\n      @aclass = AClass.find(params[:id]) # expecting a param named ref\n      @content = open(&quot;http://domain.com&quot; + @aclass.ref + &quot;&amp;type=xml&quot;).read\n      respond_to do |format|\n        format.xml  { render :xml =&gt; @content }\n      end\n    end\n    \n	Simple blocks to use as a method to import a url in a rails app, like using\ncontent from another api import HTML with Ruby (importHTML.rb)	import-a-url-with-ruby	Import a URL With Ruby	2010-08-14	2015-05-07 17:03:21.449977	2015-05-07 17:03:21.449977	1	'/some.html&quot;).read':42C 'aclass':58C 'aclass.find':59C 'aclass.ref':70C 'anoth':25B 'api':26B 'app':20B 'block':7B 'content':23B,67C,81C 'def':32C,52C 'domain.com':41C,69C 'domain.com/some.html&quot;).read':40C 'end':43C,82C,83C 'expect':62C 'format':77C 'format.xml':78C 'get':49C 'html':28B 'id':61C 'import':1A,14B,27B 'importhtml':33C 'importhtml.rb':31B 'importxml':53C 'like':21B 'method':12B 'name':65C 'open':36C,39C,56C,68C 'open-uri':35C,55C 'param':60C,64C 'paramet':47C 'rail':19B 'read':73C 'ref':66C 'refer':46C 'remot':50C 'render':79C 'requir':34C,54C 'respond':74C 'rubi':5A,30B 'simpl':6B 'sourc':38C 'type':71C 'uri':37C,57C 'url':3A,16B 'use':9B,22B,44C 'xml':51C,72C,80C	published	pixelhandler
66	The main difference between radio and podcast broadcasting is that the latter can be repurposed across many delivery systems: mp3 players, internet, iPhone, email; and, the potential distribution is world-wide. A common misconception is that a podcast is recorded (not live) and radio with a live presentation is more interactive and appealing to the listener. This is just not true, many podcasts are broadcast live, using the internet with call-in and live chat interaction. While the podcast will not replace TV or radio it has the added value of a more select and targeted audience. This type of focus and trust relationship between the host and listener will most likely be sought after by advertises who would like to chime-in with a message to consumers.\n\nFor businesses this may prove to be a big bang for your buck promotion tool, or another vehicle to extend their brand impression. The key is targeting a niche market, many business will likely become a podcast advertiser in the not-so-far future. Also, business may find a creative way to provide value to their clients using this form of audio and visual broadcast over the internet. With tight or empty advertising budgets, many companies may begin to publish a promotion series on podcast and even distribute their message on an MP3 player or video iPod.\n\nAlso with this post is a video <a target="_blank" href="http://pixelhandler.com/uploads/PodCampSoCal2007-ChrisBrogan.m4v" title="PodCampSoCal2007-ChrisBrogan.m4v">(click to download)</a> featuring <a target="_blank" href="http://chrisbrogan.com/about/">Chris Brogan</a> co-founder of PodCamp, a free unconference that explores the benefits and uses of new media community tools. Brogan begins with an anecdote from a Bradey Bunch episode then wraps up with encouragement for a community of new media enthusiasts at <a target="_blank" href="http://podcamp.pbwiki.com/PodcampSoCal">PodCampSoCal 2007</a> in Ontario, CA. Click the gray arrow below to play a sound clip from the presentation.\n\n<em>Show Notes:</em>\n\nEpisode 001 features  music provided from the PodShow Podsafe Music Network. Check it out at music.podshow.com Opening and closing track clipped from the song, `Do You Know?` by The Tonies\n\nBand Bio: The Tonies are Tony Block and Tony Gettig, two rockers who like to have fun! The "Daily Dose" CD released in 2000 with decent critical review. "Get Up &amp; Move" is the new project and is set for a fall 2006 release.	This event is attended by both techies and non-techies alike. Many in the group are advocates of media publishing, including musicians, macintosh computer enthusiasts, Christian media publishers, businesses and people just in it for fun. The beauty of this event is the collaboration of people who share their expertise and experience in a free flowing mix of presentations and audience participation with questions, answers and advice.\n\nThe podcast concept is taking up speed as more publishers join the movement. One caveat is that many potential listeners (target audience) have a learning curve prohibiting them from becoming a podcast listener. A common opinion among media publishers is to promote their broadcasts using alternative terminology like internet radio or web tv show instead of the `P-bomb`. Many listeners may get turned off by the technical terminology, “podcast”. The movement began in 2003-2004; one proposal is that the first podcast was as early as 1945.	commentary-from-podcamp-socal-event-in-ontario-ca	Commentary from PodCamp SoCal, event in Ontario, CA	2007-09-27	2015-05-07 17:03:21.583266	2015-05-07 17:03:21.583266	1	'-2004':153B '001':471C '1945':165B '2000':523C '2003':152B '2006':541C '2007':451C 'across':181C 'ad':256C 'advertis':284C,334C,370C 'advic':76B 'advoc':26B 'alik':20B 'also':342C,395C 'altern':122B 'among':113B 'anecdot':431C 'anoth':313C 'answer':74B 'appeal':219C 'arrow':458C 'attend':12B 'audienc':70B,98B,264C 'audio':359C 'band':500C 'bang':306C 'beauti':47B 'becom':106B,331C 'began':150B 'begin':375C,428C 'benefit':419C 'big':305C 'bio':501C 'block':506C 'bomb':136B 'bradey':434C 'brand':318C 'broadcast':120B,173C,231C,362C 'brogan':407C,427C 'buck':309C 'budget':371C 'bunch':435C 'busi':38B,298C,328C,343C 'ca':8A,454C 'call':238C 'call-in':237C 'caveat':91B 'cd':520C 'chat':242C 'check':481C 'chime':290C 'chime-in':289C 'chris':406C 'christian':35B 'click':402C,455C 'client':354C 'clip':464C,490C 'close':488C 'co':409C 'co-found':408C 'collabor':53B 'commentari':1A 'common':111B,199C 'communiti':425C,444C 'compani':373C 'comput':33B 'concept':79B 'consum':296C 'creativ':347C 'critic':526C 'curv':102B 'daili':518C 'decent':525C 'deliveri':183C 'differ':168C 'distribut':193C,385C 'dose':519C 'download':404C 'earli':163B 'email':189C 'empti':369C 'encourag':441C 'enthusiast':34B,448C 'episod':436C,470C 'even':384C 'event':5A,10B,50B 'experi':61B 'expertis':59B 'explor':417C 'extend':316C 'fall':540C 'far':340C 'featur':405C,472C 'find':345C 'first':159B 'flow':65B 'focus':268C 'form':357C 'founder':410C 'free':64B,414C 'fun':45B,516C 'futur':341C 'get':140B,528C 'gettig':509C 'gray':457C 'group':24B 'host':274C 'impress':319C 'includ':30B 'instead':131B 'interact':217C,243C 'internet':125B,187C,235C,365C 'iphon':188C 'ipod':394C 'join':87B 'key':321C 'know':496C 'latter':177C 'learn':101B 'like':124B,279C,287C,330C,513C 'listen':96B,109B,138B,222C,276C 'live':208C,213C,232C,241C 'macintosh':32B 'main':167C 'mani':21B,94B,137B,182C,228C,327C,372C 'market':326C 'may':139B,300C,344C,374C 'media':28B,36B,114B,424C,447C 'messag':294C,387C 'misconcept':200C 'mix':66B 'move':530C 'movement':89B,149B 'mp3':185C,390C 'music':473C,479C 'music.podshow.com':485C 'musician':31B 'network':480C 'new':423C,446C,533C 'nich':325C 'non':18B 'non-techi':17B 'not-so-far':337C 'note':469C 'one':90B,154B 'ontario':7A,453C 'open':486C 'opinion':112B 'p':135B 'p-bomb':134B 'particip':71B 'peopl':40B,55B 'play':461C 'player':186C,391C 'podcamp':3A,412C 'podcampsoc':450C 'podcast':78B,108B,147B,160B,172C,204C,229C,246C,333C,382C 'podsaf':478C 'podshow':477C 'post':398C 'potenti':95B,192C 'present':68B,214C,467C 'prohibit':103B 'project':534C 'promot':118B,310C,379C 'propos':155B 'prove':301C 'provid':350C,474C 'publish':29B,37B,86B,115B,377C 'question':73B 'radio':126B,170C,210C,252C 'record':206C 'relationship':271C 'releas':521C,542C 'replac':249C 'repurpos':180C 'review':527C 'rocker':511C 'select':261C 'seri':380C 'set':537C 'share':57B 'show':130B,468C 'socal':4A 'song':493C 'sought':281C 'sound':463C 'speed':83B 'system':184C 'take':81B 'target':97B,263C,323C 'techi':15B,19B 'technic':145B 'terminolog':123B,146B 'tight':367C 'toni':499C,503C,505C,508C 'tool':311C,426C 'track':489C 'true':227C 'trust':270C 'turn':141B 'tv':129B,250C 'two':510C 'type':266C 'unconfer':415C 'use':121B,233C,355C,421C 'valu':257C,351C 'vehicl':314C 'video':393C,401C 'visual':361C 'way':348C 'web':128B 'wide':197C 'world':196C 'world-wid':195C 'would':286C 'wrap':438C	published	pixelhandler
40	\n    \n    //jQuery.noConflict();\n    (function($) { // $ is jQuery\n        // plugin for yada yada\n        $.fn.yadayada = function(options) {\n            var defaults = {\n                foo : 'bar'\n            };\n            // Extend our default options with those provided.\n            var opts = $.extend({}, defaults, options);\n            // Do something to each item\n            return this.each(function() {\n                var _ = { obj : $(this) };\n                // get settings from options\n                _.foo = _.obj.find(opts.foo);\n                /*\n                    ... code to return, chained\n                */\n            });\n        };\n        // debugging methods\n        $.fn.debug = function() {\n            return this.each(function(){\n                alert(this);\n            });\n        };\n        $.log = function(message) {\n            if(window.console) {\n                 console.debug(message);\n            } else {\n                 alert(message);\n            }\n        };\n        // end plugin\n        // Stuff to do as soon as the DOM is ready;\n        $(function() {\n            var something = $('div.something');\n            try {\n                if (something.length>0) {\n                    something.yadayada({ foo: 'no bars' });\n                }\n            } catch(oops) { $.log(oops); }\n        });\n    })(jQuery);	jQuery provides a quick and easy way to extend behavior. I use this code below\nto begin when writing a new jQuery plugin.	boilerplate-code-for-jquery-plugin-with-debug-and-logging-methods	Boilerplate Code for jQuery Plugin With Debug and Logging Methods	2010-08-14	2015-05-07 17:03:21.454167	2015-05-07 17:03:21.454167	1	'/jquery.noconflict':34C '0':121C 'alert':90C,100C 'bar':48C,125C 'begin':27B 'behavior':20B 'boilerpl':1A 'catch':126C 'chain':82C 'code':2A,24B,79C 'console.debug':97C 'debug':7A,83C 'default':46C,51C,59C 'div.something':117C 'dom':111C 'easi':16B 'els':99C 'end':102C 'extend':19B,49C,58C 'fn.debug':85C 'fn.yadayada':42C 'foo':47C,76C,123C 'function':35C,43C,68C,86C,89C,93C,114C 'get':72C 'item':65C 'jqueri':4A,11B,32B,37C,130C 'log':9A,92C,128C 'messag':94C,98C,101C 'method':10A,84C 'new':31B 'obj':70C 'obj.find':77C 'oop':127C,129C 'opt':57C 'option':44C,52C,60C,75C 'opts.foo':78C 'plugin':5A,33B,38C,103C 'provid':12B,55C 'quick':14B 'readi':113C 'return':66C,81C,87C 'set':73C 'someth':62C,116C 'something.length':120C 'something.yadayada':122C 'soon':108C 'stuff':104C 'this.each':67C,88C 'tri':118C 'use':22B 'var':45C,56C,69C,115C 'way':17B 'window.console':96C 'write':29B 'yada':40C,41C	published	pixelhandler
41	## Javascript function to test if image is loaded already :\n\n    \n    // Check if images load properly\n    // returns false if image not loaded\n    function imgOK(img) {\n        if (!img.complete) {\n            return false;\n        }\n        if (typeof img.naturalWidth != "undefined" && img.naturalWidth == 0) {\n            return false;\n        }\n        return true;\n    }\n     \n    // Note: using prototype js library for $, $$\n    // Test if images load ok\n    var tnLink = $$('.more-views a');\n    // Hide links to more views when images do no load properly.\n    if (tnLink.length>0) {\n        document.observe("dom:loaded", function() {\n            tnLink.each(function(s, index) {\n                var tnImg = tnLink[index].firstDescendant();\n                var obj = $(s).firstDescendant();\n                console.log(tnImg.src + " > is ok : " + imgOK(obj));\n                if ( imgOK(obj) == false) {\n                    console.log('bad image!');\n                    $(s).addClassName('no-display');\n                }\n            });\n        });\n    }\n \n\n### Define a CSS class to hide the link with a bad image :\n\nCSS - no-display.css\n\n    .no-display {\n    \tdisplay: none;\n    }\n\n\n_There, no unexpected broken images in view._	For sites with a CMS or some easy tool to upload and break images it can be\nhelpful to test if the images are loaded, especially if you have additional\nbehavior for visitors to interact with your images, like a lightbox view.	images-loaded-or-not-check-with-javascript	Images Loaded or Not? Check With JavaScript	2010-08-14	2015-05-07 17:03:21.458082	2015-05-07 17:03:21.458082	1	'0':82C,117C 'addclassnam':149C 'addit':37B 'alreadi':58C 'bad':146C,163C 'behavior':38B 'break':20B 'broken':175C 'check':5A,59C 'class':156C 'cms':12B 'console.log':135C,145C 'css':155C,165C 'defin':153C 'display':152C,169C,170C 'document.observe':118C 'dom':119C 'easi':15B 'especi':33B 'fals':65C,76C,84C,144C 'firstdescend':130C,134C 'function':51C,70C,121C,123C 'help':25B 'hide':104C,158C 'imag':1A,21B,30B,45B,55C,61C,67C,95C,110C,147C,164C,176C 'img':72C 'img.complete':74C 'img.naturalwidth':79C,81C 'imgok':71C,139C,142C 'index':125C,129C 'interact':42B 'javascript':7A,50C 'js':90C 'librari':91C 'lightbox':48B 'like':46B 'link':105C,160C 'load':2A,32B,57C,62C,69C,96C,113C,120C 'more-view':100C 'no-display':150C,167C 'no-display.css':166C 'none':171C 'note':87C 'obj':132C,140C,143C 'ok':97C,138C 'proper':63C,114C 'prototyp':89C 'return':64C,75C,83C,85C 'site':9B 'test':27B,53C,93C 'tnimg':127C 'tnimg.src':136C 'tnlink':99C,128C 'tnlink.each':122C 'tnlink.length':116C 'tool':16B 'true':86C 'typeof':78C 'undefin':80C 'unexpect':174C 'upload':18B 'use':88C 'var':98C,126C,131C 'view':49B,102C,108C 'view._':178C 'visitor':40B	published	pixelhandler
51	Next, I build out a demonstration\nsite [http://demo.overhaulindustries.com](http://demo.overhaulindustries.com/)\nfor previewing how to use WordPress as a business website publishing tool.\nThese two task formed my product offering of a templated business website ;\nbasically an online brochure. Second, I created a \n[brochure website guide](http://overhaulindustries.com/brochure-sites/how-to-prepare-a-brochure-website-for-your-company) on how to prepare content; my goal was to establish\na fast turnaround, with content up front or early the project can avoid being\nheld up for content. To speed up the process and get the business owner\nengaged I added a form to capture the content online; adding a few links to\npush visitors to send my their content. Third, I added a PayPal button for the\ndeposit/payment; this gets me engaged in delivering a site quickly. The fourth\nstep was to [document the process](http://overhaulindustries.com/brochure-sites/the-process-in-building-your-brochure-website) of delivering the website\nproject; an effort to help the client get to know how to work with me.\nFinally, to close out the five step process… [I set expectations](http://overhaulindustries.com/brochure-sites/expect-better-search-results-when-working-with-us-on-your-web-design-project) on what a\nwinning project should result in – creating free leads online; basically\ngenerating free listings on search engine results pages. This process of\ndocumenting the experience of designing template solutions for small brochure\nwebsite projects lead to creating marketing materials to promote sales. This\ncontent is a result of conversations I've had repeatedly over the years; why\nnot use the product myself? The results was the best layout and design I've\nhad on my business website in years, and using the platform I enjoy,\nWordPress. Being excited about this discovery, I sent out an invitation my\nemail to friends, family and clients; I even had a good response. I expect\nthat I may complete 3-4 brochure websites in the next couple weeks. I look\nforward to measuring the results. So now, I'm following up with the leads\nusing this 5 step approach:\n\n### Documentation to help you get started with your website projects\n\n**Below are the links and outline of the process of working together with\nOverhaul Industries in order to help you design your website to be found… **\n\n**Step 1**: [Getting started guide - to prepare your brochure website](http://overhaulindustries.com/brochure-sites/how-to-prepare-a-brochure-website-for-your-company)\n\n**Step 2**: [Partner with an expert - send us your content](http://overhaulindustries.com/contact/brochure-website-content)   \n  \n**Step 3**: [We start working on your project with a small deposit](http://overhaulindustries.com/brochure-sites/recession-special-custom-brochure-web-site-for-440)   \n  \n**Step 4**: [The process of delivering your website](http://overhaulindustries.com/brochure-sites/the-process-in-building-your-brochure-website)   \n  \n**Step 5**: [Review the results, your free listing in search engine results pages](http://overhaulindustries.com/brochure-sites/expect-better-search-results-when-working-with-us-on-your-web-design-project)\n	Documenting process becomes promotion of small business website sales…\n\nIn the past couple weeks I decided to focus on small businesses by making a\ngoal to create a program that will help their website be findable. Beginning\nin 2004 I began to sell website design to local companies and still build\nwebsites for local medium size businesses in Orange County. I began to\ndocument the process of working together with business owners and managers.\nThe first step was creating an offer, [Recession SPECIAL: Custom ‘Brochure’ Web Site for $440](http://overhaulindustries.com/brochure-sites/recession-special-custom-brochure-web-site-for-440) . 	five-steps-to-creating-findable-websites-for-small-and-medium-sized-business	Five Steps to Creating Findable Websites for Small and Medium-sized Business	2009-07-17	2015-05-07 17:03:21.498792	2015-05-07 17:03:21.498792	1	'-4':395C '/)':116C '/brochure-sites/expect-better-search-results-when-working-with-us-on-your-web-design-project)':276C,527C '/brochure-sites/how-to-prepare-a-brochure-website-for-your-company)':154C,472C '/brochure-sites/recession-special-custom-brochure-web-site-for-440)':105B,500C '/brochure-sites/the-process-in-building-your-brochure-website)':243C,511C '/contact/brochure-website-content)':485C '1':461C '2':474C '2004':52B '3':394C,487C '4':502C '440':102B '5':421C,513C 'ad':195C,203C,217C 'approach':423C 'avoid':177C 'basic':141C,289C 'becom':16B 'began':54B,75B 'begin':50B 'best':345C 'brochur':98B,144C,149C,310C,396C,468C 'build':64B,108C 'busi':13A,20B,34B,70B,84B,125C,139C,191C,354C 'button':220C 'captur':199C 'client':254C,381C 'close':265C 'compani':61B 'complet':393C 'content':159C,169C,182C,201C,214C,322C,482C 'convers':327C 'counti':73B 'coupl':26B,401C 'creat':4A,40B,92B,147C,285C,315C 'custom':97B 'decid':29B 'deliv':229C,245C,506C 'demo.overhaulindustries.com':113C,115C 'demo.overhaulindustries.com/)':114C 'demonstr':111C 'deposit':497C 'deposit/payment':223C 'design':58B,305C,348C,454C 'discoveri':369C 'document':14B,77B,238C,301C,424C 'earli':173C 'effort':250C 'email':376C 'engag':193C,227C 'engin':295C,522C 'enjoy':363C 'establish':164C 'even':383C 'excit':366C 'expect':273C,389C 'experi':303C 'expert':478C 'famili':379C 'fast':166C 'final':263C 'findabl':5A,49B 'first':89B 'five':1A,268C 'focus':31B 'follow':414C 'form':132C,197C 'forward':405C 'found':459C 'fourth':234C 'free':286C,291C,518C 'friend':378C 'front':171C 'generat':290C 'get':189C,225C,255C,428C,462C 'goal':38B,161C 'good':386C 'guid':151C,464C 'held':179C 'help':45B,252C,426C,452C 'industri':448C 'invit':374C 'know':257C 'layout':346C 'lead':287C,313C,418C 'link':206C,437C 'list':292C,519C 'local':60B,67B 'look':404C 'm':413C 'make':36B 'manag':87B 'market':316C 'materi':317C 'may':392C 'measur':407C 'medium':11A,68B 'medium-s':10A 'next':106C,400C 'offer':94B,135C 'onlin':143C,202C,288C 'orang':72B 'order':450C 'outlin':439C 'overhaul':447C 'overhaulindustries.com':104B,153C,242C,275C,471C,484C,499C,510C,526C 'overhaulindustries.com/brochure-sites/expect-better-search-results-when-working-with-us-on-your-web-design-project)':274C,525C 'overhaulindustries.com/brochure-sites/how-to-prepare-a-brochure-website-for-your-company)':152C,470C 'overhaulindustries.com/brochure-sites/recession-special-custom-brochure-web-site-for-440)':103B,498C 'overhaulindustries.com/brochure-sites/the-process-in-building-your-brochure-website)':241C,509C 'overhaulindustries.com/contact/brochure-website-content)':483C 'owner':85B,192C 'page':297C,524C 'partner':475C 'past':25B 'paypal':219C 'platform':361C 'prepar':158C,466C 'preview':118C 'process':15B,79B,187C,240C,270C,299C,442C,504C 'product':134C,339C 'program':42B 'project':175C,248C,281C,312C,433C,493C 'promot':17B,319C 'publish':127C 'push':208C 'quick':232C 'recess':95B 'repeat':331C 'respons':387C 'result':283C,296C,325C,342C,409C,516C,523C 'review':514C 'sale':22B,320C 'search':294C,521C 'second':145C 'sell':56B 'send':211C,479C 'sent':371C 'set':272C 'site':100B,112C,231C 'size':12A,69B 'small':8A,19B,33B,309C,496C 'solut':307C 'special':96B 'speed':184C 'start':429C,463C,489C 'step':2A,90B,235C,269C,422C,460C,473C,486C,501C,512C 'still':63B 'task':131C 'templat':138C,306C 'third':215C 'togeth':82B,445C 'tool':128C 'turnaround':167C 'two':130C 'us':480C 'use':121C,337C,359C,419C 've':329C,350C 'visitor':209C 'web':99B 'websit':6A,21B,47B,57B,65B,126C,140C,150C,247C,311C,355C,397C,432C,456C,469C,508C 'week':27B,402C 'win':280C 'wordpress':122C,364C 'work':81B,260C,444C,490C 'year':334C,357C	published	pixelhandler
42	\n    \n    // using jQuery library and validation plugin in this code\n    // for checking keycodes\n    function getKeyCode(event) {\n        var keycode = (event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode));\n        return keycode;\n    }\n     \n    // is there an anchor as Submit button?\n    var $submit = $('a[id$="_submit"]');\n    // is there any behavior already on submit, like -> onclick="__doPostBack(...)"\n    $submit.action = $submit.attr('onclick'); \n     \n    $submit.click(function(e){\n        // using jQuery validation plugin to validate\n        $submit.valid = $('.myform').valid();\n        if (!$submit.valid) {\n            e.preventDefault();\n        } else {\n            // process original onclick stuff\n            $($submit.action).trigger('click');\n        }\n    });\n     \n    // submit with enter key\n    $(".myform input").bind("keydown", function(event) {\n        // track enter key\n        var keycode = getKeyCode(event);\n        // keycode for enter key\n        if (keycode == 13) {\n             // force the 'Enter Key' to implicitly click the Sumbit button\n             $submit.click();\n             return false;\n        } else  {\n             return true;\n        }\n    });\n	Depending on the platform you develop on sometimes you may need to hijack an\nonclick attribute to first do some form validation on the client side. It\nwould be nice to post the form with the enter key as well, if you are using an\nanchor instead of button or input with type of submit.	hijack-form-submit-onclick-validate-and-use-enter-key-to-post-form	Hijack Form's Submit Onclick, Validate, and Use Enter Key to Post Form	2010-08-14	2015-05-07 17:03:21.462143	2015-05-07 17:03:21.462143	1	'13':164C 'alreadi':109C 'anchor':59B,96C 'attribut':29B 'behavior':108C 'bind':147C 'button':62B,99C,174C 'check':79C 'click':140C,171C 'client':38B 'code':77C 'depend':14B 'develop':19B 'dopostback':114C 'e':120C 'e.preventdefault':132C 'els':133C,178C 'enter':9A,50B,143C,152C,160C,167C 'event':83C,150C,157C 'event.charcode':90C 'event.keycode':86C,87C 'event.which':88C,89C 'fals':177C 'first':31B 'forc':165C 'form':2A,13A,34B,47B 'function':81C,119C,149C 'getkeycod':82C,156C 'hijack':1A,26B 'id':103C 'implicit':170C 'input':64B,146C 'instead':60B 'jqueri':70C,122C 'key':10A,51B,144C,153C,161C,168C 'keycod':80C,85C,92C,155C,158C,163C 'keydown':148C 'librari':71C 'like':112C 'may':23B 'myform':128C,145C 'need':24B 'nice':43B 'onclick':5A,28B,113C,117C,136C 'origin':135C 'platform':17B 'plugin':74C,124C 'post':12A,45B 'process':134C 'return':91C,176C,179C 'side':39B 'sometim':21B 'stuff':137C 'submit':4A,68B,98C,101C,104C,111C,141C 'submit.action':115C,138C 'submit.attr':116C 'submit.click':118C,175C 'submit.valid':127C,131C 'sumbit':173C 'track':151C 'trigger':139C 'true':180C 'type':66B 'use':8A,57B,69C,121C 'valid':6A,35B,73C,123C,126C,129C 'var':84C,100C,154C 'well':53B 'would':41B	published	pixelhandler
43	\n    \n    mate ~/.profile\n    \n\nEdit your path in .profile adding /Applications/MAMP/Library/bin:$PATH\n\n    \n    export PATH="/usr/local/bin:/usr/local/mysql/bin:/Applications/MAMP/Library/bin:$PATH"\n    \n\nAlso after you start MAMP to use mysql on command line :\n\n    \n    sudo ln -s /Applications/MAMP/tmp/mysql/mysql.sock /tmp/mysql.sock\n    \n	Developing with MAMP, if so then use mysql on the command line (terminal app).\nUpdate your ~/.profile file to use the MAMP mysql PATH. If you use textmate…	use-mysql-on-the-command-line-when-developing-with-mamp	Use Mysql on the Command Line When Developing With MAMP	2010-08-14	2015-05-07 17:03:21.466345	2015-05-07 17:03:21.466345	1	'/.profile':27B,40C '/applications/mamp/library/bin':47C,53C '/applications/mamp/tmp/mysql/mysql.sock':69C '/tmp/mysql.sock':70C '/usr/local/bin':51C '/usr/local/mysql/bin':52C 'ad':46C 'also':55C 'app':24B 'command':5A,21B,64C 'develop':8A,11B 'edit':41C 'export':49C 'file':28B 'line':6A,22B,65C 'ln':67C 'mamp':10A,13B,32B,59C 'mate':39C 'mysql':2A,18B,33B,62C 'path':34B,43C,48C,50C,54C 'profil':45C 'start':58C 'sudo':66C 'termin':23B 'textmat':38B 'updat':25B 'use':1A,17B,30B,37B,61C	published	pixelhandler
44	## Script to change list of articles into a rotation of text\n\n    \n    \n    // rotate the articles\n    var $text = $('#section div.article');\n    $text.remove();\n    $text.teasers = [];\n    $.each($text, function(){\n    \t$text.teasers.push(this);\n    });\n    $text.idx = 0;\n    $text.stage = $('#section div.inset');\n    $text.stage.html($text.teasers[$text.idx]);\n    setInterval(function() { \n    \tif ( $text.teasers.length > ($text.idx+1) ) {\n    \t\t$text.idx ++ ;\n    \t} else {\n    \t\t$text.idx = 0;\n    \t}\n    \t$text.stage.html($text.teasers[$text.idx]);\n    }, 12000);\n    \n\n### Soure HTML that script read to rotate articles\n\n    \n    \n    <div id="section"><div class="inset">\n    \t<div class="article">\n    \t\t<h3><a href="">link</a></h3>\n    \t\t<p>article teaser text...</p>\n    \t</div>\n    \t<div class="article">\n    \t\t<h3><a href="">link</a></h3>\n    \t\t<p>article text...</p>\n    \t</div>\n    \t<div class="article">\n    \t\t<h3><a href="">link</a></h3>\n    \t\t<p>another article text...</p>\n    \t</div>\n    </div></div>\n    \n	This script and html are used to fancy up a list of articles then rotate the\narticle teaser text…	fancy-up-a-list-of-articles-into-a-dynamic-rotation-of-text	Fancy Up a List of Articles Into a Dynamic Rotation of Text	2010-08-14	2015-05-07 17:03:21.470728	2015-05-07 17:03:21.470728	1	'+1':70C '0':58C,74C '12000':78C 'anoth':95C 'articl':6A,25B,29B,37C,45C,86C,88C,92C,96C 'chang':34C 'div.article':49C 'div.inset':61C 'dynam':9A 'els':72C 'fanci':1A,20B 'function':54C,66C 'html':16B,80C 'link':87C,91C,94C 'list':4A,23B,35C 'read':83C 'rotat':10A,27B,40C,43C,85C 'script':14B,32C,82C 'section':48C,60C 'setinterv':65C 'sour':79C 'teaser':30B,89C 'text':12A,31B,42C,47C,53C,90C,93C,97C 'text.idx':57C,64C,69C,71C,73C,77C 'text.remove':50C 'text.stage':59C 'text.stage.html':62C,75C 'text.teasers':51C,63C,76C 'text.teasers.length':68C 'text.teasers.push':55C 'use':18B 'var':46C	published	pixelhandler
46	```javascript\n// set Search input to default text\n$('#s').attr('value','Search');\n\n// clear search input form\n$('#s').focus(function(){\n    $('#s').val('');\n});\n```	Using jQuery to add the text 'Search' to the search input box in WordPress;\nwhen user enters text input to search the helper text is removed	text-in-wordpress-search-input-fields	Text in WordPress Search Input Fields	2010-08-14	2015-05-07 17:03:21.478769	2015-05-07 17:03:21.478769	1	'add':10B 'attr':41C 'box':18B 'clear':44C 'default':38C 'enter':23B 'field':6A 'focus':49C 'form':47C 'function':50C 'helper':29B 'input':5A,17B,25B,36C,46C 'javascript':33C 'jqueri':8B 'remov':32B 'search':4A,13B,16B,27B,35C,43C,45C 'set':34C 'text':1A,12B,24B,30B,39C 'use':7B 'user':22B 'val':52C 'valu':42C 'wordpress':3A,20B	published	pixelhandler
47	## find running apps :\n\n    \n    ps aux | grep ruby\n    ps -awwx | grep mysql\n    \n\n## find running app on port number\n\n    \n    ps aux | grep 12005\n    \n\n## kill process, first number listed follow above result\n\n    \n    kill XXXXX\n    \n	Find running apps, find running app on port number, kill process, first number listed follow above result	command-line-tip-to-find-running-apps-and-kill-em	Command Line Tip to Find Running Apps and Kill 'Em	2010-08-10	2015-05-07 17:03:21.482603	2015-05-07 17:03:21.482603	1	'12005':48C 'app':7A,13B,16B,30C,41C 'aux':32C,46C 'awwx':36C 'command':1A 'em':10A 'find':5A,11B,14B,28C,39C 'first':22B,51C 'follow':25B,54C 'grep':33C,37C,47C 'kill':9A,20B,49C,57C 'line':2A 'list':24B,53C 'mysql':38C 'number':19B,23B,44C,52C 'port':18B,43C 'process':21B,50C 'ps':31C,35C,45C 'result':27B,56C 'rubi':34C 'run':6A,12B,15B,29C,40C 'tip':3A 'xxxxx':58C	published	pixelhandler
48	More stats: \n\n  * **27 million**: Number of people in modern-day slavery across the world\n  * **800,000:** Number of persons trafficked across international borders each year\n  * **17,500:** Number of foreign nationals who are trafficked into the U.S. every year\n  * **50:** Percent of all victims are children\n  * **$50 Million:** US Government budget for efforts against human trafficking\n  * **218 Million:** Estimated number of children working aged between five and seventeen\n  * **126 Million:** Estimated number of children who work in the worst forms of child labor - one in every twelve of the world's five to seventeen year olds.\n…We live in a broken world sex trafficking even exists in OC, CA. Live for\nsomething… with a passion to end injustice, seek out likeminded people. You\nwill not have wings to fly if you get overwhelmed. Try a region least likely\nto be evangelized (none or only a few existing missions efforts) or where life\nis very short. Just start with one cause. Find something you are passionate\nabout and can do something about. Because we live in an interdependent world\nwe cannot ignore the problems in the world… do justly, speak up!\n\n  * [ijm.org](http://ijm.org) | [wiki link](http://en.wikipedia.org/wiki/International_Justice_Mission)\n  * [heifer.org](http://heifer.org)\n  * [savedarfur.org](http://savedarfur.org)\n  * [invisiblechildren.com](http://invisiblechildren.com)\n  * [loose change](http://www.lc2lc.org/) | [Zach Hunter](http://www.cbn.com/700club/guests/bios/Zach_Hunter_122107.aspx)\n  * [Rescue Project](http://www.dreamcenter.org/outreach/RescueProject/Ways.html)\nThese notes are from a discussion with :\n[@judahtrabulsi](http://twitter.com/judahtrabulsi)	**Human trafficking fact**: 27 million modern day slaves; more today than there was when England ruled the world during the trans-Atlantic slave trade. \n\n![](http://pixelhandler.com/wp-content/uploads/2010/06/l_1600_1200_9EA197A0-1836-4796-B330-3B70DEB1BCA3.jpeg)\n\nWilliam Wilberforce fought in his country for the abolition of the slave trade.  Today, (IJM) International Justice Mission is freeing slaves every day. 	social-justice-is-a-movement-to-end-injustice-in-the-world	Social Justice Is a Movement to End Injustice in the World	2010-06-23	2015-05-07 17:03:21.486533	2015-05-07 17:03:21.486533	1	'/)':271C '/700club/guests/bios/zach_hunter_122107.aspx)':276C '/judahtrabulsi)':292C '/outreach/rescueproject/ways.html)':281C '/wiki/international_justice_mission)':260C '/wp-content/uploads/2010/06/l_1600_1200_9ea197a0-1836-4796-b330-3b70deb1bca3.jpeg)':39B '000':79C '126':132C '17':89C '218':120C '27':15B,65C '50':103C,110C '500':90C '800':78C 'abolit':48B 'across':75C,84C 'age':127C 'atlant':34B 'border':86C 'broken':164C 'budget':114C 'ca':172C 'cannot':243C 'caus':223C 'chang':268C 'child':145C 'children':109C,125C,137C 'countri':45B 'day':18B,62B,73C 'discuss':287C 'effort':116C,212C 'en.wikipedia.org':259C 'en.wikipedia.org/wiki/international_justice_mission)':258C 'end':7A,180C 'england':26B 'estim':122C,134C 'evangel':204C 'even':168C 'everi':61B,101C,149C 'exist':169C,210C 'fact':14B 'find':224C 'five':129C,155C 'fli':192C 'foreign':93C 'form':143C 'fought':42B 'free':59B 'get':195C 'govern':113C 'heifer.org':261C,262C 'human':12B,118C 'hunter':273C 'ignor':244C 'ijm':54B 'ijm.org':254C,255C 'injustic':8A,181C 'interdepend':240C 'intern':55B,85C 'invisiblechildren.com':265C,266C 'judahtrabulsi':289C 'just':251C 'justic':2A,56B 'labor':146C 'least':200C 'life':215C 'like':201C 'likemind':184C 'link':257C 'live':161C,173C,237C 'loos':267C 'million':16B,66C,111C,121C,133C 'mission':57B,211C 'modern':17B,72C 'modern-day':71C 'movement':5A 'nation':94C 'none':205C 'note':283C 'number':67C,80C,91C,123C,135C 'oc':171C 'old':159C 'one':147C,222C 'overwhelm':196C 'passion':178C,228C 'peopl':69C,185C 'percent':104C 'person':82C 'pixelhandler.com':38B 'pixelhandler.com/wp-content/uploads/2010/06/l_1600_1200_9ea197a0-1836-4796-b330-3b70deb1bca3.jpeg)':37B 'problem':246C 'project':278C 'region':199C 'rescu':277C 'rule':27B 'savedarfur.org':263C,264C 'seek':182C 'seventeen':131C,157C 'sex':166C 'short':218C 'slave':19B,35B,51B,60B 'slaveri':74C 'social':1A 'someth':175C,225C,233C 'speak':252C 'start':220C 'stat':64C 'today':21B,53B 'trade':36B,52B 'traffick':13B,83C,97C,119C,167C 'tran':33B 'trans-atlant':32B 'tri':197C 'twelv':150C 'twitter.com':291C 'twitter.com/judahtrabulsi)':290C 'u.s':100C 'us':112C 'victim':107C 'wiki':256C 'wilberforc':41B 'william':40B 'wing':190C 'work':126C,139C 'world':11A,29B,77C,153C,165C,241C,249C 'worst':142C 'www.cbn.com':275C 'www.cbn.com/700club/guests/bios/zach_hunter_122107.aspx)':274C 'www.dreamcenter.org':280C 'www.dreamcenter.org/outreach/rescueproject/ways.html)':279C 'www.lc2lc.org':270C 'www.lc2lc.org/)':269C 'year':88C,102C,158C 'zach':272C	published	pixelhandler
56	This site is using the **Amerifecta\ntheme** > [download the .zip archive from the Overhaul Industries\nsite](http://overhaulindustries.com/amerifecta) **Adept** is available from\nboth [Overhaul Industries](http://overhaulindustries.com/themes) and\n[WordPress.org/extend/themes](http://wordpress.org/extend/themes/adept)\n[![Amerifecta](http://pixelhandler.com/wp-content/uploads/2008/10/amerifecta-\nwordpress-theme-v1-320x255.jpg)](http://overhaulindustries.com/amerifecta)\n[![Adept](http://pixelhandler.com/wp-content/uploads/2008/10/adept-wordpress-\ntheme-v1-320x232.jpg)](http://overhaulindustries.com/adept)\n\n**Update: 10-23-08…**WordPress released [Amerifecta theme](http://wordpress.org/extend/themes/amerifecta). Also, [Adept theme](http://wordpress.org/extend/themes/adept) updated to version 1.1.1 on WordPress.org > themes > extend	Both are versatile themes, built for speed with seven widget positions; three\nin the sidebar and four in an extended footer. They features a clean design,\nsuitable for a wide range of applications. Designers will appreciate the fixed\nwidth grid layout, including a baseline grid for vertical text alignment. To\nvisitors this makes the site 'look and feel' right. Users will also appreciate\nthe light page weight, around 100k! 	two-new-wordpress-themes-adept-and-amerifecta	Two New WordPress Themes Adept & Amerifecta	2008-10-05	2015-05-07 17:03:21.519949	2015-05-07 17:03:21.519949	1	'-08':128C '-23':127C '/adept)':124C '/amerifecta)':94C,116C '/extend/themes/adept)':141C '/extend/themes/amerifecta).':135C '/extend/themes](http://wordpress.org/extend/themes/adept)':108C '/themes)':104C '/wp-content/uploads/2008/10/adept-wordpress-':120C '/wp-content/uploads/2008/10/amerifecta-':112C '1.1.1':145C '10':126C '100k':75B 'adept':5A,95C,117C,137C 'align':55B 'also':68B,136C 'amerifecta':6A,81C,109C,131C 'applic':39B 'appreci':42B,69B 'archiv':86C 'around':74B 'avail':97C 'baselin':50B 'built':11B 'clean':31B 'design':32B,40B 'download':83C 'extend':26B,149C 'featur':29B 'feel':64B 'fix':44B 'footer':27B 'four':23B 'grid':46B,51B 'includ':48B 'industri':90C,101C 'layout':47B 'light':71B 'look':62B 'make':59B 'new':2A 'overhaul':89C,100C 'overhaulindustries.com':93C,103C,115C,123C 'overhaulindustries.com/adept)':122C 'overhaulindustries.com/amerifecta)':92C,114C 'overhaulindustries.com/themes)':102C 'page':72B 'pixelhandler.com':111C,119C 'pixelhandler.com/wp-content/uploads/2008/10/adept-wordpress-':118C 'pixelhandler.com/wp-content/uploads/2008/10/amerifecta-':110C 'posit':17B 'rang':37B 'releas':130C 'right':65B 'seven':15B 'sidebar':21B 'site':61B,77C,91C 'speed':13B 'suitabl':33B 'text':54B 'theme':4A,10B,82C,132C,138C,148C 'theme-v1-320x232.jpg':121C 'three':18B 'two':1A 'updat':125C,142C 'use':79C 'user':66B 'versatil':9B 'version':144C 'vertic':53B 'visitor':57B 'weight':73B 'wide':36B 'widget':16B 'width':45B 'wordpress':3A,129C 'wordpress-theme-v1-320x255.jpg':113C 'wordpress.org':107C,134C,140C,147C 'wordpress.org/extend/themes/adept)':139C 'wordpress.org/extend/themes/amerifecta).':133C 'wordpress.org/extend/themes](http://wordpress.org/extend/themes/adept)':106C 'zip':85C	published	pixelhandler
53	At the finish of\nthe conference I ended up with 278 noteworthy entries (twitter hashtag:\n'aea09'). I viewed the favorites on twitter and copied the ordered list\n(source) into an HTML presentation (S5) template by Eric Meyer. Check out the\npresentation at\n[www.pixelhandler.com/aea09/](http://www.pixelhandler.com/aea09/). Much of the\nconversation was centered around the topic of User Experience (UX). **Update**\n(5/10/09) - I_ added an iPhone CSS stylesheet to the presentation to make it\nmobile friendly for Apple enthusiasts._ [![An Event Apart Twitter favorites\npresentation](http://pixelhandler.com/wp-\ncontent/uploads/2009/05/aeaslides.png)](http://www.pixelhandler.com/aea09/)\n\nCheck out my [#aea09 conference notes, I used twitter's favorite star to group\nthink my note-taking](http://www.pixelhandler.com/aea09/). Then I copied the\nhtml and pasted into [Eric Meyer's S5 HTML\npresentation](http://meyerweb.com/eric/tools/s5/features.html) template.\n\n![Bell Int'l Conf. Ctr. - Seattle](http://pixelhandler.com/wp-\ncontent/uploads/2009/05/seattle090503bellintl.jpg) Also, [my\npics](http://www.flickr.com/photos/25692062@N08/) and the [AEA group\npics](http://www.flickr.com/groups/aeaseattle09/) on flickr.	One thing I really enjoy about Twitter is the conversations that happen during\nan event. So, while attending An Event Apart this week, I took most of my\nnotes on my iPhone. My powerbook is 7 years old, and I refused to take my PC\nto this event. Surprisingly, the iphone worked out great. At times the\nwireless was faulty; but the iPhone fell back on the edge network. I spent two\ndays of tweeting while marking clever, funny and informative comments as\nfavorites (generated by the crowd, on\n[twitter.com](http://search.twitter.com/search?q=%23aea09)). 	crowd-notes-twitter-favorites-from-an-event-apart-2009-seattle	Crowd Notes (Twitter Favorites) From an Event Apart 2009 Seattle	2009-05-06	2015-05-07 17:03:21.50748	2015-05-07 17:03:21.50748	1	'/aea09/)':193C '/aea09/).':215C '/aea09/](http://www.pixelhandler.com/aea09/).':148C '/eric/tools/s5/features.html)':232C '/groups/aeaseattle09/)':257C '/photos/25692062@n08/)':249C '/search?q=%23aea09)).':103B '/wp-':189C,242C '2009':9A '278':114C '5/10/09':163C '7':46B 'ad':165C 'aea':252C 'aea09':119C,197C 'also':244C 'apart':8A,31B,183C 'appl':179C 'around':155C 'attend':28B 'back':75B 'bell':234C 'center':154C 'check':141C,194C 'clever':88B 'comment':92B 'conf':237C 'confer':109C,198C 'content/uploads/2009/05/aeaslides.png':190C 'content/uploads/2009/05/seattle090503bellintl.jpg':243C 'convers':20B,152C 'copi':127C,218C 'crowd':1A,98B 'css':168C 'ctr':238C 'day':83B 'edg':78B 'end':111C 'enjoy':15B 'enthusiasts._':180C 'entri':116C 'eric':139C,224C 'event':7A,25B,30B,58B,182C 'experi':160C 'faulti':70B 'favorit':4A,94B,123C,185C,204C 'fell':74B 'finish':106C 'flickr':259C 'friend':177C 'funni':89B 'generat':95B 'great':64B 'group':207C,253C 'happen':22B 'hashtag':118C 'html':134C,220C,228C 'inform':91B 'int':235C 'iphon':42B,61B,73B,167C 'l':236C 'list':130C 'make':174C 'mark':87B 'meyer':140C,225C 'meyerweb.com':231C 'meyerweb.com/eric/tools/s5/features.html)':230C 'mobil':176C 'much':149C 'network':79B 'note':2A,39B,199C,211C 'note-tak':210C 'noteworthi':115C 'old':48B 'one':11B 'order':129C 'past':222C 'pc':55B 'pic':246C,254C 'pixelhandler.com':188C,241C 'pixelhandler.com/wp-':187C,240C 'powerbook':44B 'present':135C,144C,172C,186C,229C 'realli':14B 'refus':51B 's5':136C,227C 'search.twitter.com':102B 'search.twitter.com/search?q=%23aea09)).':101B 'seattl':10A,239C 'sourc':131C 'spent':81B 'star':205C 'stylesheet':169C 'surpris':59B 'take':53B,212C 'templat':137C,233C 'thing':12B 'think':208C 'time':66B 'took':35B 'topic':157C 'tweet':85B 'twitter':3A,17B,117C,125C,184C,202C 'twitter.com':100B 'two':82B 'updat':162C 'use':201C 'user':159C 'ux':161C 'view':121C 'week':33B 'wireless':68B 'work':62B 'www.flickr.com':248C,256C 'www.flickr.com/groups/aeaseattle09/)':255C 'www.flickr.com/photos/25692062@n08/)':247C 'www.pixelhandler.com':147C,192C,214C 'www.pixelhandler.com/aea09/)':191C 'www.pixelhandler.com/aea09/).':213C 'www.pixelhandler.com/aea09/](http://www.pixelhandler.com/aea09/).':146C 'year':47B	published	pixelhandler
54	## Jeffrey Zeldman on Redesign, session 1\n\n> Be a strategic design partner, or else you will not influence the design …do the research. --@Zeldman\n\n**Showing your strategy and flexing your authority…**\n\n  * For navigation, use cards and ask the the client, or test group to put the cards in order. \n  * Use creative ways to focus on the user by creating visuals of your personas, cardboard figures that you can address questions too. What would "Mac" want to see on the home page? \n  * Make your design solution work for the user's needs.\n  * Use a 'Content Strategy' document and include an executive summary, to remind the client what is important with regard to the site contents. \n  * Jeff uses an method to keep the conversations open, "Alzeimers Method" - dropping breadcrumbs or gentle reminders of previous conversations or the client's needs. \n  * Be sure to convey the meaning of design, talk about why the decisions were made, indicating what the client communicated was important. \n  * Handle criticism, go back to the user for the resolution. How will the user react? \n  * Jeff is happy to use pixels again instead of measuring layouts in ems; thanks to browser zoom. \n\n> Design is like music, when you (or the clients) see it you say, "yeah that's us" or "no that's not us." --@Zeldman\n\n![An Event Apart 2009 Seattle, Eric Meyer](http://pixelhandler.com/wp-content/uploads/2009/05/seattle090504meyer.jpg)\n\n## Eric Meyer on Redesign of AnEventApart.com, session 2\n\n> My fingers start to itch to code it, is id done? --@Meyerweb\n\n**Comments from the CSS guru**\n\n  * I still care about Internet Explorer 6, if my visitors use it.\n  * Minimize IE hacks no need to use separate stylesheet, * html, *+html, etc.\n  * It's ok to like margins again, when it comes to layout. \n  * Sometimes you may want to run CSS thru server side code, e.g. PHP\n  * Image replacement for lead-in graphics using h1 element\n  * Push the limits with mark-up and style but roll back to what works and is accessible (HTML 5 / CSS 3)\n  * Some emerging concepts, microformats - hcalendar, may not be accessible so don't worry about using it now \n  * Eric Doesn't agree with Jeff on pixels, still uses ems for fonts (no universal page zoom for ems yet)\n\n> Balancing complexity- "I can make the markup more complex, or I can make the CSS more complex, minimize complexity for maximum gain (bandwidth wins)." --@Meyerweb\n\n> "Presentation never trumps semantics… well hardly ever." --@Meyerweb\n\n![An Event Apart 2009 Seattle, Ethan](http://pixelhandler.com/wp-content/uploads/2009/05/seattle090504ethan.jpg)\n\n## Ethan Marcotte - Comps vs. Code, session 3\n\n> Lots of little leaps of faith. --Ethan (Airbag)\n\nEthan spoke about the redesign of W3C and fluid width (grid based) layout. He\nused the same formula we use for em font sizing. Target divided by Context\n(parent) equals Percentage/width (use the long decimal value, let the browser\ntruncate)\n\nAdvice from Ethan:\n\n  * Designers should share important features with developers early on.\n  * Learn from your mistakes \n  * Use: Son of suckerfish dropdown (CSS) menu\n  * When changing hands, communicate the details, this is where they are usually lost.\n  * Transitions in the process: Discovery > Design > Development > Delivery \n  * Focus on good typography not sexy graphics and hey-hey. \n  * Their is a difference between client-ready and coder-ready (comps or wireframes) \n  * Process should include designer review and developer reviews\n  * Communicate the details in whatever method works for you, but do it.\n\nFluid layout examples:\n\n  * vitabit\n  * clearleft\n  * simplebits\n  * search "fluild layout" on AListApart.com\n  * NYmag\n\n## Luke Wrobleski - Web Form Design, session 4\n\n> Forms suck. --@LukeWDesign\n\nLuke spoke about best practices for form design and a clear path to completion\nbased on vast user research data working at Yahoo\n\nQuestion we should answer for our users:\n\n  1. What do I need to fill in here?\n  2. Why do you need my … email/username, etc.?\n  3. How can you help me\n\n> The form shouldn't be your master, you will control your own destiny. --@LukeWDesign\n\n![An Event Apart 2009 Seattle, Tara Hunt](http://pixelhandler.com/wp-content/uploads/2009/05/seattle090504missrouge.jpg)\n\n## Tara Hunt - Social Capital Equals Whuffie, session 5\n\n> You can either fake marketing with whufflie or realize that the new marketing is whuffie. --@Missrouge\n\nFive principals for raising whuffie <http://slideshare.net/missrouge>\n\n  1. Create amazing customer experiences\n  2. Throwing sheep\n  3. Lighten up\n  4. Embrace the chaos\n  5. Find your higher purpose \n\n> Connections plus time equals trust. --@Missrouge\n\nMeasuring your whuffie : Zipcar, Rating6, ScoutLabs\n\n## Kristina Halverson - Content First, session 6\n\n> Content is not a feature. --@Halverson BrainTraffic.com\n\nContent Strategy plans for the creation, publication and governance of the\ncontent; everything on the web, text, data, info, audio, video, etc. She swore\neveryone in with the statement, "I will never again say launch, I will say\nlifecycle". She advocated that we fight for quality content that is useful,\nusable and enjoyable. She encouraged that web writers ask journalistic\nquestions; content demands resources and processes to match up business\nobjectives with user's needs.\n\nKristina's examples:\n\n  * Good: Mint.com\n  * Bad: Quicken.com\n\n![An Event Apart 2009 Seattle, Jared Spool](http://pixelhandler.com/wp-content/uploads/2009/05/seattle090504jmspool2.jpg)\n\n## Jared Spool - User Interface Engineering, session 7\n\n> Ratio of reviewers to purchases is 1:1,300 - thanks the lunatic fringe. --@JMSpool uie.com/brainsparks\n\nRevealing design treasures from the Amazon\n\n  * Great content strategy!\n  * Vote for reviews, "Was this helpful?"\n  * Button, "most helpful first"\n  * Don't be afraid of new ideas (goldbox hey buy this stuff! or diamond selecting tool) \n  * Redesign is a bad idea, simple changes overtime (iteration)\n  * Facebook redesign, 97% of users didn't like it\n  * Never forget about the business\n  * Amazon can make money selling iPods at cost, looks like a loss but with 'negative operating cycle' they use 'cash float'. Most resellers order very 45 days, Amazon depletes inventory in 20 days.\n  * Fun: 'Playmobile security checkpoint' & 'Tuscan Whole Milk'\n\nGoal Time vs. Tool Time\n\n**Goal Time:**\n\n* When the user is improving the outcome of the experience\n\n**Tool Time:**\n\n* When the user is moving forward with improving the outcome of the experience\n	![An Event Apart 2009 Seattle, Zeldman](http://pixelhandler.com/wp-content/uploads/2009/05/seattle090504zeldman.jpg)	field-notes-from-an-event-apart-2009-for-web-professionals-day-one	Field Notes From an Event Apart 2009 for Web Professionals - Day One	2009-05-05	2015-05-07 17:03:21.511453	2015-05-07 17:03:21.511453	1	'/brainsparks':868C '/missrouge':707C '/wp-content/uploads/2009/05/seattle090504ethan.jpg)':431C '/wp-content/uploads/2009/05/seattle090504jmspool2.jpg)':844C '/wp-content/uploads/2009/05/seattle090504meyer.jpg)':246C '/wp-content/uploads/2009/05/seattle090504missrouge.jpg)':675C '/wp-content/uploads/2009/05/seattle090504zeldman.jpg)':21B '1':27C,629C,708C,858C,859C '2':254C,638C,713C '20':958C '2009':7A,16B,240C,426C,669C,838C '3':352C,438C,646C,716C '300':860C '4':595C,719C '45':952C '5':350C,683C,723C '6':278C,745C '7':851C '97':915C 'access':348C,361C 'address':89C 'advic':487C 'advoc':793C 'afraid':891C 'agre':373C 'airbag':446C 'alistapart.com':587C 'alzeim':144C 'amaz':710C 'amazon':874C,927C,954C 'aneventapart.com':252C 'answer':625C 'apart':6A,15B,239C,425C,668C,837C 'ask':57C,811C 'audio':772C 'author':51C 'back':184C,342C 'bad':833C,907C 'balanc':390C 'bandwidth':412C 'base':458C,613C 'best':602C 'braintraffic.com':752C 'breadcrumb':147C 'browser':211C,485C 'busi':822C,926C 'button':884C 'buy':897C 'capit':679C 'card':55C,67C 'cardboard':84C 'care':274C 'cash':946C 'chang':511C,910C 'chao':722C 'checkpoint':963C 'clear':609C 'clearleft':581C 'client':60C,125C,156C,177C,221C,548C 'client-readi':547C 'code':261C,318C,436C 'coder':552C 'coder-readi':551C 'come':305C 'comment':267C 'communic':178C,513C,565C 'comp':434C,554C 'complet':612C 'complex':391C,398C,406C,408C 'concept':355C 'connect':728C 'content':114C,134C,742C,746C,753C,764C,799C,814C,876C 'context':474C 'control':661C 'convers':142C,153C 'convey':162C 'cost':934C 'creat':79C,709C 'creation':758C 'creativ':71C 'critic':182C 'css':270C,314C,351C,404C,508C 'custom':711C 'cycl':943C 'data':618C,770C 'day':11A,953C,959C 'decim':481C 'decis':171C 'deliveri':530C 'demand':815C 'deplet':955C 'design':31C,40C,104C,166C,213C,490C,528C,560C,593C,606C,870C 'destini':664C 'detail':515C,567C 'develop':496C,529C,563C 'diamond':901C 'didn':918C 'differ':545C 'discoveri':527C 'divid':472C 'document':116C 'doesn':371C 'done':265C 'drop':146C 'dropdown':507C 'e.g':319C 'earli':497C 'either':686C 'element':330C 'els':34C 'em':208C,380C,388C,468C 'email/username':644C 'embrac':720C 'emerg':354C 'encourag':807C 'engin':849C 'enjoy':805C 'equal':476C,680C,731C 'eric':242C,247C,370C 'etc':295C,645C,774C 'ethan':428C,432C,445C,447C,489C 'event':5A,14B,238C,424C,667C,836C 'ever':421C 'everyon':777C 'everyth':765C 'exampl':579C,830C 'execut':120C 'experi':712C,983C,998C 'explor':277C 'facebook':913C 'faith':444C 'fake':687C 'featur':494C,750C 'field':1A 'fight':796C 'figur':85C 'fill':635C 'find':724C 'finger':256C 'first':743C,887C 'five':700C 'flex':49C 'float':947C 'fluid':455C,577C 'fluild':584C 'focus':74C,531C 'font':382C,469C 'forget':923C 'form':592C,596C,605C,653C 'formula':464C 'forward':991C 'fring':864C 'fun':960C 'gain':411C 'gentl':149C 'go':183C 'goal':967C,972C 'goldbox':895C 'good':533C,831C 'govern':761C 'graphic':327C,537C 'great':875C 'grid':457C 'group':63C 'guru':271C 'h1':329C 'hack':286C 'halverson':741C,751C 'hand':512C 'handl':181C 'happi':198C 'hard':420C 'hcalendar':357C 'help':650C,883C,886C 'hey':540C,541C,896C 'hey-hey':539C 'higher':726C 'home':100C 'html':293C,294C,349C 'hunt':672C,677C 'id':264C 'idea':894C,908C 'ie':285C 'imag':321C 'import':128C,180C,493C 'improv':978C,993C 'includ':118C,559C 'indic':174C 'influenc':38C 'info':771C 'instead':203C 'interfac':848C 'internet':276C 'inventori':956C 'ipod':932C 'itch':259C 'iter':912C 'jare':840C,845C 'jeff':135C,196C,375C 'jeffrey':22C 'jmspool':865C 'journalist':812C 'keep':140C 'kristina':740C,828C 'launch':787C 'layout':206C,307C,459C,578C,585C 'lead':325C 'lead-in':324C 'leap':442C 'learn':499C 'let':483C 'lifecycl':791C 'lighten':717C 'like':215C,300C,920C,936C 'limit':333C 'littl':441C 'long':480C 'look':935C 'loss':938C 'lost':522C 'lot':439C 'luke':589C,599C 'lukewdesign':598C,665C 'lunat':863C 'mac':94C 'made':173C 'make':102C,394C,402C,929C 'marcott':433C 'margin':301C 'mark':336C 'mark-up':335C 'market':688C,696C 'markup':396C 'master':658C 'match':820C 'maximum':410C 'may':310C,358C 'mean':164C 'measur':205C,734C 'menu':509C 'method':138C,145C,570C 'meyer':243C,248C 'meyerweb':266C,414C,422C 'microformat':356C 'milk':966C 'minim':284C,407C 'mint.com':832C 'missroug':699C,733C 'mistak':502C 'money':930C 'move':990C 'music':216C 'navig':53C 'need':111C,158C,288C,633C,642C,827C 'negat':941C 'never':416C,784C,922C 'new':695C,893C 'note':2A 'nymag':588C 'object':823C 'ok':298C 'one':12A 'open':143C 'oper':942C 'order':69C,950C 'outcom':980C,995C 'overtim':911C 'page':101C,385C 'parent':475C 'partner':32C 'path':610C 'percentage/width':477C 'persona':83C 'php':320C 'pixel':201C,377C 'pixelhandler.com':20B,245C,430C,674C,843C 'pixelhandler.com/wp-content/uploads/2009/05/seattle090504ethan.jpg)':429C 'pixelhandler.com/wp-content/uploads/2009/05/seattle090504jmspool2.jpg)':842C 'pixelhandler.com/wp-content/uploads/2009/05/seattle090504meyer.jpg)':244C 'pixelhandler.com/wp-content/uploads/2009/05/seattle090504missrouge.jpg)':673C 'pixelhandler.com/wp-content/uploads/2009/05/seattle090504zeldman.jpg)':19B 'plan':755C 'playmobil':961C 'plus':729C 'practic':603C 'present':415C 'previous':152C 'princip':701C 'process':526C,557C,818C 'profession':10A 'public':759C 'purchas':856C 'purpos':727C 'push':331C 'put':65C 'qualiti':798C 'question':90C,622C,813C 'quicken.com':834C 'rais':703C 'rating6':738C 'ratio':852C 'react':195C 'readi':549C,553C 'realiz':692C 'redesign':25C,250C,451C,904C,914C 'regard':130C 'remind':123C,150C 'replac':322C 'research':43C,617C 'resel':949C 'resolut':190C 'resourc':816C 'reveal':869C 'review':561C,564C,854C,880C 'roll':341C 'run':313C 'say':225C,786C,790C 'scoutlab':739C 'search':583C 'seattl':17B,241C,427C,670C,839C 'secur':962C 'see':97C,222C 'select':902C 'sell':931C 'semant':418C 'separ':291C 'server':316C 'session':26C,253C,437C,594C,682C,744C,850C 'sexi':536C 'share':492C 'sheep':715C 'shouldn':654C 'show':45C 'side':317C 'simpl':909C 'simplebit':582C 'site':133C 'size':470C 'slideshare.net':706C 'slideshare.net/missrouge':705C 'social':678C 'solut':105C 'sometim':308C 'son':504C 'spoke':448C,600C 'spool':841C,846C 'start':257C 'statement':781C 'still':273C,378C 'strateg':30C 'strategi':47C,115C,754C,877C 'stuff':899C 'style':339C 'stylesheet':292C 'suck':597C 'suckerfish':506C 'summari':121C 'sure':160C 'swore':776C 'talk':167C 'tara':671C,676C 'target':471C 'test':62C 'text':769C 'thank':209C,861C 'throw':714C 'thru':315C 'time':730C,968C,971C,973C,985C 'tool':903C,970C,984C 'transit':523C 'treasur':871C 'trump':417C 'truncat':486C 'trust':732C 'tuscan':964C 'typographi':534C 'uie.com':867C 'uie.com/brainsparks':866C 'univers':384C 'us':229C,235C 'usabl':803C 'use':54C,70C,112C,136C,200C,282C,290C,328C,367C,379C,461C,466C,478C,503C,802C,945C 'user':77C,109C,187C,194C,616C,628C,825C,847C,917C,976C,988C 'usual':521C 'valu':482C 'vast':615C 'video':773C 'visitor':281C 'visual':80C 'vitabit':580C 'vote':878C 'vs':435C,969C 'w3c':453C 'want':95C,311C 'way':72C 'web':9A,591C,768C,809C 'well':419C 'whatev':569C 'whole':965C 'whuffi':681C,698C,704C,736C 'whuffli':690C 'width':456C 'win':413C 'wirefram':556C 'work':106C,345C,571C,619C 'worri':365C 'would':93C 'writer':810C 'wrobleski':590C 'yahoo':621C 'yeah':226C 'yet':389C 'zeldman':18B,23C,44C,236C 'zipcar':737C 'zoom':212C,386C	published	pixelhandler
55	This site is currently an _alpha release,\nproof of concept_. [Visit the about page here](http://prayerlife.net/about). I\nam looking for people to test the concept, who would like to use the internet\nto connect and pray for others. \n\n![prayerlife-net](http://pixelhandler.com/wp-content/uploads/2009/04/prayerlife-net.jpg)	I'm working on a new social prayer site at\n[PrayerLife.NET](http://prayerlife.net) feel free to visit, create an account\nand share/manage your prayers online. PrayerLife.NET is social media web\nservice, a tool for users to connect & prayer with others. Features: prayer\nand list sharing (pubic or private). \n\nUPDATE: This site is no longer only, and I no longer own the domain.\n\n	alpha-release-of-prayerlifenet-a-social-prayer-web-site	Alpha Release of PrayerLife.NET, a Social (Prayer) Web Site	2009-04-25	2015-05-07 17:03:21.515924	2015-05-07 17:03:21.515924	1	'/about).':88C '/wp-content/uploads/2009/04/prayerlife-net.jpg)':116C 'account':28B 'alpha':1A,76C 'concept':80C,97C 'connect':45B,106C 'creat':26B 'current':74C 'domain':70B 'featur':49B 'feel':22B 'free':23B 'internet':104C 'like':100C 'list':52B 'longer':62B,67B 'look':91C 'm':11B 'media':37B 'net':113C 'new':15B 'onlin':33B 'other':48B,110C 'page':84C 'peopl':93C 'pixelhandler.com':115C 'pixelhandler.com/wp-content/uploads/2009/04/prayerlife-net.jpg)':114C 'pray':108C 'prayer':7A,17B,32B,46B,50B 'prayerlif':112C 'prayerlife-net':111C 'prayerlife.net':4A,20B,21B,34B,87C 'prayerlife.net/about).':86C 'privat':56B 'proof':78C 'pubic':54B 'releas':2A,77C 'servic':39B 'share':53B 'share/manage':30B 'site':9A,18B,59B,72C 'social':6A,16B,36B 'test':95C 'tool':41B 'updat':57B 'use':102C 'user':43B 'visit':25B,81C 'web':8A,38B 'work':12B 'would':99C	published	pixelhandler
63	_**Overview:**_\n\n  * Call from a friend about need for a web site to publish a story\n  * Receipt of eleven (11) page Word doc.\n  * Summary of objective : Publish the story as collected over the last year by investigators to inform and alert contributors to a charity with regard to ongoing investigation and allegations of abuse.\n  * Execution of plan by using a new installation of WordPress with four (4) pages & twenty-four (24) posts derived from the Word doc.\n  * Target blogs to get traffic: Posting on Blogger, a friends blog, and mySpace\n_**Client History:**_\n\n  * Previous site, Miracle-ranch.org recently taken down, now offline.\n  * 9/27/07-9/29/07 : bought up target domains\n_**Timeline begins 10/18/07:**_\n\n  * Friend calls and emails me on 10/18/07 to share his story\n  * Goal of ranking next or above the competitor's site site using search engine optimization\n  * Getting crazy and promising top rankings in 7 days\n  * Kick off new blog website on Friday, October 19th, 2007; in the early AM\n  * Fire up Google Analytics on 10/20/07\n  * Get link in post from friend's blog 10/20/07; comment on other blogs with related topics\n  * Joined Technorati 10/21/07\n  * Signed up for Blogger and MySpace on 10/22/07\n_**Results - Good News!**___• Indexed by Google on October 21st, 2007, and\nagain on 10/25/07 under existing domain• Excellent ranking using competitors\nkeywords and name of organization and domain in 2-3 days; using new\nkeywords._**Followup on 11/10/07:**_\n\n  * Number one (#1) ranking in Google above competitor\n  * About 41 pages cached (28 posts and no comments)\n  * Increasing membership\n  * Client now in discussions with competitor about the original objective.\n_WordPress Plugins in use for this site_\n\n  * Google Sitemaps\n  * All in One SEO Pack\n  * Google Sitemaps\n  * obsocialbookmarker\n  * WordPress Mobile Edition\n  * WP Navigation Tool (NAVT)\n  * podPress\n**ScreenShots from search engine results and google's cache **:_Initially the site started ranking well in a few days: _ ![Top Rankings](http://pixelhandler.com/uploads/toprankings-bcf.jpg)_Seven days later I noticed that the site was cached by Google in three days after launching/posting the Web site:_![google cache](http://pixelhandler.com/uploads/googlecache-bcf.jpg)_After a couple weeks passed the site ranked number one on the first page of Google: _![ranking number one on google](http://pixelhandler.com/uploads/toprankings-bcf-number1.jpg)	_Question:_ How long does it take Google to index my new Web site	new-web-site-domain-indexed-by-google-in-only-3-days-from-launch	New Web Site/Domain Indexed by Google in only 3 Days from Launch	2007-11-10	2015-05-07 17:03:21.569847	2015-05-07 17:03:21.569847	1	'-3':246C '/uploads/googlecache-bcf.jpg)_after':355C '/uploads/toprankings-bcf-number1.jpg)':378C '/uploads/toprankings-bcf.jpg)_seven':331C '1':256C '10/18/07':133C,140C '10/20/07':188C,197C '10/21/07':207C '10/22/07':215C '10/25/07':229C '11':44C '11/10/07':253C '19th':177C '2':245C '2007':178C,225C '21st':224C '24':96C '28':266C '3':9A '4':91C '41':263C '7':167C '9/27/07-9/29/07':126C 'abus':78C 'alert':65C 'alleg':76C 'analyt':186C 'begin':132C 'blog':104C,113C,172C,196C,201C 'blogger':110C,211C 'bought':127C 'cach':265C,316C,340C,352C 'call':27C,135C 'chariti':69C 'client':116C,273C 'collect':55C 'comment':198C,270C 'competitor':152C,236C,261C,278C 'contributor':66C 'coupl':357C 'crazi':161C 'day':10A,168C,247C,326C,332C,345C 'deriv':98C 'discuss':276C 'doc':47C,102C 'domain':130C,232C,243C 'earli':181C 'edit':302C 'eleven':43C 'email':137C 'engin':158C,311C 'excel':233C 'execut':79C 'exist':231C 'fire':183C 'first':367C 'followup':251C 'four':90C,95C 'friday':175C 'friend':30C,112C,134C,194C 'get':106C,160C,189C 'goal':145C 'good':217C 'googl':6A,19B,185C,221C,259C,290C,297C,314C,342C,351C,370C,375C 'histori':117C 'increas':271C 'index':4A,21B,219C 'inform':63C 'initi':317C 'instal':86C 'investig':61C,74C 'join':205C 'keyword':237C 'keywords._':250C 'kick':169C 'last':58C 'later':333C 'launch':12A 'launching/posting':347C 'link':190C 'long':15B 'membership':272C 'miracle-ranch.org':120C 'mobil':301C 'myspac':115C,213C 'name':239C 'navig':304C 'navt':306C 'need':32C 'new':1A,23B,85C,171C,249C 'news':218C 'next':148C 'notic':335C 'number':254C,363C,372C 'object':50C,282C 'obsocialbookmark':299C 'octob':176C,223C 'offlin':125C 'one':255C,294C,364C,373C 'ongo':73C 'optim':159C 'organ':241C 'origin':281C 'overview':26C 'pack':296C 'page':45C,92C,264C,368C 'pass':359C 'pixelhandler.com':330C,354C,377C 'pixelhandler.com/uploads/googlecache-bcf.jpg)_after':353C 'pixelhandler.com/uploads/toprankings-bcf-number1.jpg)':376C 'pixelhandler.com/uploads/toprankings-bcf.jpg)_seven':329C 'plan':81C 'plugin':284C 'podpress':307C 'post':97C,108C,192C,267C 'previous':118C 'promis':163C 'publish':38C,51C 'question':13B 'rank':147C,165C,234C,257C,321C,328C,362C,371C 'receipt':41C 'recent':121C 'regard':71C 'relat':203C 'result':216C,312C 'screenshot':308C 'search':157C,310C 'seo':295C 'share':142C 'sign':208C 'site':25B,36C,119C,154C,155C,289C,319C,338C,350C,361C 'site/domain':3A 'sitemap':291C,298C 'start':320C 'stori':40C,53C,144C 'summari':48C 'take':18B 'taken':122C 'target':103C,129C 'technorati':206C 'three':344C 'timelin':131C 'tool':305C 'top':164C,327C 'topic':204C 'traffic':107C 'twenti':94C 'twenty-four':93C 'use':83C,156C,235C,248C,286C 'web':2A,24B,35C,349C 'websit':173C 'week':358C 'well':322C 'word':46C,101C 'wordpress':88C,283C,300C 'wp':303C 'year':59C	published	pixelhandler
65	<p>Questions addressed:</p>\n<ol>\n\t<li>How do the following mash up to produce results&hellip; design, development, search engine optimization, Web standards, current trends, Web analytics, content, SERPs, usability, marketing strategy, and goal conversions?</li>\n\t<li>And, why does it matter?</li>\n\t<li>So, what can I do about it?</li>\n</ol>\n<p>Wrap up: Keep the main thing the main thing! If your unique selling position is intimately related to your passion then it will be easy to communicate your message to your target audience.</p>	Pixel Handler Episode 2, Your Web Project, features web project elements and how they mash up with your marketing strategy.	your-web-project-marketing-strategy-mash-up	Your Web Project, Marketing Strategy Mash Up	2007-10-06	2015-05-07 17:03:21.57914	2015-05-07 17:03:21.57914	1	'2':10B 'address':28C 'analyt':48C 'audienc':101C 'communic':95C 'content':49C 'convers':56C 'current':45C 'design':38C 'develop':39C 'easi':93C 'element':17B 'engin':41C 'episod':9B 'featur':14B 'follow':32C 'goal':55C 'handler':8B 'intim':84C 'keep':71C 'main':73C,76C 'market':4A,25B,52C 'mash':6A,21B,33C 'matter':61C 'messag':97C 'optim':42C 'passion':88C 'pixel':7B 'posit':82C 'produc':36C 'project':3A,13B,16B 'question':27C 'relat':85C 'result':37C 'search':40C 'sell':81C 'serp':50C 'standard':44C 'strategi':5A,26B,53C 'target':100C 'thing':74C,77C 'trend':46C 'uniqu':80C 'usabl':51C 'web':2A,12B,15B,43C,47C 'wrap':69C	published	pixelhandler
\.


--
-- Data for Name: posts_tags; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.posts_tags (post_id, tag_id) FROM stdin;
67	1
67	3
67	4
1	1
1	2
1	5
2	1
2	6
3	1
3	7
4	1
4	7
5	1
5	8
5	9
6	1
6	10
7	1
7	2
7	9
8	1
9	1
9	3
9	11
10	1
10	7
11	1
11	16
12	1
12	12
13	1
13	13
13	3
14	1
14	9
15	1
15	16
16	1
17	16
18	15
19	12
20	15
68	1
68	2
68	3
68	4
69	1
69	2
69	17
70	18
71	18
72	19
73	18
74	19
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.schema_migrations (version) FROM stdin;
20150502182543
20150412073106
20150412064414
20150412063641
20150510043931
20150510045633
20150528222934
20150905055606
20150905063302
20151228203607
20151229072838
20170604055550
20170604063834
\.


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.tags (id, name, created_at, updated_at, slug, tenant) FROM stdin;
1	Ember.js	2015-12-28 19:15:47.651774	2015-12-28 21:58:48.633147	ember-js	pixelhandler
2	Ember Addons	2015-12-28 22:00:08.70723	2015-12-28 22:00:08.70723	ember-addons	pixelhandler
3	Data	2015-12-28 22:00:16.801689	2015-12-28 22:00:16.801689	data	pixelhandler
4	JSON API	2015-12-28 22:00:28.213882	2015-12-28 22:00:28.213882	json-api	pixelhandler
5	Deployment	2015-12-28 22:00:52.369509	2015-12-28 22:00:52.369509	deployment	pixelhandler
6	Templates	2015-12-28 22:02:26.642324	2015-12-28 22:02:26.642324	templates	pixelhandler
7	Conference	2015-12-28 22:03:08.583246	2015-12-28 22:03:08.583246	conference	pixelhandler
8	Web Components	2015-12-28 22:03:45.295176	2015-12-28 22:03:45.295176	web-components	pixelhandler
9	Ember Components	2015-12-28 22:04:21.021725	2015-12-28 22:04:21.021725	ember-components	pixelhandler
10	Performance	2015-12-28 22:04:49.499028	2015-12-28 22:04:49.499028	performance	pixelhandler
11	WebSocket	2015-12-28 22:06:20.072238	2015-12-28 22:06:20.072238	websocket	pixelhandler
12	Node.js	2015-12-28 22:07:11.765294	2015-12-28 22:07:11.765294	node-js	pixelhandler
13	Rails	2015-12-28 22:07:20.599376	2015-12-28 22:07:20.599376	rails	pixelhandler
14	jQuery	2015-12-28 22:13:18.14656	2015-12-28 22:13:18.14656	jquery	pixelhandler
15	Backbone.js	2015-12-28 22:13:30.241842	2015-12-28 22:13:30.241842	backbone-js	pixelhandler
16	Testing	2015-12-28 22:28:13.203709	2015-12-28 22:28:13.203709	testing	pixelhandler
17	CSS	2016-02-24 05:54:59.663428	2016-02-24 05:54:59.663428	css	pixelhandler
18	Work	2016-09-27 06:54:53.466899	2016-09-27 06:54:53.466899	work	pixelhandler
19	Events	2017-06-09 04:56:18.583475	2017-06-09 04:56:18.583475	events	billandlorraine
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: blog-api
--

COPY public.users (id, username, password_digest, author_id, created_at, updated_at, tenant) FROM stdin;
1	billheat	$2a$10$uYYJVBFf/SB9K7bJ7vJzWucEZOn1/.MCbfHGAPbivGRyrjCAdMCES	1	2015-05-07 17:03:21.173324	2015-05-07 17:03:21.173324	pixelhandler
3	ember-sc	$2a$10$lF.PCqp6HRz3/dbI25yAZ.ZkaCxKUFbySAcob4jIg0tV.PMkCVgSO	2	2015-05-27 23:37:30.992902	2015-05-28 15:50:58.316536	pixelhandler
4	Bill Heaton	$2a$10$NDgj7x5/iccnwejF.qvOB.nlJYkj3HYIAcPMTNfoPwFCvrTXnprWi	3	2017-06-09 04:37:26.807358	2017-06-09 04:37:26.807358	billandlorraine
\.


--
-- Name: authors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog-api
--

SELECT pg_catalog.setval('public.authors_id_seq', 4, true);


--
-- Name: commenters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog-api
--

SELECT pg_catalog.setval('public.commenters_id_seq', 84, true);


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog-api
--

SELECT pg_catalog.setval('public.comments_id_seq', 85, true);


--
-- Name: posts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog-api
--

SELECT pg_catalog.setval('public.posts_id_seq', 74, true);


--
-- Name: tags_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog-api
--

SELECT pg_catalog.setval('public.tags_id_seq', 19, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: blog-api
--

SELECT pg_catalog.setval('public.users_id_seq', 4, true);


--
-- Name: ar_internal_metadata ar_internal_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.ar_internal_metadata
    ADD CONSTRAINT ar_internal_metadata_pkey PRIMARY KEY (key);


--
-- Name: authors authors_pkey; Type: CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.authors
    ADD CONSTRAINT authors_pkey PRIMARY KEY (id);


--
-- Name: commenters commenters_pkey; Type: CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.commenters
    ADD CONSTRAINT commenters_pkey PRIMARY KEY (id);


--
-- Name: comments comments_pkey; Type: CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT comments_pkey PRIMARY KEY (id);


--
-- Name: posts posts_pkey; Type: CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT posts_pkey PRIMARY KEY (id);


--
-- Name: tags tags_pkey; Type: CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: index_commenters_on_email; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE UNIQUE INDEX index_commenters_on_email ON public.commenters USING btree (email);


--
-- Name: index_comments_on_commenter_id; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE INDEX index_comments_on_commenter_id ON public.comments USING btree (commenter_id);


--
-- Name: index_comments_on_post_id; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE INDEX index_comments_on_post_id ON public.comments USING btree (post_id);


--
-- Name: index_posts_on_author_id; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE INDEX index_posts_on_author_id ON public.posts USING btree (author_id);


--
-- Name: index_posts_tags_on_post_id_and_tag_id; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE UNIQUE INDEX index_posts_tags_on_post_id_and_tag_id ON public.posts_tags USING btree (post_id, tag_id);


--
-- Name: index_posts_tags_on_tag_id_and_post_id; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE UNIQUE INDEX index_posts_tags_on_tag_id_and_post_id ON public.posts_tags USING btree (tag_id, post_id);


--
-- Name: posts_tsv_idx; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE INDEX posts_tsv_idx ON public.posts USING gin (tsv);


--
-- Name: unique_schema_migrations; Type: INDEX; Schema: public; Owner: blog-api
--

CREATE UNIQUE INDEX unique_schema_migrations ON public.schema_migrations USING btree (version);


--
-- Name: posts posts_tsv_upsert_trigger; Type: TRIGGER; Schema: public; Owner: blog-api
--

CREATE TRIGGER posts_tsv_upsert_trigger BEFORE INSERT OR UPDATE ON public.posts FOR EACH ROW EXECUTE PROCEDURE public.posts_generate_tsv();


--
-- Name: posts fk_rails_04d13ef8c7; Type: FK CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT fk_rails_04d13ef8c7 FOREIGN KEY (author_id) REFERENCES public.authors(id);


--
-- Name: comments fk_rails_2fd19c0db7; Type: FK CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT fk_rails_2fd19c0db7 FOREIGN KEY (post_id) REFERENCES public.posts(id);


--
-- Name: comments fk_rails_7c76e8dc86; Type: FK CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.comments
    ADD CONSTRAINT fk_rails_7c76e8dc86 FOREIGN KEY (commenter_id) REFERENCES public.commenters(id);


--
-- Name: users fk_rails_9ac60fc016; Type: FK CONSTRAINT; Schema: public; Owner: blog-api
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT fk_rails_9ac60fc016 FOREIGN KEY (author_id) REFERENCES public.authors(id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

